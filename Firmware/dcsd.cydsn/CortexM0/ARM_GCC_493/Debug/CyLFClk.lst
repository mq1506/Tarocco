ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLFClk.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CySysClkIloStart,"ax",%progbits
  18              		.align	2
  19              		.global	CySysClkIloStart
  20              		.code	16
  21              		.thumb_func
  22              		.type	CySysClkIloStart, %function
  23              	CySysClkIloStart:
  24              	.LFB0:
  25              		.file 1 "Generated_Source\\PSoC4\\CyLFClk.c"
   1:Generated_Source\PSoC4/CyLFClk.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLFClk.c **** * \file .c
   3:Generated_Source\PSoC4/CyLFClk.c **** * \version 1.10
   4:Generated_Source\PSoC4/CyLFClk.c **** *
   5:Generated_Source\PSoC4/CyLFClk.c **** * \brief
   6:Generated_Source\PSoC4/CyLFClk.c **** *  This file provides the source code for configuring watchdog timers WDTs, 
   7:Generated_Source\PSoC4/CyLFClk.c **** *  low frequency clocks (LFCLK) and the Real-time Clock (RTC) component in
   8:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC Creator for the PSoC 4 families.
   9:Generated_Source\PSoC4/CyLFClk.c **** *
  10:Generated_Source\PSoC4/CyLFClk.c **** ********************************************************************************
  11:Generated_Source\PSoC4/CyLFClk.c **** * \copyright
  12:Generated_Source\PSoC4/CyLFClk.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/CyLFClk.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/CyLFClk.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/CyLFClk.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/CyLFClk.c **** 
  18:Generated_Source\PSoC4/CyLFClk.c **** 
  19:Generated_Source\PSoC4/CyLFClk.c **** #include "CyLFClk.h"
  20:Generated_Source\PSoC4/CyLFClk.c **** #include "CyLib.h"
  21:Generated_Source\PSoC4/CyLFClk.c **** 
  22:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO && CY_IP_SRSSV2)
  23:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetLfclkSource(void);
  24:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_WCO && CY_IP_SRSSV2) */
  25:Generated_Source\PSoC4/CyLFClk.c **** 
  26:Generated_Source\PSoC4/CyLFClk.c **** 
  27:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
  28:Generated_Source\PSoC4/CyLFClk.c ****     /* Default Ilo Trim Register value for ILO trimming*/
  29:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint16 defaultIloTrimRegValue = CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE;
  30:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
  31:Generated_Source\PSoC4/CyLFClk.c **** 
  32:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 2


  33:Generated_Source\PSoC4/CyLFClk.c ****     /* CySysClkLfclkPosedgeCatch() / CySysClkLfclkPosedgeRestore() */
  34:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 lfclkPosedgeWdtCounter0Enabled = 0u;
  35:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 lfclkPosedgeWdtCounter0Mode    = CY_SYS_WDT_MODE_NONE;
  36:Generated_Source\PSoC4/CyLFClk.c **** 
  37:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 disableServicedIsr = 0uL;
  38:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 wdtIsrMask = CY_SYS_WDT_COUNTER0_INT |\
  39:Generated_Source\PSoC4/CyLFClk.c ****                                         CY_SYS_WDT_COUNTER1_INT |\
  40:Generated_Source\PSoC4/CyLFClk.c ****                                         CY_SYS_WDT_COUNTER2_INT;
  41:Generated_Source\PSoC4/CyLFClk.c **** 
  42:Generated_Source\PSoC4/CyLFClk.c ****     static const uint32 counterIntMaskTbl[CY_WDT_NUM_OF_WDT] = {CY_SYS_WDT_COUNTER0_INT,
  43:Generated_Source\PSoC4/CyLFClk.c ****                                                                 CY_SYS_WDT_COUNTER1_INT,
  44:Generated_Source\PSoC4/CyLFClk.c ****                                                                 CY_SYS_WDT_COUNTER2_INT};
  45:Generated_Source\PSoC4/CyLFClk.c **** 
  46:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeCatch(void);
  47:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeRestore(void);
  48:Generated_Source\PSoC4/CyLFClk.c **** 
  49:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysWdtLocked(void);
  50:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkIloEnabled(void);
  51:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
  52:Generated_Source\PSoC4/CyLFClk.c **** 
  53:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
  54:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetTimerSource(void);
  55:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 disableTimerServicedIsr = 0uL;
  56:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 timerIsrMask = CY_SYS_TIMER0_INT |\
  57:Generated_Source\PSoC4/CyLFClk.c ****                                           CY_SYS_TIMER1_INT |\
  58:Generated_Source\PSoC4/CyLFClk.c ****                                           CY_SYS_TIMER2_INT;
  59:Generated_Source\PSoC4/CyLFClk.c **** 
  60:Generated_Source\PSoC4/CyLFClk.c ****     static const uint32 counterTimerIntMaskTbl[CY_SYS_NUM_OF_TIMERS] = {CY_SYS_TIMER0_INT,
  61:Generated_Source\PSoC4/CyLFClk.c ****                                                                         CY_SYS_TIMER1_INT,
  62:Generated_Source\PSoC4/CyLFClk.c ****                                                                         CY_SYS_TIMER2_INT};
  63:Generated_Source\PSoC4/CyLFClk.c **** 
  64:Generated_Source\PSoC4/CyLFClk.c ****     static cyTimerCallback cySysTimerCallback[CY_SYS_NUM_OF_TIMERS] = {(void *)0, (void *)0, (void 
  65:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_DWT_EN) */
  66:Generated_Source\PSoC4/CyLFClk.c **** 
  67:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
  68:Generated_Source\PSoC4/CyLFClk.c ****     static cyWdtCallback cySysWdtCallback[CY_WDT_NUM_OF_WDT] = {(void *)0, (void *)0, (void *)0};
  69:Generated_Source\PSoC4/CyLFClk.c **** #else
  70:Generated_Source\PSoC4/CyLFClk.c ****     static cyWdtCallback cySysWdtCallback = (void *)0;
  71:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
  72:Generated_Source\PSoC4/CyLFClk.c **** 
  73:Generated_Source\PSoC4/CyLFClk.c **** 
  74:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
  75:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStart
  76:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
  77:Generated_Source\PSoC4/CyLFClk.c **** * \brief
  78:Generated_Source\PSoC4/CyLFClk.c **** *  Enables ILO.
  79:Generated_Source\PSoC4/CyLFClk.c **** *
  80:Generated_Source\PSoC4/CyLFClk.c **** *  Refer to the device datasheet for the ILO startup time.
  81:Generated_Source\PSoC4/CyLFClk.c **** *
  82:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
  83:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStart(void)
  84:Generated_Source\PSoC4/CyLFClk.c **** {
  26              		.loc 1 84 0
  27              		.cfi_startproc
  85:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_ILO_CONFIG_REG |= CY_SYS_CLK_ILO_CONFIG_ENABLE;
  28              		.loc 1 85 0
  29 0000 8021     		mov	r1, #128
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 3


  30 0002 034A     		ldr	r2, .L2
  31 0004 0906     		lsl	r1, r1, #24
  32 0006 1368     		ldr	r3, [r2]
  86:Generated_Source\PSoC4/CyLFClk.c **** }
  33              		.loc 1 86 0
  34              		@ sp needed
  85:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_ILO_CONFIG_REG |= CY_SYS_CLK_ILO_CONFIG_ENABLE;
  35              		.loc 1 85 0
  36 0008 0B43     		orr	r3, r1
  37 000a 1360     		str	r3, [r2]
  38              		.loc 1 86 0
  39 000c 7047     		bx	lr
  40              	.L3:
  41 000e C046     		.align	2
  42              	.L2:
  43 0010 04010B40 		.word	1074462980
  44              		.cfi_endproc
  45              	.LFE0:
  46              		.size	CySysClkIloStart, .-CySysClkIloStart
  47              		.section	.text.CySysClkIloStartMeasurement,"ax",%progbits
  48              		.align	2
  49              		.global	CySysClkIloStartMeasurement
  50              		.code	16
  51              		.thumb_func
  52              		.type	CySysClkIloStartMeasurement, %function
  53              	CySysClkIloStartMeasurement:
  54              	.LFB2:
  87:Generated_Source\PSoC4/CyLFClk.c **** 
  88:Generated_Source\PSoC4/CyLFClk.c **** 
  89:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
  90:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStop
  91:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
  92:Generated_Source\PSoC4/CyLFClk.c **** * \brief
  93:Generated_Source\PSoC4/CyLFClk.c **** *  Disables the ILO.
  94:Generated_Source\PSoC4/CyLFClk.c **** *
  95:Generated_Source\PSoC4/CyLFClk.c **** *  This function has no effect if WDT is locked (CySysWdtLock() is
  96:Generated_Source\PSoC4/CyLFClk.c **** *  called). Call CySysWdtUnlock() to unlock WDT and stop ILO.
  97:Generated_Source\PSoC4/CyLFClk.c **** *
  98:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4100 / PSoC 4200: Note that ILO is required for WDT's operation.
  99:Generated_Source\PSoC4/CyLFClk.c **** *
 100:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L / PSoC 4100M / 
 101:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4200M:
 102:Generated_Source\PSoC4/CyLFClk.c **** *  Stopping ILO affects the peripheral clocked by LFCLK, if
 103:Generated_Source\PSoC4/CyLFClk.c **** *  LFCLK is configured to be sourced by ILO.
 104:Generated_Source\PSoC4/CyLFClk.c **** *
 105:Generated_Source\PSoC4/CyLFClk.c **** *  If the ILO is disabled, all blocks run by ILO will stop functioning.
 106:Generated_Source\PSoC4/CyLFClk.c **** *
 107:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 108:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStop(void)
 109:Generated_Source\PSoC4/CyLFClk.c **** {
 110:Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSV2)
 111:Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
 112:Generated_Source\PSoC4/CyLFClk.c **** 
 113:Generated_Source\PSoC4/CyLFClk.c ****         /* Do nothing if WDT is locked or ILO is disabled */
 114:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysWdtLocked())
 115:Generated_Source\PSoC4/CyLFClk.c ****         {
 116:Generated_Source\PSoC4/CyLFClk.c ****             if (0u != CySysClkIloEnabled())
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 4


 117:Generated_Source\PSoC4/CyLFClk.c ****             {
 118:Generated_Source\PSoC4/CyLFClk.c **** 
 119:Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_WCO)
 120:Generated_Source\PSoC4/CyLFClk.c ****                 if (CY_SYS_CLK_LFCLK_SRC_ILO == CySysClkGetLfclkSource())
 121:Generated_Source\PSoC4/CyLFClk.c ****                 {
 122:Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_WCO) */
 123:Generated_Source\PSoC4/CyLFClk.c **** 
 124:Generated_Source\PSoC4/CyLFClk.c ****                 interruptState = CyEnterCriticalSection();
 125:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkLfclkPosedgeCatch();
 126:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_ILO_CONFIG_REG &= (uint32) ( ~(uint32)CY_SYS_CLK_ILO_CONFIG_ENABLE);
 127:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkLfclkPosedgeRestore();
 128:Generated_Source\PSoC4/CyLFClk.c ****                 CyExitCriticalSection(interruptState);
 129:Generated_Source\PSoC4/CyLFClk.c **** 
 130:Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_WCO)
 131:Generated_Source\PSoC4/CyLFClk.c ****                 }
 132:Generated_Source\PSoC4/CyLFClk.c ****                 else /* Safe to disable - shortened pulse does not impact peripheral */
 133:Generated_Source\PSoC4/CyLFClk.c ****                 {
 134:Generated_Source\PSoC4/CyLFClk.c ****                     CY_SYS_CLK_ILO_CONFIG_REG &= (uint32) ( ~(uint32)CY_SYS_CLK_ILO_CONFIG_ENABLE);
 135:Generated_Source\PSoC4/CyLFClk.c ****                 }
 136:Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_WCO) */
 137:Generated_Source\PSoC4/CyLFClk.c **** 
 138:Generated_Source\PSoC4/CyLFClk.c ****             }
 139:Generated_Source\PSoC4/CyLFClk.c ****         }
 140:Generated_Source\PSoC4/CyLFClk.c ****     #else
 141:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_ILO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_ILO_CONFIG_ENABLE);
 142:Generated_Source\PSoC4/CyLFClk.c ****     #endif /* (CY_IP_SRSSV2) */
 143:Generated_Source\PSoC4/CyLFClk.c **** }
 144:Generated_Source\PSoC4/CyLFClk.c **** 
 145:Generated_Source\PSoC4/CyLFClk.c **** 
 146:Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 147:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStartMeasurement
 148:Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 149:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 150:Generated_Source\PSoC4/CyLFClk.c **** * Starts the ILO accuracy measurement.
 151:Generated_Source\PSoC4/CyLFClk.c **** *
 152:Generated_Source\PSoC4/CyLFClk.c **** * This function is non-blocking and needs to be called before using the 
 153:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloTrim() and CySysClkIloCompensate() API.
 154:Generated_Source\PSoC4/CyLFClk.c **** *
 155:Generated_Source\PSoC4/CyLFClk.c **** * This API configures measurement counters to be sourced by SysClk (Counter 1)
 156:Generated_Source\PSoC4/CyLFClk.c **** * and ILO (Counter 2). 
 157:Generated_Source\PSoC4/CyLFClk.c **** *
 158:Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 159:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 160:Generated_Source\PSoC4/CyLFClk.c **** *
 161:Generated_Source\PSoC4/CyLFClk.c **** * In addition, this API stores the factory ILO trim settings on the first call 
 162:Generated_Source\PSoC4/CyLFClk.c **** * after reset. This stored factory setting is used by the 
 163:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloRestoreFactoryTrim() API to restore the ILO factory trim. 
 164:Generated_Source\PSoC4/CyLFClk.c **** * Hence, it is important to call this API before restoring the ILO 
 165:Generated_Source\PSoC4/CyLFClk.c **** * factory trim settings.
 166:Generated_Source\PSoC4/CyLFClk.c **** *
 167:Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 168:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStartMeasurement(void)
 169:Generated_Source\PSoC4/CyLFClk.c **** {
  55              		.loc 1 169 0
  56              		.cfi_startproc
 170:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
 171:Generated_Source\PSoC4/CyLFClk.c ****     static uint8 iloTrimTrig = 0u;
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 5


 172:Generated_Source\PSoC4/CyLFClk.c **** 
 173:Generated_Source\PSoC4/CyLFClk.c ****     /* Write default ILO trim value while ILO starting ( Cypress ID 225244 )*/
 174:Generated_Source\PSoC4/CyLFClk.c ****     if (0u == iloTrimTrig)
 175:Generated_Source\PSoC4/CyLFClk.c ****     {
 176:Generated_Source\PSoC4/CyLFClk.c ****         defaultIloTrimRegValue = ((uint8)(CY_SYS_CLK_ILO_TRIM_REG & CY_SYS_CLK_ILO_TRIM_MASK));
 177:Generated_Source\PSoC4/CyLFClk.c ****         iloTrimTrig = 1u;
 178:Generated_Source\PSoC4/CyLFClk.c ****     }
 179:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
 180:Generated_Source\PSoC4/CyLFClk.c **** 
 181:Generated_Source\PSoC4/CyLFClk.c ****     /* Configure measurement counters to source by SysClk (Counter 1) and ILO (Counter 2)*/
 182:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_DFT_REG = (CY_SYS_CLK_DFT_REG & (uint32) ~CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK) |
  57              		.loc 1 182 0
  58 0000 074A     		ldr	r2, .L5
  59 0002 084B     		ldr	r3, .L5+4
  60 0004 1168     		ldr	r1, [r2]
 183:Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_CLK_SEL_ILO_DFT_SOURCE; 
 184:Generated_Source\PSoC4/CyLFClk.c **** 
 185:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_TST_DDFT_CTRL_REG = (CY_SYS_TST_DDFT_CTRL_REG & (uint32) ~ CY_SYS_TST_DDFT_CTRL_REG_DEFA
 186:Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1;
 187:Generated_Source\PSoC4/CyLFClk.c **** }
  61              		.loc 1 187 0
  62              		@ sp needed
 182:Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_CLK_SEL_ILO_DFT_SOURCE; 
  63              		.loc 1 182 0
  64 0006 0B40     		and	r3, r1
  65 0008 8021     		mov	r1, #128
  66 000a 4900     		lsl	r1, r1, #1
  67 000c 0B43     		orr	r3, r1
  68 000e 1360     		str	r3, [r2]
 185:Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1;
  69              		.loc 1 185 0
  70 0010 054A     		ldr	r2, .L5+8
  71 0012 064B     		ldr	r3, .L5+12
  72 0014 1168     		ldr	r1, [r2]
  73 0016 0B40     		and	r3, r1
  74 0018 0549     		ldr	r1, .L5+16
  75 001a 0B43     		orr	r3, r1
  76 001c 1360     		str	r3, [r2]
  77              		.loc 1 187 0
  78 001e 7047     		bx	lr
  79              	.L6:
  80              		.align	2
  81              	.L5:
  82 0020 10010B40 		.word	1074462992
  83 0024 FFF0FFFF 		.word	-3841
  84 0028 08000340 		.word	1073938440
  85 002c C0C0FFFF 		.word	-16192
  86 0030 01020000 		.word	513
  87              		.cfi_endproc
  88              	.LFE2:
  89              		.size	CySysClkIloStartMeasurement, .-CySysClkIloStartMeasurement
  90              		.section	.text.CySysClkIloStopMeasurement,"ax",%progbits
  91              		.align	2
  92              		.global	CySysClkIloStopMeasurement
  93              		.code	16
  94              		.thumb_func
  95              		.type	CySysClkIloStopMeasurement, %function
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 6


  96              	CySysClkIloStopMeasurement:
  97              	.LFB3:
 188:Generated_Source\PSoC4/CyLFClk.c **** 
 189:Generated_Source\PSoC4/CyLFClk.c **** 
 190:Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 191:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStopMeasurement
 192:Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 193:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 194:Generated_Source\PSoC4/CyLFClk.c **** * Stops the ILO accuracy measurement.
 195:Generated_Source\PSoC4/CyLFClk.c **** *
 196:Generated_Source\PSoC4/CyLFClk.c **** * Calling this function immediately stops the the ILO frequency measurement.
 197:Generated_Source\PSoC4/CyLFClk.c **** * This function should be called before placing the device to deepsleep, if 
 198:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloStartMeasurement() API was called before. 
 199:Generated_Source\PSoC4/CyLFClk.c **** *
 200:Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 201:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStopMeasurement(void)
 202:Generated_Source\PSoC4/CyLFClk.c **** {
  98              		.loc 1 202 0
  99              		.cfi_startproc
 203:Generated_Source\PSoC4/CyLFClk.c ****     /* Set default configurations in 11...8 DFT register bits to zero */
 204:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_DFT_REG &= ~CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK;
 100              		.loc 1 204 0
 101 0000 024A     		ldr	r2, .L8
 102 0002 034B     		ldr	r3, .L8+4
 103 0004 1168     		ldr	r1, [r2]
 205:Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSLT)
 206:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_TST_DDFT_CTRL_REG &= ((uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 207:Generated_Source\PSoC4/CyLFClk.c ****     #endif /* (CY_IP_SRSSLT) */
 208:Generated_Source\PSoC4/CyLFClk.c **** }
 104              		.loc 1 208 0
 105              		@ sp needed
 204:Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSLT)
 106              		.loc 1 204 0
 107 0006 0B40     		and	r3, r1
 108 0008 1360     		str	r3, [r2]
 109              		.loc 1 208 0
 110 000a 7047     		bx	lr
 111              	.L9:
 112              		.align	2
 113              	.L8:
 114 000c 10010B40 		.word	1074462992
 115 0010 FFF0FFFF 		.word	-3841
 116              		.cfi_endproc
 117              	.LFE3:
 118              		.size	CySysClkIloStopMeasurement, .-CySysClkIloStopMeasurement
 119              		.global	__aeabi_uidiv
 120              		.section	.text.CySysClkIloCompensate,"ax",%progbits
 121              		.align	2
 122              		.global	CySysClkIloCompensate
 123              		.code	16
 124              		.thumb_func
 125              		.type	CySysClkIloCompensate, %function
 126              	CySysClkIloCompensate:
 127              	.LFB4:
 209:Generated_Source\PSoC4/CyLFClk.c **** 
 210:Generated_Source\PSoC4/CyLFClk.c **** 
 211:Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 7


 212:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloCompensate
 213:Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 214:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 215:Generated_Source\PSoC4/CyLFClk.c **** * This API measures the current ILO accuracy.
 216:Generated_Source\PSoC4/CyLFClk.c **** *
 217:Generated_Source\PSoC4/CyLFClk.c **** * Basing on the measured frequency the required number of ILO cycles for a 
 218:Generated_Source\PSoC4/CyLFClk.c **** * given delay (in microseconds) is obtained. The desired delay that needs to 
 219:Generated_Source\PSoC4/CyLFClk.c **** * be compensated is passed through the desiredDelay parameter. The compensated 
 220:Generated_Source\PSoC4/CyLFClk.c **** * cycle count is returned through the compesatedCycles pointer.
 221:Generated_Source\PSoC4/CyLFClk.c **** * The compensated ILO cycles can then be used to define the WDT period value, 
 222:Generated_Source\PSoC4/CyLFClk.c **** * effectively compensating for the ILO inaccuracy and allowing a more 
 223:Generated_Source\PSoC4/CyLFClk.c **** * accurate WDT interrupt generation.
 224:Generated_Source\PSoC4/CyLFClk.c **** *
 225:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloStartMeasurement() API should be called prior to calling this API. 
 226:Generated_Source\PSoC4/CyLFClk.c **** *
 227:Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 228:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 229:Generated_Source\PSoC4/CyLFClk.c **** *
 230:Generated_Source\PSoC4/CyLFClk.c **** * \note If the System clock frequency is changed in runtime, the CyDelayFreq() 
 231:Generated_Source\PSoC4/CyLFClk.c **** * with the appropriate parameter (Frequency of bus clock in Hertz) should be 
 232:Generated_Source\PSoC4/CyLFClk.c **** * called before calling a next CySysClkIloCompensate().
 233:Generated_Source\PSoC4/CyLFClk.c **** *
 234:Generated_Source\PSoC4/CyLFClk.c **** * \warning Do not enter deep sleep mode until the function returns CYRET_SUCCESS.
 235:Generated_Source\PSoC4/CyLFClk.c **** *
 236:Generated_Source\PSoC4/CyLFClk.c **** * \param desiredDelay Required delay in microseconds.
 237:Generated_Source\PSoC4/CyLFClk.c **** *
 238:Generated_Source\PSoC4/CyLFClk.c **** * \param *compensatedCycles The pointer to the variable in which the required
 239:Generated_Source\PSoC4/CyLFClk.c **** * number of ILO cycles for the given delay will be returned.
 240:Generated_Source\PSoC4/CyLFClk.c **** *
 241:Generated_Source\PSoC4/CyLFClk.c **** * \details
 242:Generated_Source\PSoC4/CyLFClk.c **** * The value returned in *compensatedCycles pointer is not valid until the 
 243:Generated_Source\PSoC4/CyLFClk.c **** * function returns CYRET_SUCCESS.
 244:Generated_Source\PSoC4/CyLFClk.c **** *
 245:Generated_Source\PSoC4/CyLFClk.c **** * The desiredDelay parameter value should be in next range: <br>From 100 to 
 246:Generated_Source\PSoC4/CyLFClk.c **** * 2 000 000 microseconds for PSoC 4000 / PSoC 4000S / PSoC 4100S / PSoC Analog 
 247:Generated_Source\PSoC4/CyLFClk.c **** * Coprocessor devices.<br>From 100 to 4 000 000 000 microseconds for 
 248:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE /
 249:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4200L / PSoC 4100M /PSoC 4200M devices.
 250:Generated_Source\PSoC4/CyLFClk.c **** *
 251:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - The compensation process is complete and the 
 252:Generated_Source\PSoC4/CyLFClk.c **** * compensated cycles value is returned in the compensatedCycles pointer.
 253:Generated_Source\PSoC4/CyLFClk.c **** *
 254:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_STARTED - Indicates measurement is in progress. It is 
 255:Generated_Source\PSoC4/CyLFClk.c **** * strongly recommended to do not make pauses between API calling. The 
 256:Generated_Source\PSoC4/CyLFClk.c **** * function should be called repeatedly until the API returns CYRET_SUCCESS.
 257:Generated_Source\PSoC4/CyLFClk.c **** *
 258:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates that measurement not started. 
 259:Generated_Source\PSoC4/CyLFClk.c **** * The user should call CySysClkIloStartMeasurement() API before calling 
 260:Generated_Source\PSoC4/CyLFClk.c **** * this API.
 261:Generated_Source\PSoC4/CyLFClk.c **** *
 262:Generated_Source\PSoC4/CyLFClk.c **** * \note For a correct WDT or DeepSleep Timers functioning with ILO compensating 
 263:Generated_Source\PSoC4/CyLFClk.c **** * the CySysClkIloCompensate() should be called before WDT or DeepSleep Timers 
 264:Generated_Source\PSoC4/CyLFClk.c **** * enabling.
 265:Generated_Source\PSoC4/CyLFClk.c **** *
 266:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 267:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloCompensate(uint32 desiredDelay , uint32* compensatedCycles)
 268:Generated_Source\PSoC4/CyLFClk.c **** {
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 8


 128              		.loc 1 268 0
 129              		.cfi_startproc
 130              	.LVL0:
 131 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 132              		.cfi_def_cfa_offset 20
 133              		.cfi_offset 4, -20
 134              		.cfi_offset 5, -16
 135              		.cfi_offset 6, -12
 136              		.cfi_offset 7, -8
 137              		.cfi_offset 14, -4
 138 0002 4746     		mov	r7, r8
 269:Generated_Source\PSoC4/CyLFClk.c ****     uint32 iloCompensatedCycles;
 270:Generated_Source\PSoC4/CyLFClk.c ****     uint32 desiredDelayInCounts;
 271:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 272:Generated_Source\PSoC4/CyLFClk.c ****     uint32 checkStatus;
 273:Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus;
 274:Generated_Source\PSoC4/CyLFClk.c **** 
 275:Generated_Source\PSoC4/CyLFClk.c ****     checkStatus = (uint32) (CY_SYS_CLK_DFT_REG & (uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 276:Generated_Source\PSoC4/CyLFClk.c **** 
 277:Generated_Source\PSoC4/CyLFClk.c ****     /* Check if CySysStartMeasurement was called before */
 278:Generated_Source\PSoC4/CyLFClk.c ****     if((checkStatus == CY_SYS_CLK_SEL_ILO_DFT_SOURCE) && 
 139              		.loc 1 278 0
 140 0004 8024     		mov	r4, #128
 275:Generated_Source\PSoC4/CyLFClk.c **** 
 141              		.loc 1 275 0
 142 0006 304B     		ldr	r3, .L25
 268:Generated_Source\PSoC4/CyLFClk.c ****     uint32 iloCompensatedCycles;
 143              		.loc 1 268 0
 144 0008 80B4     		push	{r7}
 145              		.cfi_def_cfa_offset 24
 146              		.cfi_offset 8, -24
 275:Generated_Source\PSoC4/CyLFClk.c **** 
 147              		.loc 1 275 0
 148 000a 1A68     		ldr	r2, [r3]
 149              	.LVL1:
 150 000c 2F4B     		ldr	r3, .L25+4
 151              		.loc 1 278 0
 152 000e 6400     		lsl	r4, r4, #1
 275:Generated_Source\PSoC4/CyLFClk.c **** 
 153              		.loc 1 275 0
 154 0010 1340     		and	r3, r2
 155              	.LVL2:
 279:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 280:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MAX_DELAY_US >= desiredDelay) &&
 281:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MIN_DELAY_US <= desiredDelay) &&
 282:Generated_Source\PSoC4/CyLFClk.c ****        (compensatedCycles !=  NULL))
 283:Generated_Source\PSoC4/CyLFClk.c ****     {
 284:Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_TRIM_OR_COMP_FINISHED != compensateRunningStatus)
 285:Generated_Source\PSoC4/CyLFClk.c ****         {
 286:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait until counter 1 stopped counting and after it calculate compensated cycles */
 287:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 288:Generated_Source\PSoC4/CyLFClk.c ****             {
 289:Generated_Source\PSoC4/CyLFClk.c ****                 if (0u != CY_SYS_CNT_REG2_REG)
 290:Generated_Source\PSoC4/CyLFClk.c ****                 {
 291:Generated_Source\PSoC4/CyLFClk.c ****                     /* Calculate required number of ILO cycles for given delay */
 292:Generated_Source\PSoC4/CyLFClk.c ****                     #if(CY_IP_SRSSV2)
 293:Generated_Source\PSoC4/CyLFClk.c ****                         if (CY_SYS_CLK_DELAY_COUNTS_LIMIT < desiredDelay)
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 9


 294:Generated_Source\PSoC4/CyLFClk.c ****                         {
 295:Generated_Source\PSoC4/CyLFClk.c ****                             desiredDelayInCounts = (desiredDelay / CY_SYS_CLK_ILO_PERIOD);
 296:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = 
 297:Generated_Source\PSoC4/CyLFClk.c ****                             (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydelayFreqHz >> CY_SYS_CLK_
 298:Generated_Source\PSoC4/CyLFClk.c ****                                 CY_SYS_CLK_ILO_FREQ_2MSB) * (desiredDelayInCounts / CY_SYS_CLK_ILO_
 299:Generated_Source\PSoC4/CyLFClk.c ****                         }
 300:Generated_Source\PSoC4/CyLFClk.c ****                         else
 301:Generated_Source\PSoC4/CyLFClk.c ****                         {
 302:Generated_Source\PSoC4/CyLFClk.c ****                             desiredDelayInCounts = ((desiredDelay * CY_SYS_CLK_COEF_PHUNDRED) + 
 303:Generated_Source\PSoC4/CyLFClk.c ****                                                      CY_SYS_CLK_HALF_OF_CLOCK) / CY_SYS_CLK_ILO_PER
 304:Generated_Source\PSoC4/CyLFClk.c **** 
 305:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / 
 306:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 307:Generated_Source\PSoC4/CyLFClk.c ****                                                      desiredDelayInCounts) / CY_SYS_CLK_ILO_DESIRED
 308:Generated_Source\PSoC4/CyLFClk.c ****                         }
 309:Generated_Source\PSoC4/CyLFClk.c ****                     #else /* (CY_IP_SRSSLT) */
 310:Generated_Source\PSoC4/CyLFClk.c ****                         desiredDelayInCounts = ((desiredDelay * CY_SYS_CLK_COEF_PHUNDRED) + CY_SYS_
 311:Generated_Source\PSoC4/CyLFClk.c ****                                                                                            CY_SYS_C
 312:Generated_Source\PSoC4/CyLFClk.c ****                         if(CY_SYS_CLK_MAX_LITE_NUMBER < desiredDelayInCounts)
 313:Generated_Source\PSoC4/CyLFClk.c ****                         {
 314:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydel
 315:Generated_Source\PSoC4/CyLFClk.c ****                                                    CY_SYS_CLK_SYS_CLK_DEVIDER)) / CY_SYS_CLK_ILO_FR
 316:Generated_Source\PSoC4/CyLFClk.c ****                                                    (desiredDelayInCounts / CY_SYS_CLK_ILO_FREQ_3LSB
 317:Generated_Source\PSoC4/CyLFClk.c ****                         }
 318:Generated_Source\PSoC4/CyLFClk.c ****                         else
 319:Generated_Source\PSoC4/CyLFClk.c ****                         {
 320:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / 
 321:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 322:Generated_Source\PSoC4/CyLFClk.c ****                                                      desiredDelayInCounts) / CY_SYS_CLK_ILO_DESIRED
 323:Generated_Source\PSoC4/CyLFClk.c ****                         }
 324:Generated_Source\PSoC4/CyLFClk.c ****                     #endif /* (CY_IP_SRSSV2) */
 325:Generated_Source\PSoC4/CyLFClk.c **** 
 326:Generated_Source\PSoC4/CyLFClk.c ****                     *compensatedCycles = iloCompensatedCycles;
 327:Generated_Source\PSoC4/CyLFClk.c ****                     compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 328:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_SUCCESS;
 329:Generated_Source\PSoC4/CyLFClk.c ****                 }
 330:Generated_Source\PSoC4/CyLFClk.c ****                 else
 331:Generated_Source\PSoC4/CyLFClk.c ****                 {
 332:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus  = CYRET_INVALID_STATE;
 333:Generated_Source\PSoC4/CyLFClk.c ****                 }
 334:Generated_Source\PSoC4/CyLFClk.c ****             }
 335:Generated_Source\PSoC4/CyLFClk.c ****             else
 336:Generated_Source\PSoC4/CyLFClk.c ****             {
 337:Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_STARTED;
 338:Generated_Source\PSoC4/CyLFClk.c ****             }
 339:Generated_Source\PSoC4/CyLFClk.c ****         }
 340:Generated_Source\PSoC4/CyLFClk.c ****         else
 341:Generated_Source\PSoC4/CyLFClk.c ****         {
 342:Generated_Source\PSoC4/CyLFClk.c ****             /* Reload CNTR 1 count value for next measurement cycle*/
 343:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CNT_REG1_REG = (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER);
 344:Generated_Source\PSoC4/CyLFClk.c ****             compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_STARTED;
 345:Generated_Source\PSoC4/CyLFClk.c ****             returnStatus = CYRET_STARTED;
 346:Generated_Source\PSoC4/CyLFClk.c ****         }
 347:Generated_Source\PSoC4/CyLFClk.c ****     }
 348:Generated_Source\PSoC4/CyLFClk.c ****     else
 349:Generated_Source\PSoC4/CyLFClk.c ****     {
 350:Generated_Source\PSoC4/CyLFClk.c ****         returnStatus = CYRET_INVALID_STATE;
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 10


 156              		.loc 1 350 0
 157 0012 1122     		mov	r2, #17
 278:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 158              		.loc 1 278 0
 159 0014 A342     		cmp	r3, r4
 160 0016 03D0     		beq	.L23
 161              	.LVL3:
 162              	.L11:
 351:Generated_Source\PSoC4/CyLFClk.c ****     }
 352:Generated_Source\PSoC4/CyLFClk.c **** 
 353:Generated_Source\PSoC4/CyLFClk.c ****     return (returnStatus);
 354:Generated_Source\PSoC4/CyLFClk.c **** }
 163              		.loc 1 354 0
 164 0018 101C     		mov	r0, r2
 165              		@ sp needed
 166 001a 04BC     		pop	{r2}
 167 001c 9046     		mov	r8, r2
 168 001e F0BD     		pop	{r4, r5, r6, r7, pc}
 169              	.LVL4:
 170              	.L23:
 279:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MAX_DELAY_US >= desiredDelay) &&
 171              		.loc 1 279 0 discriminator 1
 172 0020 2B4B     		ldr	r3, .L25+8
 173              	.LVL5:
 174 0022 1C68     		ldr	r4, [r3]
 278:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 175              		.loc 1 278 0 discriminator 1
 176 0024 2B4B     		ldr	r3, .L25+12
 177 0026 9C42     		cmp	r4, r3
 178 0028 F6D1     		bne	.L11
 280:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MIN_DELAY_US <= desiredDelay) &&
 179              		.loc 1 280 0
 180 002a 041C     		mov	r4, r0
 181 002c 2A4B     		ldr	r3, .L25+16
 182 002e 643C     		sub	r4, r4, #100
 183 0030 9C42     		cmp	r4, r3
 184 0032 F1D8     		bhi	.L11
 281:Generated_Source\PSoC4/CyLFClk.c ****        (compensatedCycles !=  NULL))
 185              		.loc 1 281 0
 186 0034 0029     		cmp	r1, #0
 187 0036 EFD0     		beq	.L11
 284:Generated_Source\PSoC4/CyLFClk.c ****         {
 188              		.loc 1 284 0
 189 0038 284C     		ldr	r4, .L25+20
 190 003a 2368     		ldr	r3, [r4]
 191 003c 002B     		cmp	r3, #0
 192 003e 08D1     		bne	.L24
 343:Generated_Source\PSoC4/CyLFClk.c ****             compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_STARTED;
 193              		.loc 1 343 0
 194 0040 274B     		ldr	r3, .L25+24
 195 0042 284A     		ldr	r2, .L25+28
 196 0044 1B68     		ldr	r3, [r3]
 197 0046 9B0A     		lsr	r3, r3, #10
 198 0048 1360     		str	r3, [r2]
 344:Generated_Source\PSoC4/CyLFClk.c ****             returnStatus = CYRET_STARTED;
 199              		.loc 1 344 0
 200 004a 0123     		mov	r3, #1
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 11


 345:Generated_Source\PSoC4/CyLFClk.c ****         }
 201              		.loc 1 345 0
 202 004c 0722     		mov	r2, #7
 344:Generated_Source\PSoC4/CyLFClk.c ****             returnStatus = CYRET_STARTED;
 203              		.loc 1 344 0
 204 004e 2360     		str	r3, [r4]
 205              	.LVL6:
 206 0050 E2E7     		b	.L11
 207              	.LVL7:
 208              	.L24:
 287:Generated_Source\PSoC4/CyLFClk.c ****             {
 209              		.loc 1 287 0
 210 0052 244B     		ldr	r3, .L25+28
 337:Generated_Source\PSoC4/CyLFClk.c ****             }
 211              		.loc 1 337 0
 212 0054 0A3A     		sub	r2, r2, #10
 287:Generated_Source\PSoC4/CyLFClk.c ****             {
 213              		.loc 1 287 0
 214 0056 1B68     		ldr	r3, [r3]
 215 0058 002B     		cmp	r3, #0
 216 005a DDDA     		bge	.L11
 289:Generated_Source\PSoC4/CyLFClk.c ****                 {
 217              		.loc 1 289 0
 218 005c 224B     		ldr	r3, .L25+32
 350:Generated_Source\PSoC4/CyLFClk.c ****     }
 219              		.loc 1 350 0
 220 005e 0A32     		add	r2, r2, #10
 289:Generated_Source\PSoC4/CyLFClk.c ****                 {
 221              		.loc 1 289 0
 222 0060 1D68     		ldr	r5, [r3]
 223 0062 002D     		cmp	r5, #0
 224 0064 D8D0     		beq	.L11
 297:Generated_Source\PSoC4/CyLFClk.c ****                                 CY_SYS_CLK_ILO_FREQ_2MSB) * (desiredDelayInCounts / CY_SYS_CLK_ILO_
 225              		.loc 1 297 0
 226 0066 1F68     		ldr	r7, [r3]
 293:Generated_Source\PSoC4/CyLFClk.c ****                         {
 227              		.loc 1 293 0
 228 0068 204A     		ldr	r2, .L25+36
 297:Generated_Source\PSoC4/CyLFClk.c ****                                 CY_SYS_CLK_ILO_FREQ_2MSB) * (desiredDelayInCounts / CY_SYS_CLK_ILO_
 229              		.loc 1 297 0
 230 006a 1D4B     		ldr	r3, .L25+24
 231 006c 0D1C     		mov	r5, r1
 232 006e 1E68     		ldr	r6, [r3]
 293:Generated_Source\PSoC4/CyLFClk.c ****                         {
 233              		.loc 1 293 0
 234 0070 9042     		cmp	r0, r2
 235 0072 13D9     		bls	.L13
 236              	.LVL8:
 295:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = 
 237              		.loc 1 295 0
 238 0074 1F21     		mov	r1, #31
 239              	.LVL9:
 240 0076 FFF7FEFF 		bl	__aeabi_uidiv
 241              	.LVL10:
 298:Generated_Source\PSoC4/CyLFClk.c ****                         }
 242              		.loc 1 298 0
 243 007a FA21     		mov	r1, #250
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 12


 244 007c 8900     		lsl	r1, r1, #2
 245 007e FFF7FEFF 		bl	__aeabi_uidiv
 246              	.LVL11:
 247 0082 8046     		mov	r8, r0
 297:Generated_Source\PSoC4/CyLFClk.c ****                                 CY_SYS_CLK_ILO_FREQ_2MSB) * (desiredDelayInCounts / CY_SYS_CLK_ILO_
 248              		.loc 1 297 0
 249 0084 381C     		mov	r0, r7
 250 0086 B10A     		lsr	r1, r6, #10
 251 0088 7043     		mul	r0, r6
 252 008a FFF7FEFF 		bl	__aeabi_uidiv
 253              	.LVL12:
 296:Generated_Source\PSoC4/CyLFClk.c ****                             (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydelayFreqHz >> CY_SYS_CLK_
 254              		.loc 1 296 0
 255 008e 4346     		mov	r3, r8
 297:Generated_Source\PSoC4/CyLFClk.c ****                                 CY_SYS_CLK_ILO_FREQ_2MSB) * (desiredDelayInCounts / CY_SYS_CLK_ILO_
 256              		.loc 1 297 0
 257 0090 4009     		lsr	r0, r0, #5
 296:Generated_Source\PSoC4/CyLFClk.c ****                             (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydelayFreqHz >> CY_SYS_CLK_
 258              		.loc 1 296 0
 259 0092 5843     		mul	r0, r3
 260              	.LVL13:
 261              	.L14:
 327:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_SUCCESS;
 262              		.loc 1 327 0
 263 0094 0022     		mov	r2, #0
 326:Generated_Source\PSoC4/CyLFClk.c ****                     compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 264              		.loc 1 326 0
 265 0096 2860     		str	r0, [r5]
 327:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_SUCCESS;
 266              		.loc 1 327 0
 267 0098 2260     		str	r2, [r4]
 268              	.LVL14:
 269 009a BDE7     		b	.L11
 270              	.LVL15:
 271              	.L13:
 302:Generated_Source\PSoC4/CyLFClk.c ****                                                      CY_SYS_CLK_HALF_OF_CLOCK) / CY_SYS_CLK_ILO_PER
 272              		.loc 1 302 0
 273 009c 6423     		mov	r3, #100
 274 009e 5843     		mul	r0, r3
 275              	.LVL16:
 276 00a0 134B     		ldr	r3, .L25+40
 277 00a2 1449     		ldr	r1, .L25+44
 278              	.LVL17:
 279 00a4 9C46     		mov	ip, r3
 280 00a6 6044     		add	r0, r0, ip
 281 00a8 FFF7FEFF 		bl	__aeabi_uidiv
 282              	.LVL18:
 283 00ac 8046     		mov	r8, r0
 305:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 284              		.loc 1 305 0
 285 00ae 381C     		mov	r0, r7
 306:Generated_Source\PSoC4/CyLFClk.c ****                                                      desiredDelayInCounts) / CY_SYS_CLK_ILO_DESIRED
 286              		.loc 1 306 0
 287 00b0 B10A     		lsr	r1, r6, #10
 305:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 288              		.loc 1 305 0
 289 00b2 7043     		mul	r0, r6
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 13


 290 00b4 FFF7FEFF 		bl	__aeabi_uidiv
 291              	.LVL19:
 306:Generated_Source\PSoC4/CyLFClk.c ****                                                      desiredDelayInCounts) / CY_SYS_CLK_ILO_DESIRED
 292              		.loc 1 306 0
 293 00b8 4346     		mov	r3, r8
 305:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 294              		.loc 1 305 0
 295 00ba FA21     		mov	r1, #250
 306:Generated_Source\PSoC4/CyLFClk.c ****                                                      desiredDelayInCounts) / CY_SYS_CLK_ILO_DESIRED
 296              		.loc 1 306 0
 297 00bc 5843     		mul	r0, r3
 305:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 298              		.loc 1 305 0
 299 00be C901     		lsl	r1, r1, #7
 300 00c0 FFF7FEFF 		bl	__aeabi_uidiv
 301              	.LVL20:
 302 00c4 E6E7     		b	.L14
 303              	.L26:
 304 00c6 C046     		.align	2
 305              	.L25:
 306 00c8 10010B40 		.word	1074462992
 307 00cc 3F3F0000 		.word	16191
 308 00d0 08000340 		.word	1073938440
 309 00d4 01020000 		.word	513
 310 00d8 9C276BEE 		.word	-294967396
 311 00dc 00000000 		.word	.LANCHOR0
 312 00e0 00000000 		.word	cydelayFreqHz
 313 00e4 18000340 		.word	1073938456
 314 00e8 1C000340 		.word	1073938460
 315 00ec 60D10000 		.word	53600
 316 00f0 0D030000 		.word	781
 317 00f4 350C0000 		.word	3125
 318              		.cfi_endproc
 319              	.LFE4:
 320              		.size	CySysClkIloCompensate, .-CySysClkIloCompensate
 321              		.section	.text.CySysWdtLock,"ax",%progbits
 322              		.align	2
 323              		.global	CySysWdtLock
 324              		.code	16
 325              		.thumb_func
 326              		.type	CySysWdtLock, %function
 327              	CySysWdtLock:
 328              	.LFB6:
 355:Generated_Source\PSoC4/CyLFClk.c **** 
 356:Generated_Source\PSoC4/CyLFClk.c **** 
 357:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
 358:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 359:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkIloEnabled
 360:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 361:Generated_Source\PSoC4/CyLFClk.c ****     *
 362:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
 363:Generated_Source\PSoC4/CyLFClk.c ****     * Reports the ILO enable state.
 364:Generated_Source\PSoC4/CyLFClk.c ****     *
 365:Generated_Source\PSoC4/CyLFClk.c ****     * \return
 366:Generated_Source\PSoC4/CyLFClk.c ****     * 1 if ILO is enabled, and 0 if ILO is disabled.
 367:Generated_Source\PSoC4/CyLFClk.c ****     *
 368:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 14


 369:Generated_Source\PSoC4/CyLFClk.c ****     ********************************************************************************/
 370:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkIloEnabled(void)
 371:Generated_Source\PSoC4/CyLFClk.c ****     {
 372:Generated_Source\PSoC4/CyLFClk.c ****         /* Prohibits writing to WDT registers and ILO/WCO registers when not equal to 0 */
 373:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_ILO_CONFIG_REG & (uint32)(CY_SYS_CLK_ILO_CONFIG_ENABLE))) ?
 374:Generated_Source\PSoC4/CyLFClk.c ****             (uint32) 1u :
 375:Generated_Source\PSoC4/CyLFClk.c ****             (uint32) 0u);
 376:Generated_Source\PSoC4/CyLFClk.c ****     }
 377:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
 378:Generated_Source\PSoC4/CyLFClk.c **** 
 379:Generated_Source\PSoC4/CyLFClk.c **** 
 380:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
 381:Generated_Source\PSoC4/CyLFClk.c **** /********************************************************************************
 382:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloTrim
 383:Generated_Source\PSoC4/CyLFClk.c **** *****************************************************************************//**
 384:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 385:Generated_Source\PSoC4/CyLFClk.c **** * The API trims the ILO frequency to +/- 10% accuracy range using accurate 
 386:Generated_Source\PSoC4/CyLFClk.c **** * SysClk.
 387:Generated_Source\PSoC4/CyLFClk.c **** *
 388:Generated_Source\PSoC4/CyLFClk.c **** * The API can be blocking or non-blocking depending on the value of the mode 
 389:Generated_Source\PSoC4/CyLFClk.c **** * parameter passed. The accuracy of ILO after trimming in parts per thousand 
 390:Generated_Source\PSoC4/CyLFClk.c **** * is returned through the iloAccuracyInPPT pointer. A positive number indicates 
 391:Generated_Source\PSoC4/CyLFClk.c **** * that the ILO is running fast and a negative number indicates that the ILO is 
 392:Generated_Source\PSoC4/CyLFClk.c **** * running slowly. This error is relative to the error in the reference clock 
 393:Generated_Source\PSoC4/CyLFClk.c **** * (SysClk), so the absolute error will be higher and depends on the accuracy 
 394:Generated_Source\PSoC4/CyLFClk.c **** * of the reference.
 395:Generated_Source\PSoC4/CyLFClk.c **** *
 396:Generated_Source\PSoC4/CyLFClk.c **** * The CySysClkIloStartMeasurement() API should be called prior to calling this 
 397:Generated_Source\PSoC4/CyLFClk.c **** * API. Otherwise it will return CYRET_INVALID_STATE as the measurement was not 
 398:Generated_Source\PSoC4/CyLFClk.c **** * started.
 399:Generated_Source\PSoC4/CyLFClk.c **** *
 400:Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 401:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 402:Generated_Source\PSoC4/CyLFClk.c **** *
 403:Generated_Source\PSoC4/CyLFClk.c **** * \note If System clock frequency is changed in runtime, the CyDelayFreq() 
 404:Generated_Source\PSoC4/CyLFClk.c **** * with the appropriate parameter (Frequency of bus clock in Hertz) should be 
 405:Generated_Source\PSoC4/CyLFClk.c **** * called before next CySysClkIloCompensate() usage.
 406:Generated_Source\PSoC4/CyLFClk.c **** *
 407:Generated_Source\PSoC4/CyLFClk.c **** * \warning Do not enter deep sleep mode until the function returns CYRET_SUCCESS
 408:Generated_Source\PSoC4/CyLFClk.c **** * or CYRET_TIMEOUT.
 409:Generated_Source\PSoC4/CyLFClk.c **** *
 410:Generated_Source\PSoC4/CyLFClk.c **** * Available for all PSoC 4 devices with ILO trim capability. This excludes 
 411:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4000 / PSoC 4100 / PSoC 4200 / PSoC 4000S / PSoC 4100S / PSoC
 412:Generated_Source\PSoC4/CyLFClk.c **** * Analog Coprocessor devices.
 413:Generated_Source\PSoC4/CyLFClk.c **** *
 414:Generated_Source\PSoC4/CyLFClk.c **** * \param mode
 415:Generated_Source\PSoC4/CyLFClk.c **** *  CY_SYS_CLK_BLOCKING -  The function does not return until the ILO is 
 416:Generated_Source\PSoC4/CyLFClk.c **** * within +/-10% accuracy range or time out has occurred.<br>
 417:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_NON_BLOCKING - The function returns immediately after 
 418:Generated_Source\PSoC4/CyLFClk.c **** * performing a single iteration of the trim process. The function should be 
 419:Generated_Source\PSoC4/CyLFClk.c **** * called repeatedly until the trimming is completed successfully.
 420:Generated_Source\PSoC4/CyLFClk.c **** *
 421:Generated_Source\PSoC4/CyLFClk.c **** * \param *iloAccuracyInPPT Pointer to an integer in which the trimmed ILO 
 422:Generated_Source\PSoC4/CyLFClk.c **** * accuracy will be returned.
 423:Generated_Source\PSoC4/CyLFClk.c **** *
 424:Generated_Source\PSoC4/CyLFClk.c **** * \details The value returned in *iloAccuracyInPPT pointer is not valid 
 425:Generated_Source\PSoC4/CyLFClk.c **** * until the function returns CYRET_SUCCESS. ILO accuracy in PPT is given by:
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 15


 426:Generated_Source\PSoC4/CyLFClk.c **** *
 427:Generated_Source\PSoC4/CyLFClk.c **** * IloAccuracyInPPT = ((MeasuredIloFreq - DesiredIloFreq) * 
 428:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_PERTHOUSAND) / DesiredIloFreq);
 429:Generated_Source\PSoC4/CyLFClk.c **** *
 430:Generated_Source\PSoC4/CyLFClk.c **** * DesiredIloFreq  = 32000, CY_SYS_CLK_PERTHOUSAND = 1000;
 431:Generated_Source\PSoC4/CyLFClk.c **** *
 432:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Indicates trimming is complete. This value indicates 
 433:Generated_Source\PSoC4/CyLFClk.c **** * trimming is successful and iloAccuracyInPPT is within +/- 10%.
 434:Generated_Source\PSoC4/CyLFClk.c **** *
 435:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_STARTED - Indicates measurement is in progress. This is applicable 
 436:Generated_Source\PSoC4/CyLFClk.c **** * only for non-blocking mode.
 437:Generated_Source\PSoC4/CyLFClk.c **** *
 438:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates trimming was unsuccessful. You should 
 439:Generated_Source\PSoC4/CyLFClk.c **** * call CySysClkIloStartMeasurement() before calling this API.
 440:Generated_Source\PSoC4/CyLFClk.c **** *
 441:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_TIMEOUT - Indicates trimming was unsuccessful. This is applicable 
 442:Generated_Source\PSoC4/CyLFClk.c **** * only for blocking mode. Timeout means the trimming was tried 5 times without 
 443:Generated_Source\PSoC4/CyLFClk.c **** * success (i.e. ILO accuracy > +/- 10%). The user can call the API again for 
 444:Generated_Source\PSoC4/CyLFClk.c **** * another try or wait for some time before calling it again (to let the system 
 445:Generated_Source\PSoC4/CyLFClk.c **** * to settle to another operating point change in temperature etc.) and continue 
 446:Generated_Source\PSoC4/CyLFClk.c **** * using the previous trim value till the next call.
 447:Generated_Source\PSoC4/CyLFClk.c **** *
 448:Generated_Source\PSoC4/CyLFClk.c **** **********************************************************************************/
 449:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloTrim(uint32 mode, int32* iloAccuracyInPPT)
 450:Generated_Source\PSoC4/CyLFClk.c **** {
 451:Generated_Source\PSoC4/CyLFClk.c ****     uint32 timeOutClocks = CY_SYS_CLK_TIMEOUT;
 452:Generated_Source\PSoC4/CyLFClk.c ****     uint32 waitUntilCntr1Stops;
 453:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 454:Generated_Source\PSoC4/CyLFClk.c ****     uint32 checkStatus;
 455:Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus;
 456:Generated_Source\PSoC4/CyLFClk.c **** 
 457:Generated_Source\PSoC4/CyLFClk.c ****     checkStatus = (uint32) (CY_SYS_CLK_DFT_REG & (uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 458:Generated_Source\PSoC4/CyLFClk.c **** 
 459:Generated_Source\PSoC4/CyLFClk.c ****     /* Check if DFT and CTRL registers were configures in CySysStartMeasurement*/
 460:Generated_Source\PSoC4/CyLFClk.c ****     if((checkStatus == CY_SYS_CLK_SEL_ILO_DFT_SOURCE) &&
 461:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 462:Generated_Source\PSoC4/CyLFClk.c ****        (iloAccuracyInPPT != NULL))
 463:Generated_Source\PSoC4/CyLFClk.c ****     {
 464:Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_BLOCKING == mode)
 465:Generated_Source\PSoC4/CyLFClk.c ****         {
 466:Generated_Source\PSoC4/CyLFClk.c ****             waitUntilCntr1Stops = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER;
 467:Generated_Source\PSoC4/CyLFClk.c ****             do
 468:Generated_Source\PSoC4/CyLFClk.c ****             {
 469:Generated_Source\PSoC4/CyLFClk.c ****                 /* Reload CNTR 1 count value for measuring cycle*/
 470:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CNT_REG1_REG = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER; 
 471:Generated_Source\PSoC4/CyLFClk.c **** 
 472:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait until counter CNTR 1 will finish down-counting */
 473:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u == (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 474:Generated_Source\PSoC4/CyLFClk.c ****                 {
 475:Generated_Source\PSoC4/CyLFClk.c ****                     waitUntilCntr1Stops--;
 476:Generated_Source\PSoC4/CyLFClk.c ****                     if (0u == waitUntilCntr1Stops)
 477:Generated_Source\PSoC4/CyLFClk.c ****                     {
 478:Generated_Source\PSoC4/CyLFClk.c ****                         break;
 479:Generated_Source\PSoC4/CyLFClk.c ****                     }
 480:Generated_Source\PSoC4/CyLFClk.c ****                 }
 481:Generated_Source\PSoC4/CyLFClk.c ****                 trimRunningStatus = CySysClkIloUpdateTrimReg(iloAccuracyInPPT);
 482:Generated_Source\PSoC4/CyLFClk.c ****                 timeOutClocks--;
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 16


 483:Generated_Source\PSoC4/CyLFClk.c **** 
 484:Generated_Source\PSoC4/CyLFClk.c ****             /* Untill ILO accuracy will be in range less than +/- 10% or timeout occurs*/
 485:Generated_Source\PSoC4/CyLFClk.c ****             } while((CYRET_SUCCESS != trimRunningStatus) && 
 486:Generated_Source\PSoC4/CyLFClk.c ****               (CYRET_INVALID_STATE != trimRunningStatus) && 
 487:Generated_Source\PSoC4/CyLFClk.c ****                                (0u != timeOutClocks));
 488:Generated_Source\PSoC4/CyLFClk.c **** 
 489:Generated_Source\PSoC4/CyLFClk.c ****             if (CYRET_SUCCESS == trimRunningStatus)
 490:Generated_Source\PSoC4/CyLFClk.c ****             {
 491:Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_SUCCESS;
 492:Generated_Source\PSoC4/CyLFClk.c ****             }
 493:Generated_Source\PSoC4/CyLFClk.c ****             else
 494:Generated_Source\PSoC4/CyLFClk.c ****             {
 495:Generated_Source\PSoC4/CyLFClk.c ****                 if(0u == timeOutClocks)
 496:Generated_Source\PSoC4/CyLFClk.c ****                 {
 497:Generated_Source\PSoC4/CyLFClk.c ****                     trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 498:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_TIMEOUT;
 499:Generated_Source\PSoC4/CyLFClk.c ****                 }
 500:Generated_Source\PSoC4/CyLFClk.c ****                 else
 501:Generated_Source\PSoC4/CyLFClk.c ****                 {
 502:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_INVALID_STATE;
 503:Generated_Source\PSoC4/CyLFClk.c ****                 }
 504:Generated_Source\PSoC4/CyLFClk.c ****             }
 505:Generated_Source\PSoC4/CyLFClk.c ****         }
 506:Generated_Source\PSoC4/CyLFClk.c ****         /* Non - blocking mode */
 507:Generated_Source\PSoC4/CyLFClk.c ****         else
 508:Generated_Source\PSoC4/CyLFClk.c ****         {
 509:Generated_Source\PSoC4/CyLFClk.c ****             if (CY_SYS_CLK_TRIM_OR_COMP_FINISHED != trimRunningStatus)
 510:Generated_Source\PSoC4/CyLFClk.c ****             {
 511:Generated_Source\PSoC4/CyLFClk.c ****                 /* Checking if the counter CNTR 1 finished down-counting */
 512:Generated_Source\PSoC4/CyLFClk.c ****                 if(0u != (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 513:Generated_Source\PSoC4/CyLFClk.c ****                 {
 514:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CySysClkIloUpdateTrimReg(iloAccuracyInPPT);
 515:Generated_Source\PSoC4/CyLFClk.c ****                     trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 516:Generated_Source\PSoC4/CyLFClk.c ****                 }
 517:Generated_Source\PSoC4/CyLFClk.c ****                 else
 518:Generated_Source\PSoC4/CyLFClk.c ****                 {
 519:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_STARTED;
 520:Generated_Source\PSoC4/CyLFClk.c ****                 }
 521:Generated_Source\PSoC4/CyLFClk.c ****             }
 522:Generated_Source\PSoC4/CyLFClk.c ****             else
 523:Generated_Source\PSoC4/CyLFClk.c ****             {
 524:Generated_Source\PSoC4/CyLFClk.c ****                 /* Reload CNTR 1 count value for next measuring */
 525:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CNT_REG1_REG = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER;
 526:Generated_Source\PSoC4/CyLFClk.c ****                 trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_STARTED;
 527:Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_STARTED;
 528:Generated_Source\PSoC4/CyLFClk.c ****             }
 529:Generated_Source\PSoC4/CyLFClk.c ****         }
 530:Generated_Source\PSoC4/CyLFClk.c ****     }
 531:Generated_Source\PSoC4/CyLFClk.c ****     else
 532:Generated_Source\PSoC4/CyLFClk.c ****     {
 533:Generated_Source\PSoC4/CyLFClk.c ****         returnStatus = CYRET_INVALID_STATE;
 534:Generated_Source\PSoC4/CyLFClk.c ****     }
 535:Generated_Source\PSoC4/CyLFClk.c **** 
 536:Generated_Source\PSoC4/CyLFClk.c ****     return (returnStatus);
 537:Generated_Source\PSoC4/CyLFClk.c **** }
 538:Generated_Source\PSoC4/CyLFClk.c **** 
 539:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 17


 540:Generated_Source\PSoC4/CyLFClk.c **** /********************************************************************************
 541:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloUpdateTrimReg
 542:Generated_Source\PSoC4/CyLFClk.c **** *********************************************************************************
 543:Generated_Source\PSoC4/CyLFClk.c **** *
 544:Generated_Source\PSoC4/CyLFClk.c **** * \internal
 545:Generated_Source\PSoC4/CyLFClk.c **** * Function calculates ILO accuracy and check is error range is higher than 
 546:Generated_Source\PSoC4/CyLFClk.c **** * +/- 10%. If Measured frequency is higher than +/- 10% function updates 
 547:Generated_Source\PSoC4/CyLFClk.c **** * ILO Trim register.
 548:Generated_Source\PSoC4/CyLFClk.c **** *
 549:Generated_Source\PSoC4/CyLFClk.c **** * \param
 550:Generated_Source\PSoC4/CyLFClk.c **** * iloAccuracyInPPT Pointer to an integer in which the trimmed ILO 
 551:Generated_Source\PSoC4/CyLFClk.c **** * accuracy will be returned. The value returned in this pointer is not valid 
 552:Generated_Source\PSoC4/CyLFClk.c **** * until the function returns CYRET_SUCCESS. If ILO frequency error is lower 
 553:Generated_Source\PSoC4/CyLFClk.c **** * than +/- 10% then the value returned in this pointer will be updated.
 554:Generated_Source\PSoC4/CyLFClk.c **** *
 555:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Indicates that ILO frequency error is lower than 
 556:Generated_Source\PSoC4/CyLFClk.c **** * +/- 10% and no actions are required.
 557:Generated_Source\PSoC4/CyLFClk.c **** *
 558:Generated_Source\PSoC4/CyLFClk.c **** * \return  CYRET_STARTED - Indicates that ILO frequency error is higher than 
 559:Generated_Source\PSoC4/CyLFClk.c **** * +/- 10% and ILO Trim register was updated.
 560:Generated_Source\PSoC4/CyLFClk.c **** *
 561:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates trimming was unsuccessful.
 562:Generated_Source\PSoC4/CyLFClk.c **** *
 563:Generated_Source\PSoC4/CyLFClk.c **** * Post #1 - To obtain 10% ILO accuracy the calculated accuracy should be equal 
 564:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_ERROR_RANGE = 5.6%. Error value should take to account IMO error of 
 565:Generated_Source\PSoC4/CyLFClk.c **** * +/-2% (+/-0.64kHz), trim step of 2.36kHz (+/-1.18kHz) and error while ILO 
 566:Generated_Source\PSoC4/CyLFClk.c **** * frequency measuring.
 567:Generated_Source\PSoC4/CyLFClk.c **** *
 568:Generated_Source\PSoC4/CyLFClk.c **** * \endinternal
 569:Generated_Source\PSoC4/CyLFClk.c **** *
 570:Generated_Source\PSoC4/CyLFClk.c **** **********************************************************************************/
 571:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloUpdateTrimReg(int32* iloAccuracyInPPT)
 572:Generated_Source\PSoC4/CyLFClk.c **** {
 573:Generated_Source\PSoC4/CyLFClk.c ****     uint32 measuredIloFreq;
 574:Generated_Source\PSoC4/CyLFClk.c ****     uint32 currentIloTrimValue;
 575:Generated_Source\PSoC4/CyLFClk.c ****     int32 iloAccuracyValue;
 576:Generated_Source\PSoC4/CyLFClk.c ****     int32 trimStep;
 577:Generated_Source\PSoC4/CyLFClk.c ****     cystatus errorRangeStatus;
 578:Generated_Source\PSoC4/CyLFClk.c **** 
 579:Generated_Source\PSoC4/CyLFClk.c ****     if(0u != CY_SYS_CNT_REG2_REG)
 580:Generated_Source\PSoC4/CyLFClk.c ****     {
 581:Generated_Source\PSoC4/CyLFClk.c ****         measuredIloFreq = (CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydelayFreqHz >> CY_SYS_CLK_SYS_
 582:Generated_Source\PSoC4/CyLFClk.c **** 
 583:Generated_Source\PSoC4/CyLFClk.c ****         /* Calculate value of error in PPT according to formula - 
 584:Generated_Source\PSoC4/CyLFClk.c ****         *       ((measuredIlofrequency - iloDesired freaquency) * 1000 / iloDesired freaquency) */
 585:Generated_Source\PSoC4/CyLFClk.c ****         iloAccuracyValue = (((int32) measuredIloFreq - (int32) CY_SYS_CLK_ILO_DESIRED_FREQ_HZ) * \
 586:Generated_Source\PSoC4/CyLFClk.c ****                             ((int32) CY_SYS_CLK_PERTHOUSAND)) / ((int32) CY_SYS_CLK_ILO_DESIRED_FRE
 587:Generated_Source\PSoC4/CyLFClk.c **** 
 588:Generated_Source\PSoC4/CyLFClk.c ****         /* Check if ILO accuracy is more than +/- CY_SYS_CLK_ERROR_RANGE. See post #1 of API descri
 589:Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_ERROR_RANGE < (uint32) (CY_SYS_CLK_ABS_MACRO(iloAccuracyValue)))
 590:Generated_Source\PSoC4/CyLFClk.c ****         {
 591:Generated_Source\PSoC4/CyLFClk.c ****             if (0 < iloAccuracyValue)
 592:Generated_Source\PSoC4/CyLFClk.c ****             {
 593:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = (int32) (((iloAccuracyValue * (int32) CY_SYS_CLK_ERROR_COEF) + 
 594:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_HALF_OF_STEP) / CY_SYS_CLK_ERROR_STEP);
 595:Generated_Source\PSoC4/CyLFClk.c ****             }
 596:Generated_Source\PSoC4/CyLFClk.c ****             else
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 18


 597:Generated_Source\PSoC4/CyLFClk.c ****             {
 598:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = (int32) (((iloAccuracyValue * (int32) CY_SYS_CLK_ERROR_COEF) - 
 599:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_HALF_OF_STEP) / CY_SYS_CLK_ERROR_STEP);
 600:Generated_Source\PSoC4/CyLFClk.c ****             }
 601:Generated_Source\PSoC4/CyLFClk.c ****             currentIloTrimValue = (CY_SYS_CLK_ILO_TRIM_REG & CY_SYS_CLK_ILO_TRIM_MASK);
 602:Generated_Source\PSoC4/CyLFClk.c ****             trimStep = (int32) currentIloTrimValue - trimStep;
 603:Generated_Source\PSoC4/CyLFClk.c **** 
 604:Generated_Source\PSoC4/CyLFClk.c ****             if(trimStep > CY_SYS_CLK_FOURBITS_MAX)
 605:Generated_Source\PSoC4/CyLFClk.c ****             {
 606:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = CY_SYS_CLK_FOURBITS_MAX;
 607:Generated_Source\PSoC4/CyLFClk.c ****             }
 608:Generated_Source\PSoC4/CyLFClk.c ****             if(trimStep < 0)
 609:Generated_Source\PSoC4/CyLFClk.c ****             {
 610:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = 0;
 611:Generated_Source\PSoC4/CyLFClk.c ****             }
 612:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CLK_ILO_TRIM_REG = (CY_SYS_CLK_ILO_TRIM_REG & (uint32)(~CY_SYS_CLK_ILO_TRIM_MASK
 613:Generated_Source\PSoC4/CyLFClk.c ****                                                                  ((uint32) trimStep);
 614:Generated_Source\PSoC4/CyLFClk.c ****             errorRangeStatus = CYRET_STARTED;
 615:Generated_Source\PSoC4/CyLFClk.c ****         } /* Else return success because error is in +/- 10% range*/
 616:Generated_Source\PSoC4/CyLFClk.c ****         else
 617:Generated_Source\PSoC4/CyLFClk.c ****         {
 618:Generated_Source\PSoC4/CyLFClk.c ****             /* Write trimmed ILO accuracy through pointer. */
 619:Generated_Source\PSoC4/CyLFClk.c ****             *iloAccuracyInPPT = iloAccuracyValue;
 620:Generated_Source\PSoC4/CyLFClk.c ****             errorRangeStatus = CYRET_SUCCESS;
 621:Generated_Source\PSoC4/CyLFClk.c ****         }
 622:Generated_Source\PSoC4/CyLFClk.c ****     }
 623:Generated_Source\PSoC4/CyLFClk.c ****     else
 624:Generated_Source\PSoC4/CyLFClk.c ****     {
 625:Generated_Source\PSoC4/CyLFClk.c ****         errorRangeStatus = CYRET_INVALID_STATE;
 626:Generated_Source\PSoC4/CyLFClk.c ****     }
 627:Generated_Source\PSoC4/CyLFClk.c **** return (errorRangeStatus);
 628:Generated_Source\PSoC4/CyLFClk.c **** }
 629:Generated_Source\PSoC4/CyLFClk.c **** 
 630:Generated_Source\PSoC4/CyLFClk.c **** 
 631:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
 632:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloRestoreFactoryTrim
 633:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
 634:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 635:Generated_Source\PSoC4/CyLFClk.c **** * Restores the ILO Trim Register to factory value.
 636:Generated_Source\PSoC4/CyLFClk.c **** *
 637:Generated_Source\PSoC4/CyLFClk.c **** * The CySysClkIloStartMeasurement() API should be called prior to 
 638:Generated_Source\PSoC4/CyLFClk.c **** * calling this API. Otherwise CYRET_UNKNOWN will be returned.
 639:Generated_Source\PSoC4/CyLFClk.c **** *
 640:Generated_Source\PSoC4/CyLFClk.c **** * Available for all PSoC 4 devices except for PSoC 4000 / PSoC 4100 / PSoC 4200 
 641:Generated_Source\PSoC4/CyLFClk.c **** * / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 642:Generated_Source\PSoC4/CyLFClk.c **** *
 643:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Operation was successful. 
 644:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_UNKNOWN - CySysClkIloStartMeasurement() was not called 
 645:Generated_Source\PSoC4/CyLFClk.c **** * before this API. Hence the trim value cannot be updated.
 646:Generated_Source\PSoC4/CyLFClk.c **** *
 647:Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 648:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloRestoreFactoryTrim(void)
 649:Generated_Source\PSoC4/CyLFClk.c **** {
 650:Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus = CYRET_SUCCESS;
 651:Generated_Source\PSoC4/CyLFClk.c **** 
 652:Generated_Source\PSoC4/CyLFClk.c ****     /* Check was defaultIloTrimRegValue modified in CySysClkIloStartMeasurement */
 653:Generated_Source\PSoC4/CyLFClk.c ****     if(CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE != defaultIloTrimRegValue)
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 19


 654:Generated_Source\PSoC4/CyLFClk.c ****         {
 655:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CLK_ILO_TRIM_REG = ((CY_SYS_CLK_ILO_TRIM_REG & (uint32)(~CY_SYS_CLK_ILO_TRIM_MAS
 656:Generated_Source\PSoC4/CyLFClk.c ****                                        (defaultIloTrimRegValue & CY_SYS_CLK_ILO_TRIM_MASK));
 657:Generated_Source\PSoC4/CyLFClk.c ****         }
 658:Generated_Source\PSoC4/CyLFClk.c ****         else
 659:Generated_Source\PSoC4/CyLFClk.c ****         {
 660:Generated_Source\PSoC4/CyLFClk.c ****             returnStatus = CYRET_UNKNOWN;
 661:Generated_Source\PSoC4/CyLFClk.c ****         }
 662:Generated_Source\PSoC4/CyLFClk.c **** 
 663:Generated_Source\PSoC4/CyLFClk.c ****         return (returnStatus);
 664:Generated_Source\PSoC4/CyLFClk.c **** }
 665:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
 666:Generated_Source\PSoC4/CyLFClk.c **** 
 667:Generated_Source\PSoC4/CyLFClk.c **** 
 668:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO && CY_IP_SRSSV2)
 669:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
 670:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkGetLfclkSource
 671:Generated_Source\PSoC4/CyLFClk.c **** ********************************************************************************
 672:Generated_Source\PSoC4/CyLFClk.c **** *
 673:Generated_Source\PSoC4/CyLFClk.c **** * \internal
 674:Generated_Source\PSoC4/CyLFClk.c **** *  Gets the clock source for the LFCLK clock.
 675:Generated_Source\PSoC4/CyLFClk.c **** *  The function is applicable only for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M /
 676:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4200M / PSoC 4200L.
 677:Generated_Source\PSoC4/CyLFClk.c **** *
 678:Generated_Source\PSoC4/CyLFClk.c **** * \return The LFCLK source:
 679:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_LFCLK_SRC_ILO Internal Low Frequency (32 kHz) Oscillator (ILO)
 680:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_LFCLK_SRC_WCO Low Frequency Watch Crystal Oscillator (WCO)
 681:Generated_Source\PSoC4/CyLFClk.c **** *
 682:Generated_Source\PSoC4/CyLFClk.c **** * \endinternal
 683:Generated_Source\PSoC4/CyLFClk.c **** *
 684:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 685:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetLfclkSource(void)
 686:Generated_Source\PSoC4/CyLFClk.c ****     {
 687:Generated_Source\PSoC4/CyLFClk.c ****         uint32 lfclkSource;
 688:Generated_Source\PSoC4/CyLFClk.c ****         lfclkSource = CY_SYS_WDT_CONFIG_REG & CY_SYS_CLK_LFCLK_SEL_MASK;
 689:Generated_Source\PSoC4/CyLFClk.c ****         return (lfclkSource);
 690:Generated_Source\PSoC4/CyLFClk.c ****     }
 691:Generated_Source\PSoC4/CyLFClk.c **** 
 692:Generated_Source\PSoC4/CyLFClk.c ****     
 693:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
 694:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkSetLfclkSource
 695:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
 696:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 697:Generated_Source\PSoC4/CyLFClk.c **** *  Sets the clock source for the LFCLK clock.
 698:Generated_Source\PSoC4/CyLFClk.c **** *
 699:Generated_Source\PSoC4/CyLFClk.c **** * The switch between LFCLK sources must be done between the positive edges of
 700:Generated_Source\PSoC4/CyLFClk.c **** * LFCLK, because the glitch risk is around the LFCLK positive edge. To ensure
 701:Generated_Source\PSoC4/CyLFClk.c **** * that the switch can be done safely, the WDT counter value is read until it
 702:Generated_Source\PSoC4/CyLFClk.c **** * changes.
 703:Generated_Source\PSoC4/CyLFClk.c **** *
 704:Generated_Source\PSoC4/CyLFClk.c **** * That means that the positive edge just finished and the switch is performed.
 705:Generated_Source\PSoC4/CyLFClk.c **** * The enabled WDT counter is used for that purpose. If no counters are enabled,
 706:Generated_Source\PSoC4/CyLFClk.c **** * counter 0 is enabled. And after the LFCLK source is switched, counter 0
 707:Generated_Source\PSoC4/CyLFClk.c **** * configuration is restored.
 708:Generated_Source\PSoC4/CyLFClk.c **** *
 709:Generated_Source\PSoC4/CyLFClk.c **** *  The function is applicable only for devices with more than one source for 
 710:Generated_Source\PSoC4/CyLFClk.c **** * LFCLK - PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 4100M / PSoC 4200M / 
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 20


 711:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4200L.
 712:Generated_Source\PSoC4/CyLFClk.c **** *
 713:Generated_Source\PSoC4/CyLFClk.c **** * \note For PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices LFCLK can
 714:Generated_Source\PSoC4/CyLFClk.c **** * only be sourced from ILO even though WCO is available.
 715:Generated_Source\PSoC4/CyLFClk.c **** *
 716:Generated_Source\PSoC4/CyLFClk.c **** * \param
 717:Generated_Source\PSoC4/CyLFClk.c **** * source
 718:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_LFCLK_SRC_ILO - Internal Low Frequency (32 kHz) 
 719:Generated_Source\PSoC4/CyLFClk.c **** * Oscillator (ILO).<br>
 720:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_LFCLK_SRC_WCO - Low Frequency Watch Crystal Oscillator (WCO).
 721:Generated_Source\PSoC4/CyLFClk.c **** *
 722:Generated_Source\PSoC4/CyLFClk.c **** * \details
 723:Generated_Source\PSoC4/CyLFClk.c **** * This function has no effect if WDT is locked (CySysWdtLock() is called). 
 724:Generated_Source\PSoC4/CyLFClk.c **** * Call CySysWdtUnlock() to unlock WDT.
 725:Generated_Source\PSoC4/CyLFClk.c **** *
 726:Generated_Source\PSoC4/CyLFClk.c **** * Both the current source and the new source must be running and stable before
 727:Generated_Source\PSoC4/CyLFClk.c **** * calling this function.
 728:Generated_Source\PSoC4/CyLFClk.c **** *
 729:Generated_Source\PSoC4/CyLFClk.c **** * Changing the LFCLK clock source may change the LFCLK clock frequency and
 730:Generated_Source\PSoC4/CyLFClk.c **** * affect the functionality that uses this clock. For example, watchdog timer
 731:Generated_Source\PSoC4/CyLFClk.c **** * "uses this clock" or "this clock uses" (WDT) is clocked by LFCLK.
 732:Generated_Source\PSoC4/CyLFClk.c **** *
 733:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 734:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkSetLfclkSource(uint32 source)
 735:Generated_Source\PSoC4/CyLFClk.c ****     {
 736:Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
 737:Generated_Source\PSoC4/CyLFClk.c **** 
 738:Generated_Source\PSoC4/CyLFClk.c ****         if (CySysClkGetLfclkSource() != source)
 739:Generated_Source\PSoC4/CyLFClk.c ****         {
 740:Generated_Source\PSoC4/CyLFClk.c ****             interruptState = CyEnterCriticalSection();
 741:Generated_Source\PSoC4/CyLFClk.c ****             CySysClkLfclkPosedgeCatch();
 742:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = (CY_SYS_WDT_CONFIG_REG & (uint32)(~CY_SYS_CLK_LFCLK_SEL_MASK)) 
 743:Generated_Source\PSoC4/CyLFClk.c ****                                     (source & CY_SYS_CLK_LFCLK_SEL_MASK);
 744:Generated_Source\PSoC4/CyLFClk.c ****             CySysClkLfclkPosedgeRestore();
 745:Generated_Source\PSoC4/CyLFClk.c ****             CyExitCriticalSection(interruptState);
 746:Generated_Source\PSoC4/CyLFClk.c ****         }
 747:Generated_Source\PSoC4/CyLFClk.c ****     }
 748:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_WCO && CY_IP_SRSSV2) */
 749:Generated_Source\PSoC4/CyLFClk.c **** 
 750:Generated_Source\PSoC4/CyLFClk.c **** 
 751:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO)
 752:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 753:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoStart
 754:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 755:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 756:Generated_Source\PSoC4/CyLFClk.c ****     *  Enables Watch Crystal Oscillator (WCO).
 757:Generated_Source\PSoC4/CyLFClk.c ****     * 
 758:Generated_Source\PSoC4/CyLFClk.c ****     * This API enables WCO which is used as a source for LFCLK. Similar to ILO, 
 759:Generated_Source\PSoC4/CyLFClk.c ****     * WCO is also available in all modes except Hibernate and Stop modes.
 760:Generated_Source\PSoC4/CyLFClk.c ****     * \note In PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices
 761:Generated_Source\PSoC4/CyLFClk.c ****     * WCO cannot be a source for the LFCLK. 
 762:Generated_Source\PSoC4/CyLFClk.c ****     *
 763:Generated_Source\PSoC4/CyLFClk.c ****     *  WCO is always enabled in High Power Mode (HPM). Refer to the device
 764:Generated_Source\PSoC4/CyLFClk.c ****     *  datasheet for the  WCO startup time. Once WCO becomes stable it can be
 765:Generated_Source\PSoC4/CyLFClk.c ****     *  switched to Low Power Mode (LPM). Note that oscillator can be unstable
 766:Generated_Source\PSoC4/CyLFClk.c ****     *  during a switch and hence its output should not be used at that moment.
 767:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 21


 768:Generated_Source\PSoC4/CyLFClk.c ****     *  The CySysClkWcoSetPowerMode() function configures the WCO power mode.
 769:Generated_Source\PSoC4/CyLFClk.c ****     *
 770:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 771:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkWcoStart(void)
 772:Generated_Source\PSoC4/CyLFClk.c ****     {
 773:Generated_Source\PSoC4/CyLFClk.c ****         CySysClkWcoSetHighPowerMode();
 774:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 775:Generated_Source\PSoC4/CyLFClk.c ****     }
 776:Generated_Source\PSoC4/CyLFClk.c **** 
 777:Generated_Source\PSoC4/CyLFClk.c **** 
 778:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 779:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoStop
 780:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 781:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 782:Generated_Source\PSoC4/CyLFClk.c ****     * Disables the 32 KHz Crystal Oscillator.
 783:Generated_Source\PSoC4/CyLFClk.c ****     *
 784:Generated_Source\PSoC4/CyLFClk.c ****     * API switch of WCO.
 785:Generated_Source\PSoC4/CyLFClk.c ****     * \note PSoC 4100S / PSoC Analog Coprocessor: WCO is required for DeepSleep 
 786:Generated_Source\PSoC4/CyLFClk.c ****     * Timer's operation.
 787:Generated_Source\PSoC4/CyLFClk.c ****     *
 788:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 789:Generated_Source\PSoC4/CyLFClk.c ****     void  CySysClkWcoStop(void)
 790:Generated_Source\PSoC4/CyLFClk.c ****     {
 791:Generated_Source\PSoC4/CyLFClk.c ****         #if (CY_IP_SRSSV2)
 792:Generated_Source\PSoC4/CyLFClk.c ****             uint8  interruptState;
 793:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_SRSSV2) */
 794:Generated_Source\PSoC4/CyLFClk.c **** 
 795:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysClkWcoEnabled())
 796:Generated_Source\PSoC4/CyLFClk.c ****         {
 797:Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_SRSSV2)
 798:Generated_Source\PSoC4/CyLFClk.c ****                 if (CY_SYS_CLK_LFCLK_SRC_WCO == CySysClkGetLfclkSource())
 799:Generated_Source\PSoC4/CyLFClk.c ****                 {
 800:Generated_Source\PSoC4/CyLFClk.c ****                     interruptState = CyEnterCriticalSection();
 801:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkLfclkPosedgeCatch();
 802:Generated_Source\PSoC4/CyLFClk.c ****                     CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 803:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkLfclkPosedgeRestore();
 804:Generated_Source\PSoC4/CyLFClk.c ****                     CyExitCriticalSection(interruptState);
 805:Generated_Source\PSoC4/CyLFClk.c ****                 }
 806:Generated_Source\PSoC4/CyLFClk.c ****                 else /* Safe to disable - shortened pulse does not impact peripheral */
 807:Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_SRSSV2) */
 808:Generated_Source\PSoC4/CyLFClk.c ****             {
 809:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 810:Generated_Source\PSoC4/CyLFClk.c ****             }
 811:Generated_Source\PSoC4/CyLFClk.c ****         } /* Otherwise do nothing. WCO configuration cannot be changed. */
 812:Generated_Source\PSoC4/CyLFClk.c ****     }
 813:Generated_Source\PSoC4/CyLFClk.c **** 
 814:Generated_Source\PSoC4/CyLFClk.c **** 
 815:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 816:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoEnabled
 817:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 818:Generated_Source\PSoC4/CyLFClk.c ****     * \internal Reports the WCO enable state.
 819:Generated_Source\PSoC4/CyLFClk.c ****     *
 820:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 if WCO is enabled
 821:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 if WCO is disabled.
 822:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 823:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 824:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysClkWcoEnabled(void)
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 22


 825:Generated_Source\PSoC4/CyLFClk.c ****     {
 826:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & (uint32)(CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE))) ?
 827:Generated_Source\PSoC4/CyLFClk.c ****                 (uint32) 1u :
 828:Generated_Source\PSoC4/CyLFClk.c ****                 (uint32) 0u);
 829:Generated_Source\PSoC4/CyLFClk.c ****     }
 830:Generated_Source\PSoC4/CyLFClk.c **** 
 831:Generated_Source\PSoC4/CyLFClk.c **** 
 832:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 833:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoSetPowerMode
 834:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 835:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 836:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the power mode for the 32 KHz WCO.
 837:Generated_Source\PSoC4/CyLFClk.c ****     *
 838:Generated_Source\PSoC4/CyLFClk.c ****     * By default (if this function is not called), the WCO is in High power mode 
 839:Generated_Source\PSoC4/CyLFClk.c ****     * during Active and device's low power modes
 840:Generated_Source\PSoC4/CyLFClk.c ****     *
 841:Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
 842:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_HPM - The High Power mode.<br>
 843:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_LPM - The Low Power mode.
 844:Generated_Source\PSoC4/CyLFClk.c ****     *
 845:Generated_Source\PSoC4/CyLFClk.c ****     * \return A previous power mode. The same as the parameters.
 846:Generated_Source\PSoC4/CyLFClk.c ****     *
 847:Generated_Source\PSoC4/CyLFClk.c ****     * \note
 848:Generated_Source\PSoC4/CyLFClk.c ****     * The WCO Low Power mode is applicable for PSoC 4100 BLE / PSoC 4200 BLE devices.
 849:Generated_Source\PSoC4/CyLFClk.c ****     *
 850:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 851:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysClkWcoSetPowerMode(uint32 mode)
 852:Generated_Source\PSoC4/CyLFClk.c ****     {
 853:Generated_Source\PSoC4/CyLFClk.c ****         uint32 powerModeStatus;
 854:Generated_Source\PSoC4/CyLFClk.c **** 
 855:Generated_Source\PSoC4/CyLFClk.c ****         powerModeStatus = CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_LPM_EN;
 856:Generated_Source\PSoC4/CyLFClk.c **** 
 857:Generated_Source\PSoC4/CyLFClk.c ****         switch(mode)
 858:Generated_Source\PSoC4/CyLFClk.c ****         {
 859:Generated_Source\PSoC4/CyLFClk.c ****         case CY_SYS_CLK_WCO_HPM:
 860:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkWcoSetHighPowerMode();
 861:Generated_Source\PSoC4/CyLFClk.c ****             break;
 862:Generated_Source\PSoC4/CyLFClk.c **** 
 863:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_PSOC4_4100BL || CY_PSOC4_4200BL)
 864:Generated_Source\PSoC4/CyLFClk.c ****             case CY_SYS_CLK_WCO_LPM:
 865:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkWcoSetLowPowerMode();
 866:Generated_Source\PSoC4/CyLFClk.c ****                 break;
 867:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_PSOC4_4100BL || CY_PSOC4_4200BL) */
 868:Generated_Source\PSoC4/CyLFClk.c **** 
 869:Generated_Source\PSoC4/CyLFClk.c ****         default:
 870:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
 871:Generated_Source\PSoC4/CyLFClk.c ****             break;
 872:Generated_Source\PSoC4/CyLFClk.c ****         }
 873:Generated_Source\PSoC4/CyLFClk.c **** 
 874:Generated_Source\PSoC4/CyLFClk.c ****         return (powerModeStatus);
 875:Generated_Source\PSoC4/CyLFClk.c ****     }
 876:Generated_Source\PSoC4/CyLFClk.c **** 
 877:Generated_Source\PSoC4/CyLFClk.c **** 
 878:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
 879:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkWcoClockOutSelect
 880:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
 881:Generated_Source\PSoC4/CyLFClk.c **** * \brief
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 23


 882:Generated_Source\PSoC4/CyLFClk.c **** * Selects the WCO block output source.
 883:Generated_Source\PSoC4/CyLFClk.c **** *
 884:Generated_Source\PSoC4/CyLFClk.c **** * In addition to generating 32.768 kHz clock from external crystals, WCO 
 885:Generated_Source\PSoC4/CyLFClk.c **** * can be sourced by external clock source using wco_out pin. The API help to
 886:Generated_Source\PSoC4/CyLFClk.c **** * lets you select between the sources: External crystal or external pin.
 887:Generated_Source\PSoC4/CyLFClk.c **** *
 888:Generated_Source\PSoC4/CyLFClk.c **** * If you want to use external pin to drive WCO the next procedure is required:
 889:Generated_Source\PSoC4/CyLFClk.c **** * <br> 1) Disable the WCO.
 890:Generated_Source\PSoC4/CyLFClk.c **** * <br> 2) Drive the wco_out pin to an external signal source.
 891:Generated_Source\PSoC4/CyLFClk.c **** * <br> 3) Call CySysClkWcoClockOutSelect(CY_SYS_CLK_WCO_SEL_PIN).
 892:Generated_Source\PSoC4/CyLFClk.c **** * <br> 4) Enable the WCO and wait for 15 us before clocking the XO pad at the high 
 893:Generated_Source\PSoC4/CyLFClk.c **** * potential. Let's assume you are using the 1.6v clock amplitude, then the
 894:Generated_Source\PSoC4/CyLFClk.c **** * sequence would start at 1.6v, then 0v, then 1.6v etc at a chosen frequency.
 895:Generated_Source\PSoC4/CyLFClk.c **** *
 896:Generated_Source\PSoC4/CyLFClk.c **** * If you want to use WCO after using an external pin source:
 897:Generated_Source\PSoC4/CyLFClk.c **** * <br> 1) Disable the WCO.
 898:Generated_Source\PSoC4/CyLFClk.c **** * <br> 2) Drive off wco_out pin with external signal source.
 899:Generated_Source\PSoC4/CyLFClk.c **** * <br> 3) Call CySysClkWcoClockOutSelect(CY_SYS_CLK_WCO_SEL_CRYSTAL).
 900:Generated_Source\PSoC4/CyLFClk.c **** * <br> 4) Enable the WCO.
 901:Generated_Source\PSoC4/CyLFClk.c **** *
 902:Generated_Source\PSoC4/CyLFClk.c **** * \warning 
 903:Generated_Source\PSoC4/CyLFClk.c **** * Do not use the oscillator output clock prior to a 15uS delay in your system.
 904:Generated_Source\PSoC4/CyLFClk.c **** * There are no limitations on the external clock frequency.
 905:Generated_Source\PSoC4/CyLFClk.c **** * \warning 
 906:Generated_Source\PSoC4/CyLFClk.c **** * When external clock source was selected to drive WCO block the IMO can be 
 907:Generated_Source\PSoC4/CyLFClk.c **** * trimmed only when external clock source period is equal to WCO external
 908:Generated_Source\PSoC4/CyLFClk.c **** * crystal period. Also external clock source accuracy should be higher 
 909:Generated_Source\PSoC4/CyLFClk.c **** * or equal to WCO external crystal accuracy.
 910:Generated_Source\PSoC4/CyLFClk.c **** *
 911:Generated_Source\PSoC4/CyLFClk.c **** * \param clockSel
 912:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_WCO_SEL_CRYSTAL - Selects External crystal as clock 
 913:Generated_Source\PSoC4/CyLFClk.c **** * source of WCO.<br>
 914:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_WCO_SEL_PIN - Selects External clock input on wco_in pin as 
 915:Generated_Source\PSoC4/CyLFClk.c **** * clock source of WCO.
 916:Generated_Source\PSoC4/CyLFClk.c **** *
 917:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 918:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkWcoClockOutSelect(uint32 clockSel)
 919:Generated_Source\PSoC4/CyLFClk.c ****     {
 920:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysClkWcoEnabled())
 921:Generated_Source\PSoC4/CyLFClk.c ****         {
 922:Generated_Source\PSoC4/CyLFClk.c ****             if (1u >= clockSel)
 923:Generated_Source\PSoC4/CyLFClk.c ****             {
 924:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_WCO_CONFIG_REG = (CY_SYS_CLK_WCO_CONFIG_REG & (uint32)(~CY_SYS_CLK_WCO_S
 925:Generated_Source\PSoC4/CyLFClk.c ****                                         (clockSel << CY_SYS_CLK_WCO_SELECT_PIN_OFFSET);
 926:Generated_Source\PSoC4/CyLFClk.c ****             }
 927:Generated_Source\PSoC4/CyLFClk.c ****             else
 928:Generated_Source\PSoC4/CyLFClk.c ****             {
 929:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
 930:Generated_Source\PSoC4/CyLFClk.c ****             }
 931:Generated_Source\PSoC4/CyLFClk.c ****         }
 932:Generated_Source\PSoC4/CyLFClk.c ****     }
 933:Generated_Source\PSoC4/CyLFClk.c **** #endif  /* (CY_IP_WCO) */
 934:Generated_Source\PSoC4/CyLFClk.c **** 
 935:Generated_Source\PSoC4/CyLFClk.c **** 
 936:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
 937:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 938:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtLock
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 24


 939:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 940:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 941:Generated_Source\PSoC4/CyLFClk.c ****     * Locks out configuration changes to the Watchdog timer registers and ILO
 942:Generated_Source\PSoC4/CyLFClk.c ****     * configuration register.
 943:Generated_Source\PSoC4/CyLFClk.c ****     *
 944:Generated_Source\PSoC4/CyLFClk.c ****     * After this function is called, ILO clock can't be disabled until
 945:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtUnlock() is called.
 946:Generated_Source\PSoC4/CyLFClk.c ****     *
 947:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 948:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtLock(void)
 949:Generated_Source\PSoC4/CyLFClk.c ****     {
 329              		.loc 1 949 0
 330              		.cfi_startproc
 331 0000 08B5     		push	{r3, lr}
 332              		.cfi_def_cfa_offset 8
 333              		.cfi_offset 3, -8
 334              		.cfi_offset 14, -4
 950:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
 951:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
 335              		.loc 1 951 0
 336 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 337              	.LVL21:
 952:Generated_Source\PSoC4/CyLFClk.c **** 
 953:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = (CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK)) 
 338              		.loc 1 953 0
 339 0006 C021     		mov	r1, #192
 340 0008 034A     		ldr	r2, .L28
 341 000a 0902     		lsl	r1, r1, #8
 342 000c 1368     		ldr	r3, [r2]
 954:Generated_Source\PSoC4/CyLFClk.c ****                  CY_SYS_WDT_CLK_LOCK_BITS_MASK;
 955:Generated_Source\PSoC4/CyLFClk.c **** 
 956:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
 957:Generated_Source\PSoC4/CyLFClk.c ****     }
 343              		.loc 1 957 0
 344              		@ sp needed
 953:Generated_Source\PSoC4/CyLFClk.c ****                  CY_SYS_WDT_CLK_LOCK_BITS_MASK;
 345              		.loc 1 953 0
 346 000e 0B43     		orr	r3, r1
 347 0010 1360     		str	r3, [r2]
 956:Generated_Source\PSoC4/CyLFClk.c ****     }
 348              		.loc 1 956 0
 349 0012 FFF7FEFF 		bl	CyExitCriticalSection
 350              	.LVL22:
 351              		.loc 1 957 0
 352 0016 08BD     		pop	{r3, pc}
 353              	.L29:
 354              		.align	2
 355              	.L28:
 356 0018 00010B40 		.word	1074462976
 357              		.cfi_endproc
 358              	.LFE6:
 359              		.size	CySysWdtLock, .-CySysWdtLock
 360              		.section	.text.CySysWdtUnlock,"ax",%progbits
 361              		.align	2
 362              		.global	CySysWdtUnlock
 363              		.code	16
 364              		.thumb_func
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 25


 365              		.type	CySysWdtUnlock, %function
 366              	CySysWdtUnlock:
 367              	.LFB8:
 958:Generated_Source\PSoC4/CyLFClk.c **** 
 959:Generated_Source\PSoC4/CyLFClk.c **** 
 960:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 961:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtLocked
 962:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 963:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
 964:Generated_Source\PSoC4/CyLFClk.c ****     * Reports the WDT lock state.
 965:Generated_Source\PSoC4/CyLFClk.c ****     *
 966:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - WDT is locked, and 0 - WDT is unlocked.
 967:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 968:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 969:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysWdtLocked(void)
 970:Generated_Source\PSoC4/CyLFClk.c ****     {
 971:Generated_Source\PSoC4/CyLFClk.c ****         /* Prohibits writing to WDT registers and ILO/WCO registers when not equal 0 */
 972:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_SELECT_REG & (uint32)(CY_SYS_WDT_CLK_LOCK_BITS_MASK))) ? (uint32
 973:Generated_Source\PSoC4/CyLFClk.c ****     }
 974:Generated_Source\PSoC4/CyLFClk.c **** 
 975:Generated_Source\PSoC4/CyLFClk.c **** 
 976:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 977:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtUnlock
 978:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 979:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 980:Generated_Source\PSoC4/CyLFClk.c ****     *  Unlocks the Watchdog Timer configuration register.
 981:Generated_Source\PSoC4/CyLFClk.c ****     *
 982:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 983:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtUnlock(void)
 984:Generated_Source\PSoC4/CyLFClk.c ****     {
 368              		.loc 1 984 0
 369              		.cfi_startproc
 370 0000 10B5     		push	{r4, lr}
 371              		.cfi_def_cfa_offset 8
 372              		.cfi_offset 4, -8
 373              		.cfi_offset 14, -4
 985:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
 986:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
 987:Generated_Source\PSoC4/CyLFClk.c **** 
 988:Generated_Source\PSoC4/CyLFClk.c ****         /* Removing WDT lock requires two writes */
 989:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK))
 374              		.loc 1 989 0
 375 0002 8024     		mov	r4, #128
 986:Generated_Source\PSoC4/CyLFClk.c **** 
 376              		.loc 1 986 0
 377 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 378              	.LVL23:
 379              		.loc 1 989 0
 380 0008 0749     		ldr	r1, .L31
 381 000a 084B     		ldr	r3, .L31+4
 382 000c 0A68     		ldr	r2, [r1]
 383 000e E401     		lsl	r4, r4, #7
 384 0010 1A40     		and	r2, r3
 385 0012 2243     		orr	r2, r4
 386 0014 0A60     		str	r2, [r1]
 990:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_WDT_CLK_LOCK_BIT0);
 991:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 26


 992:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK))
 387              		.loc 1 992 0
 388 0016 0A68     		ldr	r2, [r1]
 993:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_WDT_CLK_LOCK_BIT1);
 994:Generated_Source\PSoC4/CyLFClk.c **** 
 995:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
 996:Generated_Source\PSoC4/CyLFClk.c ****     }
 389              		.loc 1 996 0
 390              		@ sp needed
 992:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_WDT_CLK_LOCK_BIT1);
 391              		.loc 1 992 0
 392 0018 1340     		and	r3, r2
 393 001a 8022     		mov	r2, #128
 394 001c 1202     		lsl	r2, r2, #8
 395 001e 1343     		orr	r3, r2
 396 0020 0B60     		str	r3, [r1]
 995:Generated_Source\PSoC4/CyLFClk.c ****     }
 397              		.loc 1 995 0
 398 0022 FFF7FEFF 		bl	CyExitCriticalSection
 399              	.LVL24:
 400              		.loc 1 996 0
 401 0026 10BD     		pop	{r4, pc}
 402              	.L32:
 403              		.align	2
 404              	.L31:
 405 0028 00010B40 		.word	1074462976
 406 002c FF3FFFFF 		.word	-49153
 407              		.cfi_endproc
 408              	.LFE8:
 409              		.size	CySysWdtUnlock, .-CySysWdtUnlock
 410              		.section	.text.CySysWdtGetEnabledStatus,"ax",%progbits
 411              		.align	2
 412              		.global	CySysWdtGetEnabledStatus
 413              		.code	16
 414              		.thumb_func
 415              		.type	CySysWdtGetEnabledStatus, %function
 416              	CySysWdtGetEnabledStatus:
 417              	.LFB9:
 997:Generated_Source\PSoC4/CyLFClk.c **** 
 998:Generated_Source\PSoC4/CyLFClk.c **** 
 999:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1000:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetEnabledStatus
1001:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1002:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1003:Generated_Source\PSoC4/CyLFClk.c ****     *  Reads the enabled status of one of the three WDT counters.
1004:Generated_Source\PSoC4/CyLFClk.c ****     *
1005:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2].  The number of the WDT counter.
1006:Generated_Source\PSoC4/CyLFClk.c ****     *
1007:Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the WDT counter:
1008:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - If the counter is disabled.
1009:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - If the counter is enabled.
1010:Generated_Source\PSoC4/CyLFClk.c ****     *
1011:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1012:Generated_Source\PSoC4/CyLFClk.c ****     * This function returns an actual WDT counter status from the status register. It may
1013:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles for the WDT status register to contain actual data
1014:Generated_Source\PSoC4/CyLFClk.c ****     * after the WDT counter is enabled.
1015:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 27


1016:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1017:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetEnabledStatus(uint32 counterNum)
1018:Generated_Source\PSoC4/CyLFClk.c ****     {
 418              		.loc 1 1018 0
 419              		.cfi_startproc
 420              	.LVL25:
 421 0000 10B5     		push	{r4, lr}
 422              		.cfi_def_cfa_offset 8
 423              		.cfi_offset 4, -8
 424              		.cfi_offset 14, -4
 425              		.loc 1 1018 0
 426 0002 041E     		sub	r4, r0, #0
1019:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_WDT_COUNTERS_MAX);
 427              		.loc 1 1019 0
 428 0004 022C     		cmp	r4, #2
 429 0006 02D9     		bls	.L34
 430              		.loc 1 1019 0 is_stmt 0 discriminator 1
 431 0008 0020     		mov	r0, #0
 432              	.LVL26:
 433 000a FFF7FEFF 		bl	CyHalt
 434              	.LVL27:
 435              	.L34:
1020:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONTROL_REG >> ((CY_SYS_WDT_CNT_SHIFT * counterNum) + CY_SYS_WDT_CNT_ST
 436              		.loc 1 1020 0 is_stmt 1
 437 000e 044B     		ldr	r3, .L35
 438 0010 E400     		lsl	r4, r4, #3
 439              	.LVL28:
 440 0012 1868     		ldr	r0, [r3]
 441 0014 0134     		add	r4, r4, #1
 442 0016 E040     		lsr	r0, r0, r4
 443 0018 041C     		mov	r4, r0
 444 001a 0120     		mov	r0, #1
1021:Generated_Source\PSoC4/CyLFClk.c ****     }
 445              		.loc 1 1021 0
 446              		@ sp needed
1020:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONTROL_REG >> ((CY_SYS_WDT_CNT_SHIFT * counterNum) + CY_SYS_WDT_CNT_ST
 447              		.loc 1 1020 0
 448 001c 2040     		and	r0, r4
 449              		.loc 1 1021 0
 450 001e 10BD     		pop	{r4, pc}
 451              	.L36:
 452              		.align	2
 453              	.L35:
 454 0020 10020B40 		.word	1074463248
 455              		.cfi_endproc
 456              	.LFE9:
 457              		.size	CySysWdtGetEnabledStatus, .-CySysWdtGetEnabledStatus
 458              		.section	.text.CySysWdtSetMode,"ax",%progbits
 459              		.align	2
 460              		.global	CySysWdtSetMode
 461              		.code	16
 462              		.thumb_func
 463              		.type	CySysWdtSetMode, %function
 464              	CySysWdtSetMode:
 465              	.LFB10:
1022:Generated_Source\PSoC4/CyLFClk.c **** 
1023:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 28


1024:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1025:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMode
1026:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1027:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1028:Generated_Source\PSoC4/CyLFClk.c ****     * Writes the mode of one of the three WDT counters.
1029:Generated_Source\PSoC4/CyLFClk.c ****     *
1030:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2].  The number of the WDT counter.
1031:Generated_Source\PSoC4/CyLFClk.c ****     *
1032:Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
1033:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_WDT_MODE_NONE - Free running.<br>
1034:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_INT - The interrupt generated on match for counter 0
1035:Generated_Source\PSoC4/CyLFClk.c ****     * and 1, and on bit toggle for counter 2.<br>
1036:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_RESET - Reset on match (valid for counter 0 and 1 only).<br>
1037:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_INT_RESET - Generate an interrupt.  Generate a reset on
1038:Generated_Source\PSoC4/CyLFClk.c ****     * the 3rd non-handled interrupt (valid for counter 0 and counter 1 only).
1039:Generated_Source\PSoC4/CyLFClk.c ****     *
1040:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1041:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter counterNum should be disabled to set a mode. Otherwise, this
1042:Generated_Source\PSoC4/CyLFClk.c ****     * function call has no effect. If the specified counter is enabled,
1043:Generated_Source\PSoC4/CyLFClk.c ****     * call the CySysWdtDisable() function with the corresponding parameter to
1044:Generated_Source\PSoC4/CyLFClk.c ****     * disable the specified counter and wait for it to stop.
1045:Generated_Source\PSoC4/CyLFClk.c ****     *
1046:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1047:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMode(uint32 counterNum, uint32 mode)
1048:Generated_Source\PSoC4/CyLFClk.c ****     {
 466              		.loc 1 1048 0
 467              		.cfi_startproc
 468              	.LVL29:
 469 0000 38B5     		push	{r3, r4, r5, lr}
 470              		.cfi_def_cfa_offset 16
 471              		.cfi_offset 3, -16
 472              		.cfi_offset 4, -12
 473              		.cfi_offset 5, -8
 474              		.cfi_offset 14, -4
 475              		.loc 1 1048 0
 476 0002 041C     		mov	r4, r0
 477 0004 0D1C     		mov	r5, r1
1049:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1050:Generated_Source\PSoC4/CyLFClk.c **** 
1051:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_WDT_COUNTERS_MAX);
 478              		.loc 1 1051 0
 479 0006 0228     		cmp	r0, #2
 480 0008 11D8     		bhi	.L40
 481              	.LVL30:
 482              	.L38:
1052:Generated_Source\PSoC4/CyLFClk.c **** 
1053:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysWdtGetEnabledStatus(counterNum))
 483              		.loc 1 1053 0
 484 000a 201C     		mov	r0, r4
 485 000c FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 486              	.LVL31:
 487 0010 0028     		cmp	r0, #0
 488 0012 0BD1     		bne	.L37
 489              	.LVL32:
 490              	.LBB30:
 491              	.LBB31:
1054:Generated_Source\PSoC4/CyLFClk.c ****         {
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 29


1055:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG &
1056:Generated_Source\PSoC4/CyLFClk.c ****                                 (uint32)~((uint32)(CY_SYS_WDT_MODE_MASK << (counterNum * CY_SYS_WDT
 492              		.loc 1 1056 0
 493 0014 0321     		mov	r1, #3
 494 0016 E400     		lsl	r4, r4, #3
 495              	.LVL33:
 496 0018 081C     		mov	r0, r1
1057:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= (uint32)((mode & CY_SYS_WDT_MODE_MASK) << (counterNum * CY_SYS_WDT_CN
 497              		.loc 1 1057 0
 498 001a 0D40     		and	r5, r1
 499              	.LVL34:
 500 001c A540     		lsl	r5, r5, r4
1056:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= (uint32)((mode & CY_SYS_WDT_MODE_MASK) << (counterNum * CY_SYS_WDT_CN
 501              		.loc 1 1056 0
 502 001e A040     		lsl	r0, r0, r4
 503              		.loc 1 1057 0
 504 0020 2C1C     		mov	r4, r5
1055:Generated_Source\PSoC4/CyLFClk.c ****                                 (uint32)~((uint32)(CY_SYS_WDT_MODE_MASK << (counterNum * CY_SYS_WDT
 505              		.loc 1 1055 0
 506 0022 054A     		ldr	r2, .L41
 507 0024 1368     		ldr	r3, [r2]
 508 0026 8343     		bic	r3, r0
 509              	.LVL35:
 510              		.loc 1 1057 0
 511 0028 1C43     		orr	r4, r3
 512              	.LVL36:
1058:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
 513              		.loc 1 1058 0
 514 002a 1460     		str	r4, [r2]
 515              	.LVL37:
 516              	.L37:
 517              	.LBE31:
 518              	.LBE30:
1059:Generated_Source\PSoC4/CyLFClk.c ****         }
1060:Generated_Source\PSoC4/CyLFClk.c ****     }
 519              		.loc 1 1060 0
 520              		@ sp needed
 521 002c 38BD     		pop	{r3, r4, r5, pc}
 522              	.LVL38:
 523              	.L40:
1051:Generated_Source\PSoC4/CyLFClk.c **** 
 524              		.loc 1 1051 0 discriminator 1
 525 002e 0020     		mov	r0, #0
 526              	.LVL39:
 527 0030 FFF7FEFF 		bl	CyHalt
 528              	.LVL40:
 529 0034 E9E7     		b	.L38
 530              	.L42:
 531 0036 C046     		.align	2
 532              	.L41:
 533 0038 0C020B40 		.word	1074463244
 534              		.cfi_endproc
 535              	.LFE10:
 536              		.size	CySysWdtSetMode, .-CySysWdtSetMode
 537              		.section	.text.CySysWdtGetMode,"ax",%progbits
 538              		.align	2
 539              		.global	CySysWdtGetMode
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 30


 540              		.code	16
 541              		.thumb_func
 542              		.type	CySysWdtGetMode, %function
 543              	CySysWdtGetMode:
 544              	.LFB11:
1061:Generated_Source\PSoC4/CyLFClk.c **** 
1062:Generated_Source\PSoC4/CyLFClk.c **** 
1063:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1064:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMode
1065:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1066:Generated_Source\PSoC4/CyLFClk.c ****     * 
1067:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the mode of one of the three WDT counters.
1068:Generated_Source\PSoC4/CyLFClk.c ****     *
1069:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1070:Generated_Source\PSoC4/CyLFClk.c ****     *
1071:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mode of the counter. The same enumerated values as the mode 
1072:Generated_Source\PSoC4/CyLFClk.c ****     * parameter used in CySysWdtSetMode().
1073:Generated_Source\PSoC4/CyLFClk.c ****     *
1074:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1075:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMode(uint32 counterNum)
1076:Generated_Source\PSoC4/CyLFClk.c ****     {
 545              		.loc 1 1076 0
 546              		.cfi_startproc
 547              	.LVL41:
1077:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONFIG_REG >> (counterNum * CY_SYS_WDT_CNT_SHIFT)) & CY_SYS_WDT_MODE_MA
 548              		.loc 1 1077 0
 549 0000 034B     		ldr	r3, .L44
 550 0002 C000     		lsl	r0, r0, #3
 551              	.LVL42:
 552 0004 1B68     		ldr	r3, [r3]
1078:Generated_Source\PSoC4/CyLFClk.c ****     }
 553              		.loc 1 1078 0
 554              		@ sp needed
1077:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONFIG_REG >> (counterNum * CY_SYS_WDT_CNT_SHIFT)) & CY_SYS_WDT_MODE_MA
 555              		.loc 1 1077 0
 556 0006 C340     		lsr	r3, r3, r0
 557 0008 181C     		mov	r0, r3
 558 000a 0323     		mov	r3, #3
 559 000c 1840     		and	r0, r3
 560              		.loc 1 1078 0
 561 000e 7047     		bx	lr
 562              	.L45:
 563              		.align	2
 564              	.L44:
 565 0010 0C020B40 		.word	1074463244
 566              		.cfi_endproc
 567              	.LFE11:
 568              		.size	CySysWdtGetMode, .-CySysWdtGetMode
 569              		.section	.text.CySysWdtSetClearOnMatch,"ax",%progbits
 570              		.align	2
 571              		.global	CySysWdtSetClearOnMatch
 572              		.code	16
 573              		.thumb_func
 574              		.type	CySysWdtSetClearOnMatch, %function
 575              	CySysWdtSetClearOnMatch:
 576              	.LFB12:
1079:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 31


1080:Generated_Source\PSoC4/CyLFClk.c **** 
1081:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1082:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetClearOnMatch
1083:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1084:Generated_Source\PSoC4/CyLFClk.c ****     * 
1085:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter "clear on match" setting.
1086:Generated_Source\PSoC4/CyLFClk.c ****     *
1087:Generated_Source\PSoC4/CyLFClk.c ****     * If configured to "clear on match", the counter counts from 0 to MatchValue
1088:Generated_Source\PSoC4/CyLFClk.c ****     * giving it a period of (MatchValue + 1).
1089:Generated_Source\PSoC4/CyLFClk.c ****     *
1090:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1091:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the WDT counter. The match values are not
1092:Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
1093:Generated_Source\PSoC4/CyLFClk.c ****     *
1094:Generated_Source\PSoC4/CyLFClk.c ****     * \param enable 0 to disable appropriate counter <br>
1095:Generated_Source\PSoC4/CyLFClk.c ****     *  1 to enable appropriate counter
1096:Generated_Source\PSoC4/CyLFClk.c ****     *
1097:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1098:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter counterNum should be disabled. Otherwise this function call
1099:Generated_Source\PSoC4/CyLFClk.c ****     * has no effect. If the specified counter is enabled, call the CySysWdtDisable()
1100:Generated_Source\PSoC4/CyLFClk.c ****     * function with the corresponding parameter to disable the specified counter and
1101:Generated_Source\PSoC4/CyLFClk.c ****     * wait for it to stop. This may take up to three LFCLK cycles.
1102:Generated_Source\PSoC4/CyLFClk.c ****     *
1103:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1104:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetClearOnMatch(uint32 counterNum, uint32 enable)
1105:Generated_Source\PSoC4/CyLFClk.c ****     {
 577              		.loc 1 1105 0
 578              		.cfi_startproc
 579              	.LVL43:
 580 0000 38B5     		push	{r3, r4, r5, lr}
 581              		.cfi_def_cfa_offset 16
 582              		.cfi_offset 3, -16
 583              		.cfi_offset 4, -12
 584              		.cfi_offset 5, -8
 585              		.cfi_offset 14, -4
 586              		.loc 1 1105 0
 587 0002 041C     		mov	r4, r0
 588 0004 0D1C     		mov	r5, r1
1106:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1107:Generated_Source\PSoC4/CyLFClk.c **** 
1108:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
 589              		.loc 1 1108 0
 590 0006 0128     		cmp	r0, #1
 591 0008 02D9     		bls	.L47
 592              		.loc 1 1108 0 is_stmt 0 discriminator 1
 593 000a 0020     		mov	r0, #0
 594              	.LVL44:
 595 000c FFF7FEFF 		bl	CyHalt
 596              	.LVL45:
 597              	.L47:
1109:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1110:Generated_Source\PSoC4/CyLFClk.c **** 
1111:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysWdtGetEnabledStatus(counterNum))
 598              		.loc 1 1111 0 is_stmt 1
 599 0010 201C     		mov	r0, r4
 600 0012 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 601              	.LVL46:
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 32


 602 0016 0028     		cmp	r0, #0
 603 0018 0AD1     		bne	.L46
1112:Generated_Source\PSoC4/CyLFClk.c ****         {
1113:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG & (uint32)~((uint32)((uint32)1u << 
1114:Generated_Source\PSoC4/CyLFClk.c ****                                      ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CL
 604              		.loc 1 1114 0
 605 001a E400     		lsl	r4, r4, #3
 606              	.LVL47:
 607 001c 0234     		add	r4, r4, #2
1113:Generated_Source\PSoC4/CyLFClk.c ****                                      ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CL
 608              		.loc 1 1113 0
 609 001e 0122     		mov	r2, #1
1115:Generated_Source\PSoC4/CyLFClk.c **** 
1116:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue
1117:Generated_Source\PSoC4/CyLFClk.c ****                 |= (uint32)(enable << ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_C
 610              		.loc 1 1117 0
 611 0020 A540     		lsl	r5, r5, r4
 612              	.LVL48:
1113:Generated_Source\PSoC4/CyLFClk.c ****                                      ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CL
 613              		.loc 1 1113 0
 614 0022 A240     		lsl	r2, r2, r4
 615              		.loc 1 1117 0
 616 0024 2C1C     		mov	r4, r5
1113:Generated_Source\PSoC4/CyLFClk.c ****                                      ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CL
 617              		.loc 1 1113 0
 618 0026 0349     		ldr	r1, .L49
 619 0028 0B68     		ldr	r3, [r1]
 620 002a 9343     		bic	r3, r2
 621              	.LVL49:
 622              		.loc 1 1117 0
 623 002c 1C43     		orr	r4, r3
 624              	.LVL50:
1118:Generated_Source\PSoC4/CyLFClk.c **** 
1119:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
 625              		.loc 1 1119 0
 626 002e 0C60     		str	r4, [r1]
 627              	.LVL51:
 628              	.L46:
1120:Generated_Source\PSoC4/CyLFClk.c ****         }
1121:Generated_Source\PSoC4/CyLFClk.c ****     }
 629              		.loc 1 1121 0
 630              		@ sp needed
 631 0030 38BD     		pop	{r3, r4, r5, pc}
 632              	.L50:
 633 0032 C046     		.align	2
 634              	.L49:
 635 0034 0C020B40 		.word	1074463244
 636              		.cfi_endproc
 637              	.LFE12:
 638              		.size	CySysWdtSetClearOnMatch, .-CySysWdtSetClearOnMatch
 639              		.section	.text.CySysWdtGetClearOnMatch,"ax",%progbits
 640              		.align	2
 641              		.global	CySysWdtGetClearOnMatch
 642              		.code	16
 643              		.thumb_func
 644              		.type	CySysWdtGetClearOnMatch, %function
 645              	CySysWdtGetClearOnMatch:
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 33


 646              	.LFB13:
1122:Generated_Source\PSoC4/CyLFClk.c **** 
1123:Generated_Source\PSoC4/CyLFClk.c **** 
1124:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1125:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetClearOnMatch
1126:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1127:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1128:Generated_Source\PSoC4/CyLFClk.c ****     * Reads the "clear on match" setting for the specified counter.
1129:Generated_Source\PSoC4/CyLFClk.c ****     *
1130:Generated_Source\PSoC4/CyLFClk.c ****     * \param
1131:Generated_Source\PSoC4/CyLFClk.c ****     * counterNum Valid range [0-1]. The number of the WDT counter. The match values
1132:Generated_Source\PSoC4/CyLFClk.c ****     * are not supported by counter 2.
1133:Generated_Source\PSoC4/CyLFClk.c ****     *
1134:Generated_Source\PSoC4/CyLFClk.c ****     * \return The "clear on match" status: <br>1 if enabled <br>0 if disabled
1135:Generated_Source\PSoC4/CyLFClk.c ****     *
1136:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1137:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetClearOnMatch(uint32 counterNum)
1138:Generated_Source\PSoC4/CyLFClk.c ****     {
 647              		.loc 1 1138 0
 648              		.cfi_startproc
 649              	.LVL52:
 650 0000 10B5     		push	{r4, lr}
 651              		.cfi_def_cfa_offset 8
 652              		.cfi_offset 4, -8
 653              		.cfi_offset 14, -4
 654              		.loc 1 1138 0
 655 0002 041E     		sub	r4, r0, #0
1139:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
 656              		.loc 1 1139 0
 657 0004 012C     		cmp	r4, #1
 658 0006 02D9     		bls	.L52
 659              		.loc 1 1139 0 is_stmt 0 discriminator 1
 660 0008 0020     		mov	r0, #0
 661              	.LVL53:
 662 000a FFF7FEFF 		bl	CyHalt
 663              	.LVL54:
 664              	.L52:
1140:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1141:Generated_Source\PSoC4/CyLFClk.c **** 
1142:Generated_Source\PSoC4/CyLFClk.c ****         return (uint32)((CY_SYS_WDT_CONFIG_REG >>
 665              		.loc 1 1142 0 is_stmt 1
 666 000e 044B     		ldr	r3, .L53
1143:Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CLR_SHIFT)) & 0
 667              		.loc 1 1143 0
 668 0010 E400     		lsl	r4, r4, #3
 669              	.LVL55:
1142:Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CLR_SHIFT)) & 0
 670              		.loc 1 1142 0
 671 0012 1868     		ldr	r0, [r3]
 672              		.loc 1 1143 0
 673 0014 0234     		add	r4, r4, #2
1142:Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CLR_SHIFT)) & 0
 674              		.loc 1 1142 0
 675 0016 E040     		lsr	r0, r0, r4
 676 0018 041C     		mov	r4, r0
 677 001a 0120     		mov	r0, #1
1144:Generated_Source\PSoC4/CyLFClk.c ****     }
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 34


 678              		.loc 1 1144 0
 679              		@ sp needed
1142:Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CLR_SHIFT)) & 0
 680              		.loc 1 1142 0
 681 001c 2040     		and	r0, r4
 682              		.loc 1 1144 0
 683 001e 10BD     		pop	{r4, pc}
 684              	.L54:
 685              		.align	2
 686              	.L53:
 687 0020 0C020B40 		.word	1074463244
 688              		.cfi_endproc
 689              	.LFE13:
 690              		.size	CySysWdtGetClearOnMatch, .-CySysWdtGetClearOnMatch
 691              		.section	.text.CySysWdtEnable,"ax",%progbits
 692              		.align	2
 693              		.global	CySysWdtEnable
 694              		.code	16
 695              		.thumb_func
 696              		.type	CySysWdtEnable, %function
 697              	CySysWdtEnable:
 698              	.LFB14:
1145:Generated_Source\PSoC4/CyLFClk.c **** 
1146:Generated_Source\PSoC4/CyLFClk.c **** 
1147:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1148:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnable
1149:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1150:Generated_Source\PSoC4/CyLFClk.c ****     *
1151:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Enables the specified WDT counters.
1152:Generated_Source\PSoC4/CyLFClk.c ****     *
1153:Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are enabled.
1154:Generated_Source\PSoC4/CyLFClk.c ****     *
1155:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1156:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_WDT_COUNTER0_MASK - The mask for counter 0 to enable.<br>
1157:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_MASK - The mask for counter 1 to enable.<br>
1158:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_MASK - The mask for counter 2 to enable.
1159:Generated_Source\PSoC4/CyLFClk.c ****     *
1160:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1161:Generated_Source\PSoC4/CyLFClk.c ****     * Enabling or disabling WDT requires 3 LFCLK cycles to come into effect.
1162:Generated_Source\PSoC4/CyLFClk.c ****     * Therefore, the WDT enable state must not be changed more than once in
1163:Generated_Source\PSoC4/CyLFClk.c ****     * that period.
1164:Generated_Source\PSoC4/CyLFClk.c ****     *
1165:Generated_Source\PSoC4/CyLFClk.c ****     * After WDT is enabled, it is illegal to write WDT configuration (WDT_CONFIG)
1166:Generated_Source\PSoC4/CyLFClk.c ****     * and control (WDT_CONTROL) registers. This means that all WDT functions that
1167:Generated_Source\PSoC4/CyLFClk.c ****     * contain 'write' in the name (with the exception of CySysWdtSetMatch()
1168:Generated_Source\PSoC4/CyLFClk.c ****     * function) are illegal to call if WDT is enabled.
1169:Generated_Source\PSoC4/CyLFClk.c ****     *
1170:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4100 / PSoC 4200: This function enables ILO.
1171:Generated_Source\PSoC4/CyLFClk.c ****     *
1172:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4100 BLE / PSoC 4200 BLE / PSoC4200L / PSoC 4100M 
1173:Generated_Source\PSoC4/CyLFClk.c ****     * / PSoC 4200M:
1174:Generated_Source\PSoC4/CyLFClk.c ****     * LFLCK should be configured before calling this function. The desired
1175:Generated_Source\PSoC4/CyLFClk.c ****     * source should be enabled and configured to be the source for LFCLK.
1176:Generated_Source\PSoC4/CyLFClk.c ****     *
1177:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1178:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnable(uint32 counterMask)
1179:Generated_Source\PSoC4/CyLFClk.c ****     {
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 35


 699              		.loc 1 1179 0
 700              		.cfi_startproc
 701              	.LVL56:
 702              	.LBB44:
 703              	.LBB45:
  85:Generated_Source\PSoC4/CyLFClk.c **** }
 704              		.loc 1 85 0
 705 0000 8021     		mov	r1, #128
 706 0002 104A     		ldr	r2, .L80
 707 0004 0906     		lsl	r1, r1, #24
 708 0006 1368     		ldr	r3, [r2]
 709 0008 0B43     		orr	r3, r1
 710 000a 1360     		str	r3, [r2]
 711              	.LBE45:
 712              	.LBE44:
1180:Generated_Source\PSoC4/CyLFClk.c ****         #if (!CY_IP_WCO)
1181:Generated_Source\PSoC4/CyLFClk.c ****             CySysClkIloStart();
1182:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (!CY_IP_WCO) */
1183:Generated_Source\PSoC4/CyLFClk.c **** 
1184:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG |= counterMask;
 713              		.loc 1 1184 0
 714 000c 0E4A     		ldr	r2, .L80+4
 715 000e 1368     		ldr	r3, [r2]
 716 0010 0343     		orr	r3, r0
 717 0012 1360     		str	r3, [r2]
1185:Generated_Source\PSoC4/CyLFClk.c **** 
1186:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER0_MASK))
 718              		.loc 1 1186 0
 719 0014 C307     		lsl	r3, r0, #31
 720 0016 03D5     		bpl	.L56
 721 0018 0221     		mov	r1, #2
 722              	.L71:
 723              	.LVL57:
 724              	.LBB46:
 725              	.LBB47:
1020:Generated_Source\PSoC4/CyLFClk.c ****     }
 726              		.loc 1 1020 0 discriminator 1
 727 001a 1368     		ldr	r3, [r2]
 728              	.LBE47:
 729              	.LBE46:
1187:Generated_Source\PSoC4/CyLFClk.c ****         {
1188:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
 730              		.loc 1 1188 0 discriminator 1
 731 001c 1942     		tst	r1, r3
 732 001e FCD0     		beq	.L71
 733              	.LVL58:
 734              	.L56:
1189:Generated_Source\PSoC4/CyLFClk.c ****             {
1190:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1191:Generated_Source\PSoC4/CyLFClk.c ****             }
1192:Generated_Source\PSoC4/CyLFClk.c ****         }
1193:Generated_Source\PSoC4/CyLFClk.c **** 
1194:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER1_MASK))
 735              		.loc 1 1194 0
 736 0020 C305     		lsl	r3, r0, #23
 737 0022 05D5     		bpl	.L58
 738 0024 8022     		mov	r2, #128
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 36


 739              	.LBB48:
 740              	.LBB49:
1020:Generated_Source\PSoC4/CyLFClk.c ****     }
 741              		.loc 1 1020 0 discriminator 1
 742 0026 0849     		ldr	r1, .L80+4
 743 0028 9200     		lsl	r2, r2, #2
 744              	.L72:
 745              	.LVL59:
 746 002a 0B68     		ldr	r3, [r1]
 747              	.LBE49:
 748              	.LBE48:
1195:Generated_Source\PSoC4/CyLFClk.c ****         {
1196:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
 749              		.loc 1 1196 0 discriminator 1
 750 002c 1342     		tst	r3, r2
 751 002e FCD0     		beq	.L72
 752              	.LVL60:
 753              	.L58:
1197:Generated_Source\PSoC4/CyLFClk.c ****             {
1198:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1199:Generated_Source\PSoC4/CyLFClk.c ****             }
1200:Generated_Source\PSoC4/CyLFClk.c ****         }
1201:Generated_Source\PSoC4/CyLFClk.c **** 
1202:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER2_MASK))
 754              		.loc 1 1202 0
 755 0030 C303     		lsl	r3, r0, #15
 756 0032 05D5     		bpl	.L55
 757 0034 8022     		mov	r2, #128
 758              	.LBB50:
 759              	.LBB51:
 760              	.LBB52:
 761              	.LBB53:
1020:Generated_Source\PSoC4/CyLFClk.c ****     }
 762              		.loc 1 1020 0
 763 0036 0449     		ldr	r1, .L80+4
 764 0038 9202     		lsl	r2, r2, #10
 765              	.L73:
 766              	.LVL61:
 767 003a 0B68     		ldr	r3, [r1]
 768              	.LBE53:
 769              	.LBE52:
1203:Generated_Source\PSoC4/CyLFClk.c ****         {
1204:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
 770              		.loc 1 1204 0
 771 003c 1342     		tst	r3, r2
 772 003e FCD0     		beq	.L73
 773              	.LVL62:
 774              	.L55:
 775              	.LBE51:
 776              	.LBE50:
1205:Generated_Source\PSoC4/CyLFClk.c ****             {
1206:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1207:Generated_Source\PSoC4/CyLFClk.c ****             }
1208:Generated_Source\PSoC4/CyLFClk.c ****         }
1209:Generated_Source\PSoC4/CyLFClk.c ****     }
 777              		.loc 1 1209 0
 778              		@ sp needed
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 37


 779 0040 7047     		bx	lr
 780              	.L81:
 781 0042 C046     		.align	2
 782              	.L80:
 783 0044 04010B40 		.word	1074462980
 784 0048 10020B40 		.word	1074463248
 785              		.cfi_endproc
 786              	.LFE14:
 787              		.size	CySysWdtEnable, .-CySysWdtEnable
 788              		.section	.text.CySysWdtDisable,"ax",%progbits
 789              		.align	2
 790              		.global	CySysWdtDisable
 791              		.code	16
 792              		.thumb_func
 793              		.type	CySysWdtDisable, %function
 794              	CySysWdtDisable:
 795              	.LFB15:
1210:Generated_Source\PSoC4/CyLFClk.c **** 
1211:Generated_Source\PSoC4/CyLFClk.c **** 
1212:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1213:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisable
1214:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1215:Generated_Source\PSoC4/CyLFClk.c ****     *
1216:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the specified WDT counters.
1217:Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are disabled. The function waits for 
1218:Generated_Source\PSoC4/CyLFClk.c ****     * the changes to come into effect.
1219:Generated_Source\PSoC4/CyLFClk.c ****     *
1220:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1221:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_MASK - The mask for counter 0 to disable. <br>
1222:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_MASK - The mask for counter 1 to disable. <br>
1223:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_MASK - The mask for counter 2 to disable.
1224:Generated_Source\PSoC4/CyLFClk.c ****     *
1225:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1226:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisable(uint32 counterMask)
1227:Generated_Source\PSoC4/CyLFClk.c ****     {
 796              		.loc 1 1227 0
 797              		.cfi_startproc
 798              	.LVL63:
 799              	.LBB62:
 800              	.LBB63:
 972:Generated_Source\PSoC4/CyLFClk.c ****     }
 801              		.loc 1 972 0
 802 0000 104B     		ldr	r3, .L102
 803 0002 1A68     		ldr	r2, [r3]
 804 0004 C023     		mov	r3, #192
 805 0006 1B02     		lsl	r3, r3, #8
 806 0008 1A42     		tst	r2, r3
 807 000a 19D1     		bne	.L82
 808              	.LBE63:
 809              	.LBE62:
1228:Generated_Source\PSoC4/CyLFClk.c ****         if (0uL == CySysWdtLocked())
1229:Generated_Source\PSoC4/CyLFClk.c ****         {
1230:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONTROL_REG &= ~counterMask;
 810              		.loc 1 1230 0
 811 000c 0E4A     		ldr	r2, .L102+4
 812 000e 1368     		ldr	r3, [r2]
 813 0010 8343     		bic	r3, r0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 38


 814 0012 1360     		str	r3, [r2]
1231:Generated_Source\PSoC4/CyLFClk.c **** 
1232:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER0_MASK))
 815              		.loc 1 1232 0
 816 0014 C307     		lsl	r3, r0, #31
 817 0016 03D5     		bpl	.L89
 818 0018 0221     		mov	r1, #2
 819              	.L96:
 820              	.LVL64:
 821              	.LBB64:
 822              	.LBB65:
1020:Generated_Source\PSoC4/CyLFClk.c ****     }
 823              		.loc 1 1020 0 discriminator 1
 824 001a 1368     		ldr	r3, [r2]
 825              	.LBE65:
 826              	.LBE64:
1233:Generated_Source\PSoC4/CyLFClk.c ****             {
1234:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
 827              		.loc 1 1234 0 discriminator 1
 828 001c 1942     		tst	r1, r3
 829 001e FCD1     		bne	.L96
 830              	.LVL65:
 831              	.L89:
1235:Generated_Source\PSoC4/CyLFClk.c ****                 {
1236:Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1237:Generated_Source\PSoC4/CyLFClk.c ****                 }
1238:Generated_Source\PSoC4/CyLFClk.c ****             }
1239:Generated_Source\PSoC4/CyLFClk.c **** 
1240:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER1_MASK))
 832              		.loc 1 1240 0
 833 0020 C305     		lsl	r3, r0, #23
 834 0022 05D5     		bpl	.L85
 835 0024 8022     		mov	r2, #128
 836              	.LBB66:
 837              	.LBB67:
1020:Generated_Source\PSoC4/CyLFClk.c ****     }
 838              		.loc 1 1020 0 discriminator 1
 839 0026 0849     		ldr	r1, .L102+4
 840 0028 9200     		lsl	r2, r2, #2
 841              	.L95:
 842              	.LVL66:
 843 002a 0B68     		ldr	r3, [r1]
 844              	.LBE67:
 845              	.LBE66:
1241:Generated_Source\PSoC4/CyLFClk.c ****             {
1242:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
 846              		.loc 1 1242 0 discriminator 1
 847 002c 1342     		tst	r3, r2
 848 002e FCD1     		bne	.L95
 849              	.LVL67:
 850              	.L85:
1243:Generated_Source\PSoC4/CyLFClk.c ****                 {
1244:Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1245:Generated_Source\PSoC4/CyLFClk.c ****                 }
1246:Generated_Source\PSoC4/CyLFClk.c ****             }
1247:Generated_Source\PSoC4/CyLFClk.c **** 
1248:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER2_MASK))
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 39


 851              		.loc 1 1248 0
 852 0030 C303     		lsl	r3, r0, #15
 853 0032 05D5     		bpl	.L82
 854 0034 8022     		mov	r2, #128
 855              	.LBB68:
 856              	.LBB69:
1020:Generated_Source\PSoC4/CyLFClk.c ****     }
 857              		.loc 1 1020 0 discriminator 1
 858 0036 0449     		ldr	r1, .L102+4
 859 0038 9202     		lsl	r2, r2, #10
 860              	.L94:
 861              	.LVL68:
 862 003a 0B68     		ldr	r3, [r1]
 863              	.LBE69:
 864              	.LBE68:
1249:Generated_Source\PSoC4/CyLFClk.c ****             {
1250:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
 865              		.loc 1 1250 0 discriminator 1
 866 003c 1342     		tst	r3, r2
 867 003e FCD1     		bne	.L94
 868              	.LVL69:
 869              	.L82:
1251:Generated_Source\PSoC4/CyLFClk.c ****                 {
1252:Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1253:Generated_Source\PSoC4/CyLFClk.c ****                 }
1254:Generated_Source\PSoC4/CyLFClk.c ****             }
1255:Generated_Source\PSoC4/CyLFClk.c ****         }
1256:Generated_Source\PSoC4/CyLFClk.c ****     }
 870              		.loc 1 1256 0
 871              		@ sp needed
 872 0040 7047     		bx	lr
 873              	.L103:
 874 0042 C046     		.align	2
 875              	.L102:
 876 0044 00010B40 		.word	1074462976
 877 0048 10020B40 		.word	1074463248
 878              		.cfi_endproc
 879              	.LFE15:
 880              		.size	CySysWdtDisable, .-CySysWdtDisable
 881              		.section	.text.CySysWdtSetCascade,"ax",%progbits
 882              		.align	2
 883              		.global	CySysWdtSetCascade
 884              		.code	16
 885              		.thumb_func
 886              		.type	CySysWdtSetCascade, %function
 887              	CySysWdtSetCascade:
 888              	.LFB16:
1257:Generated_Source\PSoC4/CyLFClk.c **** 
1258:Generated_Source\PSoC4/CyLFClk.c **** 
1259:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1260:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetCascade
1261:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1262:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1263:Generated_Source\PSoC4/CyLFClk.c ****     * Writes the two WDT cascade values based on the combination of mask values
1264:Generated_Source\PSoC4/CyLFClk.c ****     * specified.
1265:Generated_Source\PSoC4/CyLFClk.c ****     *
1266:Generated_Source\PSoC4/CyLFClk.c ****     * \param cascadeMask The mask value used to set or clear the cascade values:
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 40


1267:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_NONE - Neither <br>
1268:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_01 - Cascade 01 <br>
1269:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_12 - Cascade 12
1270:Generated_Source\PSoC4/CyLFClk.c ****     *
1271:Generated_Source\PSoC4/CyLFClk.c ****     * If only one cascade mask is specified, the second cascade is disabled.
1272:Generated_Source\PSoC4/CyLFClk.c ****     * To set both cascade modes, two defines should be ORed:
1273:Generated_Source\PSoC4/CyLFClk.c ****     * (CY_SYS_TIMER_CASCADE_01 | CY_SYS_TIMER_CASCADE_12).
1274:Generated_Source\PSoC4/CyLFClk.c ****     * \note If CySysWdtSetCascade() was called with ORed defines it is necessary 
1275:Generated_Source\PSoC4/CyLFClk.c ****     * to call CySysWdtSetClearOnMatch(1,1). It is needed to make sure that 
1276:Generated_Source\PSoC4/CyLFClk.c ****     * Counter 2 will be updated in the expected way.
1277:Generated_Source\PSoC4/CyLFClk.c ****     *
1278:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counters that are part of the specified cascade should be disabled.
1279:Generated_Source\PSoC4/CyLFClk.c ****     * Otherwise this function call has no effect. If the specified
1280:Generated_Source\PSoC4/CyLFClk.c ****     * counter is enabled, call CySysWdtDisable() function with the corresponding
1281:Generated_Source\PSoC4/CyLFClk.c ****     * parameter to disable the specified counter and wait for it to stop. This may
1282:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles.
1283:Generated_Source\PSoC4/CyLFClk.c ****     *
1284:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1285:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetCascade(uint32 cascadeMask)
1286:Generated_Source\PSoC4/CyLFClk.c ****     {
 889              		.loc 1 1286 0
 890              		.cfi_startproc
 891              	.LVL70:
 892              	.LBB76:
 893              	.LBB77:
1020:Generated_Source\PSoC4/CyLFClk.c ****     }
 894              		.loc 1 1020 0
 895 0000 094A     		ldr	r2, .L106
 896              	.LBE77:
 897              	.LBE76:
 898              		.loc 1 1286 0
 899 0002 10B5     		push	{r4, lr}
 900              		.cfi_def_cfa_offset 8
 901              		.cfi_offset 4, -8
 902              		.cfi_offset 14, -4
 903              	.LBB80:
 904              	.LBB78:
1020:Generated_Source\PSoC4/CyLFClk.c ****     }
 905              		.loc 1 1020 0
 906 0004 1168     		ldr	r1, [r2]
 907              	.LVL71:
 908              	.LBE78:
 909              	.LBE80:
 910              	.LBB81:
 911              	.LBB82:
 912 0006 1368     		ldr	r3, [r2]
 913              	.LVL72:
 914              	.LBE82:
 915              	.LBE81:
 916              	.LBB84:
 917              	.LBB85:
 918 0008 1268     		ldr	r2, [r2]
 919              	.LVL73:
 920              	.LBE85:
 921              	.LBE84:
 922              	.LBB87:
 923              	.LBB83:
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 41


 924 000a 5C0A     		lsr	r4, r3, #9
 925              	.LBE83:
 926              	.LBE87:
 927              	.LBB88:
 928              	.LBB79:
 929 000c 4B08     		lsr	r3, r1, #1
 930              	.LVL74:
 931              	.LBE79:
 932              	.LBE88:
1287:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1288:Generated_Source\PSoC4/CyLFClk.c ****         uint32 countersEnableStatus;
1289:Generated_Source\PSoC4/CyLFClk.c **** 
1290:Generated_Source\PSoC4/CyLFClk.c ****         countersEnableStatus = CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0) |
 933              		.loc 1 1290 0
 934 000e 2343     		orr	r3, r4
 935              	.LBB89:
 936              	.LBB86:
1020:Generated_Source\PSoC4/CyLFClk.c ****     }
 937              		.loc 1 1020 0
 938 0010 520C     		lsr	r2, r2, #17
 939              	.LBE86:
 940              	.LBE89:
 941              		.loc 1 1290 0
 942 0012 1343     		orr	r3, r2
1291:Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1) |
1292:Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2);
1293:Generated_Source\PSoC4/CyLFClk.c **** 
1294:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == countersEnableStatus)
 943              		.loc 1 1294 0
 944 0014 DB07     		lsl	r3, r3, #31
 945 0016 05D4     		bmi	.L104
1295:Generated_Source\PSoC4/CyLFClk.c ****         {
1296:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG;
 946              		.loc 1 1296 0
 947 0018 044A     		ldr	r2, .L106+4
1297:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= ((uint32)(~(CY_SYS_WDT_CASCADE_01|CY_SYS_WDT_CASCADE_12)));
 948              		.loc 1 1297 0
 949 001a 054B     		ldr	r3, .L106+8
1296:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= ((uint32)(~(CY_SYS_WDT_CASCADE_01|CY_SYS_WDT_CASCADE_12)));
 950              		.loc 1 1296 0
 951 001c 1168     		ldr	r1, [r2]
 952              	.LVL75:
 953              		.loc 1 1297 0
 954 001e 0B40     		and	r3, r1
 955              	.LVL76:
1298:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= cascadeMask;
 956              		.loc 1 1298 0
 957 0020 1843     		orr	r0, r3
 958              	.LVL77:
1299:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
 959              		.loc 1 1299 0
 960 0022 1060     		str	r0, [r2]
 961              	.LVL78:
 962              	.L104:
1300:Generated_Source\PSoC4/CyLFClk.c ****         }
1301:Generated_Source\PSoC4/CyLFClk.c ****     }
 963              		.loc 1 1301 0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 42


 964              		@ sp needed
 965 0024 10BD     		pop	{r4, pc}
 966              	.L107:
 967 0026 C046     		.align	2
 968              	.L106:
 969 0028 10020B40 		.word	1074463248
 970 002c 0C020B40 		.word	1074463244
 971 0030 F7F7FFFF 		.word	-2057
 972              		.cfi_endproc
 973              	.LFE16:
 974              		.size	CySysWdtSetCascade, .-CySysWdtSetCascade
 975              		.section	.text.CySysWdtGetCascade,"ax",%progbits
 976              		.align	2
 977              		.global	CySysWdtGetCascade
 978              		.code	16
 979              		.thumb_func
 980              		.type	CySysWdtGetCascade, %function
 981              	CySysWdtGetCascade:
 982              	.LFB17:
1302:Generated_Source\PSoC4/CyLFClk.c **** 
1303:Generated_Source\PSoC4/CyLFClk.c **** 
1304:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1305:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCascade
1306:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1307:Generated_Source\PSoC4/CyLFClk.c ****     *
1308:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the two WDT cascade values returning a mask of the bits set.
1309:Generated_Source\PSoC4/CyLFClk.c ****     *
1310:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of the cascade values set.
1311:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_NONE - Neither
1312:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_01 - Cascade 01
1313:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_12 - Cascade 12
1314:Generated_Source\PSoC4/CyLFClk.c ****     *
1315:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1316:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCascade(void)
1317:Generated_Source\PSoC4/CyLFClk.c ****     {
 983              		.loc 1 1317 0
 984              		.cfi_startproc
1318:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_CONFIG_REG & (CY_SYS_WDT_CASCADE_01 | CY_SYS_WDT_CASCADE_12));
 985              		.loc 1 1318 0
 986 0000 024B     		ldr	r3, .L109
1319:Generated_Source\PSoC4/CyLFClk.c ****     }
 987              		.loc 1 1319 0
 988              		@ sp needed
1318:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_CONFIG_REG & (CY_SYS_WDT_CASCADE_01 | CY_SYS_WDT_CASCADE_12));
 989              		.loc 1 1318 0
 990 0002 1868     		ldr	r0, [r3]
 991 0004 024B     		ldr	r3, .L109+4
 992 0006 1840     		and	r0, r3
 993              		.loc 1 1319 0
 994 0008 7047     		bx	lr
 995              	.L110:
 996 000a C046     		.align	2
 997              	.L109:
 998 000c 0C020B40 		.word	1074463244
 999 0010 08080000 		.word	2056
 1000              		.cfi_endproc
 1001              	.LFE17:
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 43


 1002              		.size	CySysWdtGetCascade, .-CySysWdtGetCascade
 1003              		.section	.text.CySysWdtSetMatch,"ax",%progbits
 1004              		.align	2
 1005              		.global	CySysWdtSetMatch
 1006              		.code	16
 1007              		.thumb_func
 1008              		.type	CySysWdtSetMatch, %function
 1009              	CySysWdtSetMatch:
 1010              	.LFB18:
1320:Generated_Source\PSoC4/CyLFClk.c **** 
1321:Generated_Source\PSoC4/CyLFClk.c **** 
1322:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1323:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMatch
1324:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1325:Generated_Source\PSoC4/CyLFClk.c ****     *
1326:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter match comparison value.
1327:Generated_Source\PSoC4/CyLFClk.c ****     *
1328:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1329:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the WDT counter. The match values are not
1330:Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
1331:Generated_Source\PSoC4/CyLFClk.c ****     *
1332:Generated_Source\PSoC4/CyLFClk.c ****     * \param match
1333:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-65535]. The value to be used to match against the counter.
1334:Generated_Source\PSoC4/CyLFClk.c ****     *
1335:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1336:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMatch(uint32 counterNum, uint32 match)
1337:Generated_Source\PSoC4/CyLFClk.c ****     {
 1011              		.loc 1 1337 0
 1012              		.cfi_startproc
 1013              	.LVL79:
 1014 0000 38B5     		push	{r3, r4, r5, lr}
 1015              		.cfi_def_cfa_offset 16
 1016              		.cfi_offset 3, -16
 1017              		.cfi_offset 4, -12
 1018              		.cfi_offset 5, -8
 1019              		.cfi_offset 14, -4
 1020              		.loc 1 1337 0
 1021 0002 051C     		mov	r5, r0
 1022 0004 0C1C     		mov	r4, r1
1338:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
1339:Generated_Source\PSoC4/CyLFClk.c **** 
1340:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
 1023              		.loc 1 1340 0
 1024 0006 0128     		cmp	r0, #1
 1025 0008 02D9     		bls	.L112
 1026              		.loc 1 1340 0 is_stmt 0 discriminator 1
 1027 000a 0020     		mov	r0, #0
 1028              	.LVL80:
 1029 000c FFF7FEFF 		bl	CyHalt
 1030              	.LVL81:
 1031              	.L112:
1341:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1342:Generated_Source\PSoC4/CyLFClk.c **** 
1343:Generated_Source\PSoC4/CyLFClk.c ****         /* Wait for previous changes to come into effect */
1344:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_WDT_3LFCLK_DELAY_US);
 1032              		.loc 1 1344 0 is_stmt 1
 1033 0010 C920     		mov	r0, #201
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 44


 1034 0012 FFF7FEFF 		bl	CyDelayUs
 1035              	.LVL82:
1345:Generated_Source\PSoC4/CyLFClk.c **** 
1346:Generated_Source\PSoC4/CyLFClk.c ****         regValue = CY_SYS_WDT_MATCH_REG;
1347:Generated_Source\PSoC4/CyLFClk.c ****         regValue &= (uint32)~((uint32)(CY_SYS_WDT_LOWER_16BITS_MASK << (counterNum * CY_SYS_WDT_CNT
1348:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (regValue | (match << (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)));
 1036              		.loc 1 1348 0
 1037 0016 201C     		mov	r0, r4
1347:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (regValue | (match << (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)));
 1038              		.loc 1 1347 0
 1039 0018 064A     		ldr	r2, .L113
 1040 001a 2D01     		lsl	r5, r5, #4
 1041              	.LVL83:
 1042 001c AA40     		lsl	r2, r2, r5
 1043              		.loc 1 1348 0
 1044 001e A840     		lsl	r0, r0, r5
1346:Generated_Source\PSoC4/CyLFClk.c ****         regValue &= (uint32)~((uint32)(CY_SYS_WDT_LOWER_16BITS_MASK << (counterNum * CY_SYS_WDT_CNT
 1045              		.loc 1 1346 0
 1046 0020 0549     		ldr	r1, .L113+4
1349:Generated_Source\PSoC4/CyLFClk.c **** 
1350:Generated_Source\PSoC4/CyLFClk.c ****         /* Make sure match synchronization has started */
1351:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_WDT_1LFCLK_DELAY_US);
1352:Generated_Source\PSoC4/CyLFClk.c ****     }
 1047              		.loc 1 1352 0
 1048              		@ sp needed
1346:Generated_Source\PSoC4/CyLFClk.c ****         regValue &= (uint32)~((uint32)(CY_SYS_WDT_LOWER_16BITS_MASK << (counterNum * CY_SYS_WDT_CNT
 1049              		.loc 1 1346 0
 1050 0022 0B68     		ldr	r3, [r1]
 1051              	.LVL84:
1347:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (regValue | (match << (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)));
 1052              		.loc 1 1347 0
 1053 0024 9343     		bic	r3, r2
 1054              	.LVL85:
1348:Generated_Source\PSoC4/CyLFClk.c **** 
 1055              		.loc 1 1348 0
 1056 0026 0343     		orr	r3, r0
 1057              	.LVL86:
 1058 0028 0B60     		str	r3, [r1]
1351:Generated_Source\PSoC4/CyLFClk.c ****     }
 1059              		.loc 1 1351 0
 1060 002a 4320     		mov	r0, #67
 1061 002c FFF7FEFF 		bl	CyDelayUs
 1062              	.LVL87:
 1063              	.LVL88:
 1064              		.loc 1 1352 0
 1065 0030 38BD     		pop	{r3, r4, r5, pc}
 1066              	.L114:
 1067 0032 C046     		.align	2
 1068              	.L113:
 1069 0034 FFFF0000 		.word	65535
 1070 0038 08020B40 		.word	1074463240
 1071              		.cfi_endproc
 1072              	.LFE18:
 1073              		.size	CySysWdtSetMatch, .-CySysWdtSetMatch
 1074              		.section	.text.CySysWdtSetToggleBit,"ax",%progbits
 1075              		.align	2
 1076              		.global	CySysWdtSetToggleBit
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 45


 1077              		.code	16
 1078              		.thumb_func
 1079              		.type	CySysWdtSetToggleBit, %function
 1080              	CySysWdtSetToggleBit:
 1081              	.LFB19:
1353:Generated_Source\PSoC4/CyLFClk.c **** 
1354:Generated_Source\PSoC4/CyLFClk.c **** 
1355:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1356:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetToggleBit
1357:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1358:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1359:Generated_Source\PSoC4/CyLFClk.c ****     * Configures which bit in WDT counter 2 to monitor for a toggle.
1360:Generated_Source\PSoC4/CyLFClk.c ****     *
1361:Generated_Source\PSoC4/CyLFClk.c ****     * When that bit toggles, an interrupt is generated if the mode for counter 2 has
1362:Generated_Source\PSoC4/CyLFClk.c ****     * enabled interrupts.
1363:Generated_Source\PSoC4/CyLFClk.c ****     *
1364:Generated_Source\PSoC4/CyLFClk.c ****     * \param bits Valid range [0-31].  Counter 2 bit to monitor for a toggle.
1365:Generated_Source\PSoC4/CyLFClk.c ****     *
1366:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1367:Generated_Source\PSoC4/CyLFClk.c ****     * WDT Counter 2 should be disabled. Otherwise this function call has no
1368:Generated_Source\PSoC4/CyLFClk.c ****     * effect.
1369:Generated_Source\PSoC4/CyLFClk.c ****     *
1370:Generated_Source\PSoC4/CyLFClk.c ****     * If the specified counter is enabled, call the CySysWdtDisable() function with
1371:Generated_Source\PSoC4/CyLFClk.c ****     * the corresponding parameter to disable the specified counter and wait for it to
1372:Generated_Source\PSoC4/CyLFClk.c ****     * stop. This may take up to 3 LFCLK cycles.
1373:Generated_Source\PSoC4/CyLFClk.c ****     *
1374:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1375:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetToggleBit(uint32 bits)
1376:Generated_Source\PSoC4/CyLFClk.c ****     {
 1082              		.loc 1 1376 0
 1083              		.cfi_startproc
 1084              	.LVL89:
 1085              	.LBB92:
 1086              	.LBB93:
1020:Generated_Source\PSoC4/CyLFClk.c ****     }
 1087              		.loc 1 1020 0
 1088 0000 064B     		ldr	r3, .L117
 1089 0002 1B68     		ldr	r3, [r3]
 1090              	.LBE93:
 1091              	.LBE92:
1377:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1378:Generated_Source\PSoC4/CyLFClk.c **** 
1379:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
 1092              		.loc 1 1379 0
 1093 0004 9B03     		lsl	r3, r3, #14
 1094 0006 08D4     		bmi	.L115
1380:Generated_Source\PSoC4/CyLFClk.c ****         {
1381:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG;
 1095              		.loc 1 1381 0
 1096 0008 054A     		ldr	r2, .L117+4
1382:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= (uint32)(~((uint32)(CY_SYS_WDT_CONFIG_BITS2_MASK << CY_SYS_WDT_CONFIG
 1097              		.loc 1 1382 0
 1098 000a 064B     		ldr	r3, .L117+8
1381:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= (uint32)(~((uint32)(CY_SYS_WDT_CONFIG_BITS2_MASK << CY_SYS_WDT_CONFIG
 1099              		.loc 1 1381 0
 1100 000c 1168     		ldr	r1, [r2]
 1101              	.LVL90:
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 46


 1102              		.loc 1 1382 0
 1103 000e 0B40     		and	r3, r1
 1104              	.LVL91:
1383:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= ((bits & CY_SYS_WDT_CONFIG_BITS2_MASK) << CY_SYS_WDT_CONFIG_BITS2_POS
 1105              		.loc 1 1383 0
 1106 0010 1F21     		mov	r1, #31
 1107 0012 0840     		and	r0, r1
 1108              	.LVL92:
 1109 0014 0006     		lsl	r0, r0, #24
 1110 0016 1843     		orr	r0, r3
 1111              	.LVL93:
1384:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
 1112              		.loc 1 1384 0
 1113 0018 1060     		str	r0, [r2]
 1114              	.LVL94:
 1115              	.L115:
1385:Generated_Source\PSoC4/CyLFClk.c ****         }
1386:Generated_Source\PSoC4/CyLFClk.c ****     }
 1116              		.loc 1 1386 0
 1117              		@ sp needed
 1118 001a 7047     		bx	lr
 1119              	.L118:
 1120              		.align	2
 1121              	.L117:
 1122 001c 10020B40 		.word	1074463248
 1123 0020 0C020B40 		.word	1074463244
 1124 0024 FFFFFFE0 		.word	-520093697
 1125              		.cfi_endproc
 1126              	.LFE19:
 1127              		.size	CySysWdtSetToggleBit, .-CySysWdtSetToggleBit
 1128              		.section	.text.CySysWdtGetToggleBit,"ax",%progbits
 1129              		.align	2
 1130              		.global	CySysWdtGetToggleBit
 1131              		.code	16
 1132              		.thumb_func
 1133              		.type	CySysWdtGetToggleBit, %function
 1134              	CySysWdtGetToggleBit:
 1135              	.LFB20:
1387:Generated_Source\PSoC4/CyLFClk.c **** 
1388:Generated_Source\PSoC4/CyLFClk.c **** 
1389:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1390:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetToggleBit
1391:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1392:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1393:Generated_Source\PSoC4/CyLFClk.c ****     * Reads which bit in WDT counter 2 is monitored for a toggle.
1394:Generated_Source\PSoC4/CyLFClk.c ****     *
1395:Generated_Source\PSoC4/CyLFClk.c ****     * \return The bit that is monitored (range of 0 to 31)
1396:Generated_Source\PSoC4/CyLFClk.c ****     *
1397:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1398:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetToggleBit(void)
1399:Generated_Source\PSoC4/CyLFClk.c ****     {
 1136              		.loc 1 1399 0
 1137              		.cfi_startproc
1400:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONFIG_REG >> CY_SYS_WDT_CONFIG_BITS2_POS) & CY_SYS_WDT_CONFIG_BITS2_MA
 1138              		.loc 1 1400 0
 1139 0000 024B     		ldr	r3, .L120
1401:Generated_Source\PSoC4/CyLFClk.c ****     }
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 47


 1140              		.loc 1 1401 0
 1141              		@ sp needed
1400:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONFIG_REG >> CY_SYS_WDT_CONFIG_BITS2_POS) & CY_SYS_WDT_CONFIG_BITS2_MA
 1142              		.loc 1 1400 0
 1143 0002 1868     		ldr	r0, [r3]
 1144 0004 C000     		lsl	r0, r0, #3
 1145 0006 C00E     		lsr	r0, r0, #27
 1146              		.loc 1 1401 0
 1147 0008 7047     		bx	lr
 1148              	.L121:
 1149 000a C046     		.align	2
 1150              	.L120:
 1151 000c 0C020B40 		.word	1074463244
 1152              		.cfi_endproc
 1153              	.LFE20:
 1154              		.size	CySysWdtGetToggleBit, .-CySysWdtGetToggleBit
 1155              		.section	.text.CySysWdtGetMatch,"ax",%progbits
 1156              		.align	2
 1157              		.global	CySysWdtGetMatch
 1158              		.code	16
 1159              		.thumb_func
 1160              		.type	CySysWdtGetMatch, %function
 1161              	CySysWdtGetMatch:
 1162              	.LFB21:
1402:Generated_Source\PSoC4/CyLFClk.c **** 
1403:Generated_Source\PSoC4/CyLFClk.c **** 
1404:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1405:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMatch
1406:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1407:Generated_Source\PSoC4/CyLFClk.c ****     *
1408:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the WDT counter match comparison value.
1409:Generated_Source\PSoC4/CyLFClk.c ****     *
1410:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1].  The number of the WDT counter. The match
1411:Generated_Source\PSoC4/CyLFClk.c ****     * values are not supported by counter 2.
1412:Generated_Source\PSoC4/CyLFClk.c ****     *
1413:Generated_Source\PSoC4/CyLFClk.c ****     * \return A 16-bit match value.
1414:Generated_Source\PSoC4/CyLFClk.c ****     *
1415:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1416:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMatch(uint32 counterNum)
1417:Generated_Source\PSoC4/CyLFClk.c ****     {
 1163              		.loc 1 1417 0
 1164              		.cfi_startproc
 1165              	.LVL95:
 1166 0000 10B5     		push	{r4, lr}
 1167              		.cfi_def_cfa_offset 8
 1168              		.cfi_offset 4, -8
 1169              		.cfi_offset 14, -4
 1170              		.loc 1 1417 0
 1171 0002 041E     		sub	r4, r0, #0
1418:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
 1172              		.loc 1 1418 0
 1173 0004 012C     		cmp	r4, #1
 1174 0006 02D9     		bls	.L123
 1175              		.loc 1 1418 0 is_stmt 0 discriminator 1
 1176 0008 0020     		mov	r0, #0
 1177              	.LVL96:
 1178 000a FFF7FEFF 		bl	CyHalt
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 48


 1179              	.LVL97:
 1180              	.L123:
1419:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1420:Generated_Source\PSoC4/CyLFClk.c **** 
1421:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)(CY_SYS_WDT_MATCH_REG >> 
 1181              		.loc 1 1421 0 is_stmt 1
 1182 000e 034B     		ldr	r3, .L124
1422:Generated_Source\PSoC4/CyLFClk.c ****                                             (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)) & CY_SYS_WDT
 1183              		.loc 1 1422 0
 1184 0010 2401     		lsl	r4, r4, #4
 1185              	.LVL98:
1421:Generated_Source\PSoC4/CyLFClk.c ****                                             (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)) & CY_SYS_WDT
 1186              		.loc 1 1421 0
 1187 0012 1B68     		ldr	r3, [r3]
1423:Generated_Source\PSoC4/CyLFClk.c ****     }
 1188              		.loc 1 1423 0
 1189              		@ sp needed
1421:Generated_Source\PSoC4/CyLFClk.c ****                                             (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)) & CY_SYS_WDT
 1190              		.loc 1 1421 0
 1191 0014 E340     		lsr	r3, r3, r4
 1192 0016 1804     		lsl	r0, r3, #16
 1193 0018 000C     		lsr	r0, r0, #16
 1194              		.loc 1 1423 0
 1195 001a 10BD     		pop	{r4, pc}
 1196              	.L125:
 1197              		.align	2
 1198              	.L124:
 1199 001c 08020B40 		.word	1074463240
 1200              		.cfi_endproc
 1201              	.LFE21:
 1202              		.size	CySysWdtGetMatch, .-CySysWdtGetMatch
 1203              		.section	.text.CySysWdtGetCount,"ax",%progbits
 1204              		.align	2
 1205              		.global	CySysWdtGetCount
 1206              		.code	16
 1207              		.thumb_func
 1208              		.type	CySysWdtGetCount, %function
 1209              	CySysWdtGetCount:
 1210              	.LFB22:
1424:Generated_Source\PSoC4/CyLFClk.c **** 
1425:Generated_Source\PSoC4/CyLFClk.c **** 
1426:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1427:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCount
1428:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1429:Generated_Source\PSoC4/CyLFClk.c ****     *
1430:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current WDT counter value.
1431:Generated_Source\PSoC4/CyLFClk.c ****     *
1432:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2]. The number of the WDT counter.
1433:Generated_Source\PSoC4/CyLFClk.c ****     *
1434:Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value.  Counter 0 and Counter 1 are 16 bit counters 
1435:Generated_Source\PSoC4/CyLFClk.c ****     * and counter 2 is a 32 bit counter.
1436:Generated_Source\PSoC4/CyLFClk.c ****     *
1437:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1438:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCount(uint32 counterNum)
1439:Generated_Source\PSoC4/CyLFClk.c ****     {
 1211              		.loc 1 1439 0
 1212              		.cfi_startproc
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 49


 1213              	.LVL99:
 1214 0000 08B5     		push	{r3, lr}
 1215              		.cfi_def_cfa_offset 8
 1216              		.cfi_offset 3, -8
 1217              		.cfi_offset 14, -4
1440:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue = 0u;
1441:Generated_Source\PSoC4/CyLFClk.c **** 
1442:Generated_Source\PSoC4/CyLFClk.c ****         switch(counterNum)
 1218              		.loc 1 1442 0
 1219 0002 0128     		cmp	r0, #1
 1220 0004 10D0     		beq	.L128
 1221 0006 0028     		cmp	r0, #0
 1222 0008 09D0     		beq	.L129
 1223 000a 0228     		cmp	r0, #2
 1224 000c 04D0     		beq	.L130
1443:Generated_Source\PSoC4/CyLFClk.c ****         {
1444:Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 0 */
1445:Generated_Source\PSoC4/CyLFClk.c ****             case 0u:
1446:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WDT_CTRLOW_REG & CY_SYS_WDT_LOWER_16BITS_MASK;
1447:Generated_Source\PSoC4/CyLFClk.c ****             break;
1448:Generated_Source\PSoC4/CyLFClk.c **** 
1449:Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 1 */
1450:Generated_Source\PSoC4/CyLFClk.c ****             case 1u:
1451:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = (CY_SYS_WDT_CTRLOW_REG >> CY_SYS_WDT_CNT_MATCH_SHIFT) & CY_SYS_WDT_LOWER
1452:Generated_Source\PSoC4/CyLFClk.c ****             break;
1453:Generated_Source\PSoC4/CyLFClk.c **** 
1454:Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 2 */
1455:Generated_Source\PSoC4/CyLFClk.c ****             case 2u:
1456:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WDT_CTRHIGH_REG;
1457:Generated_Source\PSoC4/CyLFClk.c ****             break;
1458:Generated_Source\PSoC4/CyLFClk.c **** 
1459:Generated_Source\PSoC4/CyLFClk.c ****             default:
1460:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
 1225              		.loc 1 1460 0 discriminator 1
 1226 000e 0020     		mov	r0, #0
 1227              	.LVL100:
 1228 0010 FFF7FEFF 		bl	CyHalt
 1229              	.LVL101:
1440:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue = 0u;
 1230              		.loc 1 1440 0 discriminator 1
 1231 0014 0020     		mov	r0, #0
 1232              	.LVL102:
 1233              	.L131:
1461:Generated_Source\PSoC4/CyLFClk.c ****             break;
1462:Generated_Source\PSoC4/CyLFClk.c ****         }
1463:Generated_Source\PSoC4/CyLFClk.c **** 
1464:Generated_Source\PSoC4/CyLFClk.c ****         return (regValue);
1465:Generated_Source\PSoC4/CyLFClk.c ****     }
 1234              		.loc 1 1465 0
 1235              		@ sp needed
 1236 0016 08BD     		pop	{r3, pc}
 1237              	.LVL103:
 1238              	.L130:
1456:Generated_Source\PSoC4/CyLFClk.c ****             break;
 1239              		.loc 1 1456 0
 1240 0018 054B     		ldr	r3, .L134
 1241 001a 1868     		ldr	r0, [r3]
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 50


 1242              	.LVL104:
1457:Generated_Source\PSoC4/CyLFClk.c **** 
 1243              		.loc 1 1457 0
 1244 001c FBE7     		b	.L131
 1245              	.LVL105:
 1246              	.L129:
1446:Generated_Source\PSoC4/CyLFClk.c ****             break;
 1247              		.loc 1 1446 0
 1248 001e 054B     		ldr	r3, .L134+4
 1249 0020 1868     		ldr	r0, [r3]
 1250              	.LVL106:
 1251 0022 0004     		lsl	r0, r0, #16
 1252 0024 000C     		lsr	r0, r0, #16
 1253              	.LVL107:
1447:Generated_Source\PSoC4/CyLFClk.c **** 
 1254              		.loc 1 1447 0
 1255 0026 F6E7     		b	.L131
 1256              	.LVL108:
 1257              	.L128:
1451:Generated_Source\PSoC4/CyLFClk.c ****             break;
 1258              		.loc 1 1451 0
 1259 0028 024B     		ldr	r3, .L134+4
 1260 002a 1868     		ldr	r0, [r3]
 1261              	.LVL109:
 1262 002c 000C     		lsr	r0, r0, #16
 1263              	.LVL110:
1452:Generated_Source\PSoC4/CyLFClk.c **** 
 1264              		.loc 1 1452 0
 1265 002e F2E7     		b	.L131
 1266              	.L135:
 1267              		.align	2
 1268              	.L134:
 1269 0030 04020B40 		.word	1074463236
 1270 0034 00020B40 		.word	1074463232
 1271              		.cfi_endproc
 1272              	.LFE22:
 1273              		.size	CySysWdtGetCount, .-CySysWdtGetCount
 1274              		.section	.text.CySysClkIloStop,"ax",%progbits
 1275              		.align	2
 1276              		.global	CySysClkIloStop
 1277              		.code	16
 1278              		.thumb_func
 1279              		.type	CySysClkIloStop, %function
 1280              	CySysClkIloStop:
 1281              	.LFB1:
 109:Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSV2)
 1282              		.loc 1 109 0
 1283              		.cfi_startproc
 1284              	.LBB110:
 1285              	.LBB111:
 972:Generated_Source\PSoC4/CyLFClk.c ****     }
 1286              		.loc 1 972 0
 1287 0000 2B4B     		ldr	r3, .L156
 1288              	.LBE111:
 1289              	.LBE110:
 109:Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSV2)
 1290              		.loc 1 109 0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 51


 1291 0002 70B5     		push	{r4, r5, r6, lr}
 1292              		.cfi_def_cfa_offset 16
 1293              		.cfi_offset 4, -16
 1294              		.cfi_offset 5, -12
 1295              		.cfi_offset 6, -8
 1296              		.cfi_offset 14, -4
 1297              	.LBB113:
 1298              	.LBB112:
 972:Generated_Source\PSoC4/CyLFClk.c ****     }
 1299              		.loc 1 972 0
 1300 0004 1C68     		ldr	r4, [r3]
 1301 0006 C023     		mov	r3, #192
 1302 0008 1B02     		lsl	r3, r3, #8
 1303 000a 1C40     		and	r4, r3
 1304 000c 03D1     		bne	.L136
 1305              	.LBE112:
 1306              	.LBE113:
 1307              	.LBB114:
 1308              	.LBB115:
 373:Generated_Source\PSoC4/CyLFClk.c ****             (uint32) 1u :
 1309              		.loc 1 373 0
 1310 000e 294B     		ldr	r3, .L156+4
 1311 0010 1B68     		ldr	r3, [r3]
 374:Generated_Source\PSoC4/CyLFClk.c ****             (uint32) 0u);
 1312              		.loc 1 374 0
 1313 0012 002B     		cmp	r3, #0
 1314 0014 00DB     		blt	.L154
 1315              	.L136:
 1316              	.LBE115:
 1317              	.LBE114:
 143:Generated_Source\PSoC4/CyLFClk.c **** 
 1318              		.loc 1 143 0
 1319              		@ sp needed
 1320 0016 70BD     		pop	{r4, r5, r6, pc}
 1321              	.L154:
 124:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkLfclkPosedgeCatch();
 1322              		.loc 1 124 0
 1323 0018 FFF7FEFF 		bl	CyEnterCriticalSection
 1324              	.LVL111:
 1325              	.LBB116:
 1326              	.LBB117:
 1327              	.LBB118:
 1328              	.LBB119:
1020:Generated_Source\PSoC4/CyLFClk.c ****     }
 1329              		.loc 1 1020 0
 1330 001c 264B     		ldr	r3, .L156+8
 1331              	.LBE119:
 1332              	.LBE118:
 1333              	.LBE117:
 1334              	.LBE116:
 124:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkLfclkPosedgeCatch();
 1335              		.loc 1 124 0
 1336 001e 061C     		mov	r6, r0
 1337              	.LVL112:
 1338              	.LBB136:
 1339              	.LBB134:
 1340              	.LBB121:
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 52


 1341              	.LBB120:
1020:Generated_Source\PSoC4/CyLFClk.c ****     }
 1342              		.loc 1 1020 0
 1343 0020 1A68     		ldr	r2, [r3]
 1344 0022 0121     		mov	r1, #1
 1345              	.LBE120:
 1346              	.LBE121:
1466:Generated_Source\PSoC4/CyLFClk.c **** 
1467:Generated_Source\PSoC4/CyLFClk.c **** 
1468:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1469:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetInterruptSource
1470:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1471:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1472:Generated_Source\PSoC4/CyLFClk.c ****     * Reads a mask containing all the WDT counters interrupts that are currently
1473:Generated_Source\PSoC4/CyLFClk.c ****     * set by the hardware, if a corresponding mode is selected.
1474:Generated_Source\PSoC4/CyLFClk.c ****     *
1475:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of interrupts set
1476:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER0_INT - Counter 0
1477:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER1_INT - Counter 1
1478:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER2_INT - Counter 2
1479:Generated_Source\PSoC4/CyLFClk.c ****     *
1480:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1481:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetInterruptSource(void)
1482:Generated_Source\PSoC4/CyLFClk.c ****     {
1483:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_CONTROL_REG & (CY_SYS_WDT_COUNTER0_INT | CY_SYS_WDT_COUNTER1_INT | CY_SY
1484:Generated_Source\PSoC4/CyLFClk.c ****     }
1485:Generated_Source\PSoC4/CyLFClk.c **** 
1486:Generated_Source\PSoC4/CyLFClk.c **** 
1487:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1488:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtClearInterrupt
1489:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1490:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1491:Generated_Source\PSoC4/CyLFClk.c ****     * Clears all the WDT counter interrupts set in the mask.
1492:Generated_Source\PSoC4/CyLFClk.c ****     *
1493:Generated_Source\PSoC4/CyLFClk.c ****     * Calling this function also prevents from Reset when the counter mode is set 
1494:Generated_Source\PSoC4/CyLFClk.c ****     * to generate 3 interrupts and then the device resets.
1495:Generated_Source\PSoC4/CyLFClk.c ****     *
1496:Generated_Source\PSoC4/CyLFClk.c ****     * All the WDT interrupts are to be cleared by the firmware, otherwise
1497:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts are generated continuously.
1498:Generated_Source\PSoC4/CyLFClk.c ****     *
1499:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1500:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_INT - Clears counter 0 interrupts <br>
1501:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_INT - Clears counter 1 interrupts <br>
1502:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_INT - Clears counter 2 interrupts
1503:Generated_Source\PSoC4/CyLFClk.c ****     *
1504:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1505:Generated_Source\PSoC4/CyLFClk.c ****     * This function temporary removes the watchdog lock, if it was set, and
1506:Generated_Source\PSoC4/CyLFClk.c ****     * restores the lock state after cleaning the WDT interrupts that are set in
1507:Generated_Source\PSoC4/CyLFClk.c ****     * a mask.
1508:Generated_Source\PSoC4/CyLFClk.c ****     *
1509:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1510:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtClearInterrupt(uint32 counterMask)
1511:Generated_Source\PSoC4/CyLFClk.c ****     {
1512:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
1513:Generated_Source\PSoC4/CyLFClk.c ****         uint32 wdtLockState;
1514:Generated_Source\PSoC4/CyLFClk.c **** 
1515:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 53


1516:Generated_Source\PSoC4/CyLFClk.c **** 
1517:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysWdtLocked())
1518:Generated_Source\PSoC4/CyLFClk.c ****         {
1519:Generated_Source\PSoC4/CyLFClk.c ****             wdtLockState = 1u;
1520:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtUnlock();
1521:Generated_Source\PSoC4/CyLFClk.c ****         }
1522:Generated_Source\PSoC4/CyLFClk.c ****         else
1523:Generated_Source\PSoC4/CyLFClk.c ****         {
1524:Generated_Source\PSoC4/CyLFClk.c ****             wdtLockState = 0u;
1525:Generated_Source\PSoC4/CyLFClk.c ****         }
1526:Generated_Source\PSoC4/CyLFClk.c **** 
1527:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WDT control register value */
1528:Generated_Source\PSoC4/CyLFClk.c ****         counterMask &= (CY_SYS_WDT_COUNTER0_INT |
1529:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_WDT_COUNTER1_INT |
1530:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_WDT_COUNTER2_INT);
1531:Generated_Source\PSoC4/CyLFClk.c **** 
1532:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG = counterMask | (CY_SYS_WDT_CONTROL_REG & ~(CY_SYS_WDT_COUNTER0_INT 
1533:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_WDT_COUNTER1_INT 
1534:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_WDT_COUNTER2_INT)
1535:Generated_Source\PSoC4/CyLFClk.c **** 
1536:Generated_Source\PSoC4/CyLFClk.c ****         /* Read the CY_SYS_WDT_CONTROL_REG to clear the interrupt request.
1537:Generated_Source\PSoC4/CyLFClk.c ****          * Cypress ID #207093, #206231
1538:Generated_Source\PSoC4/CyLFClk.c ****         */
1539:Generated_Source\PSoC4/CyLFClk.c ****         (void)CY_SYS_WDT_CONTROL_REG;
1540:Generated_Source\PSoC4/CyLFClk.c **** 
1541:Generated_Source\PSoC4/CyLFClk.c ****         if (1u == wdtLockState)
1542:Generated_Source\PSoC4/CyLFClk.c ****         {
1543:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtLock();
1544:Generated_Source\PSoC4/CyLFClk.c ****         }
1545:Generated_Source\PSoC4/CyLFClk.c **** 
1546:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
1547:Generated_Source\PSoC4/CyLFClk.c ****     }
1548:Generated_Source\PSoC4/CyLFClk.c **** 
1549:Generated_Source\PSoC4/CyLFClk.c **** 
1550:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1551:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtResetCounters
1552:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1553:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1554:Generated_Source\PSoC4/CyLFClk.c ****     * Resets all the WDT counters set in the mask.
1555:Generated_Source\PSoC4/CyLFClk.c ****     *
1556:Generated_Source\PSoC4/CyLFClk.c ****     * \param countersMask
1557:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_RESET - Reset counter 0 <br>
1558:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_RESET - Reset counter 1 <br>
1559:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_RESET - Reset counter 2
1560:Generated_Source\PSoC4/CyLFClk.c ****     *
1561:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1562:Generated_Source\PSoC4/CyLFClk.c ****     * This function does not reset counter values if the Watchdog is locked.
1563:Generated_Source\PSoC4/CyLFClk.c ****     * This function waits while corresponding counters will be reset. This may
1564:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles.
1565:Generated_Source\PSoC4/CyLFClk.c ****     * The LFCLK source must be enabled. Otherwise, the function will never exit.
1566:Generated_Source\PSoC4/CyLFClk.c ****     *
1567:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1568:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtResetCounters(uint32 countersMask)
1569:Generated_Source\PSoC4/CyLFClk.c ****     {
1570:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WDT reset value */
1571:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG |= (countersMask & CY_SYS_WDT_COUNTERS_RESET);
1572:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 54


1573:Generated_Source\PSoC4/CyLFClk.c ****         while (0uL != (CY_SYS_WDT_CONTROL_REG & CY_SYS_WDT_COUNTERS_RESET))
1574:Generated_Source\PSoC4/CyLFClk.c ****         {
1575:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for reset to come into effect */
1576:Generated_Source\PSoC4/CyLFClk.c ****         }
1577:Generated_Source\PSoC4/CyLFClk.c ****     }
1578:Generated_Source\PSoC4/CyLFClk.c **** 
1579:Generated_Source\PSoC4/CyLFClk.c **** 
1580:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1581:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetInterruptCallback
1582:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1583:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1584:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the particular WDT counter.
1585:Generated_Source\PSoC4/CyLFClk.c ****     * These functions are called on the WDT interrupt.
1586:Generated_Source\PSoC4/CyLFClk.c ****     *
1587:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the WDT counter.
1588:Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
1589:Generated_Source\PSoC4/CyLFClk.c ****     *
1590:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the previous callback function.
1591:Generated_Source\PSoC4/CyLFClk.c ****     * \return NULL is returned if the specified address is not set.
1592:Generated_Source\PSoC4/CyLFClk.c ****     *
1593:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1594:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtSetInterruptCallback(uint32 counterNum, cyWdtCallback function)
1595:Generated_Source\PSoC4/CyLFClk.c ****     {
1596:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback prevCallback = (void *)0;
1597:Generated_Source\PSoC4/CyLFClk.c **** 
1598:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_WDT_NUM_OF_WDT)
1599:Generated_Source\PSoC4/CyLFClk.c ****         {
1600:Generated_Source\PSoC4/CyLFClk.c ****             prevCallback = cySysWdtCallback[counterNum];
1601:Generated_Source\PSoC4/CyLFClk.c ****             cySysWdtCallback[counterNum] = function;
1602:Generated_Source\PSoC4/CyLFClk.c ****         }
1603:Generated_Source\PSoC4/CyLFClk.c ****         else
1604:Generated_Source\PSoC4/CyLFClk.c ****         {
1605:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1606:Generated_Source\PSoC4/CyLFClk.c ****         }
1607:Generated_Source\PSoC4/CyLFClk.c **** 
1608:Generated_Source\PSoC4/CyLFClk.c ****         return((cyWdtCallback)prevCallback);
1609:Generated_Source\PSoC4/CyLFClk.c ****     }
1610:Generated_Source\PSoC4/CyLFClk.c **** 
1611:Generated_Source\PSoC4/CyLFClk.c **** 
1612:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1613:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetInterruptCallback
1614:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1615:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1616:Generated_Source\PSoC4/CyLFClk.c ****     * Gets the ISR callback function for the particular WDT counter.
1617:Generated_Source\PSoC4/CyLFClk.c ****     *
1618:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the WDT counter.
1619:Generated_Source\PSoC4/CyLFClk.c ****     *
1620:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the callback function registered for a particular WDT by
1621:Generated_Source\PSoC4/CyLFClk.c ****     * a particular address that are passed through arguments.
1622:Generated_Source\PSoC4/CyLFClk.c ****     *
1623:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1624:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtGetInterruptCallback(uint32 counterNum)
1625:Generated_Source\PSoC4/CyLFClk.c ****     {
1626:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback retCallback = (void *)0;
1627:Generated_Source\PSoC4/CyLFClk.c **** 
1628:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_WDT_NUM_OF_WDT)
1629:Generated_Source\PSoC4/CyLFClk.c ****         {
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 55


1630:Generated_Source\PSoC4/CyLFClk.c ****             retCallback = (cyWdtCallback)cySysWdtCallback[counterNum];
1631:Generated_Source\PSoC4/CyLFClk.c ****         }
1632:Generated_Source\PSoC4/CyLFClk.c ****         else
1633:Generated_Source\PSoC4/CyLFClk.c ****         {
1634:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1635:Generated_Source\PSoC4/CyLFClk.c ****         }
1636:Generated_Source\PSoC4/CyLFClk.c **** 
1637:Generated_Source\PSoC4/CyLFClk.c ****         return(retCallback);
1638:Generated_Source\PSoC4/CyLFClk.c ****     }
1639:Generated_Source\PSoC4/CyLFClk.c **** 
1640:Generated_Source\PSoC4/CyLFClk.c **** 
1641:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1642:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnableCounterIsr
1643:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1644:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1645:Generated_Source\PSoC4/CyLFClk.c ****     * Enables the ISR callback servicing for the particular WDT counter
1646:Generated_Source\PSoC4/CyLFClk.c ****     *
1647:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1648:Generated_Source\PSoC4/CyLFClk.c ****     *
1649:Generated_Source\PSoC4/CyLFClk.c ****     * Value corresponds to appropriate WDT counter. For example value 1 
1650:Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second WDT counter.
1651:Generated_Source\PSoC4/CyLFClk.c ****     *
1652:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1653:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnableCounterIsr(uint32 counterNum)
1654:Generated_Source\PSoC4/CyLFClk.c ****     {
1655:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_WDT_COUNTER2)
1656:Generated_Source\PSoC4/CyLFClk.c ****         {
1657:Generated_Source\PSoC4/CyLFClk.c ****             disableServicedIsr &= ~counterIntMaskTbl[counterNum];
1658:Generated_Source\PSoC4/CyLFClk.c ****             wdtIsrMask |= counterIntMaskTbl[counterNum];
1659:Generated_Source\PSoC4/CyLFClk.c ****         }
1660:Generated_Source\PSoC4/CyLFClk.c ****         else
1661:Generated_Source\PSoC4/CyLFClk.c ****         {
1662:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1663:Generated_Source\PSoC4/CyLFClk.c ****         }
1664:Generated_Source\PSoC4/CyLFClk.c ****     }
1665:Generated_Source\PSoC4/CyLFClk.c **** 
1666:Generated_Source\PSoC4/CyLFClk.c **** 
1667:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1668:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisableCounterIsr
1669:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1670:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1671:Generated_Source\PSoC4/CyLFClk.c ****     * Disables the ISR callback servicing for the particular WDT counter
1672:Generated_Source\PSoC4/CyLFClk.c ****     *
1673:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1674:Generated_Source\PSoC4/CyLFClk.c ****     *
1675:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1676:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisableCounterIsr(uint32 counterNum)
1677:Generated_Source\PSoC4/CyLFClk.c ****     {
1678:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_WDT_COUNTER2)
1679:Generated_Source\PSoC4/CyLFClk.c ****         {
1680:Generated_Source\PSoC4/CyLFClk.c ****             wdtIsrMask &= ~counterIntMaskTbl[counterNum];
1681:Generated_Source\PSoC4/CyLFClk.c ****         }
1682:Generated_Source\PSoC4/CyLFClk.c ****         else
1683:Generated_Source\PSoC4/CyLFClk.c ****         {
1684:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1685:Generated_Source\PSoC4/CyLFClk.c ****         }
1686:Generated_Source\PSoC4/CyLFClk.c ****     }
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 56


1687:Generated_Source\PSoC4/CyLFClk.c **** 
1688:Generated_Source\PSoC4/CyLFClk.c **** 
1689:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1690:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtIsr
1691:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1692:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1693:Generated_Source\PSoC4/CyLFClk.c ****     * This is the handler of the WDT interrupt in CPU NVIC.
1694:Generated_Source\PSoC4/CyLFClk.c ****     *
1695:Generated_Source\PSoC4/CyLFClk.c ****     * The handler checks which WDT triggered in the interrupt and calls the 
1696:Generated_Source\PSoC4/CyLFClk.c ****     * respective callback functions configured by the user by using 
1697:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtSetIsrCallback() API.
1698:Generated_Source\PSoC4/CyLFClk.c ****     *
1699:Generated_Source\PSoC4/CyLFClk.c ****     * The order of the callback execution is incremental. Callback-0 is
1700:Generated_Source\PSoC4/CyLFClk.c ****     * run as the first one and callback-2 is called as the last one.
1701:Generated_Source\PSoC4/CyLFClk.c ****     *
1702:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1703:Generated_Source\PSoC4/CyLFClk.c ****     * This function clears the WDT interrupt every time when it is called.
1704:Generated_Source\PSoC4/CyLFClk.c ****     * Reset after the 3rd interrupt does not happen if this function is registered
1705:Generated_Source\PSoC4/CyLFClk.c ****     * as the interrupt handler even if the "Watchdog with Interrupt" mode is
1706:Generated_Source\PSoC4/CyLFClk.c ****     * selected on the "Low Frequency Clocks" tab.
1707:Generated_Source\PSoC4/CyLFClk.c ****     *
1708:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1709:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtIsr(void)
1710:Generated_Source\PSoC4/CyLFClk.c ****     {
1711:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER0_INT & CY_SYS_WDT_CONTROL_REG))
1712:Generated_Source\PSoC4/CyLFClk.c ****         {
1713:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER0_INT & wdtIsrMask))
1714:Generated_Source\PSoC4/CyLFClk.c ****             {
1715:Generated_Source\PSoC4/CyLFClk.c ****                 wdtIsrMask &= ~(disableServicedIsr & CY_SYS_WDT_COUNTER0_INT);
1716:Generated_Source\PSoC4/CyLFClk.c ****                 disableServicedIsr  &= ~CY_SYS_WDT_COUNTER0_INT;
1717:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER0] != (void *) 0)
1718:Generated_Source\PSoC4/CyLFClk.c ****                 {
1719:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER0])();
1720:Generated_Source\PSoC4/CyLFClk.c ****                 }
1721:Generated_Source\PSoC4/CyLFClk.c ****             }
1722:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
1723:Generated_Source\PSoC4/CyLFClk.c ****         }
1724:Generated_Source\PSoC4/CyLFClk.c **** 
1725:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER1_INT & CY_SYS_WDT_CONTROL_REG))
1726:Generated_Source\PSoC4/CyLFClk.c ****         {
1727:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER1_INT & wdtIsrMask))
1728:Generated_Source\PSoC4/CyLFClk.c ****             {
1729:Generated_Source\PSoC4/CyLFClk.c ****                 wdtIsrMask &= ~(disableServicedIsr & CY_SYS_WDT_COUNTER1_INT);
1730:Generated_Source\PSoC4/CyLFClk.c ****                 disableServicedIsr  &= ~CY_SYS_WDT_COUNTER1_INT;
1731:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER1] != (void *) 0)
1732:Generated_Source\PSoC4/CyLFClk.c ****                 {
1733:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER1])();
1734:Generated_Source\PSoC4/CyLFClk.c ****                 }
1735:Generated_Source\PSoC4/CyLFClk.c ****             }
1736:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
1737:Generated_Source\PSoC4/CyLFClk.c ****         }
1738:Generated_Source\PSoC4/CyLFClk.c **** 
1739:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER2_INT & CY_SYS_WDT_CONTROL_REG))
1740:Generated_Source\PSoC4/CyLFClk.c ****         {
1741:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER2_INT & wdtIsrMask))
1742:Generated_Source\PSoC4/CyLFClk.c ****             {
1743:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER2] != (void *) 0)
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 57


1744:Generated_Source\PSoC4/CyLFClk.c ****                 {
1745:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER2])();
1746:Generated_Source\PSoC4/CyLFClk.c ****                 }
1747:Generated_Source\PSoC4/CyLFClk.c ****             }
1748:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER2_INT);
1749:Generated_Source\PSoC4/CyLFClk.c ****         }
1750:Generated_Source\PSoC4/CyLFClk.c ****     }
1751:Generated_Source\PSoC4/CyLFClk.c **** 
1752:Generated_Source\PSoC4/CyLFClk.c **** 
1753:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1754:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWatchdogFeed
1755:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1756:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1757:Generated_Source\PSoC4/CyLFClk.c ****     * Feeds the corresponded Watchdog Counter before it causes the device reset.
1758:Generated_Source\PSoC4/CyLFClk.c ****     *
1759:Generated_Source\PSoC4/CyLFClk.c ****     * Supported only for first WDT0 and second WDT1 counters in the "Watchdog" or 
1760:Generated_Source\PSoC4/CyLFClk.c ****     * "Watchdog w/ Interrupts" modes.
1761:Generated_Source\PSoC4/CyLFClk.c ****     *
1762:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1763:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0 - Feeds the Counter 0 <br>
1764:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1 - Feeds the Counter 1
1765:Generated_Source\PSoC4/CyLFClk.c ****     *
1766:Generated_Source\PSoC4/CyLFClk.c ****     * Value of counterNum corresponds to appropriate counter. For example value 1 
1767:Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second WDT1 Counter.
1768:Generated_Source\PSoC4/CyLFClk.c ****     *
1769:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1770:Generated_Source\PSoC4/CyLFClk.c ****     * Clears the WDT counter in the "Watchdog" mode or clears the WDT interrupt in
1771:Generated_Source\PSoC4/CyLFClk.c ****     * "Watchdog w/ Interrupts" mode. Does nothing in other modes.
1772:Generated_Source\PSoC4/CyLFClk.c ****     *
1773:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1774:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWatchdogFeed(uint32 counterNum)
1775:Generated_Source\PSoC4/CyLFClk.c ****     {
1776:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum == CY_SYS_WDT_COUNTER0)
1777:Generated_Source\PSoC4/CyLFClk.c ****         {
1778:Generated_Source\PSoC4/CyLFClk.c ****             if(CY_SYS_WDT_MODE_INT_RESET == CySysWdtGetMode(counterNum))
1779:Generated_Source\PSoC4/CyLFClk.c ****             {
1780:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
1781:Generated_Source\PSoC4/CyLFClk.c ****             }
1782:Generated_Source\PSoC4/CyLFClk.c ****             else if(CY_SYS_WDT_MODE_RESET == CySysWdtGetMode(counterNum))
1783:Generated_Source\PSoC4/CyLFClk.c ****             {
1784:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtResetCounters(CY_SYS_WDT_COUNTER0_RESET);
1785:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
1786:Generated_Source\PSoC4/CyLFClk.c ****             }
1787:Generated_Source\PSoC4/CyLFClk.c ****             else
1788:Generated_Source\PSoC4/CyLFClk.c ****             {
1789:Generated_Source\PSoC4/CyLFClk.c ****                 /* Do nothing. */
1790:Generated_Source\PSoC4/CyLFClk.c ****             }
1791:Generated_Source\PSoC4/CyLFClk.c ****         }
1792:Generated_Source\PSoC4/CyLFClk.c ****         else if(counterNum == CY_SYS_WDT_COUNTER1)
1793:Generated_Source\PSoC4/CyLFClk.c ****         {
1794:Generated_Source\PSoC4/CyLFClk.c ****             if(CY_SYS_WDT_MODE_INT_RESET == CySysWdtGetMode(counterNum))
1795:Generated_Source\PSoC4/CyLFClk.c ****             {
1796:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
1797:Generated_Source\PSoC4/CyLFClk.c ****             }
1798:Generated_Source\PSoC4/CyLFClk.c ****             else if(CY_SYS_WDT_MODE_RESET == CySysWdtGetMode(counterNum))
1799:Generated_Source\PSoC4/CyLFClk.c ****             {
1800:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtResetCounters(CY_SYS_WDT_COUNTER1_RESET);
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 58


1801:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
1802:Generated_Source\PSoC4/CyLFClk.c ****             }
1803:Generated_Source\PSoC4/CyLFClk.c ****             else
1804:Generated_Source\PSoC4/CyLFClk.c ****             {
1805:Generated_Source\PSoC4/CyLFClk.c ****                 /* Do nothing. */
1806:Generated_Source\PSoC4/CyLFClk.c ****             }
1807:Generated_Source\PSoC4/CyLFClk.c ****         }
1808:Generated_Source\PSoC4/CyLFClk.c ****         else
1809:Generated_Source\PSoC4/CyLFClk.c ****         {
1810:Generated_Source\PSoC4/CyLFClk.c ****             /* Do nothing. */
1811:Generated_Source\PSoC4/CyLFClk.c ****         }
1812:Generated_Source\PSoC4/CyLFClk.c ****     }
1813:Generated_Source\PSoC4/CyLFClk.c **** 
1814:Generated_Source\PSoC4/CyLFClk.c **** 
1815:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1816:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkLfclkPosedgeCatch
1817:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1818:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
1819:Generated_Source\PSoC4/CyLFClk.c ****     * Returns once the LFCLK positive edge occurred.
1820:Generated_Source\PSoC4/CyLFClk.c ****     *
1821:Generated_Source\PSoC4/CyLFClk.c ****     * CySysClkLfclkPosedgeRestore() should be called after this function
1822:Generated_Source\PSoC4/CyLFClk.c ****     * to restore the WDT configuration.
1823:Generated_Source\PSoC4/CyLFClk.c ****     *
1824:Generated_Source\PSoC4/CyLFClk.c ****     * A pair of the CySysClkLfclkPosedgeCatch() and CySysClkLfclkPosedgeRestore()
1825:Generated_Source\PSoC4/CyLFClk.c ****     * functions is expected to be called inside a critical section.
1826:Generated_Source\PSoC4/CyLFClk.c ****     *
1827:Generated_Source\PSoC4/CyLFClk.c ****     * To ensure that the WDT counter value is read until it changes, the enabled
1828:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter is used. If no counter is enabled, counter 0 is enabled.
1829:Generated_Source\PSoC4/CyLFClk.c ****     * And after the LFCLK source is switched, the counter 0 configuration
1830:Generated_Source\PSoC4/CyLFClk.c ****     * is restored.
1831:Generated_Source\PSoC4/CyLFClk.c ****     *
1832:Generated_Source\PSoC4/CyLFClk.c ****     * Not applicable for the PSoC 4000 / PSoC 4000S / PSoC 4100S / PSoC Analog 
1833:Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices.
1834:Generated_Source\PSoC4/CyLFClk.c ****     *
1835:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1836:Generated_Source\PSoC4/CyLFClk.c ****     * This function has no effect if WDT is locked (CySysWdtLock() is
1837:Generated_Source\PSoC4/CyLFClk.c ****     * called). Call CySysWdtUnlock() to unlock WDT.
1838:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
1839:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1840:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeCatch(void)
1841:Generated_Source\PSoC4/CyLFClk.c ****     {
1842:Generated_Source\PSoC4/CyLFClk.c ****         uint32 firstCount;
1843:Generated_Source\PSoC4/CyLFClk.c ****         static uint32 lfclkPosedgeEnabledWdtCounter = 0u;
1844:Generated_Source\PSoC4/CyLFClk.c **** 
1845:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
 1347              		.loc 1 1845 0
 1348 0024 9207     		lsl	r2, r2, #30
 1349 0026 21D5     		bpl	.L155
1846:Generated_Source\PSoC4/CyLFClk.c ****         {
1847:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER0;
 1350              		.loc 1 1847 0
 1351 0028 244D     		ldr	r5, .L156+12
 1352 002a 6C60     		str	r4, [r5, #4]
 1353              	.L139:
1848:Generated_Source\PSoC4/CyLFClk.c ****         }
1849:Generated_Source\PSoC4/CyLFClk.c ****         else if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
1850:Generated_Source\PSoC4/CyLFClk.c ****         {
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 59


1851:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER1;
1852:Generated_Source\PSoC4/CyLFClk.c ****         }
1853:Generated_Source\PSoC4/CyLFClk.c ****         else if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
1854:Generated_Source\PSoC4/CyLFClk.c ****         {
1855:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER2;
1856:Generated_Source\PSoC4/CyLFClk.c ****         }
1857:Generated_Source\PSoC4/CyLFClk.c ****         else /* All WDT counters are disabled */
1858:Generated_Source\PSoC4/CyLFClk.c ****         {
1859:Generated_Source\PSoC4/CyLFClk.c ****             /* Configure WDT counter # 0 */
1860:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Enabled = 1u;
1861:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER0;
1862:Generated_Source\PSoC4/CyLFClk.c **** 
1863:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Mode = CySysWdtGetMode(CY_SYS_WDT_COUNTER0);
1864:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtSetMode(CY_SYS_WDT_COUNTER0, CY_SYS_WDT_MODE_NONE);
1865:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtEnable(CY_SYS_WDT_COUNTER0_MASK);
1866:Generated_Source\PSoC4/CyLFClk.c ****         }
1867:Generated_Source\PSoC4/CyLFClk.c **** 
1868:Generated_Source\PSoC4/CyLFClk.c ****         firstCount = CySysWdtGetCount(lfclkPosedgeEnabledWdtCounter);
 1354              		.loc 1 1868 0
 1355 002c 201C     		mov	r0, r4
 1356 002e FFF7FEFF 		bl	CySysWdtGetCount
 1357              	.LVL113:
 1358 0032 041C     		mov	r4, r0
 1359              	.LVL114:
 1360              	.L142:
1869:Generated_Source\PSoC4/CyLFClk.c ****         while (CySysWdtGetCount(lfclkPosedgeEnabledWdtCounter) == firstCount)
 1361              		.loc 1 1869 0
 1362 0034 6868     		ldr	r0, [r5, #4]
 1363 0036 FFF7FEFF 		bl	CySysWdtGetCount
 1364              	.LVL115:
 1365 003a 8442     		cmp	r4, r0
 1366 003c FAD0     		beq	.L142
 1367              	.LBE134:
 1368              	.LBE136:
 126:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkLfclkPosedgeRestore();
 1369              		.loc 1 126 0
 1370 003e 1D4A     		ldr	r2, .L156+4
 1371 0040 1368     		ldr	r3, [r2]
 1372 0042 5B00     		lsl	r3, r3, #1
 1373 0044 5B08     		lsr	r3, r3, #1
 1374 0046 1360     		str	r3, [r2]
 1375              	.LBB137:
 1376              	.LBB138:
1870:Generated_Source\PSoC4/CyLFClk.c ****         {
1871:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for counter to increment */
1872:Generated_Source\PSoC4/CyLFClk.c ****         }
1873:Generated_Source\PSoC4/CyLFClk.c ****     }
1874:Generated_Source\PSoC4/CyLFClk.c **** 
1875:Generated_Source\PSoC4/CyLFClk.c **** 
1876:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1877:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkLfclkPosedgeRestore
1878:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1879:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
1880:Generated_Source\PSoC4/CyLFClk.c ****     *  Restores the WDT configuration after a CySysClkLfclkPosedgeCatch() call.
1881:Generated_Source\PSoC4/CyLFClk.c ****     *
1882:Generated_Source\PSoC4/CyLFClk.c ****     *  A pair of the CySysClkLfclkPosedgeCatch() and CySysClkLfclkPosedgeRestore()
1883:Generated_Source\PSoC4/CyLFClk.c ****     *  functions is expected to be called inside a critical section.
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 60


1884:Generated_Source\PSoC4/CyLFClk.c ****     *
1885:Generated_Source\PSoC4/CyLFClk.c ****     * Not applicable for the PSoC 4000/PSoC 4000S / PSoC 4100S / PSoC Analog 
1886:Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices.
1887:Generated_Source\PSoC4/CyLFClk.c ****     *
1888:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1889:Generated_Source\PSoC4/CyLFClk.c ****     *  This function has no effect if WDT is locked (CySysWdtLock() is
1890:Generated_Source\PSoC4/CyLFClk.c ****     *  called). Call CySysWdtUnlock() to unlock WDT.
1891:Generated_Source\PSoC4/CyLFClk.c ****     *
1892:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
1893:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1894:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeRestore(void)
1895:Generated_Source\PSoC4/CyLFClk.c ****     {
1896:Generated_Source\PSoC4/CyLFClk.c ****         if (lfclkPosedgeWdtCounter0Enabled != 0u)
 1377              		.loc 1 1896 0
 1378 0048 AB68     		ldr	r3, [r5, #8]
 1379 004a 002B     		cmp	r3, #0
 1380 004c 0AD0     		beq	.L143
1897:Generated_Source\PSoC4/CyLFClk.c ****         {
1898:Generated_Source\PSoC4/CyLFClk.c ****             /* Restore counter # 0 configuration and force its shutdown */
1899:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONTROL_REG &= (uint32)(~CY_SYS_WDT_COUNTER0_MASK);
 1381              		.loc 1 1899 0
 1382 004e 0121     		mov	r1, #1
 1383 0050 194A     		ldr	r2, .L156+8
1900:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtSetMode(CY_SYS_WDT_COUNTER0, lfclkPosedgeWdtCounter0Mode);
 1384              		.loc 1 1900 0
 1385 0052 0020     		mov	r0, #0
1899:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtSetMode(CY_SYS_WDT_COUNTER0, lfclkPosedgeWdtCounter0Mode);
 1386              		.loc 1 1899 0
 1387 0054 1368     		ldr	r3, [r2]
 1388 0056 8B43     		bic	r3, r1
 1389 0058 1360     		str	r3, [r2]
 1390              		.loc 1 1900 0
 1391 005a E968     		ldr	r1, [r5, #12]
 1392 005c FFF7FEFF 		bl	CySysWdtSetMode
 1393              	.LVL116:
1901:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Enabled = 0u;
 1394              		.loc 1 1901 0
 1395 0060 0023     		mov	r3, #0
 1396 0062 AB60     		str	r3, [r5, #8]
 1397              	.L143:
 1398              	.LBE138:
 1399              	.LBE137:
 128:Generated_Source\PSoC4/CyLFClk.c **** 
 1400              		.loc 1 128 0
 1401 0064 301C     		mov	r0, r6
 1402 0066 FFF7FEFF 		bl	CyExitCriticalSection
 1403              	.LVL117:
 1404 006a D4E7     		b	.L136
 1405              	.LVL118:
 1406              	.L155:
 1407              	.LBB139:
 1408              	.LBB135:
 1409              	.LBB122:
 1410              	.LBB123:
1020:Generated_Source\PSoC4/CyLFClk.c ****     }
 1411              		.loc 1 1020 0
 1412 006c 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 61


 1413 006e 520A     		lsr	r2, r2, #9
 1414              	.LBE123:
 1415              	.LBE122:
1849:Generated_Source\PSoC4/CyLFClk.c ****         {
 1416              		.loc 1 1849 0
 1417 0070 1142     		tst	r1, r2
 1418 0072 03D0     		beq	.L140
1851:Generated_Source\PSoC4/CyLFClk.c ****         }
 1419              		.loc 1 1851 0
 1420 0074 114D     		ldr	r5, .L156+12
 1421 0076 0124     		mov	r4, #1
 1422 0078 6960     		str	r1, [r5, #4]
 1423 007a D7E7     		b	.L139
 1424              	.L140:
 1425              	.LVL119:
 1426              	.LBB124:
 1427              	.LBB125:
1020:Generated_Source\PSoC4/CyLFClk.c ****     }
 1428              		.loc 1 1020 0
 1429 007c 1B68     		ldr	r3, [r3]
 1430              	.LBE125:
 1431              	.LBE124:
1855:Generated_Source\PSoC4/CyLFClk.c ****         }
 1432              		.loc 1 1855 0
 1433 007e 0F4D     		ldr	r5, .L156+12
 1434              	.LBB127:
 1435              	.LBB126:
1020:Generated_Source\PSoC4/CyLFClk.c ****     }
 1436              		.loc 1 1020 0
 1437 0080 5B0C     		lsr	r3, r3, #17
 1438              	.LBE126:
 1439              	.LBE127:
1853:Generated_Source\PSoC4/CyLFClk.c ****         {
 1440              		.loc 1 1853 0
 1441 0082 1942     		tst	r1, r3
 1442 0084 03D0     		beq	.L141
1855:Generated_Source\PSoC4/CyLFClk.c ****         }
 1443              		.loc 1 1855 0
 1444 0086 0223     		mov	r3, #2
 1445 0088 0224     		mov	r4, #2
 1446 008a 6B60     		str	r3, [r5, #4]
 1447 008c CEE7     		b	.L139
 1448              	.L141:
 1449              	.LBB128:
 1450              	.LBB129:
1077:Generated_Source\PSoC4/CyLFClk.c ****     }
 1451              		.loc 1 1077 0
 1452 008e 0322     		mov	r2, #3
 1453 0090 0B4B     		ldr	r3, .L156+16
 1454              	.LBE129:
 1455              	.LBE128:
1860:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER0;
 1456              		.loc 1 1860 0
 1457 0092 A960     		str	r1, [r5, #8]
1861:Generated_Source\PSoC4/CyLFClk.c **** 
 1458              		.loc 1 1861 0
 1459 0094 6C60     		str	r4, [r5, #4]
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 62


 1460              	.LVL120:
 1461              	.LBB132:
 1462              	.LBB130:
1077:Generated_Source\PSoC4/CyLFClk.c ****     }
 1463              		.loc 1 1077 0
 1464 0096 1B68     		ldr	r3, [r3]
 1465              	.LBE130:
 1466              	.LBE132:
1864:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtEnable(CY_SYS_WDT_COUNTER0_MASK);
 1467              		.loc 1 1864 0
 1468 0098 0020     		mov	r0, #0
 1469              	.LBB133:
 1470              	.LBB131:
1077:Generated_Source\PSoC4/CyLFClk.c ****     }
 1471              		.loc 1 1077 0
 1472 009a 1340     		and	r3, r2
 1473              	.LBE131:
 1474              	.LBE133:
1864:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtEnable(CY_SYS_WDT_COUNTER0_MASK);
 1475              		.loc 1 1864 0
 1476 009c 0021     		mov	r1, #0
1863:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtSetMode(CY_SYS_WDT_COUNTER0, CY_SYS_WDT_MODE_NONE);
 1477              		.loc 1 1863 0
 1478 009e EB60     		str	r3, [r5, #12]
1864:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtEnable(CY_SYS_WDT_COUNTER0_MASK);
 1479              		.loc 1 1864 0
 1480 00a0 FFF7FEFF 		bl	CySysWdtSetMode
 1481              	.LVL121:
1865:Generated_Source\PSoC4/CyLFClk.c ****         }
 1482              		.loc 1 1865 0
 1483 00a4 0120     		mov	r0, #1
 1484 00a6 FFF7FEFF 		bl	CySysWdtEnable
 1485              	.LVL122:
 1486 00aa 6C68     		ldr	r4, [r5, #4]
 1487 00ac BEE7     		b	.L139
 1488              	.L157:
 1489 00ae C046     		.align	2
 1490              	.L156:
 1491 00b0 00010B40 		.word	1074462976
 1492 00b4 04010B40 		.word	1074462980
 1493 00b8 10020B40 		.word	1074463248
 1494 00bc 00000000 		.word	.LANCHOR0
 1495 00c0 0C020B40 		.word	1074463244
 1496              	.LBE135:
 1497              	.LBE139:
 1498              		.cfi_endproc
 1499              	.LFE1:
 1500              		.size	CySysClkIloStop, .-CySysClkIloStop
 1501              		.section	.text.CySysWdtGetInterruptSource,"ax",%progbits
 1502              		.align	2
 1503              		.global	CySysWdtGetInterruptSource
 1504              		.code	16
 1505              		.thumb_func
 1506              		.type	CySysWdtGetInterruptSource, %function
 1507              	CySysWdtGetInterruptSource:
 1508              	.LFB23:
1482:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_CONTROL_REG & (CY_SYS_WDT_COUNTER0_INT | CY_SYS_WDT_COUNTER1_INT | CY_SY
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 63


 1509              		.loc 1 1482 0
 1510              		.cfi_startproc
1483:Generated_Source\PSoC4/CyLFClk.c ****     }
 1511              		.loc 1 1483 0
 1512 0000 024B     		ldr	r3, .L159
1484:Generated_Source\PSoC4/CyLFClk.c **** 
 1513              		.loc 1 1484 0
 1514              		@ sp needed
1483:Generated_Source\PSoC4/CyLFClk.c ****     }
 1515              		.loc 1 1483 0
 1516 0002 1868     		ldr	r0, [r3]
 1517 0004 024B     		ldr	r3, .L159+4
 1518 0006 1840     		and	r0, r3
1484:Generated_Source\PSoC4/CyLFClk.c **** 
 1519              		.loc 1 1484 0
 1520 0008 7047     		bx	lr
 1521              	.L160:
 1522 000a C046     		.align	2
 1523              	.L159:
 1524 000c 10020B40 		.word	1074463248
 1525 0010 04040400 		.word	263172
 1526              		.cfi_endproc
 1527              	.LFE23:
 1528              		.size	CySysWdtGetInterruptSource, .-CySysWdtGetInterruptSource
 1529              		.section	.text.CySysWdtClearInterrupt,"ax",%progbits
 1530              		.align	2
 1531              		.global	CySysWdtClearInterrupt
 1532              		.code	16
 1533              		.thumb_func
 1534              		.type	CySysWdtClearInterrupt, %function
 1535              	CySysWdtClearInterrupt:
 1536              	.LFB24:
1511:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
 1537              		.loc 1 1511 0
 1538              		.cfi_startproc
 1539              	.LVL123:
 1540 0000 38B5     		push	{r3, r4, r5, lr}
 1541              		.cfi_def_cfa_offset 16
 1542              		.cfi_offset 3, -16
 1543              		.cfi_offset 4, -12
 1544              		.cfi_offset 5, -8
 1545              		.cfi_offset 14, -4
1511:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
 1546              		.loc 1 1511 0
 1547 0002 051C     		mov	r5, r0
1515:Generated_Source\PSoC4/CyLFClk.c **** 
 1548              		.loc 1 1515 0
 1549 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1550              	.LVL124:
 1551              	.LBB140:
 1552              	.LBB141:
 972:Generated_Source\PSoC4/CyLFClk.c ****     }
 1553              		.loc 1 972 0
 1554 0008 104B     		ldr	r3, .L166
 1555              	.LBE141:
 1556              	.LBE140:
1515:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 64


 1557              		.loc 1 1515 0
 1558 000a 041C     		mov	r4, r0
 1559              	.LVL125:
 1560              	.LBB143:
 1561              	.LBB142:
 972:Generated_Source\PSoC4/CyLFClk.c ****     }
 1562              		.loc 1 972 0
 1563 000c 1A68     		ldr	r2, [r3]
 1564 000e C023     		mov	r3, #192
 1565 0010 1B02     		lsl	r3, r3, #8
 1566 0012 1A42     		tst	r2, r3
 1567 0014 10D0     		beq	.L165
 1568              	.LVL126:
 1569              	.LBE142:
 1570              	.LBE143:
1520:Generated_Source\PSoC4/CyLFClk.c ****         }
 1571              		.loc 1 1520 0
 1572 0016 FFF7FEFF 		bl	CySysWdtUnlock
 1573              	.LVL127:
1532:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_WDT_COUNTER1_INT 
 1574              		.loc 1 1532 0
 1575 001a 0D4A     		ldr	r2, .L166+4
1528:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_WDT_COUNTER1_INT |
 1576              		.loc 1 1528 0
 1577 001c 0D48     		ldr	r0, .L166+8
1532:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_WDT_COUNTER1_INT 
 1578              		.loc 1 1532 0
 1579 001e 1168     		ldr	r1, [r2]
 1580 0020 0D4B     		ldr	r3, .L166+12
1528:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_WDT_COUNTER1_INT |
 1581              		.loc 1 1528 0
 1582 0022 2840     		and	r0, r5
 1583              	.LVL128:
1532:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_WDT_COUNTER1_INT 
 1584              		.loc 1 1532 0
 1585 0024 0B40     		and	r3, r1
 1586 0026 1843     		orr	r0, r3
 1587              	.LVL129:
 1588 0028 1060     		str	r0, [r2]
1539:Generated_Source\PSoC4/CyLFClk.c **** 
 1589              		.loc 1 1539 0
 1590 002a 1368     		ldr	r3, [r2]
 1591              	.LVL130:
1543:Generated_Source\PSoC4/CyLFClk.c ****         }
 1592              		.loc 1 1543 0
 1593 002c FFF7FEFF 		bl	CySysWdtLock
 1594              	.LVL131:
 1595              	.L163:
1546:Generated_Source\PSoC4/CyLFClk.c ****     }
 1596              		.loc 1 1546 0
 1597 0030 201C     		mov	r0, r4
 1598 0032 FFF7FEFF 		bl	CyExitCriticalSection
 1599              	.LVL132:
1547:Generated_Source\PSoC4/CyLFClk.c **** 
 1600              		.loc 1 1547 0
 1601              		@ sp needed
 1602              	.LVL133:
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 65


 1603 0036 38BD     		pop	{r3, r4, r5, pc}
 1604              	.LVL134:
 1605              	.L165:
1532:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_WDT_COUNTER1_INT 
 1606              		.loc 1 1532 0
 1607 0038 054A     		ldr	r2, .L166+4
1528:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_WDT_COUNTER1_INT |
 1608              		.loc 1 1528 0
 1609 003a 0648     		ldr	r0, .L166+8
1532:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_WDT_COUNTER1_INT 
 1610              		.loc 1 1532 0
 1611 003c 1168     		ldr	r1, [r2]
 1612 003e 064B     		ldr	r3, .L166+12
1528:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_WDT_COUNTER1_INT |
 1613              		.loc 1 1528 0
 1614 0040 2840     		and	r0, r5
 1615              	.LVL135:
1532:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_WDT_COUNTER1_INT 
 1616              		.loc 1 1532 0
 1617 0042 0B40     		and	r3, r1
 1618 0044 1843     		orr	r0, r3
 1619              	.LVL136:
 1620 0046 1060     		str	r0, [r2]
1539:Generated_Source\PSoC4/CyLFClk.c **** 
 1621              		.loc 1 1539 0
 1622 0048 1368     		ldr	r3, [r2]
 1623 004a F1E7     		b	.L163
 1624              	.L167:
 1625              		.align	2
 1626              	.L166:
 1627 004c 00010B40 		.word	1074462976
 1628 0050 10020B40 		.word	1074463248
 1629 0054 04040400 		.word	263172
 1630 0058 FBFBFBFF 		.word	-263173
 1631              		.cfi_endproc
 1632              	.LFE24:
 1633              		.size	CySysWdtClearInterrupt, .-CySysWdtClearInterrupt
 1634              		.section	.text.CySysWdtResetCounters,"ax",%progbits
 1635              		.align	2
 1636              		.global	CySysWdtResetCounters
 1637              		.code	16
 1638              		.thumb_func
 1639              		.type	CySysWdtResetCounters, %function
 1640              	CySysWdtResetCounters:
 1641              	.LFB25:
1569:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WDT reset value */
 1642              		.loc 1 1569 0
 1643              		.cfi_startproc
 1644              	.LVL137:
1571:Generated_Source\PSoC4/CyLFClk.c **** 
 1645              		.loc 1 1571 0
 1646 0000 044A     		ldr	r2, .L171
 1647 0002 0549     		ldr	r1, .L171+4
 1648 0004 1368     		ldr	r3, [r2]
 1649 0006 0840     		and	r0, r1
 1650              	.LVL138:
 1651 0008 1843     		orr	r0, r3
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 66


 1652 000a 1060     		str	r0, [r2]
 1653              	.L169:
1573:Generated_Source\PSoC4/CyLFClk.c ****         {
 1654              		.loc 1 1573 0 discriminator 1
 1655 000c 1368     		ldr	r3, [r2]
 1656 000e 0B42     		tst	r3, r1
 1657 0010 FCD1     		bne	.L169
1577:Generated_Source\PSoC4/CyLFClk.c **** 
 1658              		.loc 1 1577 0
 1659              		@ sp needed
 1660 0012 7047     		bx	lr
 1661              	.L172:
 1662              		.align	2
 1663              	.L171:
 1664 0014 10020B40 		.word	1074463248
 1665 0018 08080800 		.word	526344
 1666              		.cfi_endproc
 1667              	.LFE25:
 1668              		.size	CySysWdtResetCounters, .-CySysWdtResetCounters
 1669              		.section	.text.CySysWdtSetInterruptCallback,"ax",%progbits
 1670              		.align	2
 1671              		.global	CySysWdtSetInterruptCallback
 1672              		.code	16
 1673              		.thumb_func
 1674              		.type	CySysWdtSetInterruptCallback, %function
 1675              	CySysWdtSetInterruptCallback:
 1676              	.LFB26:
1595:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback prevCallback = (void *)0;
 1677              		.loc 1 1595 0
 1678              		.cfi_startproc
 1679              	.LVL139:
 1680 0000 08B5     		push	{r3, lr}
 1681              		.cfi_def_cfa_offset 8
 1682              		.cfi_offset 3, -8
 1683              		.cfi_offset 14, -4
1598:Generated_Source\PSoC4/CyLFClk.c ****         {
 1684              		.loc 1 1598 0
 1685 0002 0228     		cmp	r0, #2
 1686 0004 05D8     		bhi	.L174
1600:Generated_Source\PSoC4/CyLFClk.c ****             cySysWdtCallback[counterNum] = function;
 1687              		.loc 1 1600 0
 1688 0006 054B     		ldr	r3, .L176
 1689 0008 8000     		lsl	r0, r0, #2
 1690              	.LVL140:
 1691 000a 1B18     		add	r3, r3, r0
 1692 000c 1869     		ldr	r0, [r3, #16]
 1693              	.LVL141:
1601:Generated_Source\PSoC4/CyLFClk.c ****         }
 1694              		.loc 1 1601 0
 1695 000e 1961     		str	r1, [r3, #16]
 1696              	.LVL142:
 1697              	.L175:
1609:Generated_Source\PSoC4/CyLFClk.c **** 
 1698              		.loc 1 1609 0
 1699              		@ sp needed
 1700 0010 08BD     		pop	{r3, pc}
 1701              	.LVL143:
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 67


 1702              	.L174:
1605:Generated_Source\PSoC4/CyLFClk.c ****         }
 1703              		.loc 1 1605 0 discriminator 1
 1704 0012 0020     		mov	r0, #0
 1705              	.LVL144:
 1706 0014 FFF7FEFF 		bl	CyHalt
 1707              	.LVL145:
1596:Generated_Source\PSoC4/CyLFClk.c **** 
 1708              		.loc 1 1596 0 discriminator 1
 1709 0018 0020     		mov	r0, #0
 1710 001a F9E7     		b	.L175
 1711              	.L177:
 1712              		.align	2
 1713              	.L176:
 1714 001c 00000000 		.word	.LANCHOR0
 1715              		.cfi_endproc
 1716              	.LFE26:
 1717              		.size	CySysWdtSetInterruptCallback, .-CySysWdtSetInterruptCallback
 1718              		.section	.text.CySysWdtGetInterruptCallback,"ax",%progbits
 1719              		.align	2
 1720              		.global	CySysWdtGetInterruptCallback
 1721              		.code	16
 1722              		.thumb_func
 1723              		.type	CySysWdtGetInterruptCallback, %function
 1724              	CySysWdtGetInterruptCallback:
 1725              	.LFB27:
1625:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback retCallback = (void *)0;
 1726              		.loc 1 1625 0
 1727              		.cfi_startproc
 1728              	.LVL146:
 1729 0000 08B5     		push	{r3, lr}
 1730              		.cfi_def_cfa_offset 8
 1731              		.cfi_offset 3, -8
 1732              		.cfi_offset 14, -4
1628:Generated_Source\PSoC4/CyLFClk.c ****         {
 1733              		.loc 1 1628 0
 1734 0002 0228     		cmp	r0, #2
 1735 0004 04D8     		bhi	.L179
1630:Generated_Source\PSoC4/CyLFClk.c ****         }
 1736              		.loc 1 1630 0
 1737 0006 054B     		ldr	r3, .L181
 1738 0008 8000     		lsl	r0, r0, #2
 1739              	.LVL147:
 1740 000a 1818     		add	r0, r3, r0
 1741 000c 0069     		ldr	r0, [r0, #16]
 1742              	.LVL148:
 1743              	.L180:
1638:Generated_Source\PSoC4/CyLFClk.c **** 
 1744              		.loc 1 1638 0
 1745              		@ sp needed
 1746 000e 08BD     		pop	{r3, pc}
 1747              	.LVL149:
 1748              	.L179:
1634:Generated_Source\PSoC4/CyLFClk.c ****         }
 1749              		.loc 1 1634 0 discriminator 1
 1750 0010 0020     		mov	r0, #0
 1751              	.LVL150:
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 68


 1752 0012 FFF7FEFF 		bl	CyHalt
 1753              	.LVL151:
1626:Generated_Source\PSoC4/CyLFClk.c **** 
 1754              		.loc 1 1626 0 discriminator 1
 1755 0016 0020     		mov	r0, #0
 1756 0018 F9E7     		b	.L180
 1757              	.L182:
 1758 001a C046     		.align	2
 1759              	.L181:
 1760 001c 00000000 		.word	.LANCHOR0
 1761              		.cfi_endproc
 1762              	.LFE27:
 1763              		.size	CySysWdtGetInterruptCallback, .-CySysWdtGetInterruptCallback
 1764              		.section	.text.CySysWdtEnableCounterIsr,"ax",%progbits
 1765              		.align	2
 1766              		.global	CySysWdtEnableCounterIsr
 1767              		.code	16
 1768              		.thumb_func
 1769              		.type	CySysWdtEnableCounterIsr, %function
 1770              	CySysWdtEnableCounterIsr:
 1771              	.LFB28:
1654:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_WDT_COUNTER2)
 1772              		.loc 1 1654 0
 1773              		.cfi_startproc
 1774              	.LVL152:
 1775 0000 08B5     		push	{r3, lr}
 1776              		.cfi_def_cfa_offset 8
 1777              		.cfi_offset 3, -8
 1778              		.cfi_offset 14, -4
1655:Generated_Source\PSoC4/CyLFClk.c ****         {
 1779              		.loc 1 1655 0
 1780 0002 0228     		cmp	r0, #2
 1781 0004 0BD8     		bhi	.L184
1657:Generated_Source\PSoC4/CyLFClk.c ****             wdtIsrMask |= counterIntMaskTbl[counterNum];
 1782              		.loc 1 1657 0
 1783 0006 084B     		ldr	r3, .L186
 1784 0008 8000     		lsl	r0, r0, #2
 1785              	.LVL153:
 1786 000a C158     		ldr	r1, [r0, r3]
 1787 000c 074B     		ldr	r3, .L186+4
 1788 000e DA69     		ldr	r2, [r3, #28]
 1789 0010 8A43     		bic	r2, r1
 1790 0012 DA61     		str	r2, [r3, #28]
1658:Generated_Source\PSoC4/CyLFClk.c ****         }
 1791              		.loc 1 1658 0
 1792 0014 064A     		ldr	r2, .L186+8
 1793 0016 1368     		ldr	r3, [r2]
 1794 0018 0B43     		orr	r3, r1
 1795 001a 1360     		str	r3, [r2]
 1796              	.L183:
1664:Generated_Source\PSoC4/CyLFClk.c **** 
 1797              		.loc 1 1664 0
 1798              		@ sp needed
 1799 001c 08BD     		pop	{r3, pc}
 1800              	.LVL154:
 1801              	.L184:
1662:Generated_Source\PSoC4/CyLFClk.c ****         }
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 69


 1802              		.loc 1 1662 0 discriminator 1
 1803 001e 0020     		mov	r0, #0
 1804              	.LVL155:
 1805 0020 FFF7FEFF 		bl	CyHalt
 1806              	.LVL156:
 1807 0024 FAE7     		b	.L183
 1808              	.L187:
 1809 0026 C046     		.align	2
 1810              	.L186:
 1811 0028 00000000 		.word	.LANCHOR1
 1812 002c 00000000 		.word	.LANCHOR0
 1813 0030 00000000 		.word	.LANCHOR2
 1814              		.cfi_endproc
 1815              	.LFE28:
 1816              		.size	CySysWdtEnableCounterIsr, .-CySysWdtEnableCounterIsr
 1817              		.section	.text.CySysWdtDisableCounterIsr,"ax",%progbits
 1818              		.align	2
 1819              		.global	CySysWdtDisableCounterIsr
 1820              		.code	16
 1821              		.thumb_func
 1822              		.type	CySysWdtDisableCounterIsr, %function
 1823              	CySysWdtDisableCounterIsr:
 1824              	.LFB29:
1677:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_WDT_COUNTER2)
 1825              		.loc 1 1677 0
 1826              		.cfi_startproc
 1827              	.LVL157:
 1828 0000 08B5     		push	{r3, lr}
 1829              		.cfi_def_cfa_offset 8
 1830              		.cfi_offset 3, -8
 1831              		.cfi_offset 14, -4
1678:Generated_Source\PSoC4/CyLFClk.c ****         {
 1832              		.loc 1 1678 0
 1833 0002 0228     		cmp	r0, #2
 1834 0004 07D8     		bhi	.L189
1680:Generated_Source\PSoC4/CyLFClk.c ****         }
 1835              		.loc 1 1680 0
 1836 0006 064A     		ldr	r2, .L191
 1837 0008 0649     		ldr	r1, .L191+4
 1838 000a 8000     		lsl	r0, r0, #2
 1839              	.LVL158:
 1840 000c 1368     		ldr	r3, [r2]
 1841 000e 4158     		ldr	r1, [r0, r1]
 1842 0010 8B43     		bic	r3, r1
 1843 0012 1360     		str	r3, [r2]
 1844              	.L188:
1686:Generated_Source\PSoC4/CyLFClk.c **** 
 1845              		.loc 1 1686 0
 1846              		@ sp needed
 1847 0014 08BD     		pop	{r3, pc}
 1848              	.LVL159:
 1849              	.L189:
1684:Generated_Source\PSoC4/CyLFClk.c ****         }
 1850              		.loc 1 1684 0 discriminator 1
 1851 0016 0020     		mov	r0, #0
 1852              	.LVL160:
 1853 0018 FFF7FEFF 		bl	CyHalt
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 70


 1854              	.LVL161:
 1855 001c FAE7     		b	.L188
 1856              	.L192:
 1857 001e C046     		.align	2
 1858              	.L191:
 1859 0020 00000000 		.word	.LANCHOR2
 1860 0024 00000000 		.word	.LANCHOR1
 1861              		.cfi_endproc
 1862              	.LFE29:
 1863              		.size	CySysWdtDisableCounterIsr, .-CySysWdtDisableCounterIsr
 1864              		.section	.text.CySysWdtIsr,"ax",%progbits
 1865              		.align	2
 1866              		.global	CySysWdtIsr
 1867              		.code	16
 1868              		.thumb_func
 1869              		.type	CySysWdtIsr, %function
 1870              	CySysWdtIsr:
 1871              	.LFB30:
1710:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER0_INT & CY_SYS_WDT_CONTROL_REG))
 1872              		.loc 1 1710 0
 1873              		.cfi_startproc
1711:Generated_Source\PSoC4/CyLFClk.c ****         {
 1874              		.loc 1 1711 0
 1875 0000 254B     		ldr	r3, .L227
1710:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER0_INT & CY_SYS_WDT_CONTROL_REG))
 1876              		.loc 1 1710 0
 1877 0002 10B5     		push	{r4, lr}
 1878              		.cfi_def_cfa_offset 8
 1879              		.cfi_offset 4, -8
 1880              		.cfi_offset 14, -4
1711:Generated_Source\PSoC4/CyLFClk.c ****         {
 1881              		.loc 1 1711 0
 1882 0004 1A68     		ldr	r2, [r3]
 1883 0006 0423     		mov	r3, #4
 1884 0008 1342     		tst	r3, r2
 1885 000a 06D0     		beq	.L194
1713:Generated_Source\PSoC4/CyLFClk.c ****             {
 1886              		.loc 1 1713 0
 1887 000c 234A     		ldr	r2, .L227+4
 1888 000e 1168     		ldr	r1, [r2]
 1889 0010 0B42     		tst	r3, r1
 1890 0012 33D1     		bne	.L225
 1891              	.L196:
1722:Generated_Source\PSoC4/CyLFClk.c ****         }
 1892              		.loc 1 1722 0
 1893 0014 0420     		mov	r0, #4
 1894 0016 FFF7FEFF 		bl	CySysWdtClearInterrupt
 1895              	.LVL162:
 1896              	.L194:
1725:Generated_Source\PSoC4/CyLFClk.c ****         {
 1897              		.loc 1 1725 0
 1898 001a 1F4B     		ldr	r3, .L227
 1899 001c 1A68     		ldr	r2, [r3]
 1900 001e 8023     		mov	r3, #128
 1901 0020 DB00     		lsl	r3, r3, #3
 1902 0022 1A42     		tst	r2, r3
 1903 0024 07D0     		beq	.L198
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 71


1727:Generated_Source\PSoC4/CyLFClk.c ****             {
 1904              		.loc 1 1727 0
 1905 0026 1D4A     		ldr	r2, .L227+4
 1906 0028 1168     		ldr	r1, [r2]
 1907 002a 1942     		tst	r1, r3
 1908 002c 17D1     		bne	.L226
 1909              	.L200:
1736:Generated_Source\PSoC4/CyLFClk.c ****         }
 1910              		.loc 1 1736 0
 1911 002e 8020     		mov	r0, #128
 1912 0030 C000     		lsl	r0, r0, #3
 1913 0032 FFF7FEFF 		bl	CySysWdtClearInterrupt
 1914              	.LVL163:
 1915              	.L198:
1739:Generated_Source\PSoC4/CyLFClk.c ****         {
 1916              		.loc 1 1739 0
 1917 0036 184B     		ldr	r3, .L227
 1918 0038 1A68     		ldr	r2, [r3]
 1919 003a 8023     		mov	r3, #128
 1920 003c DB02     		lsl	r3, r3, #11
 1921 003e 1A42     		tst	r2, r3
 1922 0040 0CD0     		beq	.L193
1741:Generated_Source\PSoC4/CyLFClk.c ****             {
 1923              		.loc 1 1741 0
 1924 0042 164A     		ldr	r2, .L227+4
 1925 0044 1268     		ldr	r2, [r2]
 1926 0046 1A42     		tst	r2, r3
 1927 0048 04D0     		beq	.L203
1743:Generated_Source\PSoC4/CyLFClk.c ****                 {
 1928              		.loc 1 1743 0
 1929 004a 154B     		ldr	r3, .L227+8
 1930 004c 9B69     		ldr	r3, [r3, #24]
 1931 004e 002B     		cmp	r3, #0
 1932 0050 00D0     		beq	.L203
1745:Generated_Source\PSoC4/CyLFClk.c ****                 }
 1933              		.loc 1 1745 0
 1934 0052 9847     		blx	r3
 1935              	.LVL164:
 1936              	.L203:
1748:Generated_Source\PSoC4/CyLFClk.c ****         }
 1937              		.loc 1 1748 0
 1938 0054 8020     		mov	r0, #128
 1939 0056 C002     		lsl	r0, r0, #11
 1940 0058 FFF7FEFF 		bl	CySysWdtClearInterrupt
 1941              	.LVL165:
 1942              	.L193:
1750:Generated_Source\PSoC4/CyLFClk.c **** 
 1943              		.loc 1 1750 0
 1944              		@ sp needed
 1945 005c 10BD     		pop	{r4, pc}
 1946              	.L226:
1729:Generated_Source\PSoC4/CyLFClk.c ****                 disableServicedIsr  &= ~CY_SYS_WDT_COUNTER1_INT;
 1947              		.loc 1 1729 0
 1948 005e 1049     		ldr	r1, .L227+8
 1949 0060 CC69     		ldr	r4, [r1, #28]
 1950 0062 1068     		ldr	r0, [r2]
 1951 0064 2340     		and	r3, r4
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 72


 1952 0066 9843     		bic	r0, r3
 1953 0068 1060     		str	r0, [r2]
1730:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER1] != (void *) 0)
 1954              		.loc 1 1730 0
 1955 006a CA69     		ldr	r2, [r1, #28]
 1956 006c 0D4B     		ldr	r3, .L227+12
 1957 006e 1340     		and	r3, r2
 1958 0070 CB61     		str	r3, [r1, #28]
1731:Generated_Source\PSoC4/CyLFClk.c ****                 {
 1959              		.loc 1 1731 0
 1960 0072 4B69     		ldr	r3, [r1, #20]
 1961 0074 002B     		cmp	r3, #0
 1962 0076 DAD0     		beq	.L200
1733:Generated_Source\PSoC4/CyLFClk.c ****                 }
 1963              		.loc 1 1733 0
 1964 0078 9847     		blx	r3
 1965              	.LVL166:
 1966 007a D8E7     		b	.L200
 1967              	.L225:
1715:Generated_Source\PSoC4/CyLFClk.c ****                 disableServicedIsr  &= ~CY_SYS_WDT_COUNTER0_INT;
 1968              		.loc 1 1715 0
 1969 007c 0849     		ldr	r1, .L227+8
 1970 007e CC69     		ldr	r4, [r1, #28]
 1971 0080 1068     		ldr	r0, [r2]
 1972 0082 1C40     		and	r4, r3
 1973 0084 A043     		bic	r0, r4
 1974 0086 1060     		str	r0, [r2]
1716:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER0] != (void *) 0)
 1975              		.loc 1 1716 0
 1976 0088 CA69     		ldr	r2, [r1, #28]
 1977 008a 9A43     		bic	r2, r3
1717:Generated_Source\PSoC4/CyLFClk.c ****                 {
 1978              		.loc 1 1717 0
 1979 008c 0B69     		ldr	r3, [r1, #16]
1716:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER0] != (void *) 0)
 1980              		.loc 1 1716 0
 1981 008e CA61     		str	r2, [r1, #28]
1717:Generated_Source\PSoC4/CyLFClk.c ****                 {
 1982              		.loc 1 1717 0
 1983 0090 002B     		cmp	r3, #0
 1984 0092 BFD0     		beq	.L196
1719:Generated_Source\PSoC4/CyLFClk.c ****                 }
 1985              		.loc 1 1719 0
 1986 0094 9847     		blx	r3
 1987              	.LVL167:
 1988 0096 BDE7     		b	.L196
 1989              	.L228:
 1990              		.align	2
 1991              	.L227:
 1992 0098 10020B40 		.word	1074463248
 1993 009c 00000000 		.word	.LANCHOR2
 1994 00a0 00000000 		.word	.LANCHOR0
 1995 00a4 FFFBFFFF 		.word	-1025
 1996              		.cfi_endproc
 1997              	.LFE30:
 1998              		.size	CySysWdtIsr, .-CySysWdtIsr
 1999              		.section	.text.CySysWatchdogFeed,"ax",%progbits
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 73


 2000              		.align	2
 2001              		.global	CySysWatchdogFeed
 2002              		.code	16
 2003              		.thumb_func
 2004              		.type	CySysWatchdogFeed, %function
 2005              	CySysWatchdogFeed:
 2006              	.LFB31:
1775:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum == CY_SYS_WDT_COUNTER0)
 2007              		.loc 1 1775 0
 2008              		.cfi_startproc
 2009              	.LVL168:
 2010 0000 08B5     		push	{r3, lr}
 2011              		.cfi_def_cfa_offset 8
 2012              		.cfi_offset 3, -8
 2013              		.cfi_offset 14, -4
1776:Generated_Source\PSoC4/CyLFClk.c ****         {
 2014              		.loc 1 1776 0
 2015 0002 0028     		cmp	r0, #0
 2016 0004 0AD1     		bne	.L230
 2017              	.LVL169:
 2018              	.LBB144:
 2019              	.LBB145:
1077:Generated_Source\PSoC4/CyLFClk.c ****     }
 2020              		.loc 1 1077 0
 2021 0006 0322     		mov	r2, #3
 2022 0008 1949     		ldr	r1, .L241
 2023 000a 0B68     		ldr	r3, [r1]
 2024 000c 1340     		and	r3, r2
 2025              	.LBE145:
 2026              	.LBE144:
1778:Generated_Source\PSoC4/CyLFClk.c ****             {
 2027              		.loc 1 1778 0
 2028 000e 032B     		cmp	r3, #3
 2029 0010 2AD0     		beq	.L234
 2030              	.LVL170:
 2031              	.LBB146:
 2032              	.LBB147:
1077:Generated_Source\PSoC4/CyLFClk.c ****     }
 2033              		.loc 1 1077 0
 2034 0012 0B68     		ldr	r3, [r1]
 2035 0014 1340     		and	r3, r2
 2036              	.LBE147:
 2037              	.LBE146:
1782:Generated_Source\PSoC4/CyLFClk.c ****             {
 2038              		.loc 1 1782 0
 2039 0016 022B     		cmp	r3, #2
 2040 0018 1DD0     		beq	.L240
 2041              	.LVL171:
 2042              	.L229:
1812:Generated_Source\PSoC4/CyLFClk.c **** 
 2043              		.loc 1 1812 0
 2044              		@ sp needed
 2045 001a 08BD     		pop	{r3, pc}
 2046              	.LVL172:
 2047              	.L230:
1792:Generated_Source\PSoC4/CyLFClk.c ****         {
 2048              		.loc 1 1792 0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 74


 2049 001c 0128     		cmp	r0, #1
 2050 001e FCD1     		bne	.L229
 2051              	.LVL173:
 2052              	.LBB148:
 2053              	.LBB149:
1077:Generated_Source\PSoC4/CyLFClk.c ****     }
 2054              		.loc 1 1077 0
 2055 0020 0322     		mov	r2, #3
 2056 0022 1349     		ldr	r1, .L241
 2057 0024 0B68     		ldr	r3, [r1]
 2058 0026 1B0A     		lsr	r3, r3, #8
 2059 0028 1340     		and	r3, r2
 2060              	.LBE149:
 2061              	.LBE148:
1794:Generated_Source\PSoC4/CyLFClk.c ****             {
 2062              		.loc 1 1794 0
 2063 002a 032B     		cmp	r3, #3
 2064 002c 0ED0     		beq	.L237
 2065              	.LVL174:
 2066              	.LBB150:
 2067              	.LBB151:
1077:Generated_Source\PSoC4/CyLFClk.c ****     }
 2068              		.loc 1 1077 0
 2069 002e 0B68     		ldr	r3, [r1]
 2070 0030 1B0A     		lsr	r3, r3, #8
 2071 0032 1340     		and	r3, r2
 2072              	.LBE151:
 2073              	.LBE150:
1798:Generated_Source\PSoC4/CyLFClk.c ****             {
 2074              		.loc 1 1798 0
 2075 0034 022B     		cmp	r3, #2
 2076 0036 F0D1     		bne	.L229
 2077              	.LVL175:
 2078              	.LBB152:
 2079              	.LBB153:
1571:Generated_Source\PSoC4/CyLFClk.c **** 
 2080              		.loc 1 1571 0
 2081 0038 8021     		mov	r1, #128
 2082 003a 0E4A     		ldr	r2, .L241+4
 2083 003c 0901     		lsl	r1, r1, #4
 2084 003e 1368     		ldr	r3, [r2]
 2085 0040 0B43     		orr	r3, r1
1573:Generated_Source\PSoC4/CyLFClk.c ****         {
 2086              		.loc 1 1573 0
 2087 0042 0D49     		ldr	r1, .L241+8
1571:Generated_Source\PSoC4/CyLFClk.c **** 
 2088              		.loc 1 1571 0
 2089 0044 1360     		str	r3, [r2]
 2090              	.L236:
1573:Generated_Source\PSoC4/CyLFClk.c ****         {
 2091              		.loc 1 1573 0
 2092 0046 1368     		ldr	r3, [r2]
 2093 0048 0B42     		tst	r3, r1
 2094 004a FCD1     		bne	.L236
 2095              	.LVL176:
 2096              	.L237:
 2097              	.LBE153:
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 75


 2098              	.LBE152:
1796:Generated_Source\PSoC4/CyLFClk.c ****             }
 2099              		.loc 1 1796 0
 2100 004c 8020     		mov	r0, #128
 2101              	.LVL177:
 2102 004e C000     		lsl	r0, r0, #3
 2103 0050 FFF7FEFF 		bl	CySysWdtClearInterrupt
 2104              	.LVL178:
 2105 0054 E1E7     		b	.L229
 2106              	.LVL179:
 2107              	.L240:
 2108              	.LBB154:
 2109              	.LBB155:
1571:Generated_Source\PSoC4/CyLFClk.c **** 
 2110              		.loc 1 1571 0
 2111 0056 074A     		ldr	r2, .L241+4
 2112 0058 0633     		add	r3, r3, #6
 2113 005a 1168     		ldr	r1, [r2]
 2114 005c 0B43     		orr	r3, r1
1573:Generated_Source\PSoC4/CyLFClk.c ****         {
 2115              		.loc 1 1573 0
 2116 005e 0649     		ldr	r1, .L241+8
1571:Generated_Source\PSoC4/CyLFClk.c **** 
 2117              		.loc 1 1571 0
 2118 0060 1360     		str	r3, [r2]
 2119              	.L233:
1573:Generated_Source\PSoC4/CyLFClk.c ****         {
 2120              		.loc 1 1573 0
 2121 0062 1368     		ldr	r3, [r2]
 2122 0064 0B42     		tst	r3, r1
 2123 0066 FCD1     		bne	.L233
 2124              	.LVL180:
 2125              	.L234:
 2126              	.LBE155:
 2127              	.LBE154:
1780:Generated_Source\PSoC4/CyLFClk.c ****             }
 2128              		.loc 1 1780 0
 2129 0068 0420     		mov	r0, #4
 2130              	.LVL181:
 2131 006a FFF7FEFF 		bl	CySysWdtClearInterrupt
 2132              	.LVL182:
 2133 006e D4E7     		b	.L229
 2134              	.L242:
 2135              		.align	2
 2136              	.L241:
 2137 0070 0C020B40 		.word	1074463244
 2138 0074 10020B40 		.word	1074463248
 2139 0078 08080800 		.word	526344
 2140              		.cfi_endproc
 2141              	.LFE31:
 2142              		.size	CySysWatchdogFeed, .-CySysWatchdogFeed
 2143              		.section	.text.CySysTimerDelayUntilMatch,"ax",%progbits
 2144              		.align	2
 2145              		.global	CySysTimerDelayUntilMatch
 2146              		.code	16
 2147              		.thumb_func
 2148              		.type	CySysTimerDelayUntilMatch, %function
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 76


 2149              	CySysTimerDelayUntilMatch:
 2150              	.LFB35:
1902:Generated_Source\PSoC4/CyLFClk.c ****         }
1903:Generated_Source\PSoC4/CyLFClk.c ****     }
1904:Generated_Source\PSoC4/CyLFClk.c **** 
1905:Generated_Source\PSoC4/CyLFClk.c **** #else
1906:Generated_Source\PSoC4/CyLFClk.c **** 
1907:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1908:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetEnabledStatus
1909:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1910:Generated_Source\PSoC4/CyLFClk.c ****     *
1911:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the enabled status of the WDT counter.
1912:Generated_Source\PSoC4/CyLFClk.c ****     *
1913:Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the WDT counter:
1914:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - Counter is disabled
1915:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - Counter is enabled
1916:Generated_Source\PSoC4/CyLFClk.c ****     *
1917:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1918:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetEnabledStatus(void)
1919:Generated_Source\PSoC4/CyLFClk.c ****     {
1920:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_DISABLE_KEY_REG == CY_SYS_WDT_KEY) ? (uint32) 0u : (uint32) 1u);
1921:Generated_Source\PSoC4/CyLFClk.c ****     }
1922:Generated_Source\PSoC4/CyLFClk.c **** 
1923:Generated_Source\PSoC4/CyLFClk.c **** 
1924:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1925:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnable
1926:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1927:Generated_Source\PSoC4/CyLFClk.c ****     *
1928:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1929:Generated_Source\PSoC4/CyLFClk.c ****     * Enables watchdog timer reset generation.
1930:Generated_Source\PSoC4/CyLFClk.c ****     *
1931:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtClearInterrupt() feeds the watchdog. Two unserviced interrupts lead 
1932:Generated_Source\PSoC4/CyLFClk.c ****     * to a system reset (i.e. at the third match).
1933:Generated_Source\PSoC4/CyLFClk.c ****     *
1934:Generated_Source\PSoC4/CyLFClk.c ****     * ILO is enabled by the hardware once WDT is started.
1935:Generated_Source\PSoC4/CyLFClk.c ****     *
1936:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1937:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnable(void)
1938:Generated_Source\PSoC4/CyLFClk.c ****     {
1939:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_DISABLE_KEY_REG = 0u;
1940:Generated_Source\PSoC4/CyLFClk.c ****     }
1941:Generated_Source\PSoC4/CyLFClk.c **** 
1942:Generated_Source\PSoC4/CyLFClk.c **** 
1943:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1944:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisable
1945:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1946:Generated_Source\PSoC4/CyLFClk.c ****     *
1947:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the WDT reset generation.
1948:Generated_Source\PSoC4/CyLFClk.c ****     *
1949:Generated_Source\PSoC4/CyLFClk.c ****     * This function unlocks the ENABLE bit in the CLK_ILO_CONFIG registers and
1950:Generated_Source\PSoC4/CyLFClk.c ****     * enables the user to disable ILO.
1951:Generated_Source\PSoC4/CyLFClk.c ****     *
1952:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1953:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisable(void)
1954:Generated_Source\PSoC4/CyLFClk.c ****     {
1955:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_DISABLE_KEY_REG = CY_SYS_WDT_KEY;
1956:Generated_Source\PSoC4/CyLFClk.c ****     }
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 77


1957:Generated_Source\PSoC4/CyLFClk.c **** 
1958:Generated_Source\PSoC4/CyLFClk.c **** 
1959:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1960:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMatch
1961:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1962:Generated_Source\PSoC4/CyLFClk.c ****     *
1963:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter match comparison value.
1964:Generated_Source\PSoC4/CyLFClk.c ****     *
1965:Generated_Source\PSoC4/CyLFClk.c ****     * \param match Valid range [0-65535]. The value to be used to match against 
1966:Generated_Source\PSoC4/CyLFClk.c ****     * the counter.
1967:Generated_Source\PSoC4/CyLFClk.c ****     *
1968:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1969:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMatch(uint32 match)
1970:Generated_Source\PSoC4/CyLFClk.c ****     {
1971:Generated_Source\PSoC4/CyLFClk.c ****         match &= CY_SYS_WDT_MATCH_MASK;
1972:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (CY_SYS_WDT_MATCH_REG & (uint32)(~CY_SYS_WDT_MATCH_MASK)) | match;
1973:Generated_Source\PSoC4/CyLFClk.c ****     }
1974:Generated_Source\PSoC4/CyLFClk.c **** 
1975:Generated_Source\PSoC4/CyLFClk.c **** 
1976:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1977:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMatch
1978:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1979:Generated_Source\PSoC4/CyLFClk.c ****     *
1980:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the WDT counter match comparison value.
1981:Generated_Source\PSoC4/CyLFClk.c ****     *
1982:Generated_Source\PSoC4/CyLFClk.c ****     * \return The counter match value.
1983:Generated_Source\PSoC4/CyLFClk.c ****     *
1984:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1985:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMatch(void)
1986:Generated_Source\PSoC4/CyLFClk.c ****     {
1987:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_MATCH_MASK);
1988:Generated_Source\PSoC4/CyLFClk.c ****     }
1989:Generated_Source\PSoC4/CyLFClk.c **** 
1990:Generated_Source\PSoC4/CyLFClk.c **** 
1991:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCount
1993:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLFClk.c ****     *
1995:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current WDT counter value.
1996:Generated_Source\PSoC4/CyLFClk.c ****     *
1997:Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value.
1998:Generated_Source\PSoC4/CyLFClk.c ****     *
1999:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2000:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCount(void)
2001:Generated_Source\PSoC4/CyLFClk.c ****     {
2002:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)CY_SYS_WDT_COUNTER_REG);
2003:Generated_Source\PSoC4/CyLFClk.c ****     }
2004:Generated_Source\PSoC4/CyLFClk.c **** 
2005:Generated_Source\PSoC4/CyLFClk.c **** 
2006:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2007:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetIgnoreBits
2008:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2009:Generated_Source\PSoC4/CyLFClk.c ****     *
2010:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2011:Generated_Source\PSoC4/CyLFClk.c ****     * Configures the number of the MSB bits of the watchdog timer that are not
2012:Generated_Source\PSoC4/CyLFClk.c ****     * checked against the match.
2013:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 78


2014:Generated_Source\PSoC4/CyLFClk.c ****     * \param bitsNum Valid range [0-15]. The number of the MSB bits.
2015:Generated_Source\PSoC4/CyLFClk.c ****     *
2016:Generated_Source\PSoC4/CyLFClk.c ****     * \details The value of bitsNum controls the time-to-reset of the watchdog
2017:Generated_Source\PSoC4/CyLFClk.c ****     * (which happens after 3 successive matches).
2018:Generated_Source\PSoC4/CyLFClk.c ****     *
2019:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2020:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetIgnoreBits(uint32 bitsNum)
2021:Generated_Source\PSoC4/CyLFClk.c ****     {
2022:Generated_Source\PSoC4/CyLFClk.c ****         bitsNum = ((uint32)(bitsNum << CY_SYS_WDT_IGNORE_BITS_SHIFT) & CY_SYS_WDT_IGNORE_BITS_MASK)
2023:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (CY_SYS_WDT_MATCH_REG & (uint32)(~CY_SYS_WDT_IGNORE_BITS_MASK)) | bi
2024:Generated_Source\PSoC4/CyLFClk.c ****     }
2025:Generated_Source\PSoC4/CyLFClk.c **** 
2026:Generated_Source\PSoC4/CyLFClk.c **** 
2027:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2028:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetIgnoreBits
2029:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2030:Generated_Source\PSoC4/CyLFClk.c ****     *
2031:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2032:Generated_Source\PSoC4/CyLFClk.c ****     * Reads the number of the  MSB bits of the watchdog timer that are not
2033:Generated_Source\PSoC4/CyLFClk.c ****     * checked against the match.
2034:Generated_Source\PSoC4/CyLFClk.c ****     *
2035:Generated_Source\PSoC4/CyLFClk.c ****     * \return The number of the MSB bits.
2036:Generated_Source\PSoC4/CyLFClk.c ****     *
2037:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2038:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetIgnoreBits(void)
2039:Generated_Source\PSoC4/CyLFClk.c ****     {
2040:Generated_Source\PSoC4/CyLFClk.c ****         return((uint32)((CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_IGNORE_BITS_MASK) >> CY_SYS_WDT_IGNORE_B
2041:Generated_Source\PSoC4/CyLFClk.c ****     }
2042:Generated_Source\PSoC4/CyLFClk.c **** 
2043:Generated_Source\PSoC4/CyLFClk.c **** 
2044:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2045:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtClearInterrupt
2046:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2047:Generated_Source\PSoC4/CyLFClk.c ****     *
2048:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2049:Generated_Source\PSoC4/CyLFClk.c ****     * Feeds the watchdog.
2050:Generated_Source\PSoC4/CyLFClk.c ****     * Cleans the WDT match flag which is set every time the WDT counter reaches a 
2051:Generated_Source\PSoC4/CyLFClk.c ****     * WDT match value. Two unserviced interrupts lead to a system reset 
2052:Generated_Source\PSoC4/CyLFClk.c ****     * (i.e. at the third match).
2053:Generated_Source\PSoC4/CyLFClk.c ****     *
2054:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2055:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtClearInterrupt(void)
2056:Generated_Source\PSoC4/CyLFClk.c ****     {
2057:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
2058:Generated_Source\PSoC4/CyLFClk.c ****     }
2059:Generated_Source\PSoC4/CyLFClk.c **** 
2060:Generated_Source\PSoC4/CyLFClk.c **** 
2061:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2062:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtMaskInterrupt
2063:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2064:Generated_Source\PSoC4/CyLFClk.c ****     *
2065:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2066:Generated_Source\PSoC4/CyLFClk.c ****     * After masking interrupts from WDT, they are not passed to CPU.
2067:Generated_Source\PSoC4/CyLFClk.c ****     * This function does not disable WDT reset generation.
2068:Generated_Source\PSoC4/CyLFClk.c ****     *
2069:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2070:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtMaskInterrupt(void)
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 79


2071:Generated_Source\PSoC4/CyLFClk.c ****     {
2072:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_MASK_REG &= (uint32)(~ (uint32)CY_SYS_WDT_LOWER_BIT_MASK);
2073:Generated_Source\PSoC4/CyLFClk.c ****     }
2074:Generated_Source\PSoC4/CyLFClk.c **** 
2075:Generated_Source\PSoC4/CyLFClk.c **** 
2076:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2077:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtUnmaskInterrupt
2078:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2079:Generated_Source\PSoC4/CyLFClk.c ****     *
2080:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2081:Generated_Source\PSoC4/CyLFClk.c ****     * After unmasking interrupts from WDT, they are passed to CPU.
2082:Generated_Source\PSoC4/CyLFClk.c ****     * This function does not impact the reset generation.
2083:Generated_Source\PSoC4/CyLFClk.c ****     *
2084:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2085:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtUnmaskInterrupt(void)
2086:Generated_Source\PSoC4/CyLFClk.c ****     {
2087:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_MASK_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
2088:Generated_Source\PSoC4/CyLFClk.c ****     }
2089:Generated_Source\PSoC4/CyLFClk.c **** 
2090:Generated_Source\PSoC4/CyLFClk.c **** 
2091:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2092:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetIsrCallback
2093:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2094:Generated_Source\PSoC4/CyLFClk.c ****     *
2095:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2096:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the WDT counter
2097:Generated_Source\PSoC4/CyLFClk.c ****     *
2098:Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
2099:Generated_Source\PSoC4/CyLFClk.c ****     *
2100:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to a previous callback function.
2101:Generated_Source\PSoC4/CyLFClk.c ****     *
2102:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2103:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtSetInterruptCallback(cyWdtCallback function)
2104:Generated_Source\PSoC4/CyLFClk.c ****     {
2105:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback prevCallback = (void *)0;
2106:Generated_Source\PSoC4/CyLFClk.c **** 
2107:Generated_Source\PSoC4/CyLFClk.c ****         prevCallback = cySysWdtCallback;
2108:Generated_Source\PSoC4/CyLFClk.c ****         cySysWdtCallback = function;
2109:Generated_Source\PSoC4/CyLFClk.c **** 
2110:Generated_Source\PSoC4/CyLFClk.c ****         return(prevCallback);
2111:Generated_Source\PSoC4/CyLFClk.c ****     }
2112:Generated_Source\PSoC4/CyLFClk.c **** 
2113:Generated_Source\PSoC4/CyLFClk.c **** 
2114:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2115:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetIsrCallback
2116:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2117:Generated_Source\PSoC4/CyLFClk.c ****     *
2118:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2119:Generated_Source\PSoC4/CyLFClk.c ****     * Gets the ISR callback function for the WDT counter
2120:Generated_Source\PSoC4/CyLFClk.c ****     *
2121:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the callback function registered for WDT.
2122:Generated_Source\PSoC4/CyLFClk.c ****     *
2123:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2124:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtGetInterruptCallback(void)
2125:Generated_Source\PSoC4/CyLFClk.c ****     {
2126:Generated_Source\PSoC4/CyLFClk.c ****         return(cySysWdtCallback);
2127:Generated_Source\PSoC4/CyLFClk.c ****     }
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 80


2128:Generated_Source\PSoC4/CyLFClk.c **** 
2129:Generated_Source\PSoC4/CyLFClk.c **** 
2130:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2131:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtIsr
2132:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2133:Generated_Source\PSoC4/CyLFClk.c ****     *
2134:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2135:Generated_Source\PSoC4/CyLFClk.c ****     * This is the handler of the WDT interrupt in CPU NVIC.
2136:Generated_Source\PSoC4/CyLFClk.c ****     *
2137:Generated_Source\PSoC4/CyLFClk.c ****     * The handler calls the respective callback functions configured by the user 
2138:Generated_Source\PSoC4/CyLFClk.c ****     * by using CySysWdtSetIsrCallback() API.
2139:Generated_Source\PSoC4/CyLFClk.c ****     *
2140:Generated_Source\PSoC4/CyLFClk.c ****     *
2141:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2142:Generated_Source\PSoC4/CyLFClk.c ****     * This function clears the WDT interrupt every time when it is called.
2143:Generated_Source\PSoC4/CyLFClk.c ****     * Reset after the 3rd interrupt does not happen if this function is registered
2144:Generated_Source\PSoC4/CyLFClk.c ****     * as the interrupt handler even if the "Watchdog with Interrupt" mode is
2145:Generated_Source\PSoC4/CyLFClk.c ****     * selected on the "Low Frequency Clocks" tab.
2146:Generated_Source\PSoC4/CyLFClk.c ****     *
2147:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtIsr(void)
2149:Generated_Source\PSoC4/CyLFClk.c ****     {
2150:Generated_Source\PSoC4/CyLFClk.c ****         if(cySysWdtCallback != (void *) 0)
2151:Generated_Source\PSoC4/CyLFClk.c ****         {
2152:Generated_Source\PSoC4/CyLFClk.c ****             (void)(cySysWdtCallback)();
2153:Generated_Source\PSoC4/CyLFClk.c ****         }
2154:Generated_Source\PSoC4/CyLFClk.c **** 
2155:Generated_Source\PSoC4/CyLFClk.c ****         CySysWdtClearInterrupt();
2156:Generated_Source\PSoC4/CyLFClk.c ****     }
2157:Generated_Source\PSoC4/CyLFClk.c **** 
2158:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
2159:Generated_Source\PSoC4/CyLFClk.c **** 
2160:Generated_Source\PSoC4/CyLFClk.c **** 
2161:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
2162:Generated_Source\PSoC4/CyLFClk.c **** 
2163:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
2164:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkGetTimerSource
2165:Generated_Source\PSoC4/CyLFClk.c **** ********************************************************************************
2166:Generated_Source\PSoC4/CyLFClk.c **** *
2167:Generated_Source\PSoC4/CyLFClk.c **** * \brief Gets the clock source for the DeepSleep Timers.
2168:Generated_Source\PSoC4/CyLFClk.c **** *
2169:Generated_Source\PSoC4/CyLFClk.c **** * The function is applicable only for PSoC 4100S / PSoC Analog Coprocessor.
2170:Generated_Source\PSoC4/CyLFClk.c **** *
2171:Generated_Source\PSoC4/CyLFClk.c **** * \return The DeepSleep Timer source
2172:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_TIMER_SRC_ILO Internal Low Frequency (32 kHz) Oscillator (ILO)
2173:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_TIMER_SRC_WCO Low Frequency Watch Crystal Oscillator (WCO)
2174:Generated_Source\PSoC4/CyLFClk.c **** *
2175:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
2176:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetTimerSource(void)
2177:Generated_Source\PSoC4/CyLFClk.c ****     {
2178:Generated_Source\PSoC4/CyLFClk.c ****         uint32 timerSource;
2179:Generated_Source\PSoC4/CyLFClk.c ****         timerSource = CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK;
2180:Generated_Source\PSoC4/CyLFClk.c ****         return (timerSource);
2181:Generated_Source\PSoC4/CyLFClk.c ****     }    
2182:Generated_Source\PSoC4/CyLFClk.c **** 
2183:Generated_Source\PSoC4/CyLFClk.c **** 
2184:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 81


2185:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkSetTimerSource
2186:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
2187:Generated_Source\PSoC4/CyLFClk.c **** *
2188:Generated_Source\PSoC4/CyLFClk.c **** * \brief Sets the clock source for the DeepSleep Timers.
2189:Generated_Source\PSoC4/CyLFClk.c **** *
2190:Generated_Source\PSoC4/CyLFClk.c **** * The function is applicable only for PSoC 4100S / PSoC Analog Coprocessor 
2191:Generated_Source\PSoC4/CyLFClk.c **** * devices.
2192:Generated_Source\PSoC4/CyLFClk.c **** *
2193:Generated_Source\PSoC4/CyLFClk.c **** * \param source
2194:Generated_Source\PSoC4/CyLFClk.c **** *  CY_SYS_CLK_TIMER_SRC_ILO - Internal Low Frequency (32 kHz) Oscillator 
2195:Generated_Source\PSoC4/CyLFClk.c **** * (ILO).<br>
2196:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_TIMER_SRC_WCO - Low Frequency Watch Crystal Oscillator 
2197:Generated_Source\PSoC4/CyLFClk.c **** * (WCO).
2198:Generated_Source\PSoC4/CyLFClk.c **** *
2199:Generated_Source\PSoC4/CyLFClk.c **** * \details Both the current source and the new source must be running and stable 
2200:Generated_Source\PSoC4/CyLFClk.c **** * before calling this function.
2201:Generated_Source\PSoC4/CyLFClk.c **** *
2202:Generated_Source\PSoC4/CyLFClk.c **** * \warning DeepSleep Timer reset is required if Timer source was switched while 
2203:Generated_Source\PSoC4/CyLFClk.c **** * DeepSleep Timers were running. Call CySysTimerResetCounters() API after 
2204:Generated_Source\PSoC4/CyLFClk.c **** * Timer source switching.
2205:Generated_Source\PSoC4/CyLFClk.c **** * It is highly recommended to disable DeepSleep Timers before Timer source 
2206:Generated_Source\PSoC4/CyLFClk.c **** * switching. Changing the Timer source may change the functionality that uses 
2207:Generated_Source\PSoC4/CyLFClk.c **** * this Timers as clock source.
2208:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
2209:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkSetTimerSource(uint32 source)
2210:Generated_Source\PSoC4/CyLFClk.c ****     {
2211:Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
2212:Generated_Source\PSoC4/CyLFClk.c **** 
2213:Generated_Source\PSoC4/CyLFClk.c ****         if (CySysClkGetTimerSource() != source)
2214:Generated_Source\PSoC4/CyLFClk.c ****         {
2215:Generated_Source\PSoC4/CyLFClk.c **** 
2216:Generated_Source\PSoC4/CyLFClk.c ****             /* Reset both _EN bits in WCO_WDT_CLKEN register */
2217:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CLKEN_REG &= ~CY_SYS_WCO_WDT_CLKEN_RESET_MASK;
2218:Generated_Source\PSoC4/CyLFClk.c ****             
2219:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait 4 new clock source-cycles for change to come into effect */
2220:Generated_Source\PSoC4/CyLFClk.c ****             CyDelayUs(CY_SYS_4TIMER_DELAY_US);
2221:Generated_Source\PSoC4/CyLFClk.c **** 
2222:Generated_Source\PSoC4/CyLFClk.c ****             interruptState = CyEnterCriticalSection();
2223:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = (CY_SYS_WCO_WDT_CONFIG_REG & (uint32)(~CY_SYS_CLK_TIMER_SEL
2224:Generated_Source\PSoC4/CyLFClk.c ****                                     (source & CY_SYS_CLK_TIMER_SEL_MASK);
2225:Generated_Source\PSoC4/CyLFClk.c ****             CyExitCriticalSection(interruptState);
2226:Generated_Source\PSoC4/CyLFClk.c ****         }
2227:Generated_Source\PSoC4/CyLFClk.c **** 
2228:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CLKEN_REG = (CY_SYS_WCO_WDT_CLKEN_REG & (uint32)(~CY_SYS_WCO_WDT_CLKEN_RESET
2229:Generated_Source\PSoC4/CyLFClk.c ****                                     CY_SYS_SET_CURRENT_TIMER_SOURCE_BIT;
2230:Generated_Source\PSoC4/CyLFClk.c ****     }
2231:Generated_Source\PSoC4/CyLFClk.c **** 
2232:Generated_Source\PSoC4/CyLFClk.c **** 
2233:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2234:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetEnabledStatus
2235:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2236:Generated_Source\PSoC4/CyLFClk.c ****     *
2237:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the enabled status of one of the three DeepSleep Timer 
2238:Generated_Source\PSoC4/CyLFClk.c ****     * counters.
2239:Generated_Source\PSoC4/CyLFClk.c ****     *
2240:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2]. The number of the DeepSleep Timer 
2241:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 82


2242:Generated_Source\PSoC4/CyLFClk.c ****     *
2243:Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the Timers counter:
2244:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - If the Counter is disabled.
2245:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - If the Counter is enabled.
2246:Generated_Source\PSoC4/CyLFClk.c ****     *
2247:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2248:Generated_Source\PSoC4/CyLFClk.c ****     * This function returns an actual DeepSleep Timer counter status from the 
2249:Generated_Source\PSoC4/CyLFClk.c ****     * status register. It may take up to 3 LFCLK cycles for the Timer status 
2250:Generated_Source\PSoC4/CyLFClk.c ****     * register to contain actual data after the Timer counter is enabled.
2251:Generated_Source\PSoC4/CyLFClk.c ****     *
2252:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2253:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetEnabledStatus(uint32 counterNum)
2254:Generated_Source\PSoC4/CyLFClk.c ****     {
2255:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_TIMER_COUNTERS_MAX);
2256:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WCO_WDT_CONTROL_REG >> ((CY_SYS_TIMER_CNT_SHIFT * counterNum) + 
2257:Generated_Source\PSoC4/CyLFClk.c ****                                                  CY_SYS_TIMER_CNT_STTS_SHIFT)) & 0x01u);
2258:Generated_Source\PSoC4/CyLFClk.c ****     }
2259:Generated_Source\PSoC4/CyLFClk.c **** 
2260:Generated_Source\PSoC4/CyLFClk.c **** 
2261:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2262:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetMode
2263:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2264:Generated_Source\PSoC4/CyLFClk.c ****     *
2265:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Writes the mode of one of the three DeepSleep Timer counters.
2266:Generated_Source\PSoC4/CyLFClk.c ****     *
2267:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2]. The number of the DeepSleep Timer 
2268:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2269:Generated_Source\PSoC4/CyLFClk.c ****     *
2270:Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
2271:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_TIMER_MODE_NONE - Free running.<br>
2272:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_MODE_INT - The interrupt generated on match for counter 0
2273:Generated_Source\PSoC4/CyLFClk.c ****     * and 1, and on bit toggle for counter 2.
2274:Generated_Source\PSoC4/CyLFClk.c ****     *
2275:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2276:Generated_Source\PSoC4/CyLFClk.c ****     * DeepSleep Timer counter counterNum should be disabled to set a mode. 
2277:Generated_Source\PSoC4/CyLFClk.c ****     * Otherwise, this function call has no effect. If the specified counter is 
2278:Generated_Source\PSoC4/CyLFClk.c ****     * enabled, call the CySysTimerDisable() function with the corresponding 
2279:Generated_Source\PSoC4/CyLFClk.c ****     * parameter to disable the specified counter and wait for it to stop.
2280:Generated_Source\PSoC4/CyLFClk.c ****     *
2281:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2282:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetMode(uint32 counterNum, uint32 mode)
2283:Generated_Source\PSoC4/CyLFClk.c ****     {
2284:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2285:Generated_Source\PSoC4/CyLFClk.c **** 
2286:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_TIMER_COUNTERS_MAX);
2287:Generated_Source\PSoC4/CyLFClk.c **** 
2288:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(mode <= CY_SYS_TIMER_MODE_MASK);
2289:Generated_Source\PSoC4/CyLFClk.c **** 
2290:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysTimerGetEnabledStatus(counterNum))
2291:Generated_Source\PSoC4/CyLFClk.c ****         {
2292:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG &
2293:Generated_Source\PSoC4/CyLFClk.c ****                                 (uint32)~((uint32)(CY_SYS_TIMER_MODE_MASK << (counterNum * CY_SYS_T
2294:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= (uint32)((mode & CY_SYS_TIMER_MODE_MASK) << (counterNum * CY_SYS_TIME
2295:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
2296:Generated_Source\PSoC4/CyLFClk.c ****         }
2297:Generated_Source\PSoC4/CyLFClk.c ****     }
2298:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 83


2299:Generated_Source\PSoC4/CyLFClk.c **** 
2300:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2301:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetMode
2302:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2303:Generated_Source\PSoC4/CyLFClk.c ****     *
2304:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the mode of one of the three DeepSleep Timer counters.
2305:Generated_Source\PSoC4/CyLFClk.c ****     *
2306:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2307:Generated_Source\PSoC4/CyLFClk.c ****     *
2308:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mode of the counter. The same enumerated values as the mode 
2309:Generated_Source\PSoC4/CyLFClk.c ****     * parameter used in CySysTimerSetMode().
2310:Generated_Source\PSoC4/CyLFClk.c ****     *
2311:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2312:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetMode(uint32 counterNum)
2313:Generated_Source\PSoC4/CyLFClk.c ****     {
2314:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WCO_WDT_CONFIG_REG >> (counterNum * CY_SYS_TIMER_CNT_SHIFT)) & CY_SYS_TIMER
2315:Generated_Source\PSoC4/CyLFClk.c ****     }
2316:Generated_Source\PSoC4/CyLFClk.c **** 
2317:Generated_Source\PSoC4/CyLFClk.c **** 
2318:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2319:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetClearOnMatch
2320:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2321:Generated_Source\PSoC4/CyLFClk.c ****     *
2322:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the DeepSleep Timer counter "clear on match" setting.
2323:Generated_Source\PSoC4/CyLFClk.c ****     *
2324:Generated_Source\PSoC4/CyLFClk.c ****     * If configured to "clear on match", the counter counts from 0 to MatchValue 
2325:Generated_Source\PSoC4/CyLFClk.c ****     * giving it a period of (MatchValue + 1).
2326:Generated_Source\PSoC4/CyLFClk.c ****     *
2327:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
2328:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the Timer counter. The match values are not
2329:Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
2330:Generated_Source\PSoC4/CyLFClk.c ****     * \param enable 0 to disable appropriate counter <br>
2331:Generated_Source\PSoC4/CyLFClk.c ****     * 1 to enable appropriate counter
2332:Generated_Source\PSoC4/CyLFClk.c ****     *
2333:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2334:Generated_Source\PSoC4/CyLFClk.c ****     * Timer counter counterNum should be disabled. Otherwise this function call
2335:Generated_Source\PSoC4/CyLFClk.c ****     * has no effect. If the specified counter is enabled, call the CySysTimerDisable()
2336:Generated_Source\PSoC4/CyLFClk.c ****     * function with the corresponding parameter to disable the specified counter and
2337:Generated_Source\PSoC4/CyLFClk.c ****     * wait for it to stop. This may take up to three Timer source-cycles.
2338:Generated_Source\PSoC4/CyLFClk.c ****     *
2339:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2340:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetClearOnMatch(uint32 counterNum, uint32 enable)
2341:Generated_Source\PSoC4/CyLFClk.c ****     {
2342:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2343:Generated_Source\PSoC4/CyLFClk.c **** 
2344:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
2345:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2346:Generated_Source\PSoC4/CyLFClk.c **** 
2347:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysTimerGetEnabledStatus(counterNum))
2348:Generated_Source\PSoC4/CyLFClk.c ****         {
2349:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG & (uint32)~((uint32)((uint32)1u << 
2350:Generated_Source\PSoC4/CyLFClk.c ****              ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT)));
2351:Generated_Source\PSoC4/CyLFClk.c **** 
2352:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue
2353:Generated_Source\PSoC4/CyLFClk.c ****                 |= (uint32)(enable << ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MAT
2354:Generated_Source\PSoC4/CyLFClk.c **** 
2355:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 84


2356:Generated_Source\PSoC4/CyLFClk.c ****         }
2357:Generated_Source\PSoC4/CyLFClk.c ****     }
2358:Generated_Source\PSoC4/CyLFClk.c **** 
2359:Generated_Source\PSoC4/CyLFClk.c **** 
2360:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2361:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetClearOnMatch
2362:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2363:Generated_Source\PSoC4/CyLFClk.c ****     *
2364:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the "clear on match" setting for the specified DeepSleep Timer 
2365:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2366:Generated_Source\PSoC4/CyLFClk.c ****     *
2367:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1].  The number of the Timer counter. The 
2368:Generated_Source\PSoC4/CyLFClk.c ****     * match values are not supported by counter 2.
2369:Generated_Source\PSoC4/CyLFClk.c ****     *
2370:Generated_Source\PSoC4/CyLFClk.c ****     * \return The "clear on match" status: <br>1 if enabled <br>0 if disabled
2371:Generated_Source\PSoC4/CyLFClk.c ****     *
2372:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2373:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetClearOnMatch(uint32 counterNum)
2374:Generated_Source\PSoC4/CyLFClk.c ****     {
2375:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
2376:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2377:Generated_Source\PSoC4/CyLFClk.c **** 
2378:Generated_Source\PSoC4/CyLFClk.c ****         return (uint32)((CY_SYS_WCO_WDT_CONFIG_REG >>
2379:Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT))
2380:Generated_Source\PSoC4/CyLFClk.c ****     }
2381:Generated_Source\PSoC4/CyLFClk.c **** 
2382:Generated_Source\PSoC4/CyLFClk.c **** 
2383:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2384:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerEnable
2385:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2386:Generated_Source\PSoC4/CyLFClk.c ****     *
2387:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Enables the specified DeepSleep Timer counters. All the counters 
2388:Generated_Source\PSoC4/CyLFClk.c ****     * specified in the mask are enabled.
2389:Generated_Source\PSoC4/CyLFClk.c ****     *
2390:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask  CY_SYS_TIMER0_MASK - The mask for counter 0 to enable.<br>
2391:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_MASK - The mask for counter 1 to enable.<br>
2392:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_MASK - The mask for counter 2 to enable.
2393:Generated_Source\PSoC4/CyLFClk.c ****     *
2394:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2395:Generated_Source\PSoC4/CyLFClk.c ****     * Enabling or disabling Timer requires 3 Timer source-cycles to come into effect.
2396:Generated_Source\PSoC4/CyLFClk.c ****     * Therefore, the Timer enable state must not be changed more than once in
2397:Generated_Source\PSoC4/CyLFClk.c ****     * that period.
2398:Generated_Source\PSoC4/CyLFClk.c ****     *
2399:Generated_Source\PSoC4/CyLFClk.c ****     * After Timer is enabled, it is illegal to write Timer configuration 
2400:Generated_Source\PSoC4/CyLFClk.c ****     * (WCO_WDT_CONFIG) and control (WCO_WDT_CONTROL) registers. This means that all
2401:Generated_Source\PSoC4/CyLFClk.c ****     * Timer functions that contain 'write' in the name (with the exception of 
2402:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetMatch() function) are illegal to call once Timer enabled.
2403:Generated_Source\PSoC4/CyLFClk.c ****     *
2404:Generated_Source\PSoC4/CyLFClk.c ****     * Timer current source must be running and stable before calling this 
2405:Generated_Source\PSoC4/CyLFClk.c ****     * function.
2406:Generated_Source\PSoC4/CyLFClk.c ****     *
2407:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2408:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerEnable(uint32 counterMask)
2409:Generated_Source\PSoC4/CyLFClk.c ****     {
2410:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG |= counterMask;
2411:Generated_Source\PSoC4/CyLFClk.c **** 
2412:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER0_MASK))
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 85


2413:Generated_Source\PSoC4/CyLFClk.c ****         {
2414:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER0))
2415:Generated_Source\PSoC4/CyLFClk.c ****             {
2416:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2417:Generated_Source\PSoC4/CyLFClk.c ****             }
2418:Generated_Source\PSoC4/CyLFClk.c ****         }
2419:Generated_Source\PSoC4/CyLFClk.c **** 
2420:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER1_MASK))
2421:Generated_Source\PSoC4/CyLFClk.c ****         {
2422:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER1))
2423:Generated_Source\PSoC4/CyLFClk.c ****             {
2424:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2425:Generated_Source\PSoC4/CyLFClk.c ****             }
2426:Generated_Source\PSoC4/CyLFClk.c ****         }
2427:Generated_Source\PSoC4/CyLFClk.c **** 
2428:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER2_MASK))
2429:Generated_Source\PSoC4/CyLFClk.c ****         {
2430:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER2))
2431:Generated_Source\PSoC4/CyLFClk.c ****             {
2432:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2433:Generated_Source\PSoC4/CyLFClk.c ****             }
2434:Generated_Source\PSoC4/CyLFClk.c ****         }
2435:Generated_Source\PSoC4/CyLFClk.c ****     }
2436:Generated_Source\PSoC4/CyLFClk.c **** 
2437:Generated_Source\PSoC4/CyLFClk.c **** 
2438:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2439:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDisable
2440:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2441:Generated_Source\PSoC4/CyLFClk.c ****     *
2442:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the specified DeepSleep Timer counters.
2443:Generated_Source\PSoC4/CyLFClk.c ****     *
2444:Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are disabled. The function waits for 
2445:Generated_Source\PSoC4/CyLFClk.c ****     * the changes to come into effect.
2446:Generated_Source\PSoC4/CyLFClk.c ****     *
2447:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
2448:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_TIMER0_MASK - The mask for Counter 0 to disable.<br>
2449:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_MASK - The mask for Counter 1 to disable.<br>
2450:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_MASK - The mask for Counter 2 to disable.
2451:Generated_Source\PSoC4/CyLFClk.c ****     *
2452:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2453:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDisable(uint32 counterMask)
2454:Generated_Source\PSoC4/CyLFClk.c ****     {
2455:Generated_Source\PSoC4/CyLFClk.c **** 
2456:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG &= ~counterMask;
2457:Generated_Source\PSoC4/CyLFClk.c **** 
2458:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER0_MASK))
2459:Generated_Source\PSoC4/CyLFClk.c ****         {
2460:Generated_Source\PSoC4/CyLFClk.c ****             while (0u != CySysTimerGetEnabledStatus(CY_SYS_TIMER0))
2461:Generated_Source\PSoC4/CyLFClk.c ****             {
2462:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2463:Generated_Source\PSoC4/CyLFClk.c ****             }
2464:Generated_Source\PSoC4/CyLFClk.c ****         }
2465:Generated_Source\PSoC4/CyLFClk.c **** 
2466:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER1_MASK))
2467:Generated_Source\PSoC4/CyLFClk.c ****         {
2468:Generated_Source\PSoC4/CyLFClk.c ****             while (0u != CySysTimerGetEnabledStatus(CY_SYS_TIMER1))
2469:Generated_Source\PSoC4/CyLFClk.c ****             {
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 86


2470:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2471:Generated_Source\PSoC4/CyLFClk.c ****             }
2472:Generated_Source\PSoC4/CyLFClk.c ****         }
2473:Generated_Source\PSoC4/CyLFClk.c **** 
2474:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER2_MASK))
2475:Generated_Source\PSoC4/CyLFClk.c ****         {
2476:Generated_Source\PSoC4/CyLFClk.c ****             while (0u != CySysTimerGetEnabledStatus(CY_SYS_TIMER2))
2477:Generated_Source\PSoC4/CyLFClk.c ****             {
2478:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2479:Generated_Source\PSoC4/CyLFClk.c ****             }
2480:Generated_Source\PSoC4/CyLFClk.c ****         }
2481:Generated_Source\PSoC4/CyLFClk.c **** 
2482:Generated_Source\PSoC4/CyLFClk.c ****     }
2483:Generated_Source\PSoC4/CyLFClk.c **** 
2484:Generated_Source\PSoC4/CyLFClk.c **** 
2485:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2486:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetCascade
2487:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2488:Generated_Source\PSoC4/CyLFClk.c ****     *
2489:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2490:Generated_Source\PSoC4/CyLFClk.c ****     * Writes the two DeepSleep Timers cascade values based on the combination of 
2491:Generated_Source\PSoC4/CyLFClk.c ****     * mask values specified.
2492:Generated_Source\PSoC4/CyLFClk.c ****     *
2493:Generated_Source\PSoC4/CyLFClk.c ****     * \param cascadeMask The mask value used to set or clear the cascade values:
2494:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_CASCADE_NONE - Neither<br>
2495:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_CASCADE_01 - Cascade 01<br>
2496:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_CASCADE_12 - Cascade 12
2497:Generated_Source\PSoC4/CyLFClk.c ****     *
2498:Generated_Source\PSoC4/CyLFClk.c ****     * If only one cascade mask is specified, the second cascade is disabled.
2499:Generated_Source\PSoC4/CyLFClk.c ****     * To set both cascade modes, two defines should be ORed:
2500:Generated_Source\PSoC4/CyLFClk.c ****     * (CY_SYS_TIMER_CASCADE_01 | CY_SYS_TIMER_CASCADE_12).
2501:Generated_Source\PSoC4/CyLFClk.c ****     * \note If CySysTimerSetCascade() was called with ORed defines it is necessary 
2502:Generated_Source\PSoC4/CyLFClk.c ****     * to call CySysTimeSetClearOnMatch(1,1). It is needed to make sure that 
2503:Generated_Source\PSoC4/CyLFClk.c ****     * Counter 2 will be updated in the expected way.
2504:Generated_Source\PSoC4/CyLFClk.c ****     *
2505:Generated_Source\PSoC4/CyLFClk.c ****     * Timer counters that are part of the specified cascade should be disabled.
2506:Generated_Source\PSoC4/CyLFClk.c ****     * Otherwise this function call has no effect. If the specified
2507:Generated_Source\PSoC4/CyLFClk.c ****     * counter is enabled, call CySysTimerDisable() function with the corresponding
2508:Generated_Source\PSoC4/CyLFClk.c ****     * parameter to disable the specified counter and wait for it to stop. This may
2509:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 Timers source-cycles.
2510:Generated_Source\PSoC4/CyLFClk.c ****     *
2511:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2512:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetCascade(uint32 cascadeMask)
2513:Generated_Source\PSoC4/CyLFClk.c ****     {
2514:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2515:Generated_Source\PSoC4/CyLFClk.c ****         uint32 countersEnableStatus;
2516:Generated_Source\PSoC4/CyLFClk.c **** 
2517:Generated_Source\PSoC4/CyLFClk.c ****         countersEnableStatus = CySysTimerGetEnabledStatus(CY_SYS_TIMER0) |
2518:Generated_Source\PSoC4/CyLFClk.c ****                             CySysTimerGetEnabledStatus(CY_SYS_TIMER1) |
2519:Generated_Source\PSoC4/CyLFClk.c ****                             CySysTimerGetEnabledStatus(CY_SYS_TIMER2);
2520:Generated_Source\PSoC4/CyLFClk.c **** 
2521:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == countersEnableStatus)
2522:Generated_Source\PSoC4/CyLFClk.c ****         {
2523:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG;
2524:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= ((uint32)(~(CY_SYS_TIMER_CASCADE_01|CY_SYS_TIMER_CASCADE_12)));
2525:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= cascadeMask;
2526:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 87


2527:Generated_Source\PSoC4/CyLFClk.c ****         }
2528:Generated_Source\PSoC4/CyLFClk.c ****     }
2529:Generated_Source\PSoC4/CyLFClk.c **** 
2530:Generated_Source\PSoC4/CyLFClk.c **** 
2531:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2532:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetCascade
2533:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2534:Generated_Source\PSoC4/CyLFClk.c ****     *
2535:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the two DeepSleep Timer cascade values returning a mask of the 
2536:Generated_Source\PSoC4/CyLFClk.c ****     * bits set.
2537:Generated_Source\PSoC4/CyLFClk.c ****     *
2538:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of the cascade values set.
2539:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER_CASCADE_NONE - Neither
2540:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER_CASCADE_01 - Cascade 01
2541:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER_CASCADE_12 - Cascade 12
2542:Generated_Source\PSoC4/CyLFClk.c ****     *
2543:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2544:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetCascade(void)
2545:Generated_Source\PSoC4/CyLFClk.c ****     {
2546:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WCO_WDT_CONFIG_REG & (CY_SYS_TIMER_CASCADE_01 | CY_SYS_TIMER_CASCADE_12));
2547:Generated_Source\PSoC4/CyLFClk.c ****     }
2548:Generated_Source\PSoC4/CyLFClk.c **** 
2549:Generated_Source\PSoC4/CyLFClk.c **** 
2550:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2551:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetMatch
2552:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLFClk.c ****     *
2554:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the Timer counter match comparison value.
2555:Generated_Source\PSoC4/CyLFClk.c ****     *
2556:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the Timer counter. The 
2557:Generated_Source\PSoC4/CyLFClk.c ****     * match values are not supported by counter 2.
2558:Generated_Source\PSoC4/CyLFClk.c ****     *
2559:Generated_Source\PSoC4/CyLFClk.c ****     * \param match Valid range [0-65535]. The value to be used to match against 
2560:Generated_Source\PSoC4/CyLFClk.c ****     * the counter.
2561:Generated_Source\PSoC4/CyLFClk.c ****     *
2562:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2563:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetMatch(uint32 counterNum, uint32 match)
2564:Generated_Source\PSoC4/CyLFClk.c ****     {
2565:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
2566:Generated_Source\PSoC4/CyLFClk.c **** 
2567:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
2568:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2569:Generated_Source\PSoC4/CyLFClk.c **** 
2570:Generated_Source\PSoC4/CyLFClk.c ****         /* Wait for previous changes to come into effect */
2571:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_3TIMER_DELAY_US);
2572:Generated_Source\PSoC4/CyLFClk.c **** 
2573:Generated_Source\PSoC4/CyLFClk.c ****         regValue = CY_SYS_WCO_WDT_MATCH_REG;
2574:Generated_Source\PSoC4/CyLFClk.c ****         regValue &= (uint32)~((uint32)(CY_SYS_TIMER_LOWER_16BITS_MASK << (counterNum * CY_SYS_TIMER
2575:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_MATCH_REG = (regValue | (match << (counterNum * CY_SYS_TIMER_CNT_MATCH_SHIFT
2576:Generated_Source\PSoC4/CyLFClk.c **** 
2577:Generated_Source\PSoC4/CyLFClk.c ****         /* Make sure match synchronization has started */
2578:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_1TIMER_DELAY_US);
2579:Generated_Source\PSoC4/CyLFClk.c ****     }
2580:Generated_Source\PSoC4/CyLFClk.c **** 
2581:Generated_Source\PSoC4/CyLFClk.c **** 
2582:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2583:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetToggleBit
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 88


2584:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2585:Generated_Source\PSoC4/CyLFClk.c ****     *
2586:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures which bit in Timer counter 2 to monitor for a toggle.
2587:Generated_Source\PSoC4/CyLFClk.c ****     *
2588:Generated_Source\PSoC4/CyLFClk.c ****     * When that bit toggles, an interrupt is generated if mode for counter 2 has
2589:Generated_Source\PSoC4/CyLFClk.c ****     * enabled interrupts.
2590:Generated_Source\PSoC4/CyLFClk.c ****     *
2591:Generated_Source\PSoC4/CyLFClk.c ****     * \param bits Valid range [0-31]. Counter 2 bit to monitor for a toggle.
2592:Generated_Source\PSoC4/CyLFClk.c ****     *
2593:Generated_Source\PSoC4/CyLFClk.c ****     * \details Timer counter 2 should be disabled. Otherwise this function call has
2594:Generated_Source\PSoC4/CyLFClk.c ****     * no effect.
2595:Generated_Source\PSoC4/CyLFClk.c ****     *
2596:Generated_Source\PSoC4/CyLFClk.c ****     * If the specified counter is enabled, call the CySysTimerDisable() function with
2597:Generated_Source\PSoC4/CyLFClk.c ****     * the corresponding parameter to disable the specified counter and wait for it to
2598:Generated_Source\PSoC4/CyLFClk.c ****     * stop. This may take up to three Timer source-cycles.
2599:Generated_Source\PSoC4/CyLFClk.c ****     *
2600:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2601:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetToggleBit(uint32 bits)
2602:Generated_Source\PSoC4/CyLFClk.c ****     {
2603:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2604:Generated_Source\PSoC4/CyLFClk.c **** 
2605:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER2))
2606:Generated_Source\PSoC4/CyLFClk.c ****         {
2607:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG;
2608:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= (uint32)(~((uint32)(CY_SYS_TIMER_CONFIG_BITS2_MASK << CY_SYS_TIMER_CO
2609:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= ((bits & CY_SYS_TIMER_CONFIG_BITS2_MASK) << CY_SYS_TIMER_CONFIG_BITS2
2610:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
2611:Generated_Source\PSoC4/CyLFClk.c ****         }
2612:Generated_Source\PSoC4/CyLFClk.c ****     }
2613:Generated_Source\PSoC4/CyLFClk.c **** 
2614:Generated_Source\PSoC4/CyLFClk.c **** 
2615:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2616:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetToggleBit
2617:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2618:Generated_Source\PSoC4/CyLFClk.c ****     *
2619:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads which bit in Timer counter 2 is monitored for a toggle.
2620:Generated_Source\PSoC4/CyLFClk.c ****     *
2621:Generated_Source\PSoC4/CyLFClk.c ****     * \return The bit that is monitored (range of 0 to 31)
2622:Generated_Source\PSoC4/CyLFClk.c ****     *
2623:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2624:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetToggleBit(void)
2625:Generated_Source\PSoC4/CyLFClk.c ****     {
2626:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WCO_WDT_CONFIG_REG >> CY_SYS_TIMER_CONFIG_BITS2_POS) & CY_SYS_TIMER_CONFIG_
2627:Generated_Source\PSoC4/CyLFClk.c ****     }
2628:Generated_Source\PSoC4/CyLFClk.c **** 
2629:Generated_Source\PSoC4/CyLFClk.c **** 
2630:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2631:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetMatch
2632:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2633:Generated_Source\PSoC4/CyLFClk.c ****     *
2634:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the Timer counter match comparison value.
2635:Generated_Source\PSoC4/CyLFClk.c ****     *
2636:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the DeepSleep Timer 
2637:Generated_Source\PSoC4/CyLFClk.c ****     * counter. The match values are not supported by counter 2.
2638:Generated_Source\PSoC4/CyLFClk.c ****     *
2639:Generated_Source\PSoC4/CyLFClk.c ****     * \return A 16-bit match value.
2640:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 89


2641:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2642:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetMatch(uint32 counterNum)
2643:Generated_Source\PSoC4/CyLFClk.c ****     {
2644:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
2645:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2646:Generated_Source\PSoC4/CyLFClk.c **** 
2647:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)(CY_SYS_WCO_WDT_MATCH_REG >> (counterNum * CY_SYS_TIMER_CNT_MATCH_SHIFT)) &
2648:Generated_Source\PSoC4/CyLFClk.c ****                                                                   CY_SYS_TIMER_LOWER_16BITS_MASK);
2649:Generated_Source\PSoC4/CyLFClk.c ****     }
2650:Generated_Source\PSoC4/CyLFClk.c **** 
2651:Generated_Source\PSoC4/CyLFClk.c **** 
2652:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2653:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetCount
2654:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2655:Generated_Source\PSoC4/CyLFClk.c ****     *
2656:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current DeepSleep Timer counter value.
2657:Generated_Source\PSoC4/CyLFClk.c ****     *
2658:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2659:Generated_Source\PSoC4/CyLFClk.c ****     *
2660:Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value. Counter 0 and Counter 1 are 16 bit counters 
2661:Generated_Source\PSoC4/CyLFClk.c ****     * and counter 2 is a 32 bit counter.
2662:Generated_Source\PSoC4/CyLFClk.c ****     *
2663:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2664:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetCount(uint32 counterNum)
2665:Generated_Source\PSoC4/CyLFClk.c ****     {
2666:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue = 0u;
2667:Generated_Source\PSoC4/CyLFClk.c **** 
2668:Generated_Source\PSoC4/CyLFClk.c ****         switch(counterNum)
2669:Generated_Source\PSoC4/CyLFClk.c ****         {
2670:Generated_Source\PSoC4/CyLFClk.c ****             /* Timer Counter 0 */
2671:Generated_Source\PSoC4/CyLFClk.c ****             case 0u:
2672:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WCO_WDT_CTRLOW_REG & CY_SYS_TIMER_LOWER_16BITS_MASK;
2673:Generated_Source\PSoC4/CyLFClk.c ****             break;
2674:Generated_Source\PSoC4/CyLFClk.c **** 
2675:Generated_Source\PSoC4/CyLFClk.c ****             /* Timer Counter 1 */
2676:Generated_Source\PSoC4/CyLFClk.c ****             case 1u:
2677:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = (CY_SYS_WCO_WDT_CTRLOW_REG >> CY_SYS_TIMER_CNT_MATCH_SHIFT) & CY_SYS_TIM
2678:Generated_Source\PSoC4/CyLFClk.c ****             break;
2679:Generated_Source\PSoC4/CyLFClk.c **** 
2680:Generated_Source\PSoC4/CyLFClk.c ****             /* Timer Counter 2 */
2681:Generated_Source\PSoC4/CyLFClk.c ****             case 2u:
2682:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WCO_WDT_CTRHIGH_REG;
2683:Generated_Source\PSoC4/CyLFClk.c ****             break;
2684:Generated_Source\PSoC4/CyLFClk.c **** 
2685:Generated_Source\PSoC4/CyLFClk.c ****             default:
2686:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
2687:Generated_Source\PSoC4/CyLFClk.c ****             break;
2688:Generated_Source\PSoC4/CyLFClk.c ****         }
2689:Generated_Source\PSoC4/CyLFClk.c **** 
2690:Generated_Source\PSoC4/CyLFClk.c ****         return (regValue);
2691:Generated_Source\PSoC4/CyLFClk.c ****     }
2692:Generated_Source\PSoC4/CyLFClk.c **** 
2693:Generated_Source\PSoC4/CyLFClk.c **** 
2694:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2695:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetInterruptSource
2696:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2697:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 90


2698:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2699:Generated_Source\PSoC4/CyLFClk.c ****     * Reads a mask containing all the DeepSleep Timer counters interrupts that are 
2700:Generated_Source\PSoC4/CyLFClk.c ****     * currently set by the hardware, if a corresponding mode is selected.
2701:Generated_Source\PSoC4/CyLFClk.c ****     *
2702:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of interrupts set
2703:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER0_INT - Set interrupt for Counter 0
2704:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER1_INT - Set interrupt for Counter 1
2705:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER2_INT - Set interrupt for Counter 2
2706:Generated_Source\PSoC4/CyLFClk.c ****     *
2707:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2708:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetInterruptSource(void)
2709:Generated_Source\PSoC4/CyLFClk.c ****     {
2710:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WCO_WDT_CONTROL_REG & (CY_SYS_TIMER0_INT | CY_SYS_TIMER1_INT | CY_SYS_TIMER2
2711:Generated_Source\PSoC4/CyLFClk.c ****     }
2712:Generated_Source\PSoC4/CyLFClk.c **** 
2713:Generated_Source\PSoC4/CyLFClk.c **** 
2714:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2715:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerClearInterrupt
2716:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2717:Generated_Source\PSoC4/CyLFClk.c ****     *
2718:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Clears all the DeepSleep Timer counter interrupts set in the mask.
2719:Generated_Source\PSoC4/CyLFClk.c ****     *
2720:Generated_Source\PSoC4/CyLFClk.c ****     * All the Timer interrupts are to be cleared by the firmware, otherwise
2721:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts are generated continuously.
2722:Generated_Source\PSoC4/CyLFClk.c ****     *
2723:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
2724:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_TIMER0_INT - Clear counter 0<br>
2725:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_INT - Clear counter 1<br>
2726:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_INT - Clear counter 2
2727:Generated_Source\PSoC4/CyLFClk.c ****     *
2728:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2729:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerClearInterrupt(uint32 counterMask)
2730:Generated_Source\PSoC4/CyLFClk.c ****     {
2731:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
2732:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
2733:Generated_Source\PSoC4/CyLFClk.c **** 
2734:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WCO_TIMER control register value */
2735:Generated_Source\PSoC4/CyLFClk.c ****         counterMask &= (CY_SYS_TIMER0_INT |
2736:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_TIMER1_INT |
2737:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_TIMER2_INT);
2738:Generated_Source\PSoC4/CyLFClk.c **** 
2739:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG = counterMask | (CY_SYS_WCO_WDT_CONTROL_REG & ~(CY_SYS_TIMER0_IN
2740:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_TIMER1_INT |
2741:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_TIMER2_INT));
2742:Generated_Source\PSoC4/CyLFClk.c **** 
2743:Generated_Source\PSoC4/CyLFClk.c ****         /* Read the CY_SYS_WDT_CONTROL_REG to clear the interrupt request.
2744:Generated_Source\PSoC4/CyLFClk.c ****          * Cypress ID #207093, #206231
2745:Generated_Source\PSoC4/CyLFClk.c ****         */
2746:Generated_Source\PSoC4/CyLFClk.c ****         (void)CY_SYS_WCO_WDT_CONTROL_REG;
2747:Generated_Source\PSoC4/CyLFClk.c **** 
2748:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
2749:Generated_Source\PSoC4/CyLFClk.c ****     }
2750:Generated_Source\PSoC4/CyLFClk.c **** 
2751:Generated_Source\PSoC4/CyLFClk.c **** 
2752:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2753:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetInterruptCallback
2754:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 91


2755:Generated_Source\PSoC4/CyLFClk.c ****     *
2756:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2757:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the particular DeepSleep Timer counter.
2758:Generated_Source\PSoC4/CyLFClk.c ****     *
2759:Generated_Source\PSoC4/CyLFClk.c ****     * These functions are called on the Timer interrupt.
2760:Generated_Source\PSoC4/CyLFClk.c ****     *
2761:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the Timer counter.
2762:Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
2763:Generated_Source\PSoC4/CyLFClk.c ****     *
2764:Generated_Source\PSoC4/CyLFClk.c ****     * \return  The pointer to the previous callback function. 
2765:Generated_Source\PSoC4/CyLFClk.c ****     * \return NULL is returned if the specified address is not set.
2766:Generated_Source\PSoC4/CyLFClk.c ****     *
2767:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2768:Generated_Source\PSoC4/CyLFClk.c ****     cyTimerCallback CySysTimerSetInterruptCallback(uint32 counterNum, cyTimerCallback function)
2769:Generated_Source\PSoC4/CyLFClk.c ****     {
2770:Generated_Source\PSoC4/CyLFClk.c ****         cyTimerCallback prevCallback = (void *)0;
2771:Generated_Source\PSoC4/CyLFClk.c **** 
2772:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_SYS_NUM_OF_TIMERS)
2773:Generated_Source\PSoC4/CyLFClk.c ****         {
2774:Generated_Source\PSoC4/CyLFClk.c ****             prevCallback = cySysTimerCallback[counterNum];
2775:Generated_Source\PSoC4/CyLFClk.c ****             cySysTimerCallback[counterNum] = function;
2776:Generated_Source\PSoC4/CyLFClk.c ****         }
2777:Generated_Source\PSoC4/CyLFClk.c ****         else
2778:Generated_Source\PSoC4/CyLFClk.c ****         {
2779:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
2780:Generated_Source\PSoC4/CyLFClk.c ****         }
2781:Generated_Source\PSoC4/CyLFClk.c **** 
2782:Generated_Source\PSoC4/CyLFClk.c ****         return((cyTimerCallback)prevCallback);
2783:Generated_Source\PSoC4/CyLFClk.c ****     }
2784:Generated_Source\PSoC4/CyLFClk.c **** 
2785:Generated_Source\PSoC4/CyLFClk.c **** 
2786:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2787:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetInterruptCallback
2788:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2789:Generated_Source\PSoC4/CyLFClk.c ****     *
2790:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Gets the ISR callback function for the particular DeepSleep Timer 
2791:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2792:Generated_Source\PSoC4/CyLFClk.c ****     *
2793:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the Timer counter.
2794:Generated_Source\PSoC4/CyLFClk.c ****     *
2795:Generated_Source\PSoC4/CyLFClk.c ****     * \return
2796:Generated_Source\PSoC4/CyLFClk.c ****     * The pointer to the callback function registered for a particular Timer by
2797:Generated_Source\PSoC4/CyLFClk.c ****     * a particular address that are passed through arguments.
2798:Generated_Source\PSoC4/CyLFClk.c ****     *
2799:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2800:Generated_Source\PSoC4/CyLFClk.c ****     cyTimerCallback CySysTimerGetInterruptCallback(uint32 counterNum)
2801:Generated_Source\PSoC4/CyLFClk.c ****     {
2802:Generated_Source\PSoC4/CyLFClk.c ****         cyTimerCallback retCallback = (void *)0;
2803:Generated_Source\PSoC4/CyLFClk.c **** 
2804:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_SYS_NUM_OF_TIMERS)
2805:Generated_Source\PSoC4/CyLFClk.c ****         {
2806:Generated_Source\PSoC4/CyLFClk.c ****             retCallback = (cyTimerCallback)cySysTimerCallback[counterNum];
2807:Generated_Source\PSoC4/CyLFClk.c ****         }
2808:Generated_Source\PSoC4/CyLFClk.c ****         else
2809:Generated_Source\PSoC4/CyLFClk.c ****         {
2810:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
2811:Generated_Source\PSoC4/CyLFClk.c ****         }
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 92


2812:Generated_Source\PSoC4/CyLFClk.c **** 
2813:Generated_Source\PSoC4/CyLFClk.c ****         return(retCallback);
2814:Generated_Source\PSoC4/CyLFClk.c ****     }
2815:Generated_Source\PSoC4/CyLFClk.c **** 
2816:Generated_Source\PSoC4/CyLFClk.c **** 
2817:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2818:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerEnableIsr
2819:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2820:Generated_Source\PSoC4/CyLFClk.c ****     *
2821:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Enables the ISR callback servicing for the particular Timer counter
2822:Generated_Source\PSoC4/CyLFClk.c ****     *
2823:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2824:Generated_Source\PSoC4/CyLFClk.c ****     *
2825:Generated_Source\PSoC4/CyLFClk.c ****     * Value corresponds to appropriate Timer counter. For example value 1 
2826:Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second Timer counter.
2827:Generated_Source\PSoC4/CyLFClk.c ****     *
2828:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2829:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerEnableIsr(uint32 counterNum)
2830:Generated_Source\PSoC4/CyLFClk.c ****     {
2831:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_TIMER2)
2832:Generated_Source\PSoC4/CyLFClk.c ****         {
2833:Generated_Source\PSoC4/CyLFClk.c ****             disableTimerServicedIsr &= ~counterTimerIntMaskTbl[counterNum];
2834:Generated_Source\PSoC4/CyLFClk.c ****             timerIsrMask |= counterTimerIntMaskTbl[counterNum];
2835:Generated_Source\PSoC4/CyLFClk.c ****         }
2836:Generated_Source\PSoC4/CyLFClk.c ****         else
2837:Generated_Source\PSoC4/CyLFClk.c ****         {
2838:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
2839:Generated_Source\PSoC4/CyLFClk.c ****         }
2840:Generated_Source\PSoC4/CyLFClk.c ****     }
2841:Generated_Source\PSoC4/CyLFClk.c **** 
2842:Generated_Source\PSoC4/CyLFClk.c **** 
2843:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2844:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDisableIsr
2845:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2846:Generated_Source\PSoC4/CyLFClk.c ****     *
2847:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the ISR callback servicing for the particular Timer counter
2848:Generated_Source\PSoC4/CyLFClk.c ****     *
2849:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2850:Generated_Source\PSoC4/CyLFClk.c ****     *
2851:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2852:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDisableIsr(uint32 counterNum)
2853:Generated_Source\PSoC4/CyLFClk.c ****     {
2854:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_TIMER2)
2855:Generated_Source\PSoC4/CyLFClk.c ****         {
2856:Generated_Source\PSoC4/CyLFClk.c ****             timerIsrMask &= ~counterTimerIntMaskTbl[counterNum];
2857:Generated_Source\PSoC4/CyLFClk.c ****         }
2858:Generated_Source\PSoC4/CyLFClk.c ****         else
2859:Generated_Source\PSoC4/CyLFClk.c ****         {
2860:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
2861:Generated_Source\PSoC4/CyLFClk.c ****         }
2862:Generated_Source\PSoC4/CyLFClk.c ****     }
2863:Generated_Source\PSoC4/CyLFClk.c **** 
2864:Generated_Source\PSoC4/CyLFClk.c **** 
2865:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2866:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerIsr
2867:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2868:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 93


2869:Generated_Source\PSoC4/CyLFClk.c ****     * \brief This is the handler of the DeepSleep Timer interrupt in CPU NVIC.
2870:Generated_Source\PSoC4/CyLFClk.c ****     *
2871:Generated_Source\PSoC4/CyLFClk.c ****     * The handler checks which Timer triggered in the interrupt and calls the 
2872:Generated_Source\PSoC4/CyLFClk.c ****     * respective callback functions configured by the user by using 
2873:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetIsrCallback() API.
2874:Generated_Source\PSoC4/CyLFClk.c ****     *
2875:Generated_Source\PSoC4/CyLFClk.c ****     * The order of the callback execution is incremental. Callback-0 is
2876:Generated_Source\PSoC4/CyLFClk.c ****     * run as the first one and callback-2 is called as the last one.
2877:Generated_Source\PSoC4/CyLFClk.c ****     *
2878:Generated_Source\PSoC4/CyLFClk.c ****     * \details This function clears the DeepSleep Timer interrupt every time when 
2879:Generated_Source\PSoC4/CyLFClk.c ****     * it is called.
2880:Generated_Source\PSoC4/CyLFClk.c ****     *
2881:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2882:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerIsr(void)
2883:Generated_Source\PSoC4/CyLFClk.c ****     {
2884:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_TIMER0_INT & CY_SYS_WCO_WDT_CONTROL_REG))
2885:Generated_Source\PSoC4/CyLFClk.c ****         {
2886:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_TIMER0_INT & timerIsrMask))
2887:Generated_Source\PSoC4/CyLFClk.c ****             {
2888:Generated_Source\PSoC4/CyLFClk.c ****                 timerIsrMask &= ~(disableTimerServicedIsr & CY_SYS_TIMER0_INT);
2889:Generated_Source\PSoC4/CyLFClk.c ****                 disableTimerServicedIsr  &= ~CY_SYS_TIMER0_INT;
2890:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysTimerCallback[CY_SYS_TIMER0] != (void *) 0)
2891:Generated_Source\PSoC4/CyLFClk.c ****                 {
2892:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysTimerCallback[CY_SYS_TIMER0])();
2893:Generated_Source\PSoC4/CyLFClk.c ****                 }
2894:Generated_Source\PSoC4/CyLFClk.c ****             }
2895:Generated_Source\PSoC4/CyLFClk.c ****             CySysTimerClearInterrupt(CY_SYS_TIMER0_INT);
2896:Generated_Source\PSoC4/CyLFClk.c ****         }
2897:Generated_Source\PSoC4/CyLFClk.c **** 
2898:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_TIMER1_INT & CY_SYS_WCO_WDT_CONTROL_REG))
2899:Generated_Source\PSoC4/CyLFClk.c ****         {
2900:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_TIMER1_INT & timerIsrMask))
2901:Generated_Source\PSoC4/CyLFClk.c ****             {
2902:Generated_Source\PSoC4/CyLFClk.c ****                 timerIsrMask &= ~(disableTimerServicedIsr & CY_SYS_TIMER1_INT);
2903:Generated_Source\PSoC4/CyLFClk.c ****                 disableTimerServicedIsr  &= ~CY_SYS_TIMER1_INT;
2904:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysTimerCallback[CY_SYS_TIMER1] != (void *) 0)
2905:Generated_Source\PSoC4/CyLFClk.c ****                 {
2906:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysTimerCallback[CY_SYS_TIMER1])();
2907:Generated_Source\PSoC4/CyLFClk.c ****                 }
2908:Generated_Source\PSoC4/CyLFClk.c ****             }
2909:Generated_Source\PSoC4/CyLFClk.c ****             CySysTimerClearInterrupt(CY_SYS_TIMER1_INT);
2910:Generated_Source\PSoC4/CyLFClk.c ****         }
2911:Generated_Source\PSoC4/CyLFClk.c **** 
2912:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_TIMER2_INT & CY_SYS_WCO_WDT_CONTROL_REG))
2913:Generated_Source\PSoC4/CyLFClk.c ****         {
2914:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_TIMER2_INT & timerIsrMask))
2915:Generated_Source\PSoC4/CyLFClk.c ****             {
2916:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysTimerCallback[CY_SYS_TIMER2] != (void *) 0)
2917:Generated_Source\PSoC4/CyLFClk.c ****                 {
2918:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysTimerCallback[CY_SYS_TIMER2])();
2919:Generated_Source\PSoC4/CyLFClk.c ****                 }
2920:Generated_Source\PSoC4/CyLFClk.c ****             }
2921:Generated_Source\PSoC4/CyLFClk.c ****             CySysTimerClearInterrupt(CY_SYS_TIMER2_INT);
2922:Generated_Source\PSoC4/CyLFClk.c ****         }
2923:Generated_Source\PSoC4/CyLFClk.c ****     }
2924:Generated_Source\PSoC4/CyLFClk.c **** 
2925:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 94


2926:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2927:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerResetCounters
2928:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2929:Generated_Source\PSoC4/CyLFClk.c ****     *
2930:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Resets all the Timer counters set in the mask.
2931:Generated_Source\PSoC4/CyLFClk.c ****     *
2932:Generated_Source\PSoC4/CyLFClk.c ****     * \param countersMask
2933:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER0_RESET - Reset the Counter 0<br>
2934:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_RESET - Reset the Counter 1<br>
2935:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_RESET - Reset the Counter 2
2936:Generated_Source\PSoC4/CyLFClk.c ****     *
2937:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2938:Generated_Source\PSoC4/CyLFClk.c ****     * This function waits while corresponding counters will be reset. This may
2939:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 DeepSleep Timer source-cycles. DeepSleep Timer source must be 
2940:Generated_Source\PSoC4/CyLFClk.c ****     * enabled. Otherwise, the function will never exit.
2941:Generated_Source\PSoC4/CyLFClk.c ****     *
2942:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2943:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerResetCounters(uint32 countersMask)
2944:Generated_Source\PSoC4/CyLFClk.c ****     {
2945:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new Timer reset value */
2946:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG |= (countersMask & CY_SYS_TIMER_RESET);
2947:Generated_Source\PSoC4/CyLFClk.c **** 
2948:Generated_Source\PSoC4/CyLFClk.c ****         while (0uL != (CY_SYS_WCO_WDT_CONTROL_REG & CY_SYS_TIMER_RESET))
2949:Generated_Source\PSoC4/CyLFClk.c ****         {
2950:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for reset to come into effect */
2951:Generated_Source\PSoC4/CyLFClk.c ****         }
2952:Generated_Source\PSoC4/CyLFClk.c ****     }
2953:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
2954:Generated_Source\PSoC4/CyLFClk.c **** 
2955:Generated_Source\PSoC4/CyLFClk.c **** 
2956:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 || (CY_IP_WCO_WDT_EN && CY_IP_SRSSLT))
2957:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2958:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDelay
2959:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2960:Generated_Source\PSoC4/CyLFClk.c ****     *
2961:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2962:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified in the LFCLK clock ticks.
2963:Generated_Source\PSoC4/CyLFClk.c ****     *
2964:Generated_Source\PSoC4/CyLFClk.c ****     * This API is applicable for PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / 
2965:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4200 BLE / PRoC BLE / PSoC 4200L / PSoC 4100M / PSoC 4200M devices to 
2966:Generated_Source\PSoC4/CyLFClk.c ****     * use WDT. Also this API is available to use for PSoC4100S and / PSoC Analog 
2967:Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices to use DeepSleep Timers.
2968:Generated_Source\PSoC4/CyLFClk.c ****     *
2969:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
2970:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M / PSoC 4200M devices:
2971:Generated_Source\PSoC4/CyLFClk.c ****     * The specified WDT counter should be configured as described below and started.
2972:Generated_Source\PSoC4/CyLFClk.c ****     *
2973:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100S / PSoC Analog Coprocessor devices:
2974:Generated_Source\PSoC4/CyLFClk.c ****     * The specified DeepSleep Timer counter should be configured as described below
2975:Generated_Source\PSoC4/CyLFClk.c ****     * and started.
2976:Generated_Source\PSoC4/CyLFClk.c ****     *
2977:Generated_Source\PSoC4/CyLFClk.c ****     * This function can operate in two modes: the "WAIT" and "INTERRUPT" modes. In
2978:Generated_Source\PSoC4/CyLFClk.c ****     * the "WAIT" mode, the function waits for the specified number of ticks. In the
2979:Generated_Source\PSoC4/CyLFClk.c ****     * "INTERRUPT" mode, the interrupt is generated after the specified number of
2980:Generated_Source\PSoC4/CyLFClk.c ****     * ticks.
2981:Generated_Source\PSoC4/CyLFClk.c ****     *
2982:Generated_Source\PSoC4/CyLFClk.c ****     * For the correct function operation, the "Clear On Match" option should be
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 95


2983:Generated_Source\PSoC4/CyLFClk.c ****     * disabled for the specified WDT or DeepSleep Timer counter. Use 
2984:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtSetClearOnMatch() for WDT or CySysTimerSetClearOnMatch() for DeepSleep
2985:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function with the "enable" parameter equal to zero for the used WDT 
2986:Generated_Source\PSoC4/CyLFClk.c ****     * counter or DeepSleep Timer counter.
2987:Generated_Source\PSoC4/CyLFClk.c ****     *
2988:Generated_Source\PSoC4/CyLFClk.c ****     * The corresponding WDT counter should be configured to match the selected
2989:Generated_Source\PSoC4/CyLFClk.c ****     * mode: "Free running Timer" for the "WAIT" mode, and
2990:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" / "Watchdog (w/Interrupt)" for the "INTERRUPT" mode.
2991:Generated_Source\PSoC4/CyLFClk.c ****     *
2992:Generated_Source\PSoC4/CyLFClk.c ****     * Or the corresponding DeepSleep Timer counter should be configured to match the
2993:Generated_Source\PSoC4/CyLFClk.c ****     * selected mode: "Free running Timer" for the "WAIT" mode, and
2994:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" for the "INTERRUPT" mode.
2995:Generated_Source\PSoC4/CyLFClk.c ****     *
2996:Generated_Source\PSoC4/CyLFClk.c ****     * This can be configured in two ways:
2997:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the DWR page. Open the "Clocks" tab, click the "Edit Clocks..."
2998:Generated_Source\PSoC4/CyLFClk.c ****     * button, in the "Configure System Clocks" window click on the
2999:Generated_Source\PSoC4/CyLFClk.c ****     * "Low Frequency Clocks" tab and choose the appropriate option for the used
3000:Generated_Source\PSoC4/CyLFClk.c ****     * WDT or DeepSleep Timer counter.
3001:Generated_Source\PSoC4/CyLFClk.c ****     *
3002:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the CySysWdtSetMode() for WDT or CySysTimerSetMode() for DeepSleep
3003:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function. Call it with the appropriate "mode" parameter for the 
3004:Generated_Source\PSoC4/CyLFClk.c ****     * used WDT or DeepSleep Timer counter.
3005:Generated_Source\PSoC4/CyLFClk.c ****     *
3006:Generated_Source\PSoC4/CyLFClk.c ****     * For the "INTERRUPT" mode, the recommended sequence is the following:
3007:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtDisableCounterIsr() for WDT or 
3008:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerDisableIsr() for DeepSleep Timer function to disable servicing
3009:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts of the specified WDT or DeepSleep Timer counter.
3010:Generated_Source\PSoC4/CyLFClk.c ****     *
3011:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtSetInterruptCallback() for WDT or 
3012:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetIsrCallback() for DeepSleep Timer function to register 
3013:Generated_Source\PSoC4/CyLFClk.c ****     * the callback function for the corresponding WDT or DeepSleep Timer counter.
3014:Generated_Source\PSoC4/CyLFClk.c ****     *
3015:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysTimerDelay() function.
3016:Generated_Source\PSoC4/CyLFClk.c ****     *
3017:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the counter 
3018:Generated_Source\PSoC4/CyLFClk.c ****     * (Timer0 or Timer1).
3019:Generated_Source\PSoC4/CyLFClk.c ****     * \param delayType
3020:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_WAIT - "WAIT" mode. <br>
3021:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_INTERRUPT - "INTERRUPT" mode.
3022:Generated_Source\PSoC4/CyLFClk.c ****     * \param delay The delay value in the LFCLK ticks 
3023:Generated_Source\PSoC4/CyLFClk.c ****     * (allowable range - 16-bit value).
3024:Generated_Source\PSoC4/CyLFClk.c ****     *
3025:Generated_Source\PSoC4/CyLFClk.c ****     * \details
3026:Generated_Source\PSoC4/CyLFClk.c ****     * In the "INTERRUPT" mode, this function enables ISR callback servicing
3027:Generated_Source\PSoC4/CyLFClk.c ****     * from the corresponding WDT or DeepSleep Timer counter. Servicing of this ISR 
3028:Generated_Source\PSoC4/CyLFClk.c ****     * callback will be disabled after the expiration of the delay time.
3029:Generated_Source\PSoC4/CyLFClk.c ****     *
3030:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
3031:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDelay(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32 delay)
3032:Generated_Source\PSoC4/CyLFClk.c ****     {
3033:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
3034:Generated_Source\PSoC4/CyLFClk.c ****         uint32 matchValue;
3035:Generated_Source\PSoC4/CyLFClk.c **** 
3036:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_SRSSV2)
3037:Generated_Source\PSoC4/CyLFClk.c ****             if((counterNum < CY_SYS_WDT_COUNTER2) && (0uL == CySysWdtGetClearOnMatch(counterNum)) &
3038:Generated_Source\PSoC4/CyLFClk.c ****                                                                 (delay <= CY_SYS_UINT16_MAX_VAL))
3039:Generated_Source\PSoC4/CyLFClk.c ****             {
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 96


3040:Generated_Source\PSoC4/CyLFClk.c ****                 regValue   = CySysWdtGetCount(counterNum);
3041:Generated_Source\PSoC4/CyLFClk.c ****                 matchValue = (regValue + delay) & (uint32)CY_SYS_UINT16_MAX_VAL;
3042:Generated_Source\PSoC4/CyLFClk.c **** 
3043:Generated_Source\PSoC4/CyLFClk.c ****                 CySysTimerDelayUntilMatch(counterNum, delayType, matchValue);
3044:Generated_Source\PSoC4/CyLFClk.c ****             }
3045:Generated_Source\PSoC4/CyLFClk.c ****             else
3046:Generated_Source\PSoC4/CyLFClk.c ****             {
3047:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
3048:Generated_Source\PSoC4/CyLFClk.c ****             }
3049:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_SRSSV2) */
3050:Generated_Source\PSoC4/CyLFClk.c **** 
3051:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_WCO_WDT_EN && CY_IP_SRSSLT)
3052:Generated_Source\PSoC4/CyLFClk.c ****             if((counterNum < CY_SYS_TIMER2) && (0uL == CySysTimerGetClearOnMatch(counterNum)) && 
3053:Generated_Source\PSoC4/CyLFClk.c ****                                                             (delay <= CY_SYS_UINT16_MAX_VAL))
3054:Generated_Source\PSoC4/CyLFClk.c ****             {
3055:Generated_Source\PSoC4/CyLFClk.c ****                 regValue   = CySysTimerGetCount(counterNum);
3056:Generated_Source\PSoC4/CyLFClk.c ****                 matchValue = (regValue + delay) & (uint32)CY_SYS_UINT16_MAX_VAL;
3057:Generated_Source\PSoC4/CyLFClk.c **** 
3058:Generated_Source\PSoC4/CyLFClk.c ****                 CySysTimerDelayUntilMatch(counterNum, delayType, matchValue);
3059:Generated_Source\PSoC4/CyLFClk.c ****             }
3060:Generated_Source\PSoC4/CyLFClk.c ****             else
3061:Generated_Source\PSoC4/CyLFClk.c ****             {
3062:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
3063:Generated_Source\PSoC4/CyLFClk.c ****             }
3064:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_WCO_WDT_EN) */
3065:Generated_Source\PSoC4/CyLFClk.c ****     }
3066:Generated_Source\PSoC4/CyLFClk.c **** 
3067:Generated_Source\PSoC4/CyLFClk.c **** 
3068:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
3069:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDelayUntilMatch
3070:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
3071:Generated_Source\PSoC4/CyLFClk.c ****     *
3072:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
3073:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified as the number of WDT or DeepSleep
3074:Generated_Source\PSoC4/CyLFClk.c ****     * Timer clock source ticks between WDT or DeepSleep Timer current value and 
3075:Generated_Source\PSoC4/CyLFClk.c ****     * match" value.
3076:Generated_Source\PSoC4/CyLFClk.c ****     *
3077:Generated_Source\PSoC4/CyLFClk.c ****     * This API is applicable for PSoC 4100 / PSoC 4200 / PRoC BLE / PSoC 4100 BLE /
3078:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4200 BLE / PSoC 4200L / PSoC 4100M / PSoC 4200M devices to use WDT.
3079:Generated_Source\PSoC4/CyLFClk.c ****     * Also this API is available to use for PSoC4100S / Analog Coprocessor devices
3080:Generated_Source\PSoC4/CyLFClk.c ****     * to use DeepSleep Timers.
3081:Generated_Source\PSoC4/CyLFClk.c ****     * 
3082:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
3083:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M / PSoC 4200M devices:
3084:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified as the number of LFCLK ticks
3085:Generated_Source\PSoC4/CyLFClk.c ****     * between the specified WDT counter's current value and the "match"
3086:Generated_Source\PSoC4/CyLFClk.c ****     * passed as the parameter to this function. The current WDT counter value can 
3087:Generated_Source\PSoC4/CyLFClk.c ****     * be obtained using the CySysWdtGetCount() function.
3088:Generated_Source\PSoC4/CyLFClk.c ****     *
3089:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC4100 S and Analog Coprocessor devices:
3090:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified as the number of DeepSleep Timer 
3091:Generated_Source\PSoC4/CyLFClk.c ****     * input clock ticks for Timer0/Timer1 counter's current value and the "match" 
3092:Generated_Source\PSoC4/CyLFClk.c ****     * passed as the parameter to this function. The current DeepSleep Timer counter
3093:Generated_Source\PSoC4/CyLFClk.c ****     * value can be obtained using the CySysWdtGetCount() function.
3094:Generated_Source\PSoC4/CyLFClk.c ****     *
3095:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
3096:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M / PSoC 4200M devices:
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 97


3097:Generated_Source\PSoC4/CyLFClk.c ****     * The specified WDT counter should be configured as described below and started.
3098:Generated_Source\PSoC4/CyLFClk.c ****     *
3099:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC PSoC 4100S / PSoC Analog Coprocessor devices:
3100:Generated_Source\PSoC4/CyLFClk.c ****     * The specified DeepSleep Timer counter should be configured as described below
3101:Generated_Source\PSoC4/CyLFClk.c ****     * and started.
3102:Generated_Source\PSoC4/CyLFClk.c ****     *
3103:Generated_Source\PSoC4/CyLFClk.c ****     * This function can operate in two modes: the "WAIT" and "INTERRUPT" modes. In
3104:Generated_Source\PSoC4/CyLFClk.c ****     * the "WAIT" mode, the function waits for the specified number of ticks. In the
3105:Generated_Source\PSoC4/CyLFClk.c ****     * "INTERRUPT" mode, the interrupt is generated after the specified number of
3106:Generated_Source\PSoC4/CyLFClk.c ****     * ticks.
3107:Generated_Source\PSoC4/CyLFClk.c ****     *
3108:Generated_Source\PSoC4/CyLFClk.c ****     * For the correct function operation, the "Clear On Match" option should be
3109:Generated_Source\PSoC4/CyLFClk.c ****     * disabled for the specified WDT or DeepSleep Timer counter. Use 
3110:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtSetClearOnMatch() for WDT or CySysTimerSetClearOnMatch() for DeepSleep
3111:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function with the "enable" parameter equal to zero for the used WDT 
3112:Generated_Source\PSoC4/CyLFClk.c ****     * or DeepSleep Timer counter.
3113:Generated_Source\PSoC4/CyLFClk.c ****     *
3114:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
3115:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M/PSoC 4200M devices:
3116:Generated_Source\PSoC4/CyLFClk.c ****     * The corresponding WDT counter should be configured to match the selected
3117:Generated_Source\PSoC4/CyLFClk.c ****     * mode: "Free running Timer" for the "WAIT" mode, and
3118:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" / "Watchdog (w/Interrupt)" for the "INTERRUPT" mode.
3119:Generated_Source\PSoC4/CyLFClk.c ****     *
3120:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100S / PSoC Analog Coprocessor devices:
3121:Generated_Source\PSoC4/CyLFClk.c ****     * Corresponding DeepSleep Timer counter should be configured to match the 
3122:Generated_Source\PSoC4/CyLFClk.c ****     * selected mode: "Free running Timer" for the "WAIT" mode, and
3123:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" for the "INTERRUPT" mode.
3124:Generated_Source\PSoC4/CyLFClk.c ****     *
3125:Generated_Source\PSoC4/CyLFClk.c ****     * This can be configured in two ways:
3126:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the DWR page. Open the "Clocks" tab, click the "Edit Clocks..."
3127:Generated_Source\PSoC4/CyLFClk.c ****     * button, in the "Configure System Clocks" window click on the
3128:Generated_Source\PSoC4/CyLFClk.c ****     * "Low Frequency Clocks" tab and choose the appropriate option for the used
3129:Generated_Source\PSoC4/CyLFClk.c ****     * WDT or DeepSleep Timer counter.
3130:Generated_Source\PSoC4/CyLFClk.c ****     *
3131:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the CySysWdtSetMode() for WDT or CySysTimerSetMode() for DeepSleep
3132:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function. Call it with the appropriate "mode" parameter for the 
3133:Generated_Source\PSoC4/CyLFClk.c ****     * used WDT or DeepSleep Timer counter.
3134:Generated_Source\PSoC4/CyLFClk.c ****     *
3135:Generated_Source\PSoC4/CyLFClk.c ****     * For the "INTERRUPT" mode, the recommended sequence is the following:
3136:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtDisableCounterIsr() for WDT or 
3137:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerDisableIsr() for DeepSleep Timer function to disable servicing
3138:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts of the specified WDT or DeepSleep Timer counter.
3139:Generated_Source\PSoC4/CyLFClk.c ****     *
3140:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtSetInterruptCallback() for WDT or 
3141:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetInterruptCallback() for DeepSleep Timer function to register 
3142:Generated_Source\PSoC4/CyLFClk.c ****     * the callback function for the corresponding WDT or DeepSleep Timer counter.
3143:Generated_Source\PSoC4/CyLFClk.c ****     *
3144:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysTimerDelay() function.
3145:Generated_Source\PSoC4/CyLFClk.c ****     *
3146:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the WDT or DeepSleep 
3147:Generated_Source\PSoC4/CyLFClk.c ****     * Timer.
3148:Generated_Source\PSoC4/CyLFClk.c ****     * counter (Timer0 or Timer1).
3149:Generated_Source\PSoC4/CyLFClk.c ****     * \param delayType  CY_SYS_TIMER_WAIT - "WAIT" mode.<br>
3150:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_INTERRUPT - "INTERRUPT" mode.
3151:Generated_Source\PSoC4/CyLFClk.c ****     * \param delay The delay value in the LFCLK ticks
3152:Generated_Source\PSoC4/CyLFClk.c ****     * (allowable range - 16-bit value).
3153:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 98


3154:Generated_Source\PSoC4/CyLFClk.c ****     * \details
3155:Generated_Source\PSoC4/CyLFClk.c ****     * In the "INTERRUPT" mode, this function enables ISR callback servicing
3156:Generated_Source\PSoC4/CyLFClk.c ****     * from the corresponding WDT counter. Servicing of this ISR callback will be
3157:Generated_Source\PSoC4/CyLFClk.c ****     * disabled after the expiration of the delay time.
3158:Generated_Source\PSoC4/CyLFClk.c ****     *
3159:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
3160:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDelayUntilMatch(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32
3161:Generated_Source\PSoC4/CyLFClk.c ****     {
 2151              		.loc 1 3161 0
 2152              		.cfi_startproc
 2153              	.LVL183:
 2154 0000 70B5     		push	{r4, r5, r6, lr}
 2155              		.cfi_def_cfa_offset 16
 2156              		.cfi_offset 4, -16
 2157              		.cfi_offset 5, -12
 2158              		.cfi_offset 6, -8
 2159              		.cfi_offset 14, -4
 2160              		.loc 1 3161 0
 2161 0002 041C     		mov	r4, r0
 2162 0004 0E1C     		mov	r6, r1
 2163 0006 151C     		mov	r5, r2
3162:Generated_Source\PSoC4/CyLFClk.c ****         uint32 tmpValue;
3163:Generated_Source\PSoC4/CyLFClk.c **** 
3164:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_SRSSV2)
3165:Generated_Source\PSoC4/CyLFClk.c ****             if((counterNum < CY_SYS_WDT_COUNTER2) && (0uL == CySysWdtGetClearOnMatch(counterNum)) &
 2164              		.loc 1 3165 0
 2165 0008 0128     		cmp	r0, #1
 2166 000a 03D9     		bls	.L253
 2167              	.LVL184:
 2168              	.L244:
3166:Generated_Source\PSoC4/CyLFClk.c ****                                                                 (match <= CY_SYS_UINT16_MAX_VAL))
3167:Generated_Source\PSoC4/CyLFClk.c ****             {
3168:Generated_Source\PSoC4/CyLFClk.c ****                 if(delayType == CY_SYS_TIMER_WAIT)
3169:Generated_Source\PSoC4/CyLFClk.c ****                 {
3170:Generated_Source\PSoC4/CyLFClk.c ****                     do
3171:Generated_Source\PSoC4/CyLFClk.c ****                     {
3172:Generated_Source\PSoC4/CyLFClk.c ****                         tmpValue = CySysWdtGetCount(counterNum);
3173:Generated_Source\PSoC4/CyLFClk.c ****                     }while(tmpValue > match);
3174:Generated_Source\PSoC4/CyLFClk.c **** 
3175:Generated_Source\PSoC4/CyLFClk.c ****                     do
3176:Generated_Source\PSoC4/CyLFClk.c ****                     {
3177:Generated_Source\PSoC4/CyLFClk.c ****                         tmpValue = CySysWdtGetCount(counterNum);
3178:Generated_Source\PSoC4/CyLFClk.c ****                     }while(tmpValue < match);
3179:Generated_Source\PSoC4/CyLFClk.c ****                 }
3180:Generated_Source\PSoC4/CyLFClk.c ****                 else
3181:Generated_Source\PSoC4/CyLFClk.c ****                 {
3182:Generated_Source\PSoC4/CyLFClk.c ****                     tmpValue = counterIntMaskTbl[counterNum];
3183:Generated_Source\PSoC4/CyLFClk.c ****                     CySysWdtSetMatch(counterNum, match);
3184:Generated_Source\PSoC4/CyLFClk.c **** 
3185:Generated_Source\PSoC4/CyLFClk.c ****                     disableServicedIsr  |= tmpValue;
3186:Generated_Source\PSoC4/CyLFClk.c ****                     wdtIsrMask |= tmpValue;
3187:Generated_Source\PSoC4/CyLFClk.c ****                 }
3188:Generated_Source\PSoC4/CyLFClk.c ****             }
3189:Generated_Source\PSoC4/CyLFClk.c ****             else
3190:Generated_Source\PSoC4/CyLFClk.c ****             {
3191:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
 2169              		.loc 1 3191 0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 99


 2170 000c 0020     		mov	r0, #0
 2171 000e FFF7FEFF 		bl	CyHalt
 2172              	.LVL185:
 2173              	.L243:
3192:Generated_Source\PSoC4/CyLFClk.c ****             }
3193:Generated_Source\PSoC4/CyLFClk.c **** 
3194:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_SRSSV2) */  
3195:Generated_Source\PSoC4/CyLFClk.c **** 
3196:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_WCO_WDT_EN && CY_IP_SRSSLT)
3197:Generated_Source\PSoC4/CyLFClk.c ****         if((counterNum < CY_SYS_TIMER2) && (0uL == CySysTimerGetClearOnMatch(counterNum)) &&
3198:Generated_Source\PSoC4/CyLFClk.c ****                                                         (match <= CY_SYS_UINT16_MAX_VAL))
3199:Generated_Source\PSoC4/CyLFClk.c ****         {
3200:Generated_Source\PSoC4/CyLFClk.c ****             if(delayType == CY_SYS_TIMER_WAIT)
3201:Generated_Source\PSoC4/CyLFClk.c ****             {
3202:Generated_Source\PSoC4/CyLFClk.c ****                 do
3203:Generated_Source\PSoC4/CyLFClk.c ****                 {
3204:Generated_Source\PSoC4/CyLFClk.c ****                     tmpValue = CySysTimerGetCount(counterNum);
3205:Generated_Source\PSoC4/CyLFClk.c ****                 }while(tmpValue > match);
3206:Generated_Source\PSoC4/CyLFClk.c **** 
3207:Generated_Source\PSoC4/CyLFClk.c ****                 do
3208:Generated_Source\PSoC4/CyLFClk.c ****                 {
3209:Generated_Source\PSoC4/CyLFClk.c ****                     tmpValue = CySysTimerGetCount(counterNum);
3210:Generated_Source\PSoC4/CyLFClk.c ****                 }while(tmpValue < match);
3211:Generated_Source\PSoC4/CyLFClk.c ****             }
3212:Generated_Source\PSoC4/CyLFClk.c ****             else
3213:Generated_Source\PSoC4/CyLFClk.c ****             {
3214:Generated_Source\PSoC4/CyLFClk.c ****                 tmpValue = counterTimerIntMaskTbl[counterNum];
3215:Generated_Source\PSoC4/CyLFClk.c ****                 CySysTimerSetMatch(counterNum, match);
3216:Generated_Source\PSoC4/CyLFClk.c **** 
3217:Generated_Source\PSoC4/CyLFClk.c ****                 disableTimerServicedIsr  |= tmpValue;
3218:Generated_Source\PSoC4/CyLFClk.c ****                 timerIsrMask |= tmpValue;
3219:Generated_Source\PSoC4/CyLFClk.c ****             }
3220:Generated_Source\PSoC4/CyLFClk.c ****         }
3221:Generated_Source\PSoC4/CyLFClk.c ****         else
3222:Generated_Source\PSoC4/CyLFClk.c ****         {
3223:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
3224:Generated_Source\PSoC4/CyLFClk.c ****         }
3225:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_WCO_WDT_EN && CY_IP_SRSSLT) */
3226:Generated_Source\PSoC4/CyLFClk.c ****     }
 2174              		.loc 1 3226 0
 2175              		@ sp needed
 2176              	.LVL186:
 2177              	.LVL187:
 2178 0012 70BD     		pop	{r4, r5, r6, pc}
 2179              	.LVL188:
 2180              	.L253:
3165:Generated_Source\PSoC4/CyLFClk.c ****                                                                 (match <= CY_SYS_UINT16_MAX_VAL))
 2181              		.loc 1 3165 0 discriminator 1
 2182 0014 FFF7FEFF 		bl	CySysWdtGetClearOnMatch
 2183              	.LVL189:
 2184 0018 0028     		cmp	r0, #0
 2185 001a F7D1     		bne	.L244
3165:Generated_Source\PSoC4/CyLFClk.c ****                                                                 (match <= CY_SYS_UINT16_MAX_VAL))
 2186              		.loc 1 3165 0 is_stmt 0 discriminator 2
 2187 001c 124B     		ldr	r3, .L254
 2188 001e 9D42     		cmp	r5, r3
 2189 0020 F4D8     		bhi	.L244
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 100


3168:Generated_Source\PSoC4/CyLFClk.c ****                 {
 2190              		.loc 1 3168 0 is_stmt 1
 2191 0022 002E     		cmp	r6, #0
 2192 0024 0FD1     		bne	.L245
 2193              	.L246:
3172:Generated_Source\PSoC4/CyLFClk.c ****                     }while(tmpValue > match);
 2194              		.loc 1 3172 0 discriminator 1
 2195 0026 201C     		mov	r0, r4
 2196 0028 FFF7FEFF 		bl	CySysWdtGetCount
 2197              	.LVL190:
3173:Generated_Source\PSoC4/CyLFClk.c **** 
 2198              		.loc 1 3173 0 discriminator 1
 2199 002c 8542     		cmp	r5, r0
 2200 002e FAD3     		bcc	.L246
 2201              	.L249:
3177:Generated_Source\PSoC4/CyLFClk.c ****                     }while(tmpValue < match);
 2202              		.loc 1 3177 0 discriminator 1
 2203 0030 201C     		mov	r0, r4
 2204              	.LVL191:
 2205 0032 FFF7FEFF 		bl	CySysWdtGetCount
 2206              	.LVL192:
3178:Generated_Source\PSoC4/CyLFClk.c ****                 }
 2207              		.loc 1 3178 0 discriminator 1
 2208 0036 8542     		cmp	r5, r0
 2209 0038 EBD9     		bls	.L243
3177:Generated_Source\PSoC4/CyLFClk.c ****                     }while(tmpValue < match);
 2210              		.loc 1 3177 0
 2211 003a 201C     		mov	r0, r4
 2212              	.LVL193:
 2213 003c FFF7FEFF 		bl	CySysWdtGetCount
 2214              	.LVL194:
3178:Generated_Source\PSoC4/CyLFClk.c ****                 }
 2215              		.loc 1 3178 0
 2216 0040 8542     		cmp	r5, r0
 2217 0042 F5D8     		bhi	.L249
 2218 0044 E5E7     		b	.L243
 2219              	.LVL195:
 2220              	.L245:
 2221              	.LBB158:
 2222              	.LBB159:
3182:Generated_Source\PSoC4/CyLFClk.c ****                     CySysWdtSetMatch(counterNum, match);
 2223              		.loc 1 3182 0
 2224 0046 094B     		ldr	r3, .L254+4
 2225 0048 A200     		lsl	r2, r4, #2
3183:Generated_Source\PSoC4/CyLFClk.c **** 
 2226              		.loc 1 3183 0
 2227 004a 201C     		mov	r0, r4
 2228 004c 291C     		mov	r1, r5
3182:Generated_Source\PSoC4/CyLFClk.c ****                     CySysWdtSetMatch(counterNum, match);
 2229              		.loc 1 3182 0
 2230 004e D658     		ldr	r6, [r2, r3]
 2231              	.LVL196:
3183:Generated_Source\PSoC4/CyLFClk.c **** 
 2232              		.loc 1 3183 0
 2233 0050 FFF7FEFF 		bl	CySysWdtSetMatch
 2234              	.LVL197:
3185:Generated_Source\PSoC4/CyLFClk.c ****                     wdtIsrMask |= tmpValue;
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 101


 2235              		.loc 1 3185 0
 2236 0054 064A     		ldr	r2, .L254+8
 2237 0056 D369     		ldr	r3, [r2, #28]
 2238 0058 3343     		orr	r3, r6
 2239 005a D361     		str	r3, [r2, #28]
3186:Generated_Source\PSoC4/CyLFClk.c ****                 }
 2240              		.loc 1 3186 0
 2241 005c 054A     		ldr	r2, .L254+12
 2242 005e 1368     		ldr	r3, [r2]
 2243 0060 3343     		orr	r3, r6
 2244 0062 1360     		str	r3, [r2]
 2245 0064 D5E7     		b	.L243
 2246              	.L255:
 2247 0066 C046     		.align	2
 2248              	.L254:
 2249 0068 FFFF0000 		.word	65535
 2250 006c 00000000 		.word	.LANCHOR1
 2251 0070 00000000 		.word	.LANCHOR0
 2252 0074 00000000 		.word	.LANCHOR2
 2253              	.LBE159:
 2254              	.LBE158:
 2255              		.cfi_endproc
 2256              	.LFE35:
 2257              		.size	CySysTimerDelayUntilMatch, .-CySysTimerDelayUntilMatch
 2258              		.section	.text.CySysTimerDelay,"ax",%progbits
 2259              		.align	2
 2260              		.global	CySysTimerDelay
 2261              		.code	16
 2262              		.thumb_func
 2263              		.type	CySysTimerDelay, %function
 2264              	CySysTimerDelay:
 2265              	.LFB34:
3032:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
 2266              		.loc 1 3032 0
 2267              		.cfi_startproc
 2268              	.LVL198:
 2269 0000 70B5     		push	{r4, r5, r6, lr}
 2270              		.cfi_def_cfa_offset 16
 2271              		.cfi_offset 4, -16
 2272              		.cfi_offset 5, -12
 2273              		.cfi_offset 6, -8
 2274              		.cfi_offset 14, -4
3032:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
 2275              		.loc 1 3032 0
 2276 0002 041C     		mov	r4, r0
 2277 0004 0E1C     		mov	r6, r1
 2278 0006 151C     		mov	r5, r2
3037:Generated_Source\PSoC4/CyLFClk.c ****                                                                 (delay <= CY_SYS_UINT16_MAX_VAL))
 2279              		.loc 1 3037 0
 2280 0008 0128     		cmp	r0, #1
 2281 000a 03D9     		bls	.L259
 2282              	.LVL199:
 2283              	.L257:
3047:Generated_Source\PSoC4/CyLFClk.c ****             }
 2284              		.loc 1 3047 0
 2285 000c 0020     		mov	r0, #0
 2286 000e FFF7FEFF 		bl	CyHalt
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 102


 2287              	.LVL200:
 2288              	.L256:
3065:Generated_Source\PSoC4/CyLFClk.c **** 
 2289              		.loc 1 3065 0
 2290              		@ sp needed
 2291              	.LVL201:
 2292              	.LVL202:
 2293 0012 70BD     		pop	{r4, r5, r6, pc}
 2294              	.LVL203:
 2295              	.L259:
3037:Generated_Source\PSoC4/CyLFClk.c ****                                                                 (delay <= CY_SYS_UINT16_MAX_VAL))
 2296              		.loc 1 3037 0 discriminator 1
 2297 0014 FFF7FEFF 		bl	CySysWdtGetClearOnMatch
 2298              	.LVL204:
 2299 0018 0028     		cmp	r0, #0
 2300 001a F7D1     		bne	.L257
3037:Generated_Source\PSoC4/CyLFClk.c ****                                                                 (delay <= CY_SYS_UINT16_MAX_VAL))
 2301              		.loc 1 3037 0 is_stmt 0 discriminator 2
 2302 001c 064B     		ldr	r3, .L260
 2303 001e 9D42     		cmp	r5, r3
 2304 0020 F4D8     		bhi	.L257
3040:Generated_Source\PSoC4/CyLFClk.c ****                 matchValue = (regValue + delay) & (uint32)CY_SYS_UINT16_MAX_VAL;
 2305              		.loc 1 3040 0 is_stmt 1
 2306 0022 201C     		mov	r0, r4
 2307 0024 FFF7FEFF 		bl	CySysWdtGetCount
 2308              	.LVL205:
3041:Generated_Source\PSoC4/CyLFClk.c **** 
 2309              		.loc 1 3041 0
 2310 0028 4219     		add	r2, r0, r5
 2311 002a 1204     		lsl	r2, r2, #16
 2312 002c 120C     		lsr	r2, r2, #16
3043:Generated_Source\PSoC4/CyLFClk.c ****             }
 2313              		.loc 1 3043 0
 2314 002e 201C     		mov	r0, r4
 2315              	.LVL206:
 2316 0030 311C     		mov	r1, r6
 2317 0032 FFF7FEFF 		bl	CySysTimerDelayUntilMatch
 2318              	.LVL207:
 2319 0036 ECE7     		b	.L256
 2320              	.L261:
 2321              		.align	2
 2322              	.L260:
 2323 0038 FFFF0000 		.word	65535
 2324              		.cfi_endproc
 2325              	.LFE34:
 2326              		.size	CySysTimerDelay, .-CySysTimerDelay
 2327              		.section	.rodata
 2328              		.align	2
 2329              		.set	.LANCHOR1,. + 0
 2330              		.type	counterIntMaskTbl, %object
 2331              		.size	counterIntMaskTbl, 12
 2332              	counterIntMaskTbl:
 2333 0000 04000000 		.word	4
 2334 0004 00040000 		.word	1024
 2335 0008 00000400 		.word	262144
 2336              		.data
 2337              		.align	2
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 103


 2338              		.set	.LANCHOR2,. + 0
 2339              		.type	wdtIsrMask, %object
 2340              		.size	wdtIsrMask, 4
 2341              	wdtIsrMask:
 2342 0000 04040400 		.word	263172
 2343              		.bss
 2344              		.align	2
 2345              		.set	.LANCHOR0,. + 0
 2346              		.type	compensateRunningStatus.4566, %object
 2347              		.size	compensateRunningStatus.4566, 4
 2348              	compensateRunningStatus.4566:
 2349 0000 00000000 		.space	4
 2350              		.type	lfclkPosedgeEnabledWdtCounter.4697, %object
 2351              		.size	lfclkPosedgeEnabledWdtCounter.4697, 4
 2352              	lfclkPosedgeEnabledWdtCounter.4697:
 2353 0004 00000000 		.space	4
 2354              		.type	lfclkPosedgeWdtCounter0Enabled, %object
 2355              		.size	lfclkPosedgeWdtCounter0Enabled, 4
 2356              	lfclkPosedgeWdtCounter0Enabled:
 2357 0008 00000000 		.space	4
 2358              		.type	lfclkPosedgeWdtCounter0Mode, %object
 2359              		.size	lfclkPosedgeWdtCounter0Mode, 4
 2360              	lfclkPosedgeWdtCounter0Mode:
 2361 000c 00000000 		.space	4
 2362              		.type	cySysWdtCallback, %object
 2363              		.size	cySysWdtCallback, 12
 2364              	cySysWdtCallback:
 2365 0010 00000000 		.space	12
 2365      00000000 
 2365      00000000 
 2366              		.type	disableServicedIsr, %object
 2367              		.size	disableServicedIsr, 4
 2368              	disableServicedIsr:
 2369 001c 00000000 		.space	4
 2370              		.text
 2371              	.Letext0:
 2372              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2373              		.file 3 "Generated_Source\\PSoC4\\CyLFClk.h"
 2374              		.file 4 "Generated_Source\\PSoC4\\CyLib.h"
 2375              		.section	.debug_info,"",%progbits
 2376              	.Ldebug_info0:
 2377 0000 BB0E0000 		.4byte	0xebb
 2378 0004 0400     		.2byte	0x4
 2379 0006 00000000 		.4byte	.Ldebug_abbrev0
 2380 000a 04       		.byte	0x4
 2381 000b 01       		.uleb128 0x1
 2382 000c 61060000 		.4byte	.LASF92
 2383 0010 01       		.byte	0x1
 2384 0011 6A050000 		.4byte	.LASF93
 2385 0015 CD030000 		.4byte	.LASF94
 2386 0019 F0000000 		.4byte	.Ldebug_ranges0+0xf0
 2387 001d 00000000 		.4byte	0
 2388 0021 00000000 		.4byte	.Ldebug_line0
 2389 0025 02       		.uleb128 0x2
 2390 0026 04       		.byte	0x4
 2391 0027 07       		.byte	0x7
 2392 0028 96020000 		.4byte	.LASF0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 104


 2393 002c 02       		.uleb128 0x2
 2394 002d 01       		.byte	0x1
 2395 002e 06       		.byte	0x6
 2396 002f 21010000 		.4byte	.LASF1
 2397 0033 02       		.uleb128 0x2
 2398 0034 01       		.byte	0x1
 2399 0035 08       		.byte	0x8
 2400 0036 CE040000 		.4byte	.LASF2
 2401 003a 02       		.uleb128 0x2
 2402 003b 02       		.byte	0x2
 2403 003c 05       		.byte	0x5
 2404 003d 18050000 		.4byte	.LASF3
 2405 0041 02       		.uleb128 0x2
 2406 0042 02       		.byte	0x2
 2407 0043 07       		.byte	0x7
 2408 0044 28030000 		.4byte	.LASF4
 2409 0048 02       		.uleb128 0x2
 2410 0049 04       		.byte	0x4
 2411 004a 05       		.byte	0x5
 2412 004b 7C010000 		.4byte	.LASF5
 2413 004f 02       		.uleb128 0x2
 2414 0050 04       		.byte	0x4
 2415 0051 07       		.byte	0x7
 2416 0052 C7020000 		.4byte	.LASF6
 2417 0056 02       		.uleb128 0x2
 2418 0057 08       		.byte	0x8
 2419 0058 05       		.byte	0x5
 2420 0059 13010000 		.4byte	.LASF7
 2421 005d 02       		.uleb128 0x2
 2422 005e 08       		.byte	0x8
 2423 005f 07       		.byte	0x7
 2424 0060 E4000000 		.4byte	.LASF8
 2425 0064 03       		.uleb128 0x3
 2426 0065 04       		.byte	0x4
 2427 0066 05       		.byte	0x5
 2428 0067 696E7400 		.ascii	"int\000"
 2429 006b 04       		.uleb128 0x4
 2430 006c 8E010000 		.4byte	.LASF9
 2431 0070 02       		.byte	0x2
 2432 0071 9801     		.2byte	0x198
 2433 0073 33000000 		.4byte	0x33
 2434 0077 04       		.uleb128 0x4
 2435 0078 00000000 		.4byte	.LASF10
 2436 007c 02       		.byte	0x2
 2437 007d 9901     		.2byte	0x199
 2438 007f 41000000 		.4byte	0x41
 2439 0083 04       		.uleb128 0x4
 2440 0084 E6010000 		.4byte	.LASF11
 2441 0088 02       		.byte	0x2
 2442 0089 9A01     		.2byte	0x19a
 2443 008b 4F000000 		.4byte	0x4f
 2444 008f 02       		.uleb128 0x2
 2445 0090 04       		.byte	0x4
 2446 0091 04       		.byte	0x4
 2447 0092 88040000 		.4byte	.LASF12
 2448 0096 02       		.uleb128 0x2
 2449 0097 08       		.byte	0x8
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 105


 2450 0098 04       		.byte	0x4
 2451 0099 9B010000 		.4byte	.LASF13
 2452 009d 02       		.uleb128 0x2
 2453 009e 01       		.byte	0x1
 2454 009f 08       		.byte	0x8
 2455 00a0 A5050000 		.4byte	.LASF14
 2456 00a4 04       		.uleb128 0x4
 2457 00a5 58060000 		.4byte	.LASF15
 2458 00a9 02       		.byte	0x2
 2459 00aa 3A02     		.2byte	0x23a
 2460 00ac 4F000000 		.4byte	0x4f
 2461 00b0 04       		.uleb128 0x4
 2462 00b1 A3030000 		.4byte	.LASF16
 2463 00b5 02       		.byte	0x2
 2464 00b6 4402     		.2byte	0x244
 2465 00b8 BC000000 		.4byte	0xbc
 2466 00bc 05       		.uleb128 0x5
 2467 00bd 83000000 		.4byte	0x83
 2468 00c1 06       		.uleb128 0x6
 2469 00c2 04       		.byte	0x4
 2470 00c3 C7000000 		.4byte	0xc7
 2471 00c7 07       		.uleb128 0x7
 2472 00c8 08       		.uleb128 0x8
 2473 00c9 01       		.byte	0x1
 2474 00ca 03       		.byte	0x3
 2475 00cb 1B       		.byte	0x1b
 2476 00cc DD000000 		.4byte	0xdd
 2477 00d0 09       		.uleb128 0x9
 2478 00d1 2F040000 		.4byte	.LASF17
 2479 00d5 00       		.sleb128 0
 2480 00d6 09       		.uleb128 0x9
 2481 00d7 23070000 		.4byte	.LASF18
 2482 00db 01       		.sleb128 1
 2483 00dc 00       		.byte	0
 2484 00dd 0A       		.uleb128 0xa
 2485 00de 5B010000 		.4byte	.LASF19
 2486 00e2 03       		.byte	0x3
 2487 00e3 1E       		.byte	0x1e
 2488 00e4 C8000000 		.4byte	0xc8
 2489 00e8 0A       		.uleb128 0xa
 2490 00e9 43010000 		.4byte	.LASF20
 2491 00ed 03       		.byte	0x3
 2492 00ee 58       		.byte	0x58
 2493 00ef C1000000 		.4byte	0xc1
 2494 00f3 02       		.uleb128 0x2
 2495 00f4 04       		.byte	0x4
 2496 00f5 07       		.byte	0x7
 2497 00f6 0F040000 		.4byte	.LASF21
 2498 00fa 0B       		.uleb128 0xb
 2499 00fb 40000000 		.4byte	.LASF24
 2500 00ff 01       		.byte	0x1
 2501 0100 1704     		.2byte	0x417
 2502 0102 01       		.byte	0x1
 2503 0103 2C010000 		.4byte	0x12c
 2504 0107 0C       		.uleb128 0xc
 2505 0108 71000000 		.4byte	.LASF22
 2506 010c 01       		.byte	0x1
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 106


 2507 010d 1704     		.2byte	0x417
 2508 010f 83000000 		.4byte	0x83
 2509 0113 0C       		.uleb128 0xc
 2510 0114 AA050000 		.4byte	.LASF23
 2511 0118 01       		.byte	0x1
 2512 0119 1704     		.2byte	0x417
 2513 011b 83000000 		.4byte	0x83
 2514 011f 0D       		.uleb128 0xd
 2515 0120 14060000 		.4byte	.LASF34
 2516 0124 01       		.byte	0x1
 2517 0125 1904     		.2byte	0x419
 2518 0127 83000000 		.4byte	0x83
 2519 012b 00       		.byte	0
 2520 012c 0E       		.uleb128 0xe
 2521 012d 7D030000 		.4byte	.LASF95
 2522 0131 01       		.byte	0x1
 2523 0132 53       		.byte	0x53
 2524 0133 01       		.byte	0x1
 2525 0134 0B       		.uleb128 0xb
 2526 0135 46020000 		.4byte	.LASF25
 2527 0139 01       		.byte	0x1
 2528 013a 9A04     		.2byte	0x49a
 2529 013c 01       		.byte	0x1
 2530 013d 4E010000 		.4byte	0x14e
 2531 0141 0C       		.uleb128 0xc
 2532 0142 72020000 		.4byte	.LASF26
 2533 0146 01       		.byte	0x1
 2534 0147 9A04     		.2byte	0x49a
 2535 0149 83000000 		.4byte	0x83
 2536 014d 00       		.byte	0
 2537 014e 0F       		.uleb128 0xf
 2538 014f B8040000 		.4byte	.LASF27
 2539 0153 01       		.byte	0x1
 2540 0154 C903     		.2byte	0x3c9
 2541 0156 83000000 		.4byte	0x83
 2542 015a 01       		.byte	0x1
 2543 015b 10       		.uleb128 0x10
 2544 015c EF050000 		.4byte	.LASF48
 2545 0160 01       		.byte	0x1
 2546 0161 3304     		.2byte	0x433
 2547 0163 83000000 		.4byte	0x83
 2548 0167 01       		.byte	0x1
 2549 0168 79010000 		.4byte	0x179
 2550 016c 0C       		.uleb128 0xc
 2551 016d 71000000 		.4byte	.LASF22
 2552 0171 01       		.byte	0x1
 2553 0172 3304     		.2byte	0x433
 2554 0174 83000000 		.4byte	0x83
 2555 0178 00       		.byte	0
 2556 0179 0F       		.uleb128 0xf
 2557 017a 3C050000 		.4byte	.LASF28
 2558 017e 01       		.byte	0x1
 2559 017f 7201     		.2byte	0x172
 2560 0181 83000000 		.4byte	0x83
 2561 0185 01       		.byte	0x1
 2562 0186 0B       		.uleb128 0xb
 2563 0187 5B040000 		.4byte	.LASF29
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 107


 2564 018b 01       		.byte	0x1
 2565 018c 2006     		.2byte	0x620
 2566 018e 01       		.byte	0x1
 2567 018f A0010000 		.4byte	0x1a0
 2568 0193 0C       		.uleb128 0xc
 2569 0194 D9010000 		.4byte	.LASF30
 2570 0198 01       		.byte	0x1
 2571 0199 2006     		.2byte	0x620
 2572 019b 83000000 		.4byte	0x83
 2573 019f 00       		.byte	0
 2574 01a0 0B       		.uleb128 0xb
 2575 01a1 8E040000 		.4byte	.LASF31
 2576 01a5 01       		.byte	0x1
 2577 01a6 580C     		.2byte	0xc58
 2578 01a8 01       		.byte	0x1
 2579 01a9 DE010000 		.4byte	0x1de
 2580 01ad 0C       		.uleb128 0xc
 2581 01ae 71000000 		.4byte	.LASF22
 2582 01b2 01       		.byte	0x1
 2583 01b3 580C     		.2byte	0xc58
 2584 01b5 83000000 		.4byte	0x83
 2585 01b9 0C       		.uleb128 0xc
 2586 01ba 22050000 		.4byte	.LASF32
 2587 01be 01       		.byte	0x1
 2588 01bf 580C     		.2byte	0xc58
 2589 01c1 DD000000 		.4byte	0xdd
 2590 01c5 0C       		.uleb128 0xc
 2591 01c6 29040000 		.4byte	.LASF33
 2592 01ca 01       		.byte	0x1
 2593 01cb 580C     		.2byte	0xc58
 2594 01cd 83000000 		.4byte	0x83
 2595 01d1 0D       		.uleb128 0xd
 2596 01d2 D3050000 		.4byte	.LASF35
 2597 01d6 01       		.byte	0x1
 2598 01d7 5A0C     		.2byte	0xc5a
 2599 01d9 83000000 		.4byte	0x83
 2600 01dd 00       		.byte	0
 2601 01de 11       		.uleb128 0x11
 2602 01df 2C010000 		.4byte	0x12c
 2603 01e3 00000000 		.4byte	.LFB0
 2604 01e7 14000000 		.4byte	.LFE0-.LFB0
 2605 01eb 01       		.uleb128 0x1
 2606 01ec 9C       		.byte	0x9c
 2607 01ed 12       		.uleb128 0x12
 2608 01ee A9000000 		.4byte	.LASF36
 2609 01f2 01       		.byte	0x1
 2610 01f3 A8       		.byte	0xa8
 2611 01f4 00000000 		.4byte	.LFB2
 2612 01f8 34000000 		.4byte	.LFE2-.LFB2
 2613 01fc 01       		.uleb128 0x1
 2614 01fd 9C       		.byte	0x9c
 2615 01fe 12       		.uleb128 0x12
 2616 01ff ED010000 		.4byte	.LASF37
 2617 0203 01       		.byte	0x1
 2618 0204 C9       		.byte	0xc9
 2619 0205 00000000 		.4byte	.LFB3
 2620 0209 14000000 		.4byte	.LFE3-.LFB3
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 108


 2621 020d 01       		.uleb128 0x1
 2622 020e 9C       		.byte	0x9c
 2623 020f 13       		.uleb128 0x13
 2624 0210 0D070000 		.4byte	.LASF52
 2625 0214 01       		.byte	0x1
 2626 0215 0B01     		.2byte	0x10b
 2627 0217 A4000000 		.4byte	0xa4
 2628 021b 00000000 		.4byte	.LFB4
 2629 021f F8000000 		.4byte	.LFE4-.LFB4
 2630 0223 01       		.uleb128 0x1
 2631 0224 9C       		.byte	0x9c
 2632 0225 9C020000 		.4byte	0x29c
 2633 0229 14       		.uleb128 0x14
 2634 022a BA020000 		.4byte	.LASF38
 2635 022e 01       		.byte	0x1
 2636 022f 0B01     		.2byte	0x10b
 2637 0231 83000000 		.4byte	0x83
 2638 0235 00000000 		.4byte	.LLST0
 2639 0239 14       		.uleb128 0x14
 2640 023a A2010000 		.4byte	.LASF39
 2641 023e 01       		.byte	0x1
 2642 023f 0B01     		.2byte	0x10b
 2643 0241 9C020000 		.4byte	0x29c
 2644 0245 53000000 		.4byte	.LLST1
 2645 0249 15       		.uleb128 0x15
 2646 024a C4010000 		.4byte	.LASF40
 2647 024e 01       		.byte	0x1
 2648 024f 0D01     		.2byte	0x10d
 2649 0251 83000000 		.4byte	0x83
 2650 0255 A0000000 		.4byte	.LLST2
 2651 0259 15       		.uleb128 0x15
 2652 025a FF050000 		.4byte	.LASF41
 2653 025e 01       		.byte	0x1
 2654 025f 0E01     		.2byte	0x10e
 2655 0261 83000000 		.4byte	0x83
 2656 0265 BE000000 		.4byte	.LLST3
 2657 0269 16       		.uleb128 0x16
 2658 026a DC040000 		.4byte	.LASF42
 2659 026e 01       		.byte	0x1
 2660 026f 0F01     		.2byte	0x10f
 2661 0271 83000000 		.4byte	0x83
 2662 0275 05       		.uleb128 0x5
 2663 0276 03       		.byte	0x3
 2664 0277 00000000 		.4byte	compensateRunningStatus.4566
 2665 027b 15       		.uleb128 0x15
 2666 027c 41040000 		.4byte	.LASF43
 2667 0280 01       		.byte	0x1
 2668 0281 1001     		.2byte	0x110
 2669 0283 83000000 		.4byte	0x83
 2670 0287 2C010000 		.4byte	.LLST4
 2671 028b 15       		.uleb128 0x15
 2672 028c C0030000 		.4byte	.LASF44
 2673 0290 01       		.byte	0x1
 2674 0291 1101     		.2byte	0x111
 2675 0293 A4000000 		.4byte	0xa4
 2676 0297 5B010000 		.4byte	.LLST5
 2677 029b 00       		.byte	0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 109


 2678 029c 06       		.uleb128 0x6
 2679 029d 04       		.byte	0x4
 2680 029e 83000000 		.4byte	0x83
 2681 02a2 17       		.uleb128 0x17
 2682 02a3 36010000 		.4byte	.LASF46
 2683 02a7 01       		.byte	0x1
 2684 02a8 B403     		.2byte	0x3b4
 2685 02aa 00000000 		.4byte	.LFB6
 2686 02ae 1C000000 		.4byte	.LFE6-.LFB6
 2687 02b2 01       		.uleb128 0x1
 2688 02b3 9C       		.byte	0x9c
 2689 02b4 DB020000 		.4byte	0x2db
 2690 02b8 15       		.uleb128 0x15
 2691 02b9 D9020000 		.4byte	.LASF45
 2692 02bd 01       		.byte	0x1
 2693 02be B603     		.2byte	0x3b6
 2694 02c0 6B000000 		.4byte	0x6b
 2695 02c4 86010000 		.4byte	.LLST6
 2696 02c8 18       		.uleb128 0x18
 2697 02c9 06000000 		.4byte	.LVL21
 2698 02cd 840E0000 		.4byte	0xe84
 2699 02d1 18       		.uleb128 0x18
 2700 02d2 16000000 		.4byte	.LVL22
 2701 02d6 8F0E0000 		.4byte	0xe8f
 2702 02da 00       		.byte	0
 2703 02db 17       		.uleb128 0x17
 2704 02dc 50000000 		.4byte	.LASF47
 2705 02e0 01       		.byte	0x1
 2706 02e1 D703     		.2byte	0x3d7
 2707 02e3 00000000 		.4byte	.LFB8
 2708 02e7 30000000 		.4byte	.LFE8-.LFB8
 2709 02eb 01       		.uleb128 0x1
 2710 02ec 9C       		.byte	0x9c
 2711 02ed 14030000 		.4byte	0x314
 2712 02f1 15       		.uleb128 0x15
 2713 02f2 D9020000 		.4byte	.LASF45
 2714 02f6 01       		.byte	0x1
 2715 02f7 D903     		.2byte	0x3d9
 2716 02f9 6B000000 		.4byte	0x6b
 2717 02fd 99010000 		.4byte	.LLST7
 2718 0301 18       		.uleb128 0x18
 2719 0302 08000000 		.4byte	.LVL23
 2720 0306 840E0000 		.4byte	0xe84
 2721 030a 18       		.uleb128 0x18
 2722 030b 26000000 		.4byte	.LVL24
 2723 030f 8F0E0000 		.4byte	0xe8f
 2724 0313 00       		.byte	0
 2725 0314 10       		.uleb128 0x10
 2726 0315 3B030000 		.4byte	.LASF49
 2727 0319 01       		.byte	0x1
 2728 031a F903     		.2byte	0x3f9
 2729 031c 83000000 		.4byte	0x83
 2730 0320 01       		.byte	0x1
 2731 0321 32030000 		.4byte	0x332
 2732 0325 0C       		.uleb128 0xc
 2733 0326 71000000 		.4byte	.LASF22
 2734 032a 01       		.byte	0x1
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 110


 2735 032b F903     		.2byte	0x3f9
 2736 032d 83000000 		.4byte	0x83
 2737 0331 00       		.byte	0
 2738 0332 19       		.uleb128 0x19
 2739 0333 14030000 		.4byte	0x314
 2740 0337 00000000 		.4byte	.LFB9
 2741 033b 24000000 		.4byte	.LFE9-.LFB9
 2742 033f 01       		.uleb128 0x1
 2743 0340 9C       		.byte	0x9c
 2744 0341 5E030000 		.4byte	0x35e
 2745 0345 1A       		.uleb128 0x1a
 2746 0346 25030000 		.4byte	0x325
 2747 034a AC010000 		.4byte	.LLST8
 2748 034e 1B       		.uleb128 0x1b
 2749 034f 0E000000 		.4byte	.LVL27
 2750 0353 A00E0000 		.4byte	0xea0
 2751 0357 1C       		.uleb128 0x1c
 2752 0358 01       		.uleb128 0x1
 2753 0359 50       		.byte	0x50
 2754 035a 01       		.uleb128 0x1
 2755 035b 30       		.byte	0x30
 2756 035c 00       		.byte	0
 2757 035d 00       		.byte	0
 2758 035e 19       		.uleb128 0x19
 2759 035f FA000000 		.4byte	0xfa
 2760 0363 00000000 		.4byte	.LFB10
 2761 0367 3C000000 		.4byte	.LFE10-.LFB10
 2762 036b 01       		.uleb128 0x1
 2763 036c 9C       		.byte	0x9c
 2764 036d DF030000 		.4byte	0x3df
 2765 0371 1A       		.uleb128 0x1a
 2766 0372 07010000 		.4byte	0x107
 2767 0376 D8010000 		.4byte	.LLST9
 2768 037a 1A       		.uleb128 0x1a
 2769 037b 13010000 		.4byte	0x113
 2770 037f 1A020000 		.4byte	.LLST10
 2771 0383 1D       		.uleb128 0x1d
 2772 0384 1F010000 		.4byte	0x11f
 2773 0388 1E       		.uleb128 0x1e
 2774 0389 14000000 		.4byte	.LBB30
 2775 038d 18000000 		.4byte	.LBE30-.LBB30
 2776 0391 BB030000 		.4byte	0x3bb
 2777 0395 1A       		.uleb128 0x1a
 2778 0396 13010000 		.4byte	0x113
 2779 039a 5C020000 		.4byte	.LLST11
 2780 039e 1A       		.uleb128 0x1a
 2781 039f 07010000 		.4byte	0x107
 2782 03a3 7D020000 		.4byte	.LLST12
 2783 03a7 1F       		.uleb128 0x1f
 2784 03a8 14000000 		.4byte	.LBB31
 2785 03ac 18000000 		.4byte	.LBE31-.LBB31
 2786 03b0 20       		.uleb128 0x20
 2787 03b1 1F010000 		.4byte	0x11f
 2788 03b5 9E020000 		.4byte	.LLST13
 2789 03b9 00       		.byte	0
 2790 03ba 00       		.byte	0
 2791 03bb 21       		.uleb128 0x21
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 111


 2792 03bc 10000000 		.4byte	.LVL31
 2793 03c0 14030000 		.4byte	0x314
 2794 03c4 CF030000 		.4byte	0x3cf
 2795 03c8 1C       		.uleb128 0x1c
 2796 03c9 01       		.uleb128 0x1
 2797 03ca 50       		.byte	0x50
 2798 03cb 02       		.uleb128 0x2
 2799 03cc 74       		.byte	0x74
 2800 03cd 00       		.sleb128 0
 2801 03ce 00       		.byte	0
 2802 03cf 1B       		.uleb128 0x1b
 2803 03d0 34000000 		.4byte	.LVL40
 2804 03d4 A00E0000 		.4byte	0xea0
 2805 03d8 1C       		.uleb128 0x1c
 2806 03d9 01       		.uleb128 0x1
 2807 03da 50       		.byte	0x50
 2808 03db 01       		.uleb128 0x1
 2809 03dc 30       		.byte	0x30
 2810 03dd 00       		.byte	0
 2811 03de 00       		.byte	0
 2812 03df 19       		.uleb128 0x19
 2813 03e0 5B010000 		.4byte	0x15b
 2814 03e4 00000000 		.4byte	.LFB11
 2815 03e8 14000000 		.4byte	.LFE11-.LFB11
 2816 03ec 01       		.uleb128 0x1
 2817 03ed 9C       		.byte	0x9c
 2818 03ee FC030000 		.4byte	0x3fc
 2819 03f2 1A       		.uleb128 0x1a
 2820 03f3 6C010000 		.4byte	0x16c
 2821 03f7 BC020000 		.4byte	.LLST14
 2822 03fb 00       		.byte	0
 2823 03fc 17       		.uleb128 0x17
 2824 03fd FB000000 		.4byte	.LASF50
 2825 0401 01       		.byte	0x1
 2826 0402 5004     		.2byte	0x450
 2827 0404 00000000 		.4byte	.LFB12
 2828 0408 38000000 		.4byte	.LFE12-.LFB12
 2829 040c 01       		.uleb128 0x1
 2830 040d 9C       		.byte	0x9c
 2831 040e 66040000 		.4byte	0x466
 2832 0412 14       		.uleb128 0x14
 2833 0413 71000000 		.4byte	.LASF22
 2834 0417 01       		.byte	0x1
 2835 0418 5004     		.2byte	0x450
 2836 041a 83000000 		.4byte	0x83
 2837 041e DD020000 		.4byte	.LLST15
 2838 0422 14       		.uleb128 0x14
 2839 0423 94010000 		.4byte	.LASF51
 2840 0427 01       		.byte	0x1
 2841 0428 5004     		.2byte	0x450
 2842 042a 83000000 		.4byte	0x83
 2843 042e 09030000 		.4byte	.LLST16
 2844 0432 15       		.uleb128 0x15
 2845 0433 14060000 		.4byte	.LASF34
 2846 0437 01       		.byte	0x1
 2847 0438 5204     		.2byte	0x452
 2848 043a 83000000 		.4byte	0x83
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 112


 2849 043e 35030000 		.4byte	.LLST17
 2850 0442 21       		.uleb128 0x21
 2851 0443 10000000 		.4byte	.LVL45
 2852 0447 A00E0000 		.4byte	0xea0
 2853 044b 55040000 		.4byte	0x455
 2854 044f 1C       		.uleb128 0x1c
 2855 0450 01       		.uleb128 0x1
 2856 0451 50       		.byte	0x50
 2857 0452 01       		.uleb128 0x1
 2858 0453 30       		.byte	0x30
 2859 0454 00       		.byte	0
 2860 0455 1B       		.uleb128 0x1b
 2861 0456 16000000 		.4byte	.LVL46
 2862 045a 14030000 		.4byte	0x314
 2863 045e 1C       		.uleb128 0x1c
 2864 045f 01       		.uleb128 0x1
 2865 0460 50       		.byte	0x50
 2866 0461 02       		.uleb128 0x2
 2867 0462 74       		.byte	0x74
 2868 0463 00       		.sleb128 0
 2869 0464 00       		.byte	0
 2870 0465 00       		.byte	0
 2871 0466 22       		.uleb128 0x22
 2872 0467 7E020000 		.4byte	.LASF53
 2873 046b 01       		.byte	0x1
 2874 046c 7104     		.2byte	0x471
 2875 046e 83000000 		.4byte	0x83
 2876 0472 00000000 		.4byte	.LFB13
 2877 0476 24000000 		.4byte	.LFE13-.LFB13
 2878 047a 01       		.uleb128 0x1
 2879 047b 9C       		.byte	0x9c
 2880 047c A0040000 		.4byte	0x4a0
 2881 0480 14       		.uleb128 0x14
 2882 0481 71000000 		.4byte	.LASF22
 2883 0485 01       		.byte	0x1
 2884 0486 7104     		.2byte	0x471
 2885 0488 83000000 		.4byte	0x83
 2886 048c 53030000 		.4byte	.LLST18
 2887 0490 1B       		.uleb128 0x1b
 2888 0491 0E000000 		.4byte	.LVL54
 2889 0495 A00E0000 		.4byte	0xea0
 2890 0499 1C       		.uleb128 0x1c
 2891 049a 01       		.uleb128 0x1
 2892 049b 50       		.byte	0x50
 2893 049c 01       		.uleb128 0x1
 2894 049d 30       		.byte	0x30
 2895 049e 00       		.byte	0
 2896 049f 00       		.byte	0
 2897 04a0 19       		.uleb128 0x19
 2898 04a1 34010000 		.4byte	0x134
 2899 04a5 00000000 		.4byte	.LFB14
 2900 04a9 4C000000 		.4byte	.LFE14-.LFB14
 2901 04ad 01       		.uleb128 0x1
 2902 04ae 9C       		.byte	0x9c
 2903 04af 30050000 		.4byte	0x530
 2904 04b3 23       		.uleb128 0x23
 2905 04b4 41010000 		.4byte	0x141
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 113


 2906 04b8 01       		.uleb128 0x1
 2907 04b9 50       		.byte	0x50
 2908 04ba 24       		.uleb128 0x24
 2909 04bb 2C010000 		.4byte	0x12c
 2910 04bf 00000000 		.4byte	.LBB44
 2911 04c3 0C000000 		.4byte	.LBE44-.LBB44
 2912 04c7 01       		.byte	0x1
 2913 04c8 9D04     		.2byte	0x49d
 2914 04ca 25       		.uleb128 0x25
 2915 04cb 14030000 		.4byte	0x314
 2916 04cf 1A000000 		.4byte	.LBB46
 2917 04d3 02000000 		.4byte	.LBE46-.LBB46
 2918 04d7 01       		.byte	0x1
 2919 04d8 A404     		.2byte	0x4a4
 2920 04da E8040000 		.4byte	0x4e8
 2921 04de 1A       		.uleb128 0x1a
 2922 04df 25030000 		.4byte	0x325
 2923 04e3 7F030000 		.4byte	.LLST19
 2924 04e7 00       		.byte	0
 2925 04e8 25       		.uleb128 0x25
 2926 04e9 14030000 		.4byte	0x314
 2927 04ed 26000000 		.4byte	.LBB48
 2928 04f1 06000000 		.4byte	.LBE48-.LBB48
 2929 04f5 01       		.byte	0x1
 2930 04f6 AC04     		.2byte	0x4ac
 2931 04f8 06050000 		.4byte	0x506
 2932 04fc 1A       		.uleb128 0x1a
 2933 04fd 25030000 		.4byte	0x325
 2934 0501 93030000 		.4byte	.LLST20
 2935 0505 00       		.byte	0
 2936 0506 1F       		.uleb128 0x1f
 2937 0507 36000000 		.4byte	.LBB50
 2938 050b 0A000000 		.4byte	.LBE50-.LBB50
 2939 050f 26       		.uleb128 0x26
 2940 0510 41010000 		.4byte	0x141
 2941 0514 27       		.uleb128 0x27
 2942 0515 14030000 		.4byte	0x314
 2943 0519 36000000 		.4byte	.LBB52
 2944 051d 06000000 		.4byte	.LBE52-.LBB52
 2945 0521 01       		.byte	0x1
 2946 0522 B404     		.2byte	0x4b4
 2947 0524 1A       		.uleb128 0x1a
 2948 0525 25030000 		.4byte	0x325
 2949 0529 A7030000 		.4byte	.LLST21
 2950 052d 00       		.byte	0
 2951 052e 00       		.byte	0
 2952 052f 00       		.byte	0
 2953 0530 17       		.uleb128 0x17
 2954 0531 2C050000 		.4byte	.LASF54
 2955 0535 01       		.byte	0x1
 2956 0536 CA04     		.2byte	0x4ca
 2957 0538 00000000 		.4byte	.LFB15
 2958 053c 4C000000 		.4byte	.LFE15-.LFB15
 2959 0540 01       		.uleb128 0x1
 2960 0541 9C       		.byte	0x9c
 2961 0542 BB050000 		.4byte	0x5bb
 2962 0546 28       		.uleb128 0x28
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 114


 2963 0547 72020000 		.4byte	.LASF26
 2964 054b 01       		.byte	0x1
 2965 054c CA04     		.2byte	0x4ca
 2966 054e 83000000 		.4byte	0x83
 2967 0552 01       		.uleb128 0x1
 2968 0553 50       		.byte	0x50
 2969 0554 24       		.uleb128 0x24
 2970 0555 4E010000 		.4byte	0x14e
 2971 0559 00000000 		.4byte	.LBB62
 2972 055d 0C000000 		.4byte	.LBE62-.LBB62
 2973 0561 01       		.byte	0x1
 2974 0562 CC04     		.2byte	0x4cc
 2975 0564 25       		.uleb128 0x25
 2976 0565 14030000 		.4byte	0x314
 2977 0569 1A000000 		.4byte	.LBB64
 2978 056d 02000000 		.4byte	.LBE64-.LBB64
 2979 0571 01       		.byte	0x1
 2980 0572 D204     		.2byte	0x4d2
 2981 0574 82050000 		.4byte	0x582
 2982 0578 1A       		.uleb128 0x1a
 2983 0579 25030000 		.4byte	0x325
 2984 057d BB030000 		.4byte	.LLST22
 2985 0581 00       		.byte	0
 2986 0582 25       		.uleb128 0x25
 2987 0583 14030000 		.4byte	0x314
 2988 0587 26000000 		.4byte	.LBB66
 2989 058b 06000000 		.4byte	.LBE66-.LBB66
 2990 058f 01       		.byte	0x1
 2991 0590 DA04     		.2byte	0x4da
 2992 0592 A0050000 		.4byte	0x5a0
 2993 0596 1A       		.uleb128 0x1a
 2994 0597 25030000 		.4byte	0x325
 2995 059b CF030000 		.4byte	.LLST23
 2996 059f 00       		.byte	0
 2997 05a0 27       		.uleb128 0x27
 2998 05a1 14030000 		.4byte	0x314
 2999 05a5 36000000 		.4byte	.LBB68
 3000 05a9 06000000 		.4byte	.LBE68-.LBB68
 3001 05ad 01       		.byte	0x1
 3002 05ae E204     		.2byte	0x4e2
 3003 05b0 1A       		.uleb128 0x1a
 3004 05b1 25030000 		.4byte	0x325
 3005 05b5 E3030000 		.4byte	.LLST24
 3006 05b9 00       		.byte	0
 3007 05ba 00       		.byte	0
 3008 05bb 17       		.uleb128 0x17
 3009 05bc DC050000 		.4byte	.LASF55
 3010 05c0 01       		.byte	0x1
 3011 05c1 0505     		.2byte	0x505
 3012 05c3 00000000 		.4byte	.LFB16
 3013 05c7 34000000 		.4byte	.LFE16-.LFB16
 3014 05cb 01       		.uleb128 0x1
 3015 05cc 9C       		.byte	0x9c
 3016 05cd 4F060000 		.4byte	0x64f
 3017 05d1 14       		.uleb128 0x14
 3018 05d2 4C060000 		.4byte	.LASF56
 3019 05d6 01       		.byte	0x1
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 115


 3020 05d7 0505     		.2byte	0x505
 3021 05d9 83000000 		.4byte	0x83
 3022 05dd F7030000 		.4byte	.LLST25
 3023 05e1 15       		.uleb128 0x15
 3024 05e2 14060000 		.4byte	.LASF34
 3025 05e6 01       		.byte	0x1
 3026 05e7 0705     		.2byte	0x507
 3027 05e9 83000000 		.4byte	0x83
 3028 05ed 18040000 		.4byte	.LLST26
 3029 05f1 15       		.uleb128 0x15
 3030 05f2 26020000 		.4byte	.LASF57
 3031 05f6 01       		.byte	0x1
 3032 05f7 0805     		.2byte	0x508
 3033 05f9 83000000 		.4byte	0x83
 3034 05fd 41040000 		.4byte	.LLST27
 3035 0601 29       		.uleb128 0x29
 3036 0602 14030000 		.4byte	0x314
 3037 0606 00000000 		.4byte	.LBB76
 3038 060a 00000000 		.4byte	.Ldebug_ranges0+0
 3039 060e 01       		.byte	0x1
 3040 060f 0A05     		.2byte	0x50a
 3041 0611 1C060000 		.4byte	0x61c
 3042 0615 2A       		.uleb128 0x2a
 3043 0616 25030000 		.4byte	0x325
 3044 061a 00       		.byte	0
 3045 061b 00       		.byte	0
 3046 061c 29       		.uleb128 0x29
 3047 061d 14030000 		.4byte	0x314
 3048 0621 06000000 		.4byte	.LBB81
 3049 0625 20000000 		.4byte	.Ldebug_ranges0+0x20
 3050 0629 01       		.byte	0x1
 3051 062a 0B05     		.2byte	0x50b
 3052 062c 37060000 		.4byte	0x637
 3053 0630 2A       		.uleb128 0x2a
 3054 0631 25030000 		.4byte	0x325
 3055 0635 01       		.byte	0x1
 3056 0636 00       		.byte	0
 3057 0637 2B       		.uleb128 0x2b
 3058 0638 14030000 		.4byte	0x314
 3059 063c 08000000 		.4byte	.LBB84
 3060 0640 38000000 		.4byte	.Ldebug_ranges0+0x38
 3061 0644 01       		.byte	0x1
 3062 0645 0C05     		.2byte	0x50c
 3063 0647 2A       		.uleb128 0x2a
 3064 0648 25030000 		.4byte	0x325
 3065 064c 02       		.byte	0x2
 3066 064d 00       		.byte	0
 3067 064e 00       		.byte	0
 3068 064f 2C       		.uleb128 0x2c
 3069 0650 96000000 		.4byte	.LASF62
 3070 0654 01       		.byte	0x1
 3071 0655 2405     		.2byte	0x524
 3072 0657 83000000 		.4byte	0x83
 3073 065b 00000000 		.4byte	.LFB17
 3074 065f 14000000 		.4byte	.LFE17-.LFB17
 3075 0663 01       		.uleb128 0x1
 3076 0664 9C       		.byte	0x9c
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 116


 3077 0665 17       		.uleb128 0x17
 3078 0666 15020000 		.4byte	.LASF58
 3079 066a 01       		.byte	0x1
 3080 066b 3805     		.2byte	0x538
 3081 066d 00000000 		.4byte	.LFB18
 3082 0671 3C000000 		.4byte	.LFE18-.LFB18
 3083 0675 01       		.uleb128 0x1
 3084 0676 9C       		.byte	0x9c
 3085 0677 E3060000 		.4byte	0x6e3
 3086 067b 14       		.uleb128 0x14
 3087 067c 71000000 		.4byte	.LASF22
 3088 0680 01       		.byte	0x1
 3089 0681 3805     		.2byte	0x538
 3090 0683 83000000 		.4byte	0x83
 3091 0687 64040000 		.4byte	.LLST28
 3092 068b 14       		.uleb128 0x14
 3093 068c 29040000 		.4byte	.LASF33
 3094 0690 01       		.byte	0x1
 3095 0691 3805     		.2byte	0x538
 3096 0693 83000000 		.4byte	0x83
 3097 0697 90040000 		.4byte	.LLST29
 3098 069b 15       		.uleb128 0x15
 3099 069c 85010000 		.4byte	.LASF59
 3100 06a0 01       		.byte	0x1
 3101 06a1 3A05     		.2byte	0x53a
 3102 06a3 83000000 		.4byte	0x83
 3103 06a7 BC040000 		.4byte	.LLST30
 3104 06ab 21       		.uleb128 0x21
 3105 06ac 10000000 		.4byte	.LVL81
 3106 06b0 A00E0000 		.4byte	0xea0
 3107 06b4 BE060000 		.4byte	0x6be
 3108 06b8 1C       		.uleb128 0x1c
 3109 06b9 01       		.uleb128 0x1
 3110 06ba 50       		.byte	0x50
 3111 06bb 01       		.uleb128 0x1
 3112 06bc 30       		.byte	0x30
 3113 06bd 00       		.byte	0
 3114 06be 21       		.uleb128 0x21
 3115 06bf 16000000 		.4byte	.LVL82
 3116 06c3 B10E0000 		.4byte	0xeb1
 3117 06c7 D2060000 		.4byte	0x6d2
 3118 06cb 1C       		.uleb128 0x1c
 3119 06cc 01       		.uleb128 0x1
 3120 06cd 50       		.byte	0x50
 3121 06ce 02       		.uleb128 0x2
 3122 06cf 08       		.byte	0x8
 3123 06d0 C9       		.byte	0xc9
 3124 06d1 00       		.byte	0
 3125 06d2 1B       		.uleb128 0x1b
 3126 06d3 30000000 		.4byte	.LVL87
 3127 06d7 B10E0000 		.4byte	0xeb1
 3128 06db 1C       		.uleb128 0x1c
 3129 06dc 01       		.uleb128 0x1
 3130 06dd 50       		.byte	0x50
 3131 06de 02       		.uleb128 0x2
 3132 06df 08       		.byte	0x8
 3133 06e0 43       		.byte	0x43
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 117


 3134 06e1 00       		.byte	0
 3135 06e2 00       		.byte	0
 3136 06e3 17       		.uleb128 0x17
 3137 06e4 8E030000 		.4byte	.LASF60
 3138 06e8 01       		.byte	0x1
 3139 06e9 5F05     		.2byte	0x55f
 3140 06eb 00000000 		.4byte	.LFB19
 3141 06ef 28000000 		.4byte	.LFE19-.LFB19
 3142 06f3 01       		.uleb128 0x1
 3143 06f4 9C       		.byte	0x9c
 3144 06f5 31070000 		.4byte	0x731
 3145 06f9 14       		.uleb128 0x14
 3146 06fa 77010000 		.4byte	.LASF61
 3147 06fe 01       		.byte	0x1
 3148 06ff 5F05     		.2byte	0x55f
 3149 0701 83000000 		.4byte	0x83
 3150 0705 E4040000 		.4byte	.LLST31
 3151 0709 15       		.uleb128 0x15
 3152 070a 14060000 		.4byte	.LASF34
 3153 070e 01       		.byte	0x1
 3154 070f 6105     		.2byte	0x561
 3155 0711 83000000 		.4byte	0x83
 3156 0715 05050000 		.4byte	.LLST32
 3157 0719 27       		.uleb128 0x27
 3158 071a 14030000 		.4byte	0x314
 3159 071e 00000000 		.4byte	.LBB92
 3160 0722 04000000 		.4byte	.LBE92-.LBB92
 3161 0726 01       		.byte	0x1
 3162 0727 6305     		.2byte	0x563
 3163 0729 2A       		.uleb128 0x2a
 3164 072a 25030000 		.4byte	0x325
 3165 072e 02       		.byte	0x2
 3166 072f 00       		.byte	0
 3167 0730 00       		.byte	0
 3168 0731 2C       		.uleb128 0x2c
 3169 0732 F8060000 		.4byte	.LASF63
 3170 0736 01       		.byte	0x1
 3171 0737 7605     		.2byte	0x576
 3172 0739 83000000 		.4byte	0x83
 3173 073d 00000000 		.4byte	.LFB20
 3174 0741 10000000 		.4byte	.LFE20-.LFB20
 3175 0745 01       		.uleb128 0x1
 3176 0746 9C       		.byte	0x9c
 3177 0747 22       		.uleb128 0x22
 3178 0748 18040000 		.4byte	.LASF64
 3179 074c 01       		.byte	0x1
 3180 074d 8805     		.2byte	0x588
 3181 074f 83000000 		.4byte	0x83
 3182 0753 00000000 		.4byte	.LFB21
 3183 0757 20000000 		.4byte	.LFE21-.LFB21
 3184 075b 01       		.uleb128 0x1
 3185 075c 9C       		.byte	0x9c
 3186 075d 81070000 		.4byte	0x781
 3187 0761 14       		.uleb128 0x14
 3188 0762 71000000 		.4byte	.LASF22
 3189 0766 01       		.byte	0x1
 3190 0767 8805     		.2byte	0x588
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 118


 3191 0769 83000000 		.4byte	0x83
 3192 076d 2E050000 		.4byte	.LLST33
 3193 0771 1B       		.uleb128 0x1b
 3194 0772 0E000000 		.4byte	.LVL97
 3195 0776 A00E0000 		.4byte	0xea0
 3196 077a 1C       		.uleb128 0x1c
 3197 077b 01       		.uleb128 0x1
 3198 077c 50       		.byte	0x50
 3199 077d 01       		.uleb128 0x1
 3200 077e 30       		.byte	0x30
 3201 077f 00       		.byte	0
 3202 0780 00       		.byte	0
 3203 0781 22       		.uleb128 0x22
 3204 0782 AF050000 		.4byte	.LASF65
 3205 0786 01       		.byte	0x1
 3206 0787 9E05     		.2byte	0x59e
 3207 0789 83000000 		.4byte	0x83
 3208 078d 00000000 		.4byte	.LFB22
 3209 0791 38000000 		.4byte	.LFE22-.LFB22
 3210 0795 01       		.uleb128 0x1
 3211 0796 9C       		.byte	0x9c
 3212 0797 CB070000 		.4byte	0x7cb
 3213 079b 14       		.uleb128 0x14
 3214 079c 71000000 		.4byte	.LASF22
 3215 07a0 01       		.byte	0x1
 3216 07a1 9E05     		.2byte	0x59e
 3217 07a3 83000000 		.4byte	0x83
 3218 07a7 5A050000 		.4byte	.LLST34
 3219 07ab 15       		.uleb128 0x15
 3220 07ac 85010000 		.4byte	.LASF59
 3221 07b0 01       		.byte	0x1
 3222 07b1 A005     		.2byte	0x5a0
 3223 07b3 83000000 		.4byte	0x83
 3224 07b7 C6050000 		.4byte	.LLST35
 3225 07bb 1B       		.uleb128 0x1b
 3226 07bc 14000000 		.4byte	.LVL101
 3227 07c0 A00E0000 		.4byte	0xea0
 3228 07c4 1C       		.uleb128 0x1c
 3229 07c5 01       		.uleb128 0x1
 3230 07c6 50       		.byte	0x50
 3231 07c7 01       		.uleb128 0x1
 3232 07c8 30       		.byte	0x30
 3233 07c9 00       		.byte	0
 3234 07ca 00       		.byte	0
 3235 07cb 2D       		.uleb128 0x2d
 3236 07cc 7C000000 		.4byte	.LASF96
 3237 07d0 01       		.byte	0x1
 3238 07d1 3007     		.2byte	0x730
 3239 07d3 01       		.byte	0x1
 3240 07d4 F1070000 		.4byte	0x7f1
 3241 07d8 0D       		.uleb128 0xd
 3242 07d9 A3020000 		.4byte	.LASF66
 3243 07dd 01       		.byte	0x1
 3244 07de 3207     		.2byte	0x732
 3245 07e0 83000000 		.4byte	0x83
 3246 07e4 0D       		.uleb128 0xd
 3247 07e5 F4040000 		.4byte	.LASF67
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 119


 3248 07e9 01       		.byte	0x1
 3249 07ea 3307     		.2byte	0x733
 3250 07ec 83000000 		.4byte	0x83
 3251 07f0 00       		.byte	0
 3252 07f1 2E       		.uleb128 0x2e
 3253 07f2 F3020000 		.4byte	.LASF97
 3254 07f6 01       		.byte	0x1
 3255 07f7 6607     		.2byte	0x766
 3256 07f9 01       		.byte	0x1
 3257 07fa 2F       		.uleb128 0x2f
 3258 07fb B4010000 		.4byte	.LASF68
 3259 07ff 01       		.byte	0x1
 3260 0800 6C       		.byte	0x6c
 3261 0801 00000000 		.4byte	.LFB1
 3262 0805 C4000000 		.4byte	.LFE1-.LFB1
 3263 0809 01       		.uleb128 0x1
 3264 080a 9C       		.byte	0x9c
 3265 080b 55090000 		.4byte	0x955
 3266 080f 30       		.uleb128 0x30
 3267 0810 D9020000 		.4byte	.LASF45
 3268 0814 01       		.byte	0x1
 3269 0815 6F       		.byte	0x6f
 3270 0816 6B000000 		.4byte	0x6b
 3271 081a 01       		.uleb128 0x1
 3272 081b 56       		.byte	0x56
 3273 081c 31       		.uleb128 0x31
 3274 081d 4E010000 		.4byte	0x14e
 3275 0821 00000000 		.4byte	.LBB110
 3276 0825 50000000 		.4byte	.Ldebug_ranges0+0x50
 3277 0829 01       		.byte	0x1
 3278 082a 72       		.byte	0x72
 3279 082b 32       		.uleb128 0x32
 3280 082c 79010000 		.4byte	0x179
 3281 0830 0E000000 		.4byte	.LBB114
 3282 0834 08000000 		.4byte	.LBE114-.LBB114
 3283 0838 01       		.byte	0x1
 3284 0839 74       		.byte	0x74
 3285 083a 33       		.uleb128 0x33
 3286 083b CB070000 		.4byte	0x7cb
 3287 083f 1C000000 		.4byte	.LBB116
 3288 0843 68000000 		.4byte	.Ldebug_ranges0+0x68
 3289 0847 01       		.byte	0x1
 3290 0848 7D       		.byte	0x7d
 3291 0849 18090000 		.4byte	0x918
 3292 084d 34       		.uleb128 0x34
 3293 084e 68000000 		.4byte	.Ldebug_ranges0+0x68
 3294 0852 20       		.uleb128 0x20
 3295 0853 D8070000 		.4byte	0x7d8
 3296 0857 2A060000 		.4byte	.LLST36
 3297 085b 35       		.uleb128 0x35
 3298 085c E4070000 		.4byte	0x7e4
 3299 0860 05       		.uleb128 0x5
 3300 0861 03       		.byte	0x3
 3301 0862 04000000 		.4byte	lfclkPosedgeEnabledWdtCounter.4697
 3302 0866 29       		.uleb128 0x29
 3303 0867 14030000 		.4byte	0x314
 3304 086b 1C000000 		.4byte	.LBB118
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 120


 3305 086f 88000000 		.4byte	.Ldebug_ranges0+0x88
 3306 0873 01       		.byte	0x1
 3307 0874 3507     		.2byte	0x735
 3308 0876 81080000 		.4byte	0x881
 3309 087a 2A       		.uleb128 0x2a
 3310 087b 25030000 		.4byte	0x325
 3311 087f 00       		.byte	0
 3312 0880 00       		.byte	0
 3313 0881 25       		.uleb128 0x25
 3314 0882 14030000 		.4byte	0x314
 3315 0886 6C000000 		.4byte	.LBB122
 3316 088a 04000000 		.4byte	.LBE122-.LBB122
 3317 088e 01       		.byte	0x1
 3318 088f 3907     		.2byte	0x739
 3319 0891 9C080000 		.4byte	0x89c
 3320 0895 2A       		.uleb128 0x2a
 3321 0896 25030000 		.4byte	0x325
 3322 089a 01       		.byte	0x1
 3323 089b 00       		.byte	0
 3324 089c 29       		.uleb128 0x29
 3325 089d 14030000 		.4byte	0x314
 3326 08a1 7C000000 		.4byte	.LBB124
 3327 08a5 A0000000 		.4byte	.Ldebug_ranges0+0xa0
 3328 08a9 01       		.byte	0x1
 3329 08aa 3D07     		.2byte	0x73d
 3330 08ac B7080000 		.4byte	0x8b7
 3331 08b0 2A       		.uleb128 0x2a
 3332 08b1 25030000 		.4byte	0x325
 3333 08b5 02       		.byte	0x2
 3334 08b6 00       		.byte	0
 3335 08b7 29       		.uleb128 0x29
 3336 08b8 5B010000 		.4byte	0x15b
 3337 08bc 8E000000 		.4byte	.LBB128
 3338 08c0 B8000000 		.4byte	.Ldebug_ranges0+0xb8
 3339 08c4 01       		.byte	0x1
 3340 08c5 4707     		.2byte	0x747
 3341 08c7 D2080000 		.4byte	0x8d2
 3342 08cb 2A       		.uleb128 0x2a
 3343 08cc 6C010000 		.4byte	0x16c
 3344 08d0 00       		.byte	0
 3345 08d1 00       		.byte	0
 3346 08d2 21       		.uleb128 0x21
 3347 08d3 32000000 		.4byte	.LVL113
 3348 08d7 81070000 		.4byte	0x781
 3349 08db E6080000 		.4byte	0x8e6
 3350 08df 1C       		.uleb128 0x1c
 3351 08e0 01       		.uleb128 0x1
 3352 08e1 50       		.byte	0x50
 3353 08e2 02       		.uleb128 0x2
 3354 08e3 74       		.byte	0x74
 3355 08e4 00       		.sleb128 0
 3356 08e5 00       		.byte	0
 3357 08e6 18       		.uleb128 0x18
 3358 08e7 3A000000 		.4byte	.LVL115
 3359 08eb 81070000 		.4byte	0x781
 3360 08ef 21       		.uleb128 0x21
 3361 08f0 A4000000 		.4byte	.LVL121
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 121


 3362 08f4 FA000000 		.4byte	0xfa
 3363 08f8 07090000 		.4byte	0x907
 3364 08fc 1C       		.uleb128 0x1c
 3365 08fd 01       		.uleb128 0x1
 3366 08fe 51       		.byte	0x51
 3367 08ff 01       		.uleb128 0x1
 3368 0900 30       		.byte	0x30
 3369 0901 1C       		.uleb128 0x1c
 3370 0902 01       		.uleb128 0x1
 3371 0903 50       		.byte	0x50
 3372 0904 01       		.uleb128 0x1
 3373 0905 30       		.byte	0x30
 3374 0906 00       		.byte	0
 3375 0907 1B       		.uleb128 0x1b
 3376 0908 AA000000 		.4byte	.LVL122
 3377 090c 34010000 		.4byte	0x134
 3378 0910 1C       		.uleb128 0x1c
 3379 0911 01       		.uleb128 0x1
 3380 0912 50       		.byte	0x50
 3381 0913 01       		.uleb128 0x1
 3382 0914 31       		.byte	0x31
 3383 0915 00       		.byte	0
 3384 0916 00       		.byte	0
 3385 0917 00       		.byte	0
 3386 0918 36       		.uleb128 0x36
 3387 0919 F1070000 		.4byte	0x7f1
 3388 091d 48000000 		.4byte	.LBB137
 3389 0921 1C000000 		.4byte	.LBE137-.LBB137
 3390 0925 01       		.byte	0x1
 3391 0926 7F       		.byte	0x7f
 3392 0927 3B090000 		.4byte	0x93b
 3393 092b 1B       		.uleb128 0x1b
 3394 092c 60000000 		.4byte	.LVL116
 3395 0930 FA000000 		.4byte	0xfa
 3396 0934 1C       		.uleb128 0x1c
 3397 0935 01       		.uleb128 0x1
 3398 0936 50       		.byte	0x50
 3399 0937 01       		.uleb128 0x1
 3400 0938 30       		.byte	0x30
 3401 0939 00       		.byte	0
 3402 093a 00       		.byte	0
 3403 093b 18       		.uleb128 0x18
 3404 093c 1C000000 		.4byte	.LVL111
 3405 0940 840E0000 		.4byte	0xe84
 3406 0944 1B       		.uleb128 0x1b
 3407 0945 6A000000 		.4byte	.LVL117
 3408 0949 8F0E0000 		.4byte	0xe8f
 3409 094d 1C       		.uleb128 0x1c
 3410 094e 01       		.uleb128 0x1
 3411 094f 50       		.byte	0x50
 3412 0950 02       		.uleb128 0x2
 3413 0951 76       		.byte	0x76
 3414 0952 00       		.sleb128 0
 3415 0953 00       		.byte	0
 3416 0954 00       		.byte	0
 3417 0955 2C       		.uleb128 0x2c
 3418 0956 4F050000 		.4byte	.LASF69
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 122


 3419 095a 01       		.byte	0x1
 3420 095b C905     		.2byte	0x5c9
 3421 095d 83000000 		.4byte	0x83
 3422 0961 00000000 		.4byte	.LFB23
 3423 0965 14000000 		.4byte	.LFE23-.LFB23
 3424 0969 01       		.uleb128 0x1
 3425 096a 9C       		.byte	0x9c
 3426 096b 17       		.uleb128 0x17
 3427 096c 71040000 		.4byte	.LASF70
 3428 0970 01       		.byte	0x1
 3429 0971 E605     		.2byte	0x5e6
 3430 0973 00000000 		.4byte	.LFB24
 3431 0977 5C000000 		.4byte	.LFE24-.LFB24
 3432 097b 01       		.uleb128 0x1
 3433 097c 9C       		.byte	0x9c
 3434 097d ED090000 		.4byte	0x9ed
 3435 0981 14       		.uleb128 0x14
 3436 0982 72020000 		.4byte	.LASF26
 3437 0986 01       		.byte	0x1
 3438 0987 E605     		.2byte	0x5e6
 3439 0989 83000000 		.4byte	0x83
 3440 098d 3D060000 		.4byte	.LLST37
 3441 0991 15       		.uleb128 0x15
 3442 0992 D9020000 		.4byte	.LASF45
 3443 0996 01       		.byte	0x1
 3444 0997 E805     		.2byte	0x5e8
 3445 0999 6B000000 		.4byte	0x6b
 3446 099d BD060000 		.4byte	.LLST38
 3447 09a1 15       		.uleb128 0x15
 3448 09a2 23060000 		.4byte	.LASF71
 3449 09a6 01       		.byte	0x1
 3450 09a7 E905     		.2byte	0x5e9
 3451 09a9 83000000 		.4byte	0x83
 3452 09ad DB060000 		.4byte	.LLST39
 3453 09b1 37       		.uleb128 0x37
 3454 09b2 4E010000 		.4byte	0x14e
 3455 09b6 08000000 		.4byte	.LBB140
 3456 09ba D8000000 		.4byte	.Ldebug_ranges0+0xd8
 3457 09be 01       		.byte	0x1
 3458 09bf ED05     		.2byte	0x5ed
 3459 09c1 18       		.uleb128 0x18
 3460 09c2 08000000 		.4byte	.LVL124
 3461 09c6 840E0000 		.4byte	0xe84
 3462 09ca 18       		.uleb128 0x18
 3463 09cb 1A000000 		.4byte	.LVL127
 3464 09cf DB020000 		.4byte	0x2db
 3465 09d3 18       		.uleb128 0x18
 3466 09d4 30000000 		.4byte	.LVL131
 3467 09d8 A2020000 		.4byte	0x2a2
 3468 09dc 1B       		.uleb128 0x1b
 3469 09dd 36000000 		.4byte	.LVL132
 3470 09e1 8F0E0000 		.4byte	0xe8f
 3471 09e5 1C       		.uleb128 0x1c
 3472 09e6 01       		.uleb128 0x1
 3473 09e7 50       		.byte	0x50
 3474 09e8 02       		.uleb128 0x2
 3475 09e9 74       		.byte	0x74
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 123


 3476 09ea 00       		.sleb128 0
 3477 09eb 00       		.byte	0
 3478 09ec 00       		.byte	0
 3479 09ed 19       		.uleb128 0x19
 3480 09ee 86010000 		.4byte	0x186
 3481 09f2 00000000 		.4byte	.LFB25
 3482 09f6 1C000000 		.4byte	.LFE25-.LFB25
 3483 09fa 01       		.uleb128 0x1
 3484 09fb 9C       		.byte	0x9c
 3485 09fc 0A0A0000 		.4byte	0xa0a
 3486 0a00 1A       		.uleb128 0x1a
 3487 0a01 93010000 		.4byte	0x193
 3488 0a05 FB060000 		.4byte	.LLST40
 3489 0a09 00       		.byte	0
 3490 0a0a 22       		.uleb128 0x22
 3491 0a0b 55020000 		.4byte	.LASF72
 3492 0a0f 01       		.byte	0x1
 3493 0a10 3A06     		.2byte	0x63a
 3494 0a12 E8000000 		.4byte	0xe8
 3495 0a16 00000000 		.4byte	.LFB26
 3496 0a1a 20000000 		.4byte	.LFE26-.LFB26
 3497 0a1e 01       		.uleb128 0x1
 3498 0a1f 9C       		.byte	0x9c
 3499 0a20 640A0000 		.4byte	0xa64
 3500 0a24 14       		.uleb128 0x14
 3501 0a25 71000000 		.4byte	.LASF22
 3502 0a29 01       		.byte	0x1
 3503 0a2a 3A06     		.2byte	0x63a
 3504 0a2c 83000000 		.4byte	0x83
 3505 0a30 1C070000 		.4byte	.LLST41
 3506 0a34 14       		.uleb128 0x14
 3507 0a35 2D010000 		.4byte	.LASF73
 3508 0a39 01       		.byte	0x1
 3509 0a3a 3A06     		.2byte	0x63a
 3510 0a3c E8000000 		.4byte	0xe8
 3511 0a40 56070000 		.4byte	.LLST42
 3512 0a44 15       		.uleb128 0x15
 3513 0a45 08020000 		.4byte	.LASF74
 3514 0a49 01       		.byte	0x1
 3515 0a4a 3C06     		.2byte	0x63c
 3516 0a4c E8000000 		.4byte	0xe8
 3517 0a50 90070000 		.4byte	.LLST43
 3518 0a54 1B       		.uleb128 0x1b
 3519 0a55 18000000 		.4byte	.LVL145
 3520 0a59 A00E0000 		.4byte	0xea0
 3521 0a5d 1C       		.uleb128 0x1c
 3522 0a5e 01       		.uleb128 0x1
 3523 0a5f 50       		.byte	0x50
 3524 0a60 01       		.uleb128 0x1
 3525 0a61 30       		.byte	0x30
 3526 0a62 00       		.byte	0
 3527 0a63 00       		.byte	0
 3528 0a64 22       		.uleb128 0x22
 3529 0a65 54030000 		.4byte	.LASF75
 3530 0a69 01       		.byte	0x1
 3531 0a6a 5806     		.2byte	0x658
 3532 0a6c E8000000 		.4byte	0xe8
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 124


 3533 0a70 00000000 		.4byte	.LFB27
 3534 0a74 20000000 		.4byte	.LFE27-.LFB27
 3535 0a78 01       		.uleb128 0x1
 3536 0a79 9C       		.byte	0x9c
 3537 0a7a AE0A0000 		.4byte	0xaae
 3538 0a7e 14       		.uleb128 0x14
 3539 0a7f 71000000 		.4byte	.LASF22
 3540 0a83 01       		.byte	0x1
 3541 0a84 5806     		.2byte	0x658
 3542 0a86 83000000 		.4byte	0x83
 3543 0a8a BB070000 		.4byte	.LLST44
 3544 0a8e 15       		.uleb128 0x15
 3545 0a8f AE020000 		.4byte	.LASF76
 3546 0a93 01       		.byte	0x1
 3547 0a94 5A06     		.2byte	0x65a
 3548 0a96 E8000000 		.4byte	0xe8
 3549 0a9a F5070000 		.4byte	.LLST45
 3550 0a9e 1B       		.uleb128 0x1b
 3551 0a9f 16000000 		.4byte	.LVL151
 3552 0aa3 A00E0000 		.4byte	0xea0
 3553 0aa7 1C       		.uleb128 0x1c
 3554 0aa8 01       		.uleb128 0x1
 3555 0aa9 50       		.byte	0x50
 3556 0aaa 01       		.uleb128 0x1
 3557 0aab 30       		.byte	0x30
 3558 0aac 00       		.byte	0
 3559 0aad 00       		.byte	0
 3560 0aae 17       		.uleb128 0x17
 3561 0aaf 0F030000 		.4byte	.LASF77
 3562 0ab3 01       		.byte	0x1
 3563 0ab4 7506     		.2byte	0x675
 3564 0ab6 00000000 		.4byte	.LFB28
 3565 0aba 34000000 		.4byte	.LFE28-.LFB28
 3566 0abe 01       		.uleb128 0x1
 3567 0abf 9C       		.byte	0x9c
 3568 0ac0 E40A0000 		.4byte	0xae4
 3569 0ac4 14       		.uleb128 0x14
 3570 0ac5 71000000 		.4byte	.LASF22
 3571 0ac9 01       		.byte	0x1
 3572 0aca 7506     		.2byte	0x675
 3573 0acc 83000000 		.4byte	0x83
 3574 0ad0 20080000 		.4byte	.LLST46
 3575 0ad4 1B       		.uleb128 0x1b
 3576 0ad5 24000000 		.4byte	.LVL156
 3577 0ad9 A00E0000 		.4byte	0xea0
 3578 0add 1C       		.uleb128 0x1c
 3579 0ade 01       		.uleb128 0x1
 3580 0adf 50       		.byte	0x50
 3581 0ae0 01       		.uleb128 0x1
 3582 0ae1 30       		.byte	0x30
 3583 0ae2 00       		.byte	0
 3584 0ae3 00       		.byte	0
 3585 0ae4 17       		.uleb128 0x17
 3586 0ae5 8B050000 		.4byte	.LASF78
 3587 0ae9 01       		.byte	0x1
 3588 0aea 8C06     		.2byte	0x68c
 3589 0aec 00000000 		.4byte	.LFB29
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 125


 3590 0af0 28000000 		.4byte	.LFE29-.LFB29
 3591 0af4 01       		.uleb128 0x1
 3592 0af5 9C       		.byte	0x9c
 3593 0af6 1A0B0000 		.4byte	0xb1a
 3594 0afa 14       		.uleb128 0x14
 3595 0afb 71000000 		.4byte	.LASF22
 3596 0aff 01       		.byte	0x1
 3597 0b00 8C06     		.2byte	0x68c
 3598 0b02 83000000 		.4byte	0x83
 3599 0b06 5A080000 		.4byte	.LLST47
 3600 0b0a 1B       		.uleb128 0x1b
 3601 0b0b 1C000000 		.4byte	.LVL161
 3602 0b0f A00E0000 		.4byte	0xea0
 3603 0b13 1C       		.uleb128 0x1c
 3604 0b14 01       		.uleb128 0x1
 3605 0b15 50       		.byte	0x50
 3606 0b16 01       		.uleb128 0x1
 3607 0b17 30       		.byte	0x30
 3608 0b18 00       		.byte	0
 3609 0b19 00       		.byte	0
 3610 0b1a 38       		.uleb128 0x38
 3611 0b1b 71030000 		.4byte	.LASF79
 3612 0b1f 01       		.byte	0x1
 3613 0b20 AD06     		.2byte	0x6ad
 3614 0b22 00000000 		.4byte	.LFB30
 3615 0b26 A8000000 		.4byte	.LFE30-.LFB30
 3616 0b2a 01       		.uleb128 0x1
 3617 0b2b 9C       		.byte	0x9c
 3618 0b2c 6A0B0000 		.4byte	0xb6a
 3619 0b30 21       		.uleb128 0x21
 3620 0b31 1A000000 		.4byte	.LVL162
 3621 0b35 6B090000 		.4byte	0x96b
 3622 0b39 430B0000 		.4byte	0xb43
 3623 0b3d 1C       		.uleb128 0x1c
 3624 0b3e 01       		.uleb128 0x1
 3625 0b3f 50       		.byte	0x50
 3626 0b40 01       		.uleb128 0x1
 3627 0b41 34       		.byte	0x34
 3628 0b42 00       		.byte	0
 3629 0b43 21       		.uleb128 0x21
 3630 0b44 36000000 		.4byte	.LVL163
 3631 0b48 6B090000 		.4byte	0x96b
 3632 0b4c 580B0000 		.4byte	0xb58
 3633 0b50 1C       		.uleb128 0x1c
 3634 0b51 01       		.uleb128 0x1
 3635 0b52 50       		.byte	0x50
 3636 0b53 03       		.uleb128 0x3
 3637 0b54 0A       		.byte	0xa
 3638 0b55 0004     		.2byte	0x400
 3639 0b57 00       		.byte	0
 3640 0b58 1B       		.uleb128 0x1b
 3641 0b59 5C000000 		.4byte	.LVL165
 3642 0b5d 6B090000 		.4byte	0x96b
 3643 0b61 1C       		.uleb128 0x1c
 3644 0b62 01       		.uleb128 0x1
 3645 0b63 50       		.byte	0x50
 3646 0b64 03       		.uleb128 0x3
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 126


 3647 0b65 40       		.byte	0x40
 3648 0b66 3E       		.byte	0x3e
 3649 0b67 24       		.byte	0x24
 3650 0b68 00       		.byte	0
 3651 0b69 00       		.byte	0
 3652 0b6a 17       		.uleb128 0x17
 3653 0b6b 5F000000 		.4byte	.LASF80
 3654 0b6f 01       		.byte	0x1
 3655 0b70 EE06     		.2byte	0x6ee
 3656 0b72 00000000 		.4byte	.LFB31
 3657 0b76 7C000000 		.4byte	.LFE31-.LFB31
 3658 0b7a 01       		.uleb128 0x1
 3659 0b7b 9C       		.byte	0x9c
 3660 0b7c 690C0000 		.4byte	0xc69
 3661 0b80 14       		.uleb128 0x14
 3662 0b81 71000000 		.4byte	.LASF22
 3663 0b85 01       		.byte	0x1
 3664 0b86 EE06     		.2byte	0x6ee
 3665 0b88 83000000 		.4byte	0x83
 3666 0b8c 94080000 		.4byte	.LLST48
 3667 0b90 25       		.uleb128 0x25
 3668 0b91 5B010000 		.4byte	0x15b
 3669 0b95 06000000 		.4byte	.LBB144
 3670 0b99 08000000 		.4byte	.LBE144-.LBB144
 3671 0b9d 01       		.byte	0x1
 3672 0b9e F206     		.2byte	0x6f2
 3673 0ba0 AE0B0000 		.4byte	0xbae
 3674 0ba4 1A       		.uleb128 0x1a
 3675 0ba5 6C010000 		.4byte	0x16c
 3676 0ba9 E7080000 		.4byte	.LLST49
 3677 0bad 00       		.byte	0
 3678 0bae 25       		.uleb128 0x25
 3679 0baf 5B010000 		.4byte	0x15b
 3680 0bb3 12000000 		.4byte	.LBB146
 3681 0bb7 04000000 		.4byte	.LBE146-.LBB146
 3682 0bbb 01       		.byte	0x1
 3683 0bbc F606     		.2byte	0x6f6
 3684 0bbe CC0B0000 		.4byte	0xbcc
 3685 0bc2 1A       		.uleb128 0x1a
 3686 0bc3 6C010000 		.4byte	0x16c
 3687 0bc7 07090000 		.4byte	.LLST50
 3688 0bcb 00       		.byte	0
 3689 0bcc 25       		.uleb128 0x25
 3690 0bcd 5B010000 		.4byte	0x15b
 3691 0bd1 20000000 		.4byte	.LBB148
 3692 0bd5 0A000000 		.4byte	.LBE148-.LBB148
 3693 0bd9 01       		.byte	0x1
 3694 0bda 0207     		.2byte	0x702
 3695 0bdc EA0B0000 		.4byte	0xbea
 3696 0be0 1A       		.uleb128 0x1a
 3697 0be1 6C010000 		.4byte	0x16c
 3698 0be5 27090000 		.4byte	.LLST51
 3699 0be9 00       		.byte	0
 3700 0bea 25       		.uleb128 0x25
 3701 0beb 5B010000 		.4byte	0x15b
 3702 0bef 2E000000 		.4byte	.LBB150
 3703 0bf3 06000000 		.4byte	.LBE150-.LBB150
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 127


 3704 0bf7 01       		.byte	0x1
 3705 0bf8 0607     		.2byte	0x706
 3706 0bfa 080C0000 		.4byte	0xc08
 3707 0bfe 1A       		.uleb128 0x1a
 3708 0bff 6C010000 		.4byte	0x16c
 3709 0c03 3B090000 		.4byte	.LLST52
 3710 0c07 00       		.byte	0
 3711 0c08 25       		.uleb128 0x25
 3712 0c09 86010000 		.4byte	0x186
 3713 0c0d 38000000 		.4byte	.LBB152
 3714 0c11 14000000 		.4byte	.LBE152-.LBB152
 3715 0c15 01       		.byte	0x1
 3716 0c16 0807     		.2byte	0x708
 3717 0c18 260C0000 		.4byte	0xc26
 3718 0c1c 1A       		.uleb128 0x1a
 3719 0c1d 93010000 		.4byte	0x193
 3720 0c21 4F090000 		.4byte	.LLST53
 3721 0c25 00       		.byte	0
 3722 0c26 25       		.uleb128 0x25
 3723 0c27 86010000 		.4byte	0x186
 3724 0c2b 56000000 		.4byte	.LBB154
 3725 0c2f 12000000 		.4byte	.LBE154-.LBB154
 3726 0c33 01       		.byte	0x1
 3727 0c34 F806     		.2byte	0x6f8
 3728 0c36 440C0000 		.4byte	0xc44
 3729 0c3a 1A       		.uleb128 0x1a
 3730 0c3b 93010000 		.4byte	0x193
 3731 0c3f 65090000 		.4byte	.LLST54
 3732 0c43 00       		.byte	0
 3733 0c44 21       		.uleb128 0x21
 3734 0c45 54000000 		.4byte	.LVL178
 3735 0c49 6B090000 		.4byte	0x96b
 3736 0c4d 590C0000 		.4byte	0xc59
 3737 0c51 1C       		.uleb128 0x1c
 3738 0c52 01       		.uleb128 0x1
 3739 0c53 50       		.byte	0x50
 3740 0c54 03       		.uleb128 0x3
 3741 0c55 0A       		.byte	0xa
 3742 0c56 0004     		.2byte	0x400
 3743 0c58 00       		.byte	0
 3744 0c59 1B       		.uleb128 0x1b
 3745 0c5a 6E000000 		.4byte	.LVL182
 3746 0c5e 6B090000 		.4byte	0x96b
 3747 0c62 1C       		.uleb128 0x1c
 3748 0c63 01       		.uleb128 0x1
 3749 0c64 50       		.byte	0x50
 3750 0c65 01       		.uleb128 0x1
 3751 0c66 34       		.byte	0x34
 3752 0c67 00       		.byte	0
 3753 0c68 00       		.byte	0
 3754 0c69 19       		.uleb128 0x19
 3755 0c6a A0010000 		.4byte	0x1a0
 3756 0c6e 00000000 		.4byte	.LFB35
 3757 0c72 78000000 		.4byte	.LFE35-.LFB35
 3758 0c76 01       		.uleb128 0x1
 3759 0c77 9C       		.byte	0x9c
 3760 0c78 410D0000 		.4byte	0xd41
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 128


 3761 0c7c 1A       		.uleb128 0x1a
 3762 0c7d AD010000 		.4byte	0x1ad
 3763 0c81 79090000 		.4byte	.LLST55
 3764 0c85 1A       		.uleb128 0x1a
 3765 0c86 B9010000 		.4byte	0x1b9
 3766 0c8a BB090000 		.4byte	.LLST56
 3767 0c8e 1A       		.uleb128 0x1a
 3768 0c8f C5010000 		.4byte	0x1c5
 3769 0c93 F5090000 		.4byte	.LLST57
 3770 0c97 20       		.uleb128 0x20
 3771 0c98 D1010000 		.4byte	0x1d1
 3772 0c9c 370A0000 		.4byte	.LLST58
 3773 0ca0 1E       		.uleb128 0x1e
 3774 0ca1 46000000 		.4byte	.LBB158
 3775 0ca5 32000000 		.4byte	.LBE158-.LBB158
 3776 0ca9 EC0C0000 		.4byte	0xcec
 3777 0cad 1A       		.uleb128 0x1a
 3778 0cae B9010000 		.4byte	0x1b9
 3779 0cb2 600A0000 		.4byte	.LLST59
 3780 0cb6 23       		.uleb128 0x23
 3781 0cb7 C5010000 		.4byte	0x1c5
 3782 0cbb 01       		.uleb128 0x1
 3783 0cbc 55       		.byte	0x55
 3784 0cbd 23       		.uleb128 0x23
 3785 0cbe AD010000 		.4byte	0x1ad
 3786 0cc2 01       		.uleb128 0x1
 3787 0cc3 54       		.byte	0x54
 3788 0cc4 1F       		.uleb128 0x1f
 3789 0cc5 46000000 		.4byte	.LBB159
 3790 0cc9 32000000 		.4byte	.LBE159-.LBB159
 3791 0ccd 35       		.uleb128 0x35
 3792 0cce D1010000 		.4byte	0x1d1
 3793 0cd2 01       		.uleb128 0x1
 3794 0cd3 56       		.byte	0x56
 3795 0cd4 1B       		.uleb128 0x1b
 3796 0cd5 54000000 		.4byte	.LVL197
 3797 0cd9 65060000 		.4byte	0x665
 3798 0cdd 1C       		.uleb128 0x1c
 3799 0cde 01       		.uleb128 0x1
 3800 0cdf 51       		.byte	0x51
 3801 0ce0 02       		.uleb128 0x2
 3802 0ce1 75       		.byte	0x75
 3803 0ce2 00       		.sleb128 0
 3804 0ce3 1C       		.uleb128 0x1c
 3805 0ce4 01       		.uleb128 0x1
 3806 0ce5 50       		.byte	0x50
 3807 0ce6 02       		.uleb128 0x2
 3808 0ce7 74       		.byte	0x74
 3809 0ce8 00       		.sleb128 0
 3810 0ce9 00       		.byte	0
 3811 0cea 00       		.byte	0
 3812 0ceb 00       		.byte	0
 3813 0cec 21       		.uleb128 0x21
 3814 0ced 12000000 		.4byte	.LVL185
 3815 0cf1 A00E0000 		.4byte	0xea0
 3816 0cf5 FF0C0000 		.4byte	0xcff
 3817 0cf9 1C       		.uleb128 0x1c
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 129


 3818 0cfa 01       		.uleb128 0x1
 3819 0cfb 50       		.byte	0x50
 3820 0cfc 01       		.uleb128 0x1
 3821 0cfd 30       		.byte	0x30
 3822 0cfe 00       		.byte	0
 3823 0cff 18       		.uleb128 0x18
 3824 0d00 18000000 		.4byte	.LVL189
 3825 0d04 66040000 		.4byte	0x466
 3826 0d08 21       		.uleb128 0x21
 3827 0d09 2C000000 		.4byte	.LVL190
 3828 0d0d 81070000 		.4byte	0x781
 3829 0d11 1C0D0000 		.4byte	0xd1c
 3830 0d15 1C       		.uleb128 0x1c
 3831 0d16 01       		.uleb128 0x1
 3832 0d17 50       		.byte	0x50
 3833 0d18 02       		.uleb128 0x2
 3834 0d19 74       		.byte	0x74
 3835 0d1a 00       		.sleb128 0
 3836 0d1b 00       		.byte	0
 3837 0d1c 21       		.uleb128 0x21
 3838 0d1d 36000000 		.4byte	.LVL192
 3839 0d21 81070000 		.4byte	0x781
 3840 0d25 300D0000 		.4byte	0xd30
 3841 0d29 1C       		.uleb128 0x1c
 3842 0d2a 01       		.uleb128 0x1
 3843 0d2b 50       		.byte	0x50
 3844 0d2c 02       		.uleb128 0x2
 3845 0d2d 74       		.byte	0x74
 3846 0d2e 00       		.sleb128 0
 3847 0d2f 00       		.byte	0
 3848 0d30 1B       		.uleb128 0x1b
 3849 0d31 40000000 		.4byte	.LVL194
 3850 0d35 81070000 		.4byte	0x781
 3851 0d39 1C       		.uleb128 0x1c
 3852 0d3a 01       		.uleb128 0x1
 3853 0d3b 50       		.byte	0x50
 3854 0d3c 02       		.uleb128 0x2
 3855 0d3d 74       		.byte	0x74
 3856 0d3e 00       		.sleb128 0
 3857 0d3f 00       		.byte	0
 3858 0d40 00       		.byte	0
 3859 0d41 17       		.uleb128 0x17
 3860 0d42 A8040000 		.4byte	.LASF81
 3861 0d46 01       		.byte	0x1
 3862 0d47 D70B     		.2byte	0xbd7
 3863 0d49 00000000 		.4byte	.LFB34
 3864 0d4d 3C000000 		.4byte	.LFE34-.LFB34
 3865 0d51 01       		.uleb128 0x1
 3866 0d52 9C       		.byte	0x9c
 3867 0d53 EE0D0000 		.4byte	0xdee
 3868 0d57 14       		.uleb128 0x14
 3869 0d58 71000000 		.4byte	.LASF22
 3870 0d5c 01       		.byte	0x1
 3871 0d5d D70B     		.2byte	0xbd7
 3872 0d5f 83000000 		.4byte	0x83
 3873 0d63 730A0000 		.4byte	.LLST60
 3874 0d67 14       		.uleb128 0x14
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 130


 3875 0d68 22050000 		.4byte	.LASF32
 3876 0d6c 01       		.byte	0x1
 3877 0d6d D70B     		.2byte	0xbd7
 3878 0d6f DD000000 		.4byte	0xdd
 3879 0d73 B50A0000 		.4byte	.LLST61
 3880 0d77 14       		.uleb128 0x14
 3881 0d78 12050000 		.4byte	.LASF82
 3882 0d7c 01       		.byte	0x1
 3883 0d7d D70B     		.2byte	0xbd7
 3884 0d7f 83000000 		.4byte	0x83
 3885 0d83 EF0A0000 		.4byte	.LLST62
 3886 0d87 15       		.uleb128 0x15
 3887 0d88 85010000 		.4byte	.LASF59
 3888 0d8c 01       		.byte	0x1
 3889 0d8d D90B     		.2byte	0xbd9
 3890 0d8f 83000000 		.4byte	0x83
 3891 0d93 310B0000 		.4byte	.LLST63
 3892 0d97 15       		.uleb128 0x15
 3893 0d98 E8020000 		.4byte	.LASF83
 3894 0d9c 01       		.byte	0x1
 3895 0d9d DA0B     		.2byte	0xbda
 3896 0d9f 83000000 		.4byte	0x83
 3897 0da3 440B0000 		.4byte	.LLST64
 3898 0da7 21       		.uleb128 0x21
 3899 0da8 12000000 		.4byte	.LVL200
 3900 0dac A00E0000 		.4byte	0xea0
 3901 0db0 BA0D0000 		.4byte	0xdba
 3902 0db4 1C       		.uleb128 0x1c
 3903 0db5 01       		.uleb128 0x1
 3904 0db6 50       		.byte	0x50
 3905 0db7 01       		.uleb128 0x1
 3906 0db8 30       		.byte	0x30
 3907 0db9 00       		.byte	0
 3908 0dba 18       		.uleb128 0x18
 3909 0dbb 18000000 		.4byte	.LVL204
 3910 0dbf 66040000 		.4byte	0x466
 3911 0dc3 21       		.uleb128 0x21
 3912 0dc4 28000000 		.4byte	.LVL205
 3913 0dc8 81070000 		.4byte	0x781
 3914 0dcc D70D0000 		.4byte	0xdd7
 3915 0dd0 1C       		.uleb128 0x1c
 3916 0dd1 01       		.uleb128 0x1
 3917 0dd2 50       		.byte	0x50
 3918 0dd3 02       		.uleb128 0x2
 3919 0dd4 74       		.byte	0x74
 3920 0dd5 00       		.sleb128 0
 3921 0dd6 00       		.byte	0
 3922 0dd7 1B       		.uleb128 0x1b
 3923 0dd8 36000000 		.4byte	.LVL207
 3924 0ddc A0010000 		.4byte	0x1a0
 3925 0de0 1C       		.uleb128 0x1c
 3926 0de1 01       		.uleb128 0x1
 3927 0de2 51       		.byte	0x51
 3928 0de3 02       		.uleb128 0x2
 3929 0de4 76       		.byte	0x76
 3930 0de5 00       		.sleb128 0
 3931 0de6 1C       		.uleb128 0x1c
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 131


 3932 0de7 01       		.uleb128 0x1
 3933 0de8 50       		.byte	0x50
 3934 0de9 02       		.uleb128 0x2
 3935 0dea 74       		.byte	0x74
 3936 0deb 00       		.sleb128 0
 3937 0dec 00       		.byte	0
 3938 0ded 00       		.byte	0
 3939 0dee 30       		.uleb128 0x30
 3940 0def C5000000 		.4byte	.LASF84
 3941 0df3 01       		.byte	0x1
 3942 0df4 22       		.byte	0x22
 3943 0df5 83000000 		.4byte	0x83
 3944 0df9 05       		.uleb128 0x5
 3945 0dfa 03       		.byte	0x3
 3946 0dfb 08000000 		.4byte	lfclkPosedgeWdtCounter0Enabled
 3947 0dff 30       		.uleb128 0x30
 3948 0e00 30060000 		.4byte	.LASF85
 3949 0e04 01       		.byte	0x1
 3950 0e05 23       		.byte	0x23
 3951 0e06 83000000 		.4byte	0x83
 3952 0e0a 05       		.uleb128 0x5
 3953 0e0b 03       		.byte	0x3
 3954 0e0c 0C000000 		.4byte	lfclkPosedgeWdtCounter0Mode
 3955 0e10 30       		.uleb128 0x30
 3956 0e11 C0050000 		.4byte	.LASF86
 3957 0e15 01       		.byte	0x1
 3958 0e16 25       		.byte	0x25
 3959 0e17 BC000000 		.4byte	0xbc
 3960 0e1b 05       		.uleb128 0x5
 3961 0e1c 03       		.byte	0x3
 3962 0e1d 1C000000 		.4byte	disableServicedIsr
 3963 0e21 30       		.uleb128 0x30
 3964 0e22 3B020000 		.4byte	.LASF87
 3965 0e26 01       		.byte	0x1
 3966 0e27 26       		.byte	0x26
 3967 0e28 BC000000 		.4byte	0xbc
 3968 0e2c 05       		.uleb128 0x5
 3969 0e2d 03       		.byte	0x3
 3970 0e2e 00000000 		.4byte	wdtIsrMask
 3971 0e32 39       		.uleb128 0x39
 3972 0e33 83000000 		.4byte	0x83
 3973 0e37 420E0000 		.4byte	0xe42
 3974 0e3b 3A       		.uleb128 0x3a
 3975 0e3c F3000000 		.4byte	0xf3
 3976 0e40 02       		.byte	0x2
 3977 0e41 00       		.byte	0
 3978 0e42 30       		.uleb128 0x30
 3979 0e43 1D000000 		.4byte	.LASF88
 3980 0e47 01       		.byte	0x1
 3981 0e48 2A       		.byte	0x2a
 3982 0e49 530E0000 		.4byte	0xe53
 3983 0e4d 05       		.uleb128 0x5
 3984 0e4e 03       		.byte	0x3
 3985 0e4f 00000000 		.4byte	counterIntMaskTbl
 3986 0e53 3B       		.uleb128 0x3b
 3987 0e54 320E0000 		.4byte	0xe32
 3988 0e58 39       		.uleb128 0x39
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 132


 3989 0e59 E8000000 		.4byte	0xe8
 3990 0e5d 680E0000 		.4byte	0xe68
 3991 0e61 3A       		.uleb128 0x3a
 3992 0e62 F3000000 		.4byte	0xf3
 3993 0e66 02       		.byte	0x2
 3994 0e67 00       		.byte	0
 3995 0e68 30       		.uleb128 0x30
 3996 0e69 2F000000 		.4byte	.LASF89
 3997 0e6d 01       		.byte	0x1
 3998 0e6e 44       		.byte	0x44
 3999 0e6f 580E0000 		.4byte	0xe58
 4000 0e73 05       		.uleb128 0x5
 4001 0e74 03       		.byte	0x3
 4002 0e75 10000000 		.4byte	cySysWdtCallback
 4003 0e79 3C       		.uleb128 0x3c
 4004 0e7a 4D040000 		.4byte	.LASF98
 4005 0e7e 04       		.byte	0x4
 4006 0e7f D2       		.byte	0xd2
 4007 0e80 83000000 		.4byte	0x83
 4008 0e84 3D       		.uleb128 0x3d
 4009 0e85 A9030000 		.4byte	.LASF99
 4010 0e89 04       		.byte	0x4
 4011 0e8a E3       		.byte	0xe3
 4012 0e8b 6B000000 		.4byte	0x6b
 4013 0e8f 3E       		.uleb128 0x3e
 4014 0e90 07000000 		.4byte	.LASF90
 4015 0e94 04       		.byte	0x4
 4016 0e95 E4       		.byte	0xe4
 4017 0e96 A00E0000 		.4byte	0xea0
 4018 0e9a 3F       		.uleb128 0x3f
 4019 0e9b 6B000000 		.4byte	0x6b
 4020 0e9f 00       		.byte	0
 4021 0ea0 3E       		.uleb128 0x3e
 4022 0ea1 C7040000 		.4byte	.LASF91
 4023 0ea5 04       		.byte	0x4
 4024 0ea6 E5       		.byte	0xe5
 4025 0ea7 B10E0000 		.4byte	0xeb1
 4026 0eab 3F       		.uleb128 0x3f
 4027 0eac 6B000000 		.4byte	0x6b
 4028 0eb0 00       		.byte	0
 4029 0eb1 40       		.uleb128 0x40
 4030 0eb2 51010000 		.4byte	.LASF100
 4031 0eb6 04       		.byte	0x4
 4032 0eb7 D8       		.byte	0xd8
 4033 0eb8 3F       		.uleb128 0x3f
 4034 0eb9 77000000 		.4byte	0x77
 4035 0ebd 00       		.byte	0
 4036 0ebe 00       		.byte	0
 4037              		.section	.debug_abbrev,"",%progbits
 4038              	.Ldebug_abbrev0:
 4039 0000 01       		.uleb128 0x1
 4040 0001 11       		.uleb128 0x11
 4041 0002 01       		.byte	0x1
 4042 0003 25       		.uleb128 0x25
 4043 0004 0E       		.uleb128 0xe
 4044 0005 13       		.uleb128 0x13
 4045 0006 0B       		.uleb128 0xb
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 133


 4046 0007 03       		.uleb128 0x3
 4047 0008 0E       		.uleb128 0xe
 4048 0009 1B       		.uleb128 0x1b
 4049 000a 0E       		.uleb128 0xe
 4050 000b 55       		.uleb128 0x55
 4051 000c 17       		.uleb128 0x17
 4052 000d 11       		.uleb128 0x11
 4053 000e 01       		.uleb128 0x1
 4054 000f 10       		.uleb128 0x10
 4055 0010 17       		.uleb128 0x17
 4056 0011 00       		.byte	0
 4057 0012 00       		.byte	0
 4058 0013 02       		.uleb128 0x2
 4059 0014 24       		.uleb128 0x24
 4060 0015 00       		.byte	0
 4061 0016 0B       		.uleb128 0xb
 4062 0017 0B       		.uleb128 0xb
 4063 0018 3E       		.uleb128 0x3e
 4064 0019 0B       		.uleb128 0xb
 4065 001a 03       		.uleb128 0x3
 4066 001b 0E       		.uleb128 0xe
 4067 001c 00       		.byte	0
 4068 001d 00       		.byte	0
 4069 001e 03       		.uleb128 0x3
 4070 001f 24       		.uleb128 0x24
 4071 0020 00       		.byte	0
 4072 0021 0B       		.uleb128 0xb
 4073 0022 0B       		.uleb128 0xb
 4074 0023 3E       		.uleb128 0x3e
 4075 0024 0B       		.uleb128 0xb
 4076 0025 03       		.uleb128 0x3
 4077 0026 08       		.uleb128 0x8
 4078 0027 00       		.byte	0
 4079 0028 00       		.byte	0
 4080 0029 04       		.uleb128 0x4
 4081 002a 16       		.uleb128 0x16
 4082 002b 00       		.byte	0
 4083 002c 03       		.uleb128 0x3
 4084 002d 0E       		.uleb128 0xe
 4085 002e 3A       		.uleb128 0x3a
 4086 002f 0B       		.uleb128 0xb
 4087 0030 3B       		.uleb128 0x3b
 4088 0031 05       		.uleb128 0x5
 4089 0032 49       		.uleb128 0x49
 4090 0033 13       		.uleb128 0x13
 4091 0034 00       		.byte	0
 4092 0035 00       		.byte	0
 4093 0036 05       		.uleb128 0x5
 4094 0037 35       		.uleb128 0x35
 4095 0038 00       		.byte	0
 4096 0039 49       		.uleb128 0x49
 4097 003a 13       		.uleb128 0x13
 4098 003b 00       		.byte	0
 4099 003c 00       		.byte	0
 4100 003d 06       		.uleb128 0x6
 4101 003e 0F       		.uleb128 0xf
 4102 003f 00       		.byte	0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 134


 4103 0040 0B       		.uleb128 0xb
 4104 0041 0B       		.uleb128 0xb
 4105 0042 49       		.uleb128 0x49
 4106 0043 13       		.uleb128 0x13
 4107 0044 00       		.byte	0
 4108 0045 00       		.byte	0
 4109 0046 07       		.uleb128 0x7
 4110 0047 15       		.uleb128 0x15
 4111 0048 00       		.byte	0
 4112 0049 27       		.uleb128 0x27
 4113 004a 19       		.uleb128 0x19
 4114 004b 00       		.byte	0
 4115 004c 00       		.byte	0
 4116 004d 08       		.uleb128 0x8
 4117 004e 04       		.uleb128 0x4
 4118 004f 01       		.byte	0x1
 4119 0050 0B       		.uleb128 0xb
 4120 0051 0B       		.uleb128 0xb
 4121 0052 3A       		.uleb128 0x3a
 4122 0053 0B       		.uleb128 0xb
 4123 0054 3B       		.uleb128 0x3b
 4124 0055 0B       		.uleb128 0xb
 4125 0056 01       		.uleb128 0x1
 4126 0057 13       		.uleb128 0x13
 4127 0058 00       		.byte	0
 4128 0059 00       		.byte	0
 4129 005a 09       		.uleb128 0x9
 4130 005b 28       		.uleb128 0x28
 4131 005c 00       		.byte	0
 4132 005d 03       		.uleb128 0x3
 4133 005e 0E       		.uleb128 0xe
 4134 005f 1C       		.uleb128 0x1c
 4135 0060 0D       		.uleb128 0xd
 4136 0061 00       		.byte	0
 4137 0062 00       		.byte	0
 4138 0063 0A       		.uleb128 0xa
 4139 0064 16       		.uleb128 0x16
 4140 0065 00       		.byte	0
 4141 0066 03       		.uleb128 0x3
 4142 0067 0E       		.uleb128 0xe
 4143 0068 3A       		.uleb128 0x3a
 4144 0069 0B       		.uleb128 0xb
 4145 006a 3B       		.uleb128 0x3b
 4146 006b 0B       		.uleb128 0xb
 4147 006c 49       		.uleb128 0x49
 4148 006d 13       		.uleb128 0x13
 4149 006e 00       		.byte	0
 4150 006f 00       		.byte	0
 4151 0070 0B       		.uleb128 0xb
 4152 0071 2E       		.uleb128 0x2e
 4153 0072 01       		.byte	0x1
 4154 0073 3F       		.uleb128 0x3f
 4155 0074 19       		.uleb128 0x19
 4156 0075 03       		.uleb128 0x3
 4157 0076 0E       		.uleb128 0xe
 4158 0077 3A       		.uleb128 0x3a
 4159 0078 0B       		.uleb128 0xb
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 135


 4160 0079 3B       		.uleb128 0x3b
 4161 007a 05       		.uleb128 0x5
 4162 007b 27       		.uleb128 0x27
 4163 007c 19       		.uleb128 0x19
 4164 007d 20       		.uleb128 0x20
 4165 007e 0B       		.uleb128 0xb
 4166 007f 01       		.uleb128 0x1
 4167 0080 13       		.uleb128 0x13
 4168 0081 00       		.byte	0
 4169 0082 00       		.byte	0
 4170 0083 0C       		.uleb128 0xc
 4171 0084 05       		.uleb128 0x5
 4172 0085 00       		.byte	0
 4173 0086 03       		.uleb128 0x3
 4174 0087 0E       		.uleb128 0xe
 4175 0088 3A       		.uleb128 0x3a
 4176 0089 0B       		.uleb128 0xb
 4177 008a 3B       		.uleb128 0x3b
 4178 008b 05       		.uleb128 0x5
 4179 008c 49       		.uleb128 0x49
 4180 008d 13       		.uleb128 0x13
 4181 008e 00       		.byte	0
 4182 008f 00       		.byte	0
 4183 0090 0D       		.uleb128 0xd
 4184 0091 34       		.uleb128 0x34
 4185 0092 00       		.byte	0
 4186 0093 03       		.uleb128 0x3
 4187 0094 0E       		.uleb128 0xe
 4188 0095 3A       		.uleb128 0x3a
 4189 0096 0B       		.uleb128 0xb
 4190 0097 3B       		.uleb128 0x3b
 4191 0098 05       		.uleb128 0x5
 4192 0099 49       		.uleb128 0x49
 4193 009a 13       		.uleb128 0x13
 4194 009b 00       		.byte	0
 4195 009c 00       		.byte	0
 4196 009d 0E       		.uleb128 0xe
 4197 009e 2E       		.uleb128 0x2e
 4198 009f 00       		.byte	0
 4199 00a0 3F       		.uleb128 0x3f
 4200 00a1 19       		.uleb128 0x19
 4201 00a2 03       		.uleb128 0x3
 4202 00a3 0E       		.uleb128 0xe
 4203 00a4 3A       		.uleb128 0x3a
 4204 00a5 0B       		.uleb128 0xb
 4205 00a6 3B       		.uleb128 0x3b
 4206 00a7 0B       		.uleb128 0xb
 4207 00a8 27       		.uleb128 0x27
 4208 00a9 19       		.uleb128 0x19
 4209 00aa 20       		.uleb128 0x20
 4210 00ab 0B       		.uleb128 0xb
 4211 00ac 00       		.byte	0
 4212 00ad 00       		.byte	0
 4213 00ae 0F       		.uleb128 0xf
 4214 00af 2E       		.uleb128 0x2e
 4215 00b0 00       		.byte	0
 4216 00b1 03       		.uleb128 0x3
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 136


 4217 00b2 0E       		.uleb128 0xe
 4218 00b3 3A       		.uleb128 0x3a
 4219 00b4 0B       		.uleb128 0xb
 4220 00b5 3B       		.uleb128 0x3b
 4221 00b6 05       		.uleb128 0x5
 4222 00b7 27       		.uleb128 0x27
 4223 00b8 19       		.uleb128 0x19
 4224 00b9 49       		.uleb128 0x49
 4225 00ba 13       		.uleb128 0x13
 4226 00bb 20       		.uleb128 0x20
 4227 00bc 0B       		.uleb128 0xb
 4228 00bd 00       		.byte	0
 4229 00be 00       		.byte	0
 4230 00bf 10       		.uleb128 0x10
 4231 00c0 2E       		.uleb128 0x2e
 4232 00c1 01       		.byte	0x1
 4233 00c2 3F       		.uleb128 0x3f
 4234 00c3 19       		.uleb128 0x19
 4235 00c4 03       		.uleb128 0x3
 4236 00c5 0E       		.uleb128 0xe
 4237 00c6 3A       		.uleb128 0x3a
 4238 00c7 0B       		.uleb128 0xb
 4239 00c8 3B       		.uleb128 0x3b
 4240 00c9 05       		.uleb128 0x5
 4241 00ca 27       		.uleb128 0x27
 4242 00cb 19       		.uleb128 0x19
 4243 00cc 49       		.uleb128 0x49
 4244 00cd 13       		.uleb128 0x13
 4245 00ce 20       		.uleb128 0x20
 4246 00cf 0B       		.uleb128 0xb
 4247 00d0 01       		.uleb128 0x1
 4248 00d1 13       		.uleb128 0x13
 4249 00d2 00       		.byte	0
 4250 00d3 00       		.byte	0
 4251 00d4 11       		.uleb128 0x11
 4252 00d5 2E       		.uleb128 0x2e
 4253 00d6 00       		.byte	0
 4254 00d7 31       		.uleb128 0x31
 4255 00d8 13       		.uleb128 0x13
 4256 00d9 11       		.uleb128 0x11
 4257 00da 01       		.uleb128 0x1
 4258 00db 12       		.uleb128 0x12
 4259 00dc 06       		.uleb128 0x6
 4260 00dd 40       		.uleb128 0x40
 4261 00de 18       		.uleb128 0x18
 4262 00df 9742     		.uleb128 0x2117
 4263 00e1 19       		.uleb128 0x19
 4264 00e2 00       		.byte	0
 4265 00e3 00       		.byte	0
 4266 00e4 12       		.uleb128 0x12
 4267 00e5 2E       		.uleb128 0x2e
 4268 00e6 00       		.byte	0
 4269 00e7 3F       		.uleb128 0x3f
 4270 00e8 19       		.uleb128 0x19
 4271 00e9 03       		.uleb128 0x3
 4272 00ea 0E       		.uleb128 0xe
 4273 00eb 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 137


 4274 00ec 0B       		.uleb128 0xb
 4275 00ed 3B       		.uleb128 0x3b
 4276 00ee 0B       		.uleb128 0xb
 4277 00ef 27       		.uleb128 0x27
 4278 00f0 19       		.uleb128 0x19
 4279 00f1 11       		.uleb128 0x11
 4280 00f2 01       		.uleb128 0x1
 4281 00f3 12       		.uleb128 0x12
 4282 00f4 06       		.uleb128 0x6
 4283 00f5 40       		.uleb128 0x40
 4284 00f6 18       		.uleb128 0x18
 4285 00f7 9742     		.uleb128 0x2117
 4286 00f9 19       		.uleb128 0x19
 4287 00fa 00       		.byte	0
 4288 00fb 00       		.byte	0
 4289 00fc 13       		.uleb128 0x13
 4290 00fd 2E       		.uleb128 0x2e
 4291 00fe 01       		.byte	0x1
 4292 00ff 3F       		.uleb128 0x3f
 4293 0100 19       		.uleb128 0x19
 4294 0101 03       		.uleb128 0x3
 4295 0102 0E       		.uleb128 0xe
 4296 0103 3A       		.uleb128 0x3a
 4297 0104 0B       		.uleb128 0xb
 4298 0105 3B       		.uleb128 0x3b
 4299 0106 05       		.uleb128 0x5
 4300 0107 27       		.uleb128 0x27
 4301 0108 19       		.uleb128 0x19
 4302 0109 49       		.uleb128 0x49
 4303 010a 13       		.uleb128 0x13
 4304 010b 11       		.uleb128 0x11
 4305 010c 01       		.uleb128 0x1
 4306 010d 12       		.uleb128 0x12
 4307 010e 06       		.uleb128 0x6
 4308 010f 40       		.uleb128 0x40
 4309 0110 18       		.uleb128 0x18
 4310 0111 9642     		.uleb128 0x2116
 4311 0113 19       		.uleb128 0x19
 4312 0114 01       		.uleb128 0x1
 4313 0115 13       		.uleb128 0x13
 4314 0116 00       		.byte	0
 4315 0117 00       		.byte	0
 4316 0118 14       		.uleb128 0x14
 4317 0119 05       		.uleb128 0x5
 4318 011a 00       		.byte	0
 4319 011b 03       		.uleb128 0x3
 4320 011c 0E       		.uleb128 0xe
 4321 011d 3A       		.uleb128 0x3a
 4322 011e 0B       		.uleb128 0xb
 4323 011f 3B       		.uleb128 0x3b
 4324 0120 05       		.uleb128 0x5
 4325 0121 49       		.uleb128 0x49
 4326 0122 13       		.uleb128 0x13
 4327 0123 02       		.uleb128 0x2
 4328 0124 17       		.uleb128 0x17
 4329 0125 00       		.byte	0
 4330 0126 00       		.byte	0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 138


 4331 0127 15       		.uleb128 0x15
 4332 0128 34       		.uleb128 0x34
 4333 0129 00       		.byte	0
 4334 012a 03       		.uleb128 0x3
 4335 012b 0E       		.uleb128 0xe
 4336 012c 3A       		.uleb128 0x3a
 4337 012d 0B       		.uleb128 0xb
 4338 012e 3B       		.uleb128 0x3b
 4339 012f 05       		.uleb128 0x5
 4340 0130 49       		.uleb128 0x49
 4341 0131 13       		.uleb128 0x13
 4342 0132 02       		.uleb128 0x2
 4343 0133 17       		.uleb128 0x17
 4344 0134 00       		.byte	0
 4345 0135 00       		.byte	0
 4346 0136 16       		.uleb128 0x16
 4347 0137 34       		.uleb128 0x34
 4348 0138 00       		.byte	0
 4349 0139 03       		.uleb128 0x3
 4350 013a 0E       		.uleb128 0xe
 4351 013b 3A       		.uleb128 0x3a
 4352 013c 0B       		.uleb128 0xb
 4353 013d 3B       		.uleb128 0x3b
 4354 013e 05       		.uleb128 0x5
 4355 013f 49       		.uleb128 0x49
 4356 0140 13       		.uleb128 0x13
 4357 0141 02       		.uleb128 0x2
 4358 0142 18       		.uleb128 0x18
 4359 0143 00       		.byte	0
 4360 0144 00       		.byte	0
 4361 0145 17       		.uleb128 0x17
 4362 0146 2E       		.uleb128 0x2e
 4363 0147 01       		.byte	0x1
 4364 0148 3F       		.uleb128 0x3f
 4365 0149 19       		.uleb128 0x19
 4366 014a 03       		.uleb128 0x3
 4367 014b 0E       		.uleb128 0xe
 4368 014c 3A       		.uleb128 0x3a
 4369 014d 0B       		.uleb128 0xb
 4370 014e 3B       		.uleb128 0x3b
 4371 014f 05       		.uleb128 0x5
 4372 0150 27       		.uleb128 0x27
 4373 0151 19       		.uleb128 0x19
 4374 0152 11       		.uleb128 0x11
 4375 0153 01       		.uleb128 0x1
 4376 0154 12       		.uleb128 0x12
 4377 0155 06       		.uleb128 0x6
 4378 0156 40       		.uleb128 0x40
 4379 0157 18       		.uleb128 0x18
 4380 0158 9742     		.uleb128 0x2117
 4381 015a 19       		.uleb128 0x19
 4382 015b 01       		.uleb128 0x1
 4383 015c 13       		.uleb128 0x13
 4384 015d 00       		.byte	0
 4385 015e 00       		.byte	0
 4386 015f 18       		.uleb128 0x18
 4387 0160 898201   		.uleb128 0x4109
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 139


 4388 0163 00       		.byte	0
 4389 0164 11       		.uleb128 0x11
 4390 0165 01       		.uleb128 0x1
 4391 0166 31       		.uleb128 0x31
 4392 0167 13       		.uleb128 0x13
 4393 0168 00       		.byte	0
 4394 0169 00       		.byte	0
 4395 016a 19       		.uleb128 0x19
 4396 016b 2E       		.uleb128 0x2e
 4397 016c 01       		.byte	0x1
 4398 016d 31       		.uleb128 0x31
 4399 016e 13       		.uleb128 0x13
 4400 016f 11       		.uleb128 0x11
 4401 0170 01       		.uleb128 0x1
 4402 0171 12       		.uleb128 0x12
 4403 0172 06       		.uleb128 0x6
 4404 0173 40       		.uleb128 0x40
 4405 0174 18       		.uleb128 0x18
 4406 0175 9742     		.uleb128 0x2117
 4407 0177 19       		.uleb128 0x19
 4408 0178 01       		.uleb128 0x1
 4409 0179 13       		.uleb128 0x13
 4410 017a 00       		.byte	0
 4411 017b 00       		.byte	0
 4412 017c 1A       		.uleb128 0x1a
 4413 017d 05       		.uleb128 0x5
 4414 017e 00       		.byte	0
 4415 017f 31       		.uleb128 0x31
 4416 0180 13       		.uleb128 0x13
 4417 0181 02       		.uleb128 0x2
 4418 0182 17       		.uleb128 0x17
 4419 0183 00       		.byte	0
 4420 0184 00       		.byte	0
 4421 0185 1B       		.uleb128 0x1b
 4422 0186 898201   		.uleb128 0x4109
 4423 0189 01       		.byte	0x1
 4424 018a 11       		.uleb128 0x11
 4425 018b 01       		.uleb128 0x1
 4426 018c 31       		.uleb128 0x31
 4427 018d 13       		.uleb128 0x13
 4428 018e 00       		.byte	0
 4429 018f 00       		.byte	0
 4430 0190 1C       		.uleb128 0x1c
 4431 0191 8A8201   		.uleb128 0x410a
 4432 0194 00       		.byte	0
 4433 0195 02       		.uleb128 0x2
 4434 0196 18       		.uleb128 0x18
 4435 0197 9142     		.uleb128 0x2111
 4436 0199 18       		.uleb128 0x18
 4437 019a 00       		.byte	0
 4438 019b 00       		.byte	0
 4439 019c 1D       		.uleb128 0x1d
 4440 019d 34       		.uleb128 0x34
 4441 019e 00       		.byte	0
 4442 019f 31       		.uleb128 0x31
 4443 01a0 13       		.uleb128 0x13
 4444 01a1 00       		.byte	0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 140


 4445 01a2 00       		.byte	0
 4446 01a3 1E       		.uleb128 0x1e
 4447 01a4 0B       		.uleb128 0xb
 4448 01a5 01       		.byte	0x1
 4449 01a6 11       		.uleb128 0x11
 4450 01a7 01       		.uleb128 0x1
 4451 01a8 12       		.uleb128 0x12
 4452 01a9 06       		.uleb128 0x6
 4453 01aa 01       		.uleb128 0x1
 4454 01ab 13       		.uleb128 0x13
 4455 01ac 00       		.byte	0
 4456 01ad 00       		.byte	0
 4457 01ae 1F       		.uleb128 0x1f
 4458 01af 0B       		.uleb128 0xb
 4459 01b0 01       		.byte	0x1
 4460 01b1 11       		.uleb128 0x11
 4461 01b2 01       		.uleb128 0x1
 4462 01b3 12       		.uleb128 0x12
 4463 01b4 06       		.uleb128 0x6
 4464 01b5 00       		.byte	0
 4465 01b6 00       		.byte	0
 4466 01b7 20       		.uleb128 0x20
 4467 01b8 34       		.uleb128 0x34
 4468 01b9 00       		.byte	0
 4469 01ba 31       		.uleb128 0x31
 4470 01bb 13       		.uleb128 0x13
 4471 01bc 02       		.uleb128 0x2
 4472 01bd 17       		.uleb128 0x17
 4473 01be 00       		.byte	0
 4474 01bf 00       		.byte	0
 4475 01c0 21       		.uleb128 0x21
 4476 01c1 898201   		.uleb128 0x4109
 4477 01c4 01       		.byte	0x1
 4478 01c5 11       		.uleb128 0x11
 4479 01c6 01       		.uleb128 0x1
 4480 01c7 31       		.uleb128 0x31
 4481 01c8 13       		.uleb128 0x13
 4482 01c9 01       		.uleb128 0x1
 4483 01ca 13       		.uleb128 0x13
 4484 01cb 00       		.byte	0
 4485 01cc 00       		.byte	0
 4486 01cd 22       		.uleb128 0x22
 4487 01ce 2E       		.uleb128 0x2e
 4488 01cf 01       		.byte	0x1
 4489 01d0 3F       		.uleb128 0x3f
 4490 01d1 19       		.uleb128 0x19
 4491 01d2 03       		.uleb128 0x3
 4492 01d3 0E       		.uleb128 0xe
 4493 01d4 3A       		.uleb128 0x3a
 4494 01d5 0B       		.uleb128 0xb
 4495 01d6 3B       		.uleb128 0x3b
 4496 01d7 05       		.uleb128 0x5
 4497 01d8 27       		.uleb128 0x27
 4498 01d9 19       		.uleb128 0x19
 4499 01da 49       		.uleb128 0x49
 4500 01db 13       		.uleb128 0x13
 4501 01dc 11       		.uleb128 0x11
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 141


 4502 01dd 01       		.uleb128 0x1
 4503 01de 12       		.uleb128 0x12
 4504 01df 06       		.uleb128 0x6
 4505 01e0 40       		.uleb128 0x40
 4506 01e1 18       		.uleb128 0x18
 4507 01e2 9742     		.uleb128 0x2117
 4508 01e4 19       		.uleb128 0x19
 4509 01e5 01       		.uleb128 0x1
 4510 01e6 13       		.uleb128 0x13
 4511 01e7 00       		.byte	0
 4512 01e8 00       		.byte	0
 4513 01e9 23       		.uleb128 0x23
 4514 01ea 05       		.uleb128 0x5
 4515 01eb 00       		.byte	0
 4516 01ec 31       		.uleb128 0x31
 4517 01ed 13       		.uleb128 0x13
 4518 01ee 02       		.uleb128 0x2
 4519 01ef 18       		.uleb128 0x18
 4520 01f0 00       		.byte	0
 4521 01f1 00       		.byte	0
 4522 01f2 24       		.uleb128 0x24
 4523 01f3 1D       		.uleb128 0x1d
 4524 01f4 00       		.byte	0
 4525 01f5 31       		.uleb128 0x31
 4526 01f6 13       		.uleb128 0x13
 4527 01f7 11       		.uleb128 0x11
 4528 01f8 01       		.uleb128 0x1
 4529 01f9 12       		.uleb128 0x12
 4530 01fa 06       		.uleb128 0x6
 4531 01fb 58       		.uleb128 0x58
 4532 01fc 0B       		.uleb128 0xb
 4533 01fd 59       		.uleb128 0x59
 4534 01fe 05       		.uleb128 0x5
 4535 01ff 00       		.byte	0
 4536 0200 00       		.byte	0
 4537 0201 25       		.uleb128 0x25
 4538 0202 1D       		.uleb128 0x1d
 4539 0203 01       		.byte	0x1
 4540 0204 31       		.uleb128 0x31
 4541 0205 13       		.uleb128 0x13
 4542 0206 11       		.uleb128 0x11
 4543 0207 01       		.uleb128 0x1
 4544 0208 12       		.uleb128 0x12
 4545 0209 06       		.uleb128 0x6
 4546 020a 58       		.uleb128 0x58
 4547 020b 0B       		.uleb128 0xb
 4548 020c 59       		.uleb128 0x59
 4549 020d 05       		.uleb128 0x5
 4550 020e 01       		.uleb128 0x1
 4551 020f 13       		.uleb128 0x13
 4552 0210 00       		.byte	0
 4553 0211 00       		.byte	0
 4554 0212 26       		.uleb128 0x26
 4555 0213 05       		.uleb128 0x5
 4556 0214 00       		.byte	0
 4557 0215 31       		.uleb128 0x31
 4558 0216 13       		.uleb128 0x13
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 142


 4559 0217 00       		.byte	0
 4560 0218 00       		.byte	0
 4561 0219 27       		.uleb128 0x27
 4562 021a 1D       		.uleb128 0x1d
 4563 021b 01       		.byte	0x1
 4564 021c 31       		.uleb128 0x31
 4565 021d 13       		.uleb128 0x13
 4566 021e 11       		.uleb128 0x11
 4567 021f 01       		.uleb128 0x1
 4568 0220 12       		.uleb128 0x12
 4569 0221 06       		.uleb128 0x6
 4570 0222 58       		.uleb128 0x58
 4571 0223 0B       		.uleb128 0xb
 4572 0224 59       		.uleb128 0x59
 4573 0225 05       		.uleb128 0x5
 4574 0226 00       		.byte	0
 4575 0227 00       		.byte	0
 4576 0228 28       		.uleb128 0x28
 4577 0229 05       		.uleb128 0x5
 4578 022a 00       		.byte	0
 4579 022b 03       		.uleb128 0x3
 4580 022c 0E       		.uleb128 0xe
 4581 022d 3A       		.uleb128 0x3a
 4582 022e 0B       		.uleb128 0xb
 4583 022f 3B       		.uleb128 0x3b
 4584 0230 05       		.uleb128 0x5
 4585 0231 49       		.uleb128 0x49
 4586 0232 13       		.uleb128 0x13
 4587 0233 02       		.uleb128 0x2
 4588 0234 18       		.uleb128 0x18
 4589 0235 00       		.byte	0
 4590 0236 00       		.byte	0
 4591 0237 29       		.uleb128 0x29
 4592 0238 1D       		.uleb128 0x1d
 4593 0239 01       		.byte	0x1
 4594 023a 31       		.uleb128 0x31
 4595 023b 13       		.uleb128 0x13
 4596 023c 52       		.uleb128 0x52
 4597 023d 01       		.uleb128 0x1
 4598 023e 55       		.uleb128 0x55
 4599 023f 17       		.uleb128 0x17
 4600 0240 58       		.uleb128 0x58
 4601 0241 0B       		.uleb128 0xb
 4602 0242 59       		.uleb128 0x59
 4603 0243 05       		.uleb128 0x5
 4604 0244 01       		.uleb128 0x1
 4605 0245 13       		.uleb128 0x13
 4606 0246 00       		.byte	0
 4607 0247 00       		.byte	0
 4608 0248 2A       		.uleb128 0x2a
 4609 0249 05       		.uleb128 0x5
 4610 024a 00       		.byte	0
 4611 024b 31       		.uleb128 0x31
 4612 024c 13       		.uleb128 0x13
 4613 024d 1C       		.uleb128 0x1c
 4614 024e 0B       		.uleb128 0xb
 4615 024f 00       		.byte	0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 143


 4616 0250 00       		.byte	0
 4617 0251 2B       		.uleb128 0x2b
 4618 0252 1D       		.uleb128 0x1d
 4619 0253 01       		.byte	0x1
 4620 0254 31       		.uleb128 0x31
 4621 0255 13       		.uleb128 0x13
 4622 0256 52       		.uleb128 0x52
 4623 0257 01       		.uleb128 0x1
 4624 0258 55       		.uleb128 0x55
 4625 0259 17       		.uleb128 0x17
 4626 025a 58       		.uleb128 0x58
 4627 025b 0B       		.uleb128 0xb
 4628 025c 59       		.uleb128 0x59
 4629 025d 05       		.uleb128 0x5
 4630 025e 00       		.byte	0
 4631 025f 00       		.byte	0
 4632 0260 2C       		.uleb128 0x2c
 4633 0261 2E       		.uleb128 0x2e
 4634 0262 00       		.byte	0
 4635 0263 3F       		.uleb128 0x3f
 4636 0264 19       		.uleb128 0x19
 4637 0265 03       		.uleb128 0x3
 4638 0266 0E       		.uleb128 0xe
 4639 0267 3A       		.uleb128 0x3a
 4640 0268 0B       		.uleb128 0xb
 4641 0269 3B       		.uleb128 0x3b
 4642 026a 05       		.uleb128 0x5
 4643 026b 27       		.uleb128 0x27
 4644 026c 19       		.uleb128 0x19
 4645 026d 49       		.uleb128 0x49
 4646 026e 13       		.uleb128 0x13
 4647 026f 11       		.uleb128 0x11
 4648 0270 01       		.uleb128 0x1
 4649 0271 12       		.uleb128 0x12
 4650 0272 06       		.uleb128 0x6
 4651 0273 40       		.uleb128 0x40
 4652 0274 18       		.uleb128 0x18
 4653 0275 9742     		.uleb128 0x2117
 4654 0277 19       		.uleb128 0x19
 4655 0278 00       		.byte	0
 4656 0279 00       		.byte	0
 4657 027a 2D       		.uleb128 0x2d
 4658 027b 2E       		.uleb128 0x2e
 4659 027c 01       		.byte	0x1
 4660 027d 03       		.uleb128 0x3
 4661 027e 0E       		.uleb128 0xe
 4662 027f 3A       		.uleb128 0x3a
 4663 0280 0B       		.uleb128 0xb
 4664 0281 3B       		.uleb128 0x3b
 4665 0282 05       		.uleb128 0x5
 4666 0283 27       		.uleb128 0x27
 4667 0284 19       		.uleb128 0x19
 4668 0285 20       		.uleb128 0x20
 4669 0286 0B       		.uleb128 0xb
 4670 0287 01       		.uleb128 0x1
 4671 0288 13       		.uleb128 0x13
 4672 0289 00       		.byte	0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 144


 4673 028a 00       		.byte	0
 4674 028b 2E       		.uleb128 0x2e
 4675 028c 2E       		.uleb128 0x2e
 4676 028d 00       		.byte	0
 4677 028e 03       		.uleb128 0x3
 4678 028f 0E       		.uleb128 0xe
 4679 0290 3A       		.uleb128 0x3a
 4680 0291 0B       		.uleb128 0xb
 4681 0292 3B       		.uleb128 0x3b
 4682 0293 05       		.uleb128 0x5
 4683 0294 27       		.uleb128 0x27
 4684 0295 19       		.uleb128 0x19
 4685 0296 20       		.uleb128 0x20
 4686 0297 0B       		.uleb128 0xb
 4687 0298 00       		.byte	0
 4688 0299 00       		.byte	0
 4689 029a 2F       		.uleb128 0x2f
 4690 029b 2E       		.uleb128 0x2e
 4691 029c 01       		.byte	0x1
 4692 029d 3F       		.uleb128 0x3f
 4693 029e 19       		.uleb128 0x19
 4694 029f 03       		.uleb128 0x3
 4695 02a0 0E       		.uleb128 0xe
 4696 02a1 3A       		.uleb128 0x3a
 4697 02a2 0B       		.uleb128 0xb
 4698 02a3 3B       		.uleb128 0x3b
 4699 02a4 0B       		.uleb128 0xb
 4700 02a5 27       		.uleb128 0x27
 4701 02a6 19       		.uleb128 0x19
 4702 02a7 11       		.uleb128 0x11
 4703 02a8 01       		.uleb128 0x1
 4704 02a9 12       		.uleb128 0x12
 4705 02aa 06       		.uleb128 0x6
 4706 02ab 40       		.uleb128 0x40
 4707 02ac 18       		.uleb128 0x18
 4708 02ad 9742     		.uleb128 0x2117
 4709 02af 19       		.uleb128 0x19
 4710 02b0 01       		.uleb128 0x1
 4711 02b1 13       		.uleb128 0x13
 4712 02b2 00       		.byte	0
 4713 02b3 00       		.byte	0
 4714 02b4 30       		.uleb128 0x30
 4715 02b5 34       		.uleb128 0x34
 4716 02b6 00       		.byte	0
 4717 02b7 03       		.uleb128 0x3
 4718 02b8 0E       		.uleb128 0xe
 4719 02b9 3A       		.uleb128 0x3a
 4720 02ba 0B       		.uleb128 0xb
 4721 02bb 3B       		.uleb128 0x3b
 4722 02bc 0B       		.uleb128 0xb
 4723 02bd 49       		.uleb128 0x49
 4724 02be 13       		.uleb128 0x13
 4725 02bf 02       		.uleb128 0x2
 4726 02c0 18       		.uleb128 0x18
 4727 02c1 00       		.byte	0
 4728 02c2 00       		.byte	0
 4729 02c3 31       		.uleb128 0x31
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 145


 4730 02c4 1D       		.uleb128 0x1d
 4731 02c5 00       		.byte	0
 4732 02c6 31       		.uleb128 0x31
 4733 02c7 13       		.uleb128 0x13
 4734 02c8 52       		.uleb128 0x52
 4735 02c9 01       		.uleb128 0x1
 4736 02ca 55       		.uleb128 0x55
 4737 02cb 17       		.uleb128 0x17
 4738 02cc 58       		.uleb128 0x58
 4739 02cd 0B       		.uleb128 0xb
 4740 02ce 59       		.uleb128 0x59
 4741 02cf 0B       		.uleb128 0xb
 4742 02d0 00       		.byte	0
 4743 02d1 00       		.byte	0
 4744 02d2 32       		.uleb128 0x32
 4745 02d3 1D       		.uleb128 0x1d
 4746 02d4 00       		.byte	0
 4747 02d5 31       		.uleb128 0x31
 4748 02d6 13       		.uleb128 0x13
 4749 02d7 11       		.uleb128 0x11
 4750 02d8 01       		.uleb128 0x1
 4751 02d9 12       		.uleb128 0x12
 4752 02da 06       		.uleb128 0x6
 4753 02db 58       		.uleb128 0x58
 4754 02dc 0B       		.uleb128 0xb
 4755 02dd 59       		.uleb128 0x59
 4756 02de 0B       		.uleb128 0xb
 4757 02df 00       		.byte	0
 4758 02e0 00       		.byte	0
 4759 02e1 33       		.uleb128 0x33
 4760 02e2 1D       		.uleb128 0x1d
 4761 02e3 01       		.byte	0x1
 4762 02e4 31       		.uleb128 0x31
 4763 02e5 13       		.uleb128 0x13
 4764 02e6 52       		.uleb128 0x52
 4765 02e7 01       		.uleb128 0x1
 4766 02e8 55       		.uleb128 0x55
 4767 02e9 17       		.uleb128 0x17
 4768 02ea 58       		.uleb128 0x58
 4769 02eb 0B       		.uleb128 0xb
 4770 02ec 59       		.uleb128 0x59
 4771 02ed 0B       		.uleb128 0xb
 4772 02ee 01       		.uleb128 0x1
 4773 02ef 13       		.uleb128 0x13
 4774 02f0 00       		.byte	0
 4775 02f1 00       		.byte	0
 4776 02f2 34       		.uleb128 0x34
 4777 02f3 0B       		.uleb128 0xb
 4778 02f4 01       		.byte	0x1
 4779 02f5 55       		.uleb128 0x55
 4780 02f6 17       		.uleb128 0x17
 4781 02f7 00       		.byte	0
 4782 02f8 00       		.byte	0
 4783 02f9 35       		.uleb128 0x35
 4784 02fa 34       		.uleb128 0x34
 4785 02fb 00       		.byte	0
 4786 02fc 31       		.uleb128 0x31
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 146


 4787 02fd 13       		.uleb128 0x13
 4788 02fe 02       		.uleb128 0x2
 4789 02ff 18       		.uleb128 0x18
 4790 0300 00       		.byte	0
 4791 0301 00       		.byte	0
 4792 0302 36       		.uleb128 0x36
 4793 0303 1D       		.uleb128 0x1d
 4794 0304 01       		.byte	0x1
 4795 0305 31       		.uleb128 0x31
 4796 0306 13       		.uleb128 0x13
 4797 0307 11       		.uleb128 0x11
 4798 0308 01       		.uleb128 0x1
 4799 0309 12       		.uleb128 0x12
 4800 030a 06       		.uleb128 0x6
 4801 030b 58       		.uleb128 0x58
 4802 030c 0B       		.uleb128 0xb
 4803 030d 59       		.uleb128 0x59
 4804 030e 0B       		.uleb128 0xb
 4805 030f 01       		.uleb128 0x1
 4806 0310 13       		.uleb128 0x13
 4807 0311 00       		.byte	0
 4808 0312 00       		.byte	0
 4809 0313 37       		.uleb128 0x37
 4810 0314 1D       		.uleb128 0x1d
 4811 0315 00       		.byte	0
 4812 0316 31       		.uleb128 0x31
 4813 0317 13       		.uleb128 0x13
 4814 0318 52       		.uleb128 0x52
 4815 0319 01       		.uleb128 0x1
 4816 031a 55       		.uleb128 0x55
 4817 031b 17       		.uleb128 0x17
 4818 031c 58       		.uleb128 0x58
 4819 031d 0B       		.uleb128 0xb
 4820 031e 59       		.uleb128 0x59
 4821 031f 05       		.uleb128 0x5
 4822 0320 00       		.byte	0
 4823 0321 00       		.byte	0
 4824 0322 38       		.uleb128 0x38
 4825 0323 2E       		.uleb128 0x2e
 4826 0324 01       		.byte	0x1
 4827 0325 3F       		.uleb128 0x3f
 4828 0326 19       		.uleb128 0x19
 4829 0327 03       		.uleb128 0x3
 4830 0328 0E       		.uleb128 0xe
 4831 0329 3A       		.uleb128 0x3a
 4832 032a 0B       		.uleb128 0xb
 4833 032b 3B       		.uleb128 0x3b
 4834 032c 05       		.uleb128 0x5
 4835 032d 27       		.uleb128 0x27
 4836 032e 19       		.uleb128 0x19
 4837 032f 11       		.uleb128 0x11
 4838 0330 01       		.uleb128 0x1
 4839 0331 12       		.uleb128 0x12
 4840 0332 06       		.uleb128 0x6
 4841 0333 40       		.uleb128 0x40
 4842 0334 18       		.uleb128 0x18
 4843 0335 9642     		.uleb128 0x2116
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 147


 4844 0337 19       		.uleb128 0x19
 4845 0338 01       		.uleb128 0x1
 4846 0339 13       		.uleb128 0x13
 4847 033a 00       		.byte	0
 4848 033b 00       		.byte	0
 4849 033c 39       		.uleb128 0x39
 4850 033d 01       		.uleb128 0x1
 4851 033e 01       		.byte	0x1
 4852 033f 49       		.uleb128 0x49
 4853 0340 13       		.uleb128 0x13
 4854 0341 01       		.uleb128 0x1
 4855 0342 13       		.uleb128 0x13
 4856 0343 00       		.byte	0
 4857 0344 00       		.byte	0
 4858 0345 3A       		.uleb128 0x3a
 4859 0346 21       		.uleb128 0x21
 4860 0347 00       		.byte	0
 4861 0348 49       		.uleb128 0x49
 4862 0349 13       		.uleb128 0x13
 4863 034a 2F       		.uleb128 0x2f
 4864 034b 0B       		.uleb128 0xb
 4865 034c 00       		.byte	0
 4866 034d 00       		.byte	0
 4867 034e 3B       		.uleb128 0x3b
 4868 034f 26       		.uleb128 0x26
 4869 0350 00       		.byte	0
 4870 0351 49       		.uleb128 0x49
 4871 0352 13       		.uleb128 0x13
 4872 0353 00       		.byte	0
 4873 0354 00       		.byte	0
 4874 0355 3C       		.uleb128 0x3c
 4875 0356 34       		.uleb128 0x34
 4876 0357 00       		.byte	0
 4877 0358 03       		.uleb128 0x3
 4878 0359 0E       		.uleb128 0xe
 4879 035a 3A       		.uleb128 0x3a
 4880 035b 0B       		.uleb128 0xb
 4881 035c 3B       		.uleb128 0x3b
 4882 035d 0B       		.uleb128 0xb
 4883 035e 49       		.uleb128 0x49
 4884 035f 13       		.uleb128 0x13
 4885 0360 3F       		.uleb128 0x3f
 4886 0361 19       		.uleb128 0x19
 4887 0362 3C       		.uleb128 0x3c
 4888 0363 19       		.uleb128 0x19
 4889 0364 00       		.byte	0
 4890 0365 00       		.byte	0
 4891 0366 3D       		.uleb128 0x3d
 4892 0367 2E       		.uleb128 0x2e
 4893 0368 00       		.byte	0
 4894 0369 3F       		.uleb128 0x3f
 4895 036a 19       		.uleb128 0x19
 4896 036b 03       		.uleb128 0x3
 4897 036c 0E       		.uleb128 0xe
 4898 036d 3A       		.uleb128 0x3a
 4899 036e 0B       		.uleb128 0xb
 4900 036f 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 148


 4901 0370 0B       		.uleb128 0xb
 4902 0371 27       		.uleb128 0x27
 4903 0372 19       		.uleb128 0x19
 4904 0373 49       		.uleb128 0x49
 4905 0374 13       		.uleb128 0x13
 4906 0375 3C       		.uleb128 0x3c
 4907 0376 19       		.uleb128 0x19
 4908 0377 00       		.byte	0
 4909 0378 00       		.byte	0
 4910 0379 3E       		.uleb128 0x3e
 4911 037a 2E       		.uleb128 0x2e
 4912 037b 01       		.byte	0x1
 4913 037c 3F       		.uleb128 0x3f
 4914 037d 19       		.uleb128 0x19
 4915 037e 03       		.uleb128 0x3
 4916 037f 0E       		.uleb128 0xe
 4917 0380 3A       		.uleb128 0x3a
 4918 0381 0B       		.uleb128 0xb
 4919 0382 3B       		.uleb128 0x3b
 4920 0383 0B       		.uleb128 0xb
 4921 0384 27       		.uleb128 0x27
 4922 0385 19       		.uleb128 0x19
 4923 0386 3C       		.uleb128 0x3c
 4924 0387 19       		.uleb128 0x19
 4925 0388 01       		.uleb128 0x1
 4926 0389 13       		.uleb128 0x13
 4927 038a 00       		.byte	0
 4928 038b 00       		.byte	0
 4929 038c 3F       		.uleb128 0x3f
 4930 038d 05       		.uleb128 0x5
 4931 038e 00       		.byte	0
 4932 038f 49       		.uleb128 0x49
 4933 0390 13       		.uleb128 0x13
 4934 0391 00       		.byte	0
 4935 0392 00       		.byte	0
 4936 0393 40       		.uleb128 0x40
 4937 0394 2E       		.uleb128 0x2e
 4938 0395 01       		.byte	0x1
 4939 0396 3F       		.uleb128 0x3f
 4940 0397 19       		.uleb128 0x19
 4941 0398 03       		.uleb128 0x3
 4942 0399 0E       		.uleb128 0xe
 4943 039a 3A       		.uleb128 0x3a
 4944 039b 0B       		.uleb128 0xb
 4945 039c 3B       		.uleb128 0x3b
 4946 039d 0B       		.uleb128 0xb
 4947 039e 27       		.uleb128 0x27
 4948 039f 19       		.uleb128 0x19
 4949 03a0 3C       		.uleb128 0x3c
 4950 03a1 19       		.uleb128 0x19
 4951 03a2 00       		.byte	0
 4952 03a3 00       		.byte	0
 4953 03a4 00       		.byte	0
 4954              		.section	.debug_loc,"",%progbits
 4955              	.Ldebug_loc0:
 4956              	.LLST0:
 4957 0000 00000000 		.4byte	.LVL0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 149


 4958 0004 18000000 		.4byte	.LVL3
 4959 0008 0100     		.2byte	0x1
 4960 000a 50       		.byte	0x50
 4961 000b 18000000 		.4byte	.LVL3
 4962 000f 20000000 		.4byte	.LVL4
 4963 0013 0400     		.2byte	0x4
 4964 0015 F3       		.byte	0xf3
 4965 0016 01       		.uleb128 0x1
 4966 0017 50       		.byte	0x50
 4967 0018 9F       		.byte	0x9f
 4968 0019 20000000 		.4byte	.LVL4
 4969 001d 79000000 		.4byte	.LVL10-1
 4970 0021 0100     		.2byte	0x1
 4971 0023 50       		.byte	0x50
 4972 0024 79000000 		.4byte	.LVL10-1
 4973 0028 9C000000 		.4byte	.LVL15
 4974 002c 0400     		.2byte	0x4
 4975 002e F3       		.byte	0xf3
 4976 002f 01       		.uleb128 0x1
 4977 0030 50       		.byte	0x50
 4978 0031 9F       		.byte	0x9f
 4979 0032 9C000000 		.4byte	.LVL15
 4980 0036 A0000000 		.4byte	.LVL16
 4981 003a 0100     		.2byte	0x1
 4982 003c 50       		.byte	0x50
 4983 003d A0000000 		.4byte	.LVL16
 4984 0041 F8000000 		.4byte	.LFE4
 4985 0045 0400     		.2byte	0x4
 4986 0047 F3       		.byte	0xf3
 4987 0048 01       		.uleb128 0x1
 4988 0049 50       		.byte	0x50
 4989 004a 9F       		.byte	0x9f
 4990 004b 00000000 		.4byte	0
 4991 004f 00000000 		.4byte	0
 4992              	.LLST1:
 4993 0053 00000000 		.4byte	.LVL0
 4994 0057 18000000 		.4byte	.LVL3
 4995 005b 0100     		.2byte	0x1
 4996 005d 51       		.byte	0x51
 4997 005e 18000000 		.4byte	.LVL3
 4998 0062 20000000 		.4byte	.LVL4
 4999 0066 0400     		.2byte	0x4
 5000 0068 F3       		.byte	0xf3
 5001 0069 01       		.uleb128 0x1
 5002 006a 51       		.byte	0x51
 5003 006b 9F       		.byte	0x9f
 5004 006c 20000000 		.4byte	.LVL4
 5005 0070 76000000 		.4byte	.LVL9
 5006 0074 0100     		.2byte	0x1
 5007 0076 51       		.byte	0x51
 5008 0077 76000000 		.4byte	.LVL9
 5009 007b 9C000000 		.4byte	.LVL15
 5010 007f 0100     		.2byte	0x1
 5011 0081 55       		.byte	0x55
 5012 0082 9C000000 		.4byte	.LVL15
 5013 0086 A4000000 		.4byte	.LVL17
 5014 008a 0100     		.2byte	0x1
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 150


 5015 008c 51       		.byte	0x51
 5016 008d A4000000 		.4byte	.LVL17
 5017 0091 F8000000 		.4byte	.LFE4
 5018 0095 0100     		.2byte	0x1
 5019 0097 55       		.byte	0x55
 5020 0098 00000000 		.4byte	0
 5021 009c 00000000 		.4byte	0
 5022              	.LLST2:
 5023 00a0 94000000 		.4byte	.LVL13
 5024 00a4 9C000000 		.4byte	.LVL15
 5025 00a8 0100     		.2byte	0x1
 5026 00aa 50       		.byte	0x50
 5027 00ab C4000000 		.4byte	.LVL20
 5028 00af F8000000 		.4byte	.LFE4
 5029 00b3 0100     		.2byte	0x1
 5030 00b5 50       		.byte	0x50
 5031 00b6 00000000 		.4byte	0
 5032 00ba 00000000 		.4byte	0
 5033              	.LLST3:
 5034 00be 74000000 		.4byte	.LVL8
 5035 00c2 79000000 		.4byte	.LVL10-1
 5036 00c6 0B00     		.2byte	0xb
 5037 00c8 70       		.byte	0x70
 5038 00c9 00       		.sleb128 0
 5039 00ca F7       		.byte	0xf7
 5040 00cb 25       		.uleb128 0x25
 5041 00cc 4F       		.byte	0x4f
 5042 00cd F7       		.byte	0xf7
 5043 00ce 25       		.uleb128 0x25
 5044 00cf 1B       		.byte	0x1b
 5045 00d0 F7       		.byte	0xf7
 5046 00d1 00       		.uleb128 0
 5047 00d2 9F       		.byte	0x9f
 5048 00d3 79000000 		.4byte	.LVL10-1
 5049 00d7 94000000 		.4byte	.LVL13
 5050 00db 0C00     		.2byte	0xc
 5051 00dd F3       		.byte	0xf3
 5052 00de 01       		.uleb128 0x1
 5053 00df 50       		.byte	0x50
 5054 00e0 F7       		.byte	0xf7
 5055 00e1 25       		.uleb128 0x25
 5056 00e2 4F       		.byte	0x4f
 5057 00e3 F7       		.byte	0xf7
 5058 00e4 25       		.uleb128 0x25
 5059 00e5 1B       		.byte	0x1b
 5060 00e6 F7       		.byte	0xf7
 5061 00e7 00       		.uleb128 0
 5062 00e8 9F       		.byte	0x9f
 5063 00e9 9C000000 		.4byte	.LVL15
 5064 00ed A0000000 		.4byte	.LVL16
 5065 00f1 1300     		.2byte	0x13
 5066 00f3 70       		.byte	0x70
 5067 00f4 00       		.sleb128 0
 5068 00f5 08       		.byte	0x8
 5069 00f6 64       		.byte	0x64
 5070 00f7 1E       		.byte	0x1e
 5071 00f8 23       		.byte	0x23
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 151


 5072 00f9 8D06     		.uleb128 0x30d
 5073 00fb F7       		.byte	0xf7
 5074 00fc 25       		.uleb128 0x25
 5075 00fd 0A       		.byte	0xa
 5076 00fe 350C     		.2byte	0xc35
 5077 0100 F7       		.byte	0xf7
 5078 0101 25       		.uleb128 0x25
 5079 0102 1B       		.byte	0x1b
 5080 0103 F7       		.byte	0xf7
 5081 0104 00       		.uleb128 0
 5082 0105 9F       		.byte	0x9f
 5083 0106 A0000000 		.4byte	.LVL16
 5084 010a F8000000 		.4byte	.LFE4
 5085 010e 1400     		.2byte	0x14
 5086 0110 F3       		.byte	0xf3
 5087 0111 01       		.uleb128 0x1
 5088 0112 50       		.byte	0x50
 5089 0113 08       		.byte	0x8
 5090 0114 64       		.byte	0x64
 5091 0115 1E       		.byte	0x1e
 5092 0116 23       		.byte	0x23
 5093 0117 8D06     		.uleb128 0x30d
 5094 0119 F7       		.byte	0xf7
 5095 011a 25       		.uleb128 0x25
 5096 011b 0A       		.byte	0xa
 5097 011c 350C     		.2byte	0xc35
 5098 011e F7       		.byte	0xf7
 5099 011f 25       		.uleb128 0x25
 5100 0120 1B       		.byte	0x1b
 5101 0121 F7       		.byte	0xf7
 5102 0122 00       		.uleb128 0
 5103 0123 9F       		.byte	0x9f
 5104 0124 00000000 		.4byte	0
 5105 0128 00000000 		.4byte	0
 5106              	.LLST4:
 5107 012c 0C000000 		.4byte	.LVL1
 5108 0130 12000000 		.4byte	.LVL2
 5109 0134 0700     		.2byte	0x7
 5110 0136 72       		.byte	0x72
 5111 0137 00       		.sleb128 0
 5112 0138 0A       		.byte	0xa
 5113 0139 3F3F     		.2byte	0x3f3f
 5114 013b 1A       		.byte	0x1a
 5115 013c 9F       		.byte	0x9f
 5116 013d 12000000 		.4byte	.LVL2
 5117 0141 18000000 		.4byte	.LVL3
 5118 0145 0100     		.2byte	0x1
 5119 0147 53       		.byte	0x53
 5120 0148 20000000 		.4byte	.LVL4
 5121 014c 22000000 		.4byte	.LVL5
 5122 0150 0100     		.2byte	0x1
 5123 0152 53       		.byte	0x53
 5124 0153 00000000 		.4byte	0
 5125 0157 00000000 		.4byte	0
 5126              	.LLST5:
 5127 015b 18000000 		.4byte	.LVL3
 5128 015f 20000000 		.4byte	.LVL4
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 152


 5129 0163 0100     		.2byte	0x1
 5130 0165 52       		.byte	0x52
 5131 0166 50000000 		.4byte	.LVL6
 5132 016a 52000000 		.4byte	.LVL7
 5133 016e 0200     		.2byte	0x2
 5134 0170 37       		.byte	0x37
 5135 0171 9F       		.byte	0x9f
 5136 0172 9A000000 		.4byte	.LVL14
 5137 0176 9C000000 		.4byte	.LVL15
 5138 017a 0200     		.2byte	0x2
 5139 017c 30       		.byte	0x30
 5140 017d 9F       		.byte	0x9f
 5141 017e 00000000 		.4byte	0
 5142 0182 00000000 		.4byte	0
 5143              	.LLST6:
 5144 0186 06000000 		.4byte	.LVL21
 5145 018a 15000000 		.4byte	.LVL22-1
 5146 018e 0100     		.2byte	0x1
 5147 0190 50       		.byte	0x50
 5148 0191 00000000 		.4byte	0
 5149 0195 00000000 		.4byte	0
 5150              	.LLST7:
 5151 0199 08000000 		.4byte	.LVL23
 5152 019d 25000000 		.4byte	.LVL24-1
 5153 01a1 0100     		.2byte	0x1
 5154 01a3 50       		.byte	0x50
 5155 01a4 00000000 		.4byte	0
 5156 01a8 00000000 		.4byte	0
 5157              	.LLST8:
 5158 01ac 00000000 		.4byte	.LVL25
 5159 01b0 0A000000 		.4byte	.LVL26
 5160 01b4 0100     		.2byte	0x1
 5161 01b6 50       		.byte	0x50
 5162 01b7 0A000000 		.4byte	.LVL26
 5163 01bb 12000000 		.4byte	.LVL28
 5164 01bf 0100     		.2byte	0x1
 5165 01c1 54       		.byte	0x54
 5166 01c2 12000000 		.4byte	.LVL28
 5167 01c6 24000000 		.4byte	.LFE9
 5168 01ca 0400     		.2byte	0x4
 5169 01cc F3       		.byte	0xf3
 5170 01cd 01       		.uleb128 0x1
 5171 01ce 50       		.byte	0x50
 5172 01cf 9F       		.byte	0x9f
 5173 01d0 00000000 		.4byte	0
 5174 01d4 00000000 		.4byte	0
 5175              	.LLST9:
 5176 01d8 00000000 		.4byte	.LVL29
 5177 01dc 0A000000 		.4byte	.LVL30
 5178 01e0 0100     		.2byte	0x1
 5179 01e2 50       		.byte	0x50
 5180 01e3 0A000000 		.4byte	.LVL30
 5181 01e7 18000000 		.4byte	.LVL33
 5182 01eb 0100     		.2byte	0x1
 5183 01ed 54       		.byte	0x54
 5184 01ee 18000000 		.4byte	.LVL33
 5185 01f2 2E000000 		.4byte	.LVL38
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 153


 5186 01f6 0400     		.2byte	0x4
 5187 01f8 F3       		.byte	0xf3
 5188 01f9 01       		.uleb128 0x1
 5189 01fa 50       		.byte	0x50
 5190 01fb 9F       		.byte	0x9f
 5191 01fc 2E000000 		.4byte	.LVL38
 5192 0200 30000000 		.4byte	.LVL39
 5193 0204 0100     		.2byte	0x1
 5194 0206 50       		.byte	0x50
 5195 0207 30000000 		.4byte	.LVL39
 5196 020b 3C000000 		.4byte	.LFE10
 5197 020f 0100     		.2byte	0x1
 5198 0211 54       		.byte	0x54
 5199 0212 00000000 		.4byte	0
 5200 0216 00000000 		.4byte	0
 5201              	.LLST10:
 5202 021a 00000000 		.4byte	.LVL29
 5203 021e 0A000000 		.4byte	.LVL30
 5204 0222 0100     		.2byte	0x1
 5205 0224 51       		.byte	0x51
 5206 0225 0A000000 		.4byte	.LVL30
 5207 0229 1C000000 		.4byte	.LVL34
 5208 022d 0100     		.2byte	0x1
 5209 022f 55       		.byte	0x55
 5210 0230 1C000000 		.4byte	.LVL34
 5211 0234 2E000000 		.4byte	.LVL38
 5212 0238 0400     		.2byte	0x4
 5213 023a F3       		.byte	0xf3
 5214 023b 01       		.uleb128 0x1
 5215 023c 51       		.byte	0x51
 5216 023d 9F       		.byte	0x9f
 5217 023e 2E000000 		.4byte	.LVL38
 5218 0242 33000000 		.4byte	.LVL40-1
 5219 0246 0100     		.2byte	0x1
 5220 0248 51       		.byte	0x51
 5221 0249 33000000 		.4byte	.LVL40-1
 5222 024d 3C000000 		.4byte	.LFE10
 5223 0251 0100     		.2byte	0x1
 5224 0253 55       		.byte	0x55
 5225 0254 00000000 		.4byte	0
 5226 0258 00000000 		.4byte	0
 5227              	.LLST11:
 5228 025c 14000000 		.4byte	.LVL32
 5229 0260 1C000000 		.4byte	.LVL34
 5230 0264 0100     		.2byte	0x1
 5231 0266 55       		.byte	0x55
 5232 0267 1C000000 		.4byte	.LVL34
 5233 026b 2C000000 		.4byte	.LVL37
 5234 026f 0400     		.2byte	0x4
 5235 0271 F3       		.byte	0xf3
 5236 0272 01       		.uleb128 0x1
 5237 0273 51       		.byte	0x51
 5238 0274 9F       		.byte	0x9f
 5239 0275 00000000 		.4byte	0
 5240 0279 00000000 		.4byte	0
 5241              	.LLST12:
 5242 027d 14000000 		.4byte	.LVL32
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 154


 5243 0281 18000000 		.4byte	.LVL33
 5244 0285 0100     		.2byte	0x1
 5245 0287 54       		.byte	0x54
 5246 0288 18000000 		.4byte	.LVL33
 5247 028c 2C000000 		.4byte	.LVL37
 5248 0290 0400     		.2byte	0x4
 5249 0292 F3       		.byte	0xf3
 5250 0293 01       		.uleb128 0x1
 5251 0294 50       		.byte	0x50
 5252 0295 9F       		.byte	0x9f
 5253 0296 00000000 		.4byte	0
 5254 029a 00000000 		.4byte	0
 5255              	.LLST13:
 5256 029e 28000000 		.4byte	.LVL35
 5257 02a2 2A000000 		.4byte	.LVL36
 5258 02a6 0100     		.2byte	0x1
 5259 02a8 53       		.byte	0x53
 5260 02a9 2A000000 		.4byte	.LVL36
 5261 02ad 2C000000 		.4byte	.LVL37
 5262 02b1 0100     		.2byte	0x1
 5263 02b3 54       		.byte	0x54
 5264 02b4 00000000 		.4byte	0
 5265 02b8 00000000 		.4byte	0
 5266              	.LLST14:
 5267 02bc 00000000 		.4byte	.LVL41
 5268 02c0 04000000 		.4byte	.LVL42
 5269 02c4 0100     		.2byte	0x1
 5270 02c6 50       		.byte	0x50
 5271 02c7 04000000 		.4byte	.LVL42
 5272 02cb 14000000 		.4byte	.LFE11
 5273 02cf 0400     		.2byte	0x4
 5274 02d1 F3       		.byte	0xf3
 5275 02d2 01       		.uleb128 0x1
 5276 02d3 50       		.byte	0x50
 5277 02d4 9F       		.byte	0x9f
 5278 02d5 00000000 		.4byte	0
 5279 02d9 00000000 		.4byte	0
 5280              	.LLST15:
 5281 02dd 00000000 		.4byte	.LVL43
 5282 02e1 0C000000 		.4byte	.LVL44
 5283 02e5 0100     		.2byte	0x1
 5284 02e7 50       		.byte	0x50
 5285 02e8 0C000000 		.4byte	.LVL44
 5286 02ec 1C000000 		.4byte	.LVL47
 5287 02f0 0100     		.2byte	0x1
 5288 02f2 54       		.byte	0x54
 5289 02f3 1C000000 		.4byte	.LVL47
 5290 02f7 38000000 		.4byte	.LFE12
 5291 02fb 0400     		.2byte	0x4
 5292 02fd F3       		.byte	0xf3
 5293 02fe 01       		.uleb128 0x1
 5294 02ff 50       		.byte	0x50
 5295 0300 9F       		.byte	0x9f
 5296 0301 00000000 		.4byte	0
 5297 0305 00000000 		.4byte	0
 5298              	.LLST16:
 5299 0309 00000000 		.4byte	.LVL43
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 155


 5300 030d 0F000000 		.4byte	.LVL45-1
 5301 0311 0100     		.2byte	0x1
 5302 0313 51       		.byte	0x51
 5303 0314 0F000000 		.4byte	.LVL45-1
 5304 0318 22000000 		.4byte	.LVL48
 5305 031c 0100     		.2byte	0x1
 5306 031e 55       		.byte	0x55
 5307 031f 22000000 		.4byte	.LVL48
 5308 0323 38000000 		.4byte	.LFE12
 5309 0327 0400     		.2byte	0x4
 5310 0329 F3       		.byte	0xf3
 5311 032a 01       		.uleb128 0x1
 5312 032b 51       		.byte	0x51
 5313 032c 9F       		.byte	0x9f
 5314 032d 00000000 		.4byte	0
 5315 0331 00000000 		.4byte	0
 5316              	.LLST17:
 5317 0335 2C000000 		.4byte	.LVL49
 5318 0339 2E000000 		.4byte	.LVL50
 5319 033d 0100     		.2byte	0x1
 5320 033f 53       		.byte	0x53
 5321 0340 2E000000 		.4byte	.LVL50
 5322 0344 30000000 		.4byte	.LVL51
 5323 0348 0100     		.2byte	0x1
 5324 034a 54       		.byte	0x54
 5325 034b 00000000 		.4byte	0
 5326 034f 00000000 		.4byte	0
 5327              	.LLST18:
 5328 0353 00000000 		.4byte	.LVL52
 5329 0357 0A000000 		.4byte	.LVL53
 5330 035b 0100     		.2byte	0x1
 5331 035d 50       		.byte	0x50
 5332 035e 0A000000 		.4byte	.LVL53
 5333 0362 12000000 		.4byte	.LVL55
 5334 0366 0100     		.2byte	0x1
 5335 0368 54       		.byte	0x54
 5336 0369 12000000 		.4byte	.LVL55
 5337 036d 24000000 		.4byte	.LFE13
 5338 0371 0400     		.2byte	0x4
 5339 0373 F3       		.byte	0xf3
 5340 0374 01       		.uleb128 0x1
 5341 0375 50       		.byte	0x50
 5342 0376 9F       		.byte	0x9f
 5343 0377 00000000 		.4byte	0
 5344 037b 00000000 		.4byte	0
 5345              	.LLST19:
 5346 037f 1A000000 		.4byte	.LVL57
 5347 0383 20000000 		.4byte	.LVL58
 5348 0387 0200     		.2byte	0x2
 5349 0389 30       		.byte	0x30
 5350 038a 9F       		.byte	0x9f
 5351 038b 00000000 		.4byte	0
 5352 038f 00000000 		.4byte	0
 5353              	.LLST20:
 5354 0393 2A000000 		.4byte	.LVL59
 5355 0397 30000000 		.4byte	.LVL60
 5356 039b 0200     		.2byte	0x2
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 156


 5357 039d 31       		.byte	0x31
 5358 039e 9F       		.byte	0x9f
 5359 039f 00000000 		.4byte	0
 5360 03a3 00000000 		.4byte	0
 5361              	.LLST21:
 5362 03a7 3A000000 		.4byte	.LVL61
 5363 03ab 40000000 		.4byte	.LVL62
 5364 03af 0200     		.2byte	0x2
 5365 03b1 32       		.byte	0x32
 5366 03b2 9F       		.byte	0x9f
 5367 03b3 00000000 		.4byte	0
 5368 03b7 00000000 		.4byte	0
 5369              	.LLST22:
 5370 03bb 1A000000 		.4byte	.LVL64
 5371 03bf 20000000 		.4byte	.LVL65
 5372 03c3 0200     		.2byte	0x2
 5373 03c5 30       		.byte	0x30
 5374 03c6 9F       		.byte	0x9f
 5375 03c7 00000000 		.4byte	0
 5376 03cb 00000000 		.4byte	0
 5377              	.LLST23:
 5378 03cf 2A000000 		.4byte	.LVL66
 5379 03d3 30000000 		.4byte	.LVL67
 5380 03d7 0200     		.2byte	0x2
 5381 03d9 31       		.byte	0x31
 5382 03da 9F       		.byte	0x9f
 5383 03db 00000000 		.4byte	0
 5384 03df 00000000 		.4byte	0
 5385              	.LLST24:
 5386 03e3 3A000000 		.4byte	.LVL68
 5387 03e7 40000000 		.4byte	.LVL69
 5388 03eb 0200     		.2byte	0x2
 5389 03ed 32       		.byte	0x32
 5390 03ee 9F       		.byte	0x9f
 5391 03ef 00000000 		.4byte	0
 5392 03f3 00000000 		.4byte	0
 5393              	.LLST25:
 5394 03f7 00000000 		.4byte	.LVL70
 5395 03fb 22000000 		.4byte	.LVL77
 5396 03ff 0100     		.2byte	0x1
 5397 0401 50       		.byte	0x50
 5398 0402 22000000 		.4byte	.LVL77
 5399 0406 34000000 		.4byte	.LFE16
 5400 040a 0400     		.2byte	0x4
 5401 040c F3       		.byte	0xf3
 5402 040d 01       		.uleb128 0x1
 5403 040e 50       		.byte	0x50
 5404 040f 9F       		.byte	0x9f
 5405 0410 00000000 		.4byte	0
 5406 0414 00000000 		.4byte	0
 5407              	.LLST26:
 5408 0418 1E000000 		.4byte	.LVL75
 5409 041c 20000000 		.4byte	.LVL76
 5410 0420 0100     		.2byte	0x1
 5411 0422 51       		.byte	0x51
 5412 0423 20000000 		.4byte	.LVL76
 5413 0427 22000000 		.4byte	.LVL77
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 157


 5414 042b 0100     		.2byte	0x1
 5415 042d 53       		.byte	0x53
 5416 042e 22000000 		.4byte	.LVL77
 5417 0432 24000000 		.4byte	.LVL78
 5418 0436 0100     		.2byte	0x1
 5419 0438 50       		.byte	0x50
 5420 0439 00000000 		.4byte	0
 5421 043d 00000000 		.4byte	0
 5422              	.LLST27:
 5423 0441 0A000000 		.4byte	.LVL73
 5424 0445 0E000000 		.4byte	.LVL74
 5425 0449 1100     		.2byte	0x11
 5426 044b 73       		.byte	0x73
 5427 044c 00       		.sleb128 0
 5428 044d 39       		.byte	0x39
 5429 044e 25       		.byte	0x25
 5430 044f 71       		.byte	0x71
 5431 0450 00       		.sleb128 0
 5432 0451 31       		.byte	0x31
 5433 0452 25       		.byte	0x25
 5434 0453 21       		.byte	0x21
 5435 0454 72       		.byte	0x72
 5436 0455 00       		.sleb128 0
 5437 0456 41       		.byte	0x41
 5438 0457 25       		.byte	0x25
 5439 0458 21       		.byte	0x21
 5440 0459 31       		.byte	0x31
 5441 045a 1A       		.byte	0x1a
 5442 045b 9F       		.byte	0x9f
 5443 045c 00000000 		.4byte	0
 5444 0460 00000000 		.4byte	0
 5445              	.LLST28:
 5446 0464 00000000 		.4byte	.LVL79
 5447 0468 0C000000 		.4byte	.LVL80
 5448 046c 0100     		.2byte	0x1
 5449 046e 50       		.byte	0x50
 5450 046f 0C000000 		.4byte	.LVL80
 5451 0473 1C000000 		.4byte	.LVL83
 5452 0477 0100     		.2byte	0x1
 5453 0479 55       		.byte	0x55
 5454 047a 1C000000 		.4byte	.LVL83
 5455 047e 3C000000 		.4byte	.LFE18
 5456 0482 0400     		.2byte	0x4
 5457 0484 F3       		.byte	0xf3
 5458 0485 01       		.uleb128 0x1
 5459 0486 50       		.byte	0x50
 5460 0487 9F       		.byte	0x9f
 5461 0488 00000000 		.4byte	0
 5462 048c 00000000 		.4byte	0
 5463              	.LLST29:
 5464 0490 00000000 		.4byte	.LVL79
 5465 0494 0F000000 		.4byte	.LVL81-1
 5466 0498 0100     		.2byte	0x1
 5467 049a 51       		.byte	0x51
 5468 049b 0F000000 		.4byte	.LVL81-1
 5469 049f 30000000 		.4byte	.LVL88
 5470 04a3 0100     		.2byte	0x1
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 158


 5471 04a5 54       		.byte	0x54
 5472 04a6 30000000 		.4byte	.LVL88
 5473 04aa 3C000000 		.4byte	.LFE18
 5474 04ae 0400     		.2byte	0x4
 5475 04b0 F3       		.byte	0xf3
 5476 04b1 01       		.uleb128 0x1
 5477 04b2 51       		.byte	0x51
 5478 04b3 9F       		.byte	0x9f
 5479 04b4 00000000 		.4byte	0
 5480 04b8 00000000 		.4byte	0
 5481              	.LLST30:
 5482 04bc 24000000 		.4byte	.LVL84
 5483 04c0 26000000 		.4byte	.LVL85
 5484 04c4 0B00     		.2byte	0xb
 5485 04c6 0A       		.byte	0xa
 5486 04c7 FFFF     		.2byte	0xffff
 5487 04c9 75       		.byte	0x75
 5488 04ca 00       		.sleb128 0
 5489 04cb 24       		.byte	0x24
 5490 04cc 20       		.byte	0x20
 5491 04cd 73       		.byte	0x73
 5492 04ce 00       		.sleb128 0
 5493 04cf 1A       		.byte	0x1a
 5494 04d0 9F       		.byte	0x9f
 5495 04d1 26000000 		.4byte	.LVL85
 5496 04d5 28000000 		.4byte	.LVL86
 5497 04d9 0100     		.2byte	0x1
 5498 04db 53       		.byte	0x53
 5499 04dc 00000000 		.4byte	0
 5500 04e0 00000000 		.4byte	0
 5501              	.LLST31:
 5502 04e4 00000000 		.4byte	.LVL89
 5503 04e8 14000000 		.4byte	.LVL92
 5504 04ec 0100     		.2byte	0x1
 5505 04ee 50       		.byte	0x50
 5506 04ef 14000000 		.4byte	.LVL92
 5507 04f3 28000000 		.4byte	.LFE19
 5508 04f7 0400     		.2byte	0x4
 5509 04f9 F3       		.byte	0xf3
 5510 04fa 01       		.uleb128 0x1
 5511 04fb 50       		.byte	0x50
 5512 04fc 9F       		.byte	0x9f
 5513 04fd 00000000 		.4byte	0
 5514 0501 00000000 		.4byte	0
 5515              	.LLST32:
 5516 0505 0E000000 		.4byte	.LVL90
 5517 0509 10000000 		.4byte	.LVL91
 5518 050d 0100     		.2byte	0x1
 5519 050f 51       		.byte	0x51
 5520 0510 10000000 		.4byte	.LVL91
 5521 0514 18000000 		.4byte	.LVL93
 5522 0518 0100     		.2byte	0x1
 5523 051a 53       		.byte	0x53
 5524 051b 18000000 		.4byte	.LVL93
 5525 051f 1A000000 		.4byte	.LVL94
 5526 0523 0100     		.2byte	0x1
 5527 0525 50       		.byte	0x50
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 159


 5528 0526 00000000 		.4byte	0
 5529 052a 00000000 		.4byte	0
 5530              	.LLST33:
 5531 052e 00000000 		.4byte	.LVL95
 5532 0532 0A000000 		.4byte	.LVL96
 5533 0536 0100     		.2byte	0x1
 5534 0538 50       		.byte	0x50
 5535 0539 0A000000 		.4byte	.LVL96
 5536 053d 12000000 		.4byte	.LVL98
 5537 0541 0100     		.2byte	0x1
 5538 0543 54       		.byte	0x54
 5539 0544 12000000 		.4byte	.LVL98
 5540 0548 20000000 		.4byte	.LFE21
 5541 054c 0400     		.2byte	0x4
 5542 054e F3       		.byte	0xf3
 5543 054f 01       		.uleb128 0x1
 5544 0550 50       		.byte	0x50
 5545 0551 9F       		.byte	0x9f
 5546 0552 00000000 		.4byte	0
 5547 0556 00000000 		.4byte	0
 5548              	.LLST34:
 5549 055a 00000000 		.4byte	.LVL99
 5550 055e 10000000 		.4byte	.LVL100
 5551 0562 0100     		.2byte	0x1
 5552 0564 50       		.byte	0x50
 5553 0565 10000000 		.4byte	.LVL100
 5554 0569 18000000 		.4byte	.LVL103
 5555 056d 0400     		.2byte	0x4
 5556 056f F3       		.byte	0xf3
 5557 0570 01       		.uleb128 0x1
 5558 0571 50       		.byte	0x50
 5559 0572 9F       		.byte	0x9f
 5560 0573 18000000 		.4byte	.LVL103
 5561 0577 1C000000 		.4byte	.LVL104
 5562 057b 0100     		.2byte	0x1
 5563 057d 50       		.byte	0x50
 5564 057e 1C000000 		.4byte	.LVL104
 5565 0582 1E000000 		.4byte	.LVL105
 5566 0586 0400     		.2byte	0x4
 5567 0588 F3       		.byte	0xf3
 5568 0589 01       		.uleb128 0x1
 5569 058a 50       		.byte	0x50
 5570 058b 9F       		.byte	0x9f
 5571 058c 1E000000 		.4byte	.LVL105
 5572 0590 22000000 		.4byte	.LVL106
 5573 0594 0100     		.2byte	0x1
 5574 0596 50       		.byte	0x50
 5575 0597 22000000 		.4byte	.LVL106
 5576 059b 28000000 		.4byte	.LVL108
 5577 059f 0400     		.2byte	0x4
 5578 05a1 F3       		.byte	0xf3
 5579 05a2 01       		.uleb128 0x1
 5580 05a3 50       		.byte	0x50
 5581 05a4 9F       		.byte	0x9f
 5582 05a5 28000000 		.4byte	.LVL108
 5583 05a9 2C000000 		.4byte	.LVL109
 5584 05ad 0100     		.2byte	0x1
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 160


 5585 05af 50       		.byte	0x50
 5586 05b0 2C000000 		.4byte	.LVL109
 5587 05b4 38000000 		.4byte	.LFE22
 5588 05b8 0400     		.2byte	0x4
 5589 05ba F3       		.byte	0xf3
 5590 05bb 01       		.uleb128 0x1
 5591 05bc 50       		.byte	0x50
 5592 05bd 9F       		.byte	0x9f
 5593 05be 00000000 		.4byte	0
 5594 05c2 00000000 		.4byte	0
 5595              	.LLST35:
 5596 05c6 00000000 		.4byte	.LVL99
 5597 05ca 16000000 		.4byte	.LVL102
 5598 05ce 0200     		.2byte	0x2
 5599 05d0 30       		.byte	0x30
 5600 05d1 9F       		.byte	0x9f
 5601 05d2 16000000 		.4byte	.LVL102
 5602 05d6 18000000 		.4byte	.LVL103
 5603 05da 0100     		.2byte	0x1
 5604 05dc 50       		.byte	0x50
 5605 05dd 18000000 		.4byte	.LVL103
 5606 05e1 1C000000 		.4byte	.LVL104
 5607 05e5 0200     		.2byte	0x2
 5608 05e7 30       		.byte	0x30
 5609 05e8 9F       		.byte	0x9f
 5610 05e9 1C000000 		.4byte	.LVL104
 5611 05ed 1E000000 		.4byte	.LVL105
 5612 05f1 0100     		.2byte	0x1
 5613 05f3 50       		.byte	0x50
 5614 05f4 1E000000 		.4byte	.LVL105
 5615 05f8 26000000 		.4byte	.LVL107
 5616 05fc 0200     		.2byte	0x2
 5617 05fe 30       		.byte	0x30
 5618 05ff 9F       		.byte	0x9f
 5619 0600 26000000 		.4byte	.LVL107
 5620 0604 28000000 		.4byte	.LVL108
 5621 0608 0100     		.2byte	0x1
 5622 060a 50       		.byte	0x50
 5623 060b 28000000 		.4byte	.LVL108
 5624 060f 2E000000 		.4byte	.LVL110
 5625 0613 0200     		.2byte	0x2
 5626 0615 30       		.byte	0x30
 5627 0616 9F       		.byte	0x9f
 5628 0617 2E000000 		.4byte	.LVL110
 5629 061b 38000000 		.4byte	.LFE22
 5630 061f 0100     		.2byte	0x1
 5631 0621 50       		.byte	0x50
 5632 0622 00000000 		.4byte	0
 5633 0626 00000000 		.4byte	0
 5634              	.LLST36:
 5635 062a 34000000 		.4byte	.LVL114
 5636 062e 6C000000 		.4byte	.LVL118
 5637 0632 0100     		.2byte	0x1
 5638 0634 54       		.byte	0x54
 5639 0635 00000000 		.4byte	0
 5640 0639 00000000 		.4byte	0
 5641              	.LLST37:
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 161


 5642 063d 00000000 		.4byte	.LVL123
 5643 0641 07000000 		.4byte	.LVL124-1
 5644 0645 0100     		.2byte	0x1
 5645 0647 50       		.byte	0x50
 5646 0648 07000000 		.4byte	.LVL124-1
 5647 064c 1A000000 		.4byte	.LVL127
 5648 0650 0100     		.2byte	0x1
 5649 0652 55       		.byte	0x55
 5650 0653 1A000000 		.4byte	.LVL127
 5651 0657 24000000 		.4byte	.LVL128
 5652 065b 0900     		.2byte	0x9
 5653 065d 75       		.byte	0x75
 5654 065e 00       		.sleb128 0
 5655 065f 0C       		.byte	0xc
 5656 0660 04040400 		.4byte	0x40404
 5657 0664 1A       		.byte	0x1a
 5658 0665 9F       		.byte	0x9f
 5659 0666 24000000 		.4byte	.LVL128
 5660 066a 28000000 		.4byte	.LVL129
 5661 066e 0100     		.2byte	0x1
 5662 0670 50       		.byte	0x50
 5663 0671 28000000 		.4byte	.LVL129
 5664 0675 2C000000 		.4byte	.LVL130
 5665 0679 0900     		.2byte	0x9
 5666 067b 75       		.byte	0x75
 5667 067c 00       		.sleb128 0
 5668 067d 0C       		.byte	0xc
 5669 067e 04040400 		.4byte	0x40404
 5670 0682 1A       		.byte	0x1a
 5671 0683 9F       		.byte	0x9f
 5672 0684 38000000 		.4byte	.LVL134
 5673 0688 42000000 		.4byte	.LVL135
 5674 068c 0900     		.2byte	0x9
 5675 068e 75       		.byte	0x75
 5676 068f 00       		.sleb128 0
 5677 0690 0C       		.byte	0xc
 5678 0691 04040400 		.4byte	0x40404
 5679 0695 1A       		.byte	0x1a
 5680 0696 9F       		.byte	0x9f
 5681 0697 42000000 		.4byte	.LVL135
 5682 069b 46000000 		.4byte	.LVL136
 5683 069f 0100     		.2byte	0x1
 5684 06a1 50       		.byte	0x50
 5685 06a2 46000000 		.4byte	.LVL136
 5686 06a6 5C000000 		.4byte	.LFE24
 5687 06aa 0900     		.2byte	0x9
 5688 06ac 75       		.byte	0x75
 5689 06ad 00       		.sleb128 0
 5690 06ae 0C       		.byte	0xc
 5691 06af 04040400 		.4byte	0x40404
 5692 06b3 1A       		.byte	0x1a
 5693 06b4 9F       		.byte	0x9f
 5694 06b5 00000000 		.4byte	0
 5695 06b9 00000000 		.4byte	0
 5696              	.LLST38:
 5697 06bd 0C000000 		.4byte	.LVL125
 5698 06c1 36000000 		.4byte	.LVL133
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 162


 5699 06c5 0100     		.2byte	0x1
 5700 06c7 54       		.byte	0x54
 5701 06c8 38000000 		.4byte	.LVL134
 5702 06cc 5C000000 		.4byte	.LFE24
 5703 06d0 0100     		.2byte	0x1
 5704 06d2 54       		.byte	0x54
 5705 06d3 00000000 		.4byte	0
 5706 06d7 00000000 		.4byte	0
 5707              	.LLST39:
 5708 06db 16000000 		.4byte	.LVL126
 5709 06df 2C000000 		.4byte	.LVL130
 5710 06e3 0200     		.2byte	0x2
 5711 06e5 31       		.byte	0x31
 5712 06e6 9F       		.byte	0x9f
 5713 06e7 38000000 		.4byte	.LVL134
 5714 06eb 5C000000 		.4byte	.LFE24
 5715 06ef 0200     		.2byte	0x2
 5716 06f1 30       		.byte	0x30
 5717 06f2 9F       		.byte	0x9f
 5718 06f3 00000000 		.4byte	0
 5719 06f7 00000000 		.4byte	0
 5720              	.LLST40:
 5721 06fb 00000000 		.4byte	.LVL137
 5722 06ff 08000000 		.4byte	.LVL138
 5723 0703 0100     		.2byte	0x1
 5724 0705 50       		.byte	0x50
 5725 0706 08000000 		.4byte	.LVL138
 5726 070a 1C000000 		.4byte	.LFE25
 5727 070e 0400     		.2byte	0x4
 5728 0710 F3       		.byte	0xf3
 5729 0711 01       		.uleb128 0x1
 5730 0712 50       		.byte	0x50
 5731 0713 9F       		.byte	0x9f
 5732 0714 00000000 		.4byte	0
 5733 0718 00000000 		.4byte	0
 5734              	.LLST41:
 5735 071c 00000000 		.4byte	.LVL139
 5736 0720 0A000000 		.4byte	.LVL140
 5737 0724 0100     		.2byte	0x1
 5738 0726 50       		.byte	0x50
 5739 0727 0A000000 		.4byte	.LVL140
 5740 072b 12000000 		.4byte	.LVL143
 5741 072f 0400     		.2byte	0x4
 5742 0731 F3       		.byte	0xf3
 5743 0732 01       		.uleb128 0x1
 5744 0733 50       		.byte	0x50
 5745 0734 9F       		.byte	0x9f
 5746 0735 12000000 		.4byte	.LVL143
 5747 0739 14000000 		.4byte	.LVL144
 5748 073d 0100     		.2byte	0x1
 5749 073f 50       		.byte	0x50
 5750 0740 14000000 		.4byte	.LVL144
 5751 0744 20000000 		.4byte	.LFE26
 5752 0748 0400     		.2byte	0x4
 5753 074a F3       		.byte	0xf3
 5754 074b 01       		.uleb128 0x1
 5755 074c 50       		.byte	0x50
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 163


 5756 074d 9F       		.byte	0x9f
 5757 074e 00000000 		.4byte	0
 5758 0752 00000000 		.4byte	0
 5759              	.LLST42:
 5760 0756 00000000 		.4byte	.LVL139
 5761 075a 10000000 		.4byte	.LVL142
 5762 075e 0100     		.2byte	0x1
 5763 0760 51       		.byte	0x51
 5764 0761 10000000 		.4byte	.LVL142
 5765 0765 12000000 		.4byte	.LVL143
 5766 0769 0400     		.2byte	0x4
 5767 076b F3       		.byte	0xf3
 5768 076c 01       		.uleb128 0x1
 5769 076d 51       		.byte	0x51
 5770 076e 9F       		.byte	0x9f
 5771 076f 12000000 		.4byte	.LVL143
 5772 0773 17000000 		.4byte	.LVL145-1
 5773 0777 0100     		.2byte	0x1
 5774 0779 51       		.byte	0x51
 5775 077a 17000000 		.4byte	.LVL145-1
 5776 077e 20000000 		.4byte	.LFE26
 5777 0782 0400     		.2byte	0x4
 5778 0784 F3       		.byte	0xf3
 5779 0785 01       		.uleb128 0x1
 5780 0786 51       		.byte	0x51
 5781 0787 9F       		.byte	0x9f
 5782 0788 00000000 		.4byte	0
 5783 078c 00000000 		.4byte	0
 5784              	.LLST43:
 5785 0790 00000000 		.4byte	.LVL139
 5786 0794 0E000000 		.4byte	.LVL141
 5787 0798 0200     		.2byte	0x2
 5788 079a 30       		.byte	0x30
 5789 079b 9F       		.byte	0x9f
 5790 079c 0E000000 		.4byte	.LVL141
 5791 07a0 12000000 		.4byte	.LVL143
 5792 07a4 0100     		.2byte	0x1
 5793 07a6 50       		.byte	0x50
 5794 07a7 12000000 		.4byte	.LVL143
 5795 07ab 20000000 		.4byte	.LFE26
 5796 07af 0200     		.2byte	0x2
 5797 07b1 30       		.byte	0x30
 5798 07b2 9F       		.byte	0x9f
 5799 07b3 00000000 		.4byte	0
 5800 07b7 00000000 		.4byte	0
 5801              	.LLST44:
 5802 07bb 00000000 		.4byte	.LVL146
 5803 07bf 0A000000 		.4byte	.LVL147
 5804 07c3 0100     		.2byte	0x1
 5805 07c5 50       		.byte	0x50
 5806 07c6 0A000000 		.4byte	.LVL147
 5807 07ca 10000000 		.4byte	.LVL149
 5808 07ce 0400     		.2byte	0x4
 5809 07d0 F3       		.byte	0xf3
 5810 07d1 01       		.uleb128 0x1
 5811 07d2 50       		.byte	0x50
 5812 07d3 9F       		.byte	0x9f
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 164


 5813 07d4 10000000 		.4byte	.LVL149
 5814 07d8 12000000 		.4byte	.LVL150
 5815 07dc 0100     		.2byte	0x1
 5816 07de 50       		.byte	0x50
 5817 07df 12000000 		.4byte	.LVL150
 5818 07e3 20000000 		.4byte	.LFE27
 5819 07e7 0400     		.2byte	0x4
 5820 07e9 F3       		.byte	0xf3
 5821 07ea 01       		.uleb128 0x1
 5822 07eb 50       		.byte	0x50
 5823 07ec 9F       		.byte	0x9f
 5824 07ed 00000000 		.4byte	0
 5825 07f1 00000000 		.4byte	0
 5826              	.LLST45:
 5827 07f5 00000000 		.4byte	.LVL146
 5828 07f9 0E000000 		.4byte	.LVL148
 5829 07fd 0200     		.2byte	0x2
 5830 07ff 30       		.byte	0x30
 5831 0800 9F       		.byte	0x9f
 5832 0801 0E000000 		.4byte	.LVL148
 5833 0805 10000000 		.4byte	.LVL149
 5834 0809 0100     		.2byte	0x1
 5835 080b 50       		.byte	0x50
 5836 080c 10000000 		.4byte	.LVL149
 5837 0810 20000000 		.4byte	.LFE27
 5838 0814 0200     		.2byte	0x2
 5839 0816 30       		.byte	0x30
 5840 0817 9F       		.byte	0x9f
 5841 0818 00000000 		.4byte	0
 5842 081c 00000000 		.4byte	0
 5843              	.LLST46:
 5844 0820 00000000 		.4byte	.LVL152
 5845 0824 0A000000 		.4byte	.LVL153
 5846 0828 0100     		.2byte	0x1
 5847 082a 50       		.byte	0x50
 5848 082b 0A000000 		.4byte	.LVL153
 5849 082f 1E000000 		.4byte	.LVL154
 5850 0833 0400     		.2byte	0x4
 5851 0835 F3       		.byte	0xf3
 5852 0836 01       		.uleb128 0x1
 5853 0837 50       		.byte	0x50
 5854 0838 9F       		.byte	0x9f
 5855 0839 1E000000 		.4byte	.LVL154
 5856 083d 20000000 		.4byte	.LVL155
 5857 0841 0100     		.2byte	0x1
 5858 0843 50       		.byte	0x50
 5859 0844 20000000 		.4byte	.LVL155
 5860 0848 34000000 		.4byte	.LFE28
 5861 084c 0400     		.2byte	0x4
 5862 084e F3       		.byte	0xf3
 5863 084f 01       		.uleb128 0x1
 5864 0850 50       		.byte	0x50
 5865 0851 9F       		.byte	0x9f
 5866 0852 00000000 		.4byte	0
 5867 0856 00000000 		.4byte	0
 5868              	.LLST47:
 5869 085a 00000000 		.4byte	.LVL157
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 165


 5870 085e 0C000000 		.4byte	.LVL158
 5871 0862 0100     		.2byte	0x1
 5872 0864 50       		.byte	0x50
 5873 0865 0C000000 		.4byte	.LVL158
 5874 0869 16000000 		.4byte	.LVL159
 5875 086d 0400     		.2byte	0x4
 5876 086f F3       		.byte	0xf3
 5877 0870 01       		.uleb128 0x1
 5878 0871 50       		.byte	0x50
 5879 0872 9F       		.byte	0x9f
 5880 0873 16000000 		.4byte	.LVL159
 5881 0877 18000000 		.4byte	.LVL160
 5882 087b 0100     		.2byte	0x1
 5883 087d 50       		.byte	0x50
 5884 087e 18000000 		.4byte	.LVL160
 5885 0882 28000000 		.4byte	.LFE29
 5886 0886 0400     		.2byte	0x4
 5887 0888 F3       		.byte	0xf3
 5888 0889 01       		.uleb128 0x1
 5889 088a 50       		.byte	0x50
 5890 088b 9F       		.byte	0x9f
 5891 088c 00000000 		.4byte	0
 5892 0890 00000000 		.4byte	0
 5893              	.LLST48:
 5894 0894 00000000 		.4byte	.LVL168
 5895 0898 1A000000 		.4byte	.LVL171
 5896 089c 0100     		.2byte	0x1
 5897 089e 50       		.byte	0x50
 5898 089f 1A000000 		.4byte	.LVL171
 5899 08a3 1C000000 		.4byte	.LVL172
 5900 08a7 0400     		.2byte	0x4
 5901 08a9 F3       		.byte	0xf3
 5902 08aa 01       		.uleb128 0x1
 5903 08ab 50       		.byte	0x50
 5904 08ac 9F       		.byte	0x9f
 5905 08ad 1C000000 		.4byte	.LVL172
 5906 08b1 4E000000 		.4byte	.LVL177
 5907 08b5 0100     		.2byte	0x1
 5908 08b7 50       		.byte	0x50
 5909 08b8 4E000000 		.4byte	.LVL177
 5910 08bc 56000000 		.4byte	.LVL179
 5911 08c0 0400     		.2byte	0x4
 5912 08c2 F3       		.byte	0xf3
 5913 08c3 01       		.uleb128 0x1
 5914 08c4 50       		.byte	0x50
 5915 08c5 9F       		.byte	0x9f
 5916 08c6 56000000 		.4byte	.LVL179
 5917 08ca 6A000000 		.4byte	.LVL181
 5918 08ce 0100     		.2byte	0x1
 5919 08d0 50       		.byte	0x50
 5920 08d1 6A000000 		.4byte	.LVL181
 5921 08d5 7C000000 		.4byte	.LFE31
 5922 08d9 0400     		.2byte	0x4
 5923 08db F3       		.byte	0xf3
 5924 08dc 01       		.uleb128 0x1
 5925 08dd 50       		.byte	0x50
 5926 08de 9F       		.byte	0x9f
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 166


 5927 08df 00000000 		.4byte	0
 5928 08e3 00000000 		.4byte	0
 5929              	.LLST49:
 5930 08e7 06000000 		.4byte	.LVL169
 5931 08eb 1A000000 		.4byte	.LVL171
 5932 08ef 0200     		.2byte	0x2
 5933 08f1 30       		.byte	0x30
 5934 08f2 9F       		.byte	0x9f
 5935 08f3 56000000 		.4byte	.LVL179
 5936 08f7 7C000000 		.4byte	.LFE31
 5937 08fb 0200     		.2byte	0x2
 5938 08fd 30       		.byte	0x30
 5939 08fe 9F       		.byte	0x9f
 5940 08ff 00000000 		.4byte	0
 5941 0903 00000000 		.4byte	0
 5942              	.LLST50:
 5943 0907 12000000 		.4byte	.LVL170
 5944 090b 1A000000 		.4byte	.LVL171
 5945 090f 0200     		.2byte	0x2
 5946 0911 30       		.byte	0x30
 5947 0912 9F       		.byte	0x9f
 5948 0913 56000000 		.4byte	.LVL179
 5949 0917 68000000 		.4byte	.LVL180
 5950 091b 0200     		.2byte	0x2
 5951 091d 30       		.byte	0x30
 5952 091e 9F       		.byte	0x9f
 5953 091f 00000000 		.4byte	0
 5954 0923 00000000 		.4byte	0
 5955              	.LLST51:
 5956 0927 20000000 		.4byte	.LVL173
 5957 092b 56000000 		.4byte	.LVL179
 5958 092f 0200     		.2byte	0x2
 5959 0931 31       		.byte	0x31
 5960 0932 9F       		.byte	0x9f
 5961 0933 00000000 		.4byte	0
 5962 0937 00000000 		.4byte	0
 5963              	.LLST52:
 5964 093b 2E000000 		.4byte	.LVL174
 5965 093f 4C000000 		.4byte	.LVL176
 5966 0943 0200     		.2byte	0x2
 5967 0945 31       		.byte	0x31
 5968 0946 9F       		.byte	0x9f
 5969 0947 00000000 		.4byte	0
 5970 094b 00000000 		.4byte	0
 5971              	.LLST53:
 5972 094f 38000000 		.4byte	.LVL175
 5973 0953 4C000000 		.4byte	.LVL176
 5974 0957 0400     		.2byte	0x4
 5975 0959 0A       		.byte	0xa
 5976 095a 0008     		.2byte	0x800
 5977 095c 9F       		.byte	0x9f
 5978 095d 00000000 		.4byte	0
 5979 0961 00000000 		.4byte	0
 5980              	.LLST54:
 5981 0965 56000000 		.4byte	.LVL179
 5982 0969 68000000 		.4byte	.LVL180
 5983 096d 0200     		.2byte	0x2
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 167


 5984 096f 38       		.byte	0x38
 5985 0970 9F       		.byte	0x9f
 5986 0971 00000000 		.4byte	0
 5987 0975 00000000 		.4byte	0
 5988              	.LLST55:
 5989 0979 00000000 		.4byte	.LVL183
 5990 097d 0C000000 		.4byte	.LVL184
 5991 0981 0100     		.2byte	0x1
 5992 0983 50       		.byte	0x50
 5993 0984 0C000000 		.4byte	.LVL184
 5994 0988 12000000 		.4byte	.LVL186
 5995 098c 0100     		.2byte	0x1
 5996 098e 54       		.byte	0x54
 5997 098f 12000000 		.4byte	.LVL186
 5998 0993 14000000 		.4byte	.LVL188
 5999 0997 0400     		.2byte	0x4
 6000 0999 F3       		.byte	0xf3
 6001 099a 01       		.uleb128 0x1
 6002 099b 50       		.byte	0x50
 6003 099c 9F       		.byte	0x9f
 6004 099d 14000000 		.4byte	.LVL188
 6005 09a1 17000000 		.4byte	.LVL189-1
 6006 09a5 0100     		.2byte	0x1
 6007 09a7 50       		.byte	0x50
 6008 09a8 17000000 		.4byte	.LVL189-1
 6009 09ac 78000000 		.4byte	.LFE35
 6010 09b0 0100     		.2byte	0x1
 6011 09b2 54       		.byte	0x54
 6012 09b3 00000000 		.4byte	0
 6013 09b7 00000000 		.4byte	0
 6014              	.LLST56:
 6015 09bb 00000000 		.4byte	.LVL183
 6016 09bf 0C000000 		.4byte	.LVL184
 6017 09c3 0100     		.2byte	0x1
 6018 09c5 51       		.byte	0x51
 6019 09c6 0C000000 		.4byte	.LVL184
 6020 09ca 14000000 		.4byte	.LVL188
 6021 09ce 0400     		.2byte	0x4
 6022 09d0 F3       		.byte	0xf3
 6023 09d1 01       		.uleb128 0x1
 6024 09d2 51       		.byte	0x51
 6025 09d3 9F       		.byte	0x9f
 6026 09d4 14000000 		.4byte	.LVL188
 6027 09d8 17000000 		.4byte	.LVL189-1
 6028 09dc 0100     		.2byte	0x1
 6029 09de 51       		.byte	0x51
 6030 09df 17000000 		.4byte	.LVL189-1
 6031 09e3 78000000 		.4byte	.LFE35
 6032 09e7 0400     		.2byte	0x4
 6033 09e9 F3       		.byte	0xf3
 6034 09ea 01       		.uleb128 0x1
 6035 09eb 51       		.byte	0x51
 6036 09ec 9F       		.byte	0x9f
 6037 09ed 00000000 		.4byte	0
 6038 09f1 00000000 		.4byte	0
 6039              	.LLST57:
 6040 09f5 00000000 		.4byte	.LVL183
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 168


 6041 09f9 0C000000 		.4byte	.LVL184
 6042 09fd 0100     		.2byte	0x1
 6043 09ff 52       		.byte	0x52
 6044 0a00 0C000000 		.4byte	.LVL184
 6045 0a04 12000000 		.4byte	.LVL187
 6046 0a08 0100     		.2byte	0x1
 6047 0a0a 55       		.byte	0x55
 6048 0a0b 12000000 		.4byte	.LVL187
 6049 0a0f 14000000 		.4byte	.LVL188
 6050 0a13 0400     		.2byte	0x4
 6051 0a15 F3       		.byte	0xf3
 6052 0a16 01       		.uleb128 0x1
 6053 0a17 52       		.byte	0x52
 6054 0a18 9F       		.byte	0x9f
 6055 0a19 14000000 		.4byte	.LVL188
 6056 0a1d 17000000 		.4byte	.LVL189-1
 6057 0a21 0100     		.2byte	0x1
 6058 0a23 52       		.byte	0x52
 6059 0a24 17000000 		.4byte	.LVL189-1
 6060 0a28 78000000 		.4byte	.LFE35
 6061 0a2c 0100     		.2byte	0x1
 6062 0a2e 55       		.byte	0x55
 6063 0a2f 00000000 		.4byte	0
 6064 0a33 00000000 		.4byte	0
 6065              	.LLST58:
 6066 0a37 2C000000 		.4byte	.LVL190
 6067 0a3b 32000000 		.4byte	.LVL191
 6068 0a3f 0100     		.2byte	0x1
 6069 0a41 50       		.byte	0x50
 6070 0a42 36000000 		.4byte	.LVL192
 6071 0a46 3C000000 		.4byte	.LVL193
 6072 0a4a 0100     		.2byte	0x1
 6073 0a4c 50       		.byte	0x50
 6074 0a4d 40000000 		.4byte	.LVL194
 6075 0a51 46000000 		.4byte	.LVL195
 6076 0a55 0100     		.2byte	0x1
 6077 0a57 50       		.byte	0x50
 6078 0a58 00000000 		.4byte	0
 6079 0a5c 00000000 		.4byte	0
 6080              	.LLST59:
 6081 0a60 46000000 		.4byte	.LVL195
 6082 0a64 50000000 		.4byte	.LVL196
 6083 0a68 0100     		.2byte	0x1
 6084 0a6a 56       		.byte	0x56
 6085 0a6b 00000000 		.4byte	0
 6086 0a6f 00000000 		.4byte	0
 6087              	.LLST60:
 6088 0a73 00000000 		.4byte	.LVL198
 6089 0a77 0C000000 		.4byte	.LVL199
 6090 0a7b 0100     		.2byte	0x1
 6091 0a7d 50       		.byte	0x50
 6092 0a7e 0C000000 		.4byte	.LVL199
 6093 0a82 12000000 		.4byte	.LVL201
 6094 0a86 0100     		.2byte	0x1
 6095 0a88 54       		.byte	0x54
 6096 0a89 12000000 		.4byte	.LVL201
 6097 0a8d 14000000 		.4byte	.LVL203
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 169


 6098 0a91 0400     		.2byte	0x4
 6099 0a93 F3       		.byte	0xf3
 6100 0a94 01       		.uleb128 0x1
 6101 0a95 50       		.byte	0x50
 6102 0a96 9F       		.byte	0x9f
 6103 0a97 14000000 		.4byte	.LVL203
 6104 0a9b 17000000 		.4byte	.LVL204-1
 6105 0a9f 0100     		.2byte	0x1
 6106 0aa1 50       		.byte	0x50
 6107 0aa2 17000000 		.4byte	.LVL204-1
 6108 0aa6 3C000000 		.4byte	.LFE34
 6109 0aaa 0100     		.2byte	0x1
 6110 0aac 54       		.byte	0x54
 6111 0aad 00000000 		.4byte	0
 6112 0ab1 00000000 		.4byte	0
 6113              	.LLST61:
 6114 0ab5 00000000 		.4byte	.LVL198
 6115 0ab9 0C000000 		.4byte	.LVL199
 6116 0abd 0100     		.2byte	0x1
 6117 0abf 51       		.byte	0x51
 6118 0ac0 0C000000 		.4byte	.LVL199
 6119 0ac4 14000000 		.4byte	.LVL203
 6120 0ac8 0400     		.2byte	0x4
 6121 0aca F3       		.byte	0xf3
 6122 0acb 01       		.uleb128 0x1
 6123 0acc 51       		.byte	0x51
 6124 0acd 9F       		.byte	0x9f
 6125 0ace 14000000 		.4byte	.LVL203
 6126 0ad2 17000000 		.4byte	.LVL204-1
 6127 0ad6 0100     		.2byte	0x1
 6128 0ad8 51       		.byte	0x51
 6129 0ad9 17000000 		.4byte	.LVL204-1
 6130 0add 3C000000 		.4byte	.LFE34
 6131 0ae1 0400     		.2byte	0x4
 6132 0ae3 F3       		.byte	0xf3
 6133 0ae4 01       		.uleb128 0x1
 6134 0ae5 51       		.byte	0x51
 6135 0ae6 9F       		.byte	0x9f
 6136 0ae7 00000000 		.4byte	0
 6137 0aeb 00000000 		.4byte	0
 6138              	.LLST62:
 6139 0aef 00000000 		.4byte	.LVL198
 6140 0af3 0C000000 		.4byte	.LVL199
 6141 0af7 0100     		.2byte	0x1
 6142 0af9 52       		.byte	0x52
 6143 0afa 0C000000 		.4byte	.LVL199
 6144 0afe 12000000 		.4byte	.LVL202
 6145 0b02 0100     		.2byte	0x1
 6146 0b04 55       		.byte	0x55
 6147 0b05 12000000 		.4byte	.LVL202
 6148 0b09 14000000 		.4byte	.LVL203
 6149 0b0d 0400     		.2byte	0x4
 6150 0b0f F3       		.byte	0xf3
 6151 0b10 01       		.uleb128 0x1
 6152 0b11 52       		.byte	0x52
 6153 0b12 9F       		.byte	0x9f
 6154 0b13 14000000 		.4byte	.LVL203
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 170


 6155 0b17 17000000 		.4byte	.LVL204-1
 6156 0b1b 0100     		.2byte	0x1
 6157 0b1d 52       		.byte	0x52
 6158 0b1e 17000000 		.4byte	.LVL204-1
 6159 0b22 3C000000 		.4byte	.LFE34
 6160 0b26 0100     		.2byte	0x1
 6161 0b28 55       		.byte	0x55
 6162 0b29 00000000 		.4byte	0
 6163 0b2d 00000000 		.4byte	0
 6164              	.LLST63:
 6165 0b31 28000000 		.4byte	.LVL205
 6166 0b35 30000000 		.4byte	.LVL206
 6167 0b39 0100     		.2byte	0x1
 6168 0b3b 50       		.byte	0x50
 6169 0b3c 00000000 		.4byte	0
 6170 0b40 00000000 		.4byte	0
 6171              	.LLST64:
 6172 0b44 28000000 		.4byte	.LVL205
 6173 0b48 30000000 		.4byte	.LVL206
 6174 0b4c 0A00     		.2byte	0xa
 6175 0b4e 70       		.byte	0x70
 6176 0b4f 00       		.sleb128 0
 6177 0b50 75       		.byte	0x75
 6178 0b51 00       		.sleb128 0
 6179 0b52 22       		.byte	0x22
 6180 0b53 0A       		.byte	0xa
 6181 0b54 FFFF     		.2byte	0xffff
 6182 0b56 1A       		.byte	0x1a
 6183 0b57 9F       		.byte	0x9f
 6184 0b58 00000000 		.4byte	0
 6185 0b5c 00000000 		.4byte	0
 6186              		.section	.debug_aranges,"",%progbits
 6187 0000 14010000 		.4byte	0x114
 6188 0004 0200     		.2byte	0x2
 6189 0006 00000000 		.4byte	.Ldebug_info0
 6190 000a 04       		.byte	0x4
 6191 000b 00       		.byte	0
 6192 000c 0000     		.2byte	0
 6193 000e 0000     		.2byte	0
 6194 0010 00000000 		.4byte	.LFB0
 6195 0014 14000000 		.4byte	.LFE0-.LFB0
 6196 0018 00000000 		.4byte	.LFB2
 6197 001c 34000000 		.4byte	.LFE2-.LFB2
 6198 0020 00000000 		.4byte	.LFB3
 6199 0024 14000000 		.4byte	.LFE3-.LFB3
 6200 0028 00000000 		.4byte	.LFB4
 6201 002c F8000000 		.4byte	.LFE4-.LFB4
 6202 0030 00000000 		.4byte	.LFB6
 6203 0034 1C000000 		.4byte	.LFE6-.LFB6
 6204 0038 00000000 		.4byte	.LFB8
 6205 003c 30000000 		.4byte	.LFE8-.LFB8
 6206 0040 00000000 		.4byte	.LFB9
 6207 0044 24000000 		.4byte	.LFE9-.LFB9
 6208 0048 00000000 		.4byte	.LFB10
 6209 004c 3C000000 		.4byte	.LFE10-.LFB10
 6210 0050 00000000 		.4byte	.LFB11
 6211 0054 14000000 		.4byte	.LFE11-.LFB11
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 171


 6212 0058 00000000 		.4byte	.LFB12
 6213 005c 38000000 		.4byte	.LFE12-.LFB12
 6214 0060 00000000 		.4byte	.LFB13
 6215 0064 24000000 		.4byte	.LFE13-.LFB13
 6216 0068 00000000 		.4byte	.LFB14
 6217 006c 4C000000 		.4byte	.LFE14-.LFB14
 6218 0070 00000000 		.4byte	.LFB15
 6219 0074 4C000000 		.4byte	.LFE15-.LFB15
 6220 0078 00000000 		.4byte	.LFB16
 6221 007c 34000000 		.4byte	.LFE16-.LFB16
 6222 0080 00000000 		.4byte	.LFB17
 6223 0084 14000000 		.4byte	.LFE17-.LFB17
 6224 0088 00000000 		.4byte	.LFB18
 6225 008c 3C000000 		.4byte	.LFE18-.LFB18
 6226 0090 00000000 		.4byte	.LFB19
 6227 0094 28000000 		.4byte	.LFE19-.LFB19
 6228 0098 00000000 		.4byte	.LFB20
 6229 009c 10000000 		.4byte	.LFE20-.LFB20
 6230 00a0 00000000 		.4byte	.LFB21
 6231 00a4 20000000 		.4byte	.LFE21-.LFB21
 6232 00a8 00000000 		.4byte	.LFB22
 6233 00ac 38000000 		.4byte	.LFE22-.LFB22
 6234 00b0 00000000 		.4byte	.LFB1
 6235 00b4 C4000000 		.4byte	.LFE1-.LFB1
 6236 00b8 00000000 		.4byte	.LFB23
 6237 00bc 14000000 		.4byte	.LFE23-.LFB23
 6238 00c0 00000000 		.4byte	.LFB24
 6239 00c4 5C000000 		.4byte	.LFE24-.LFB24
 6240 00c8 00000000 		.4byte	.LFB25
 6241 00cc 1C000000 		.4byte	.LFE25-.LFB25
 6242 00d0 00000000 		.4byte	.LFB26
 6243 00d4 20000000 		.4byte	.LFE26-.LFB26
 6244 00d8 00000000 		.4byte	.LFB27
 6245 00dc 20000000 		.4byte	.LFE27-.LFB27
 6246 00e0 00000000 		.4byte	.LFB28
 6247 00e4 34000000 		.4byte	.LFE28-.LFB28
 6248 00e8 00000000 		.4byte	.LFB29
 6249 00ec 28000000 		.4byte	.LFE29-.LFB29
 6250 00f0 00000000 		.4byte	.LFB30
 6251 00f4 A8000000 		.4byte	.LFE30-.LFB30
 6252 00f8 00000000 		.4byte	.LFB31
 6253 00fc 7C000000 		.4byte	.LFE31-.LFB31
 6254 0100 00000000 		.4byte	.LFB35
 6255 0104 78000000 		.4byte	.LFE35-.LFB35
 6256 0108 00000000 		.4byte	.LFB34
 6257 010c 3C000000 		.4byte	.LFE34-.LFB34
 6258 0110 00000000 		.4byte	0
 6259 0114 00000000 		.4byte	0
 6260              		.section	.debug_ranges,"",%progbits
 6261              	.Ldebug_ranges0:
 6262 0000 00000000 		.4byte	.LBB76
 6263 0004 02000000 		.4byte	.LBE76
 6264 0008 04000000 		.4byte	.LBB80
 6265 000c 06000000 		.4byte	.LBE80
 6266 0010 0C000000 		.4byte	.LBB88
 6267 0014 0E000000 		.4byte	.LBE88
 6268 0018 00000000 		.4byte	0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 172


 6269 001c 00000000 		.4byte	0
 6270 0020 06000000 		.4byte	.LBB81
 6271 0024 08000000 		.4byte	.LBE81
 6272 0028 0A000000 		.4byte	.LBB87
 6273 002c 0C000000 		.4byte	.LBE87
 6274 0030 00000000 		.4byte	0
 6275 0034 00000000 		.4byte	0
 6276 0038 08000000 		.4byte	.LBB84
 6277 003c 0A000000 		.4byte	.LBE84
 6278 0040 10000000 		.4byte	.LBB89
 6279 0044 12000000 		.4byte	.LBE89
 6280 0048 00000000 		.4byte	0
 6281 004c 00000000 		.4byte	0
 6282 0050 00000000 		.4byte	.LBB110
 6283 0054 02000000 		.4byte	.LBE110
 6284 0058 04000000 		.4byte	.LBB113
 6285 005c 0E000000 		.4byte	.LBE113
 6286 0060 00000000 		.4byte	0
 6287 0064 00000000 		.4byte	0
 6288 0068 1C000000 		.4byte	.LBB116
 6289 006c 1E000000 		.4byte	.LBE116
 6290 0070 20000000 		.4byte	.LBB136
 6291 0074 3E000000 		.4byte	.LBE136
 6292 0078 6C000000 		.4byte	.LBB139
 6293 007c C4000000 		.4byte	.LBE139
 6294 0080 00000000 		.4byte	0
 6295 0084 00000000 		.4byte	0
 6296 0088 1C000000 		.4byte	.LBB118
 6297 008c 1E000000 		.4byte	.LBE118
 6298 0090 20000000 		.4byte	.LBB121
 6299 0094 24000000 		.4byte	.LBE121
 6300 0098 00000000 		.4byte	0
 6301 009c 00000000 		.4byte	0
 6302 00a0 7C000000 		.4byte	.LBB124
 6303 00a4 7E000000 		.4byte	.LBE124
 6304 00a8 80000000 		.4byte	.LBB127
 6305 00ac 82000000 		.4byte	.LBE127
 6306 00b0 00000000 		.4byte	0
 6307 00b4 00000000 		.4byte	0
 6308 00b8 8E000000 		.4byte	.LBB128
 6309 00bc 92000000 		.4byte	.LBE128
 6310 00c0 96000000 		.4byte	.LBB132
 6311 00c4 98000000 		.4byte	.LBE132
 6312 00c8 9A000000 		.4byte	.LBB133
 6313 00cc 9C000000 		.4byte	.LBE133
 6314 00d0 00000000 		.4byte	0
 6315 00d4 00000000 		.4byte	0
 6316 00d8 08000000 		.4byte	.LBB140
 6317 00dc 0A000000 		.4byte	.LBE140
 6318 00e0 0C000000 		.4byte	.LBB143
 6319 00e4 16000000 		.4byte	.LBE143
 6320 00e8 00000000 		.4byte	0
 6321 00ec 00000000 		.4byte	0
 6322 00f0 00000000 		.4byte	.LFB0
 6323 00f4 14000000 		.4byte	.LFE0
 6324 00f8 00000000 		.4byte	.LFB2
 6325 00fc 34000000 		.4byte	.LFE2
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 173


 6326 0100 00000000 		.4byte	.LFB3
 6327 0104 14000000 		.4byte	.LFE3
 6328 0108 00000000 		.4byte	.LFB4
 6329 010c F8000000 		.4byte	.LFE4
 6330 0110 00000000 		.4byte	.LFB6
 6331 0114 1C000000 		.4byte	.LFE6
 6332 0118 00000000 		.4byte	.LFB8
 6333 011c 30000000 		.4byte	.LFE8
 6334 0120 00000000 		.4byte	.LFB9
 6335 0124 24000000 		.4byte	.LFE9
 6336 0128 00000000 		.4byte	.LFB10
 6337 012c 3C000000 		.4byte	.LFE10
 6338 0130 00000000 		.4byte	.LFB11
 6339 0134 14000000 		.4byte	.LFE11
 6340 0138 00000000 		.4byte	.LFB12
 6341 013c 38000000 		.4byte	.LFE12
 6342 0140 00000000 		.4byte	.LFB13
 6343 0144 24000000 		.4byte	.LFE13
 6344 0148 00000000 		.4byte	.LFB14
 6345 014c 4C000000 		.4byte	.LFE14
 6346 0150 00000000 		.4byte	.LFB15
 6347 0154 4C000000 		.4byte	.LFE15
 6348 0158 00000000 		.4byte	.LFB16
 6349 015c 34000000 		.4byte	.LFE16
 6350 0160 00000000 		.4byte	.LFB17
 6351 0164 14000000 		.4byte	.LFE17
 6352 0168 00000000 		.4byte	.LFB18
 6353 016c 3C000000 		.4byte	.LFE18
 6354 0170 00000000 		.4byte	.LFB19
 6355 0174 28000000 		.4byte	.LFE19
 6356 0178 00000000 		.4byte	.LFB20
 6357 017c 10000000 		.4byte	.LFE20
 6358 0180 00000000 		.4byte	.LFB21
 6359 0184 20000000 		.4byte	.LFE21
 6360 0188 00000000 		.4byte	.LFB22
 6361 018c 38000000 		.4byte	.LFE22
 6362 0190 00000000 		.4byte	.LFB1
 6363 0194 C4000000 		.4byte	.LFE1
 6364 0198 00000000 		.4byte	.LFB23
 6365 019c 14000000 		.4byte	.LFE23
 6366 01a0 00000000 		.4byte	.LFB24
 6367 01a4 5C000000 		.4byte	.LFE24
 6368 01a8 00000000 		.4byte	.LFB25
 6369 01ac 1C000000 		.4byte	.LFE25
 6370 01b0 00000000 		.4byte	.LFB26
 6371 01b4 20000000 		.4byte	.LFE26
 6372 01b8 00000000 		.4byte	.LFB27
 6373 01bc 20000000 		.4byte	.LFE27
 6374 01c0 00000000 		.4byte	.LFB28
 6375 01c4 34000000 		.4byte	.LFE28
 6376 01c8 00000000 		.4byte	.LFB29
 6377 01cc 28000000 		.4byte	.LFE29
 6378 01d0 00000000 		.4byte	.LFB30
 6379 01d4 A8000000 		.4byte	.LFE30
 6380 01d8 00000000 		.4byte	.LFB31
 6381 01dc 7C000000 		.4byte	.LFE31
 6382 01e0 00000000 		.4byte	.LFB35
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 174


 6383 01e4 78000000 		.4byte	.LFE35
 6384 01e8 00000000 		.4byte	.LFB34
 6385 01ec 3C000000 		.4byte	.LFE34
 6386 01f0 00000000 		.4byte	0
 6387 01f4 00000000 		.4byte	0
 6388              		.section	.debug_line,"",%progbits
 6389              	.Ldebug_line0:
 6390 0000 80050000 		.section	.debug_str,"MS",%progbits,1
 6390      02005C00 
 6390      00000201 
 6390      FB0E0D00 
 6390      01010101 
 6391              	.LASF10:
 6392 0000 75696E74 		.ascii	"uint16\000"
 6392      313600
 6393              	.LASF90:
 6394 0007 43794578 		.ascii	"CyExitCriticalSection\000"
 6394      69744372 
 6394      69746963 
 6394      616C5365 
 6394      6374696F 
 6395              	.LASF88:
 6396 001d 636F756E 		.ascii	"counterIntMaskTbl\000"
 6396      74657249 
 6396      6E744D61 
 6396      736B5462 
 6396      6C00
 6397              	.LASF89:
 6398 002f 63795379 		.ascii	"cySysWdtCallback\000"
 6398      73576474 
 6398      43616C6C 
 6398      6261636B 
 6398      00
 6399              	.LASF24:
 6400 0040 43795379 		.ascii	"CySysWdtSetMode\000"
 6400      73576474 
 6400      5365744D 
 6400      6F646500 
 6401              	.LASF47:
 6402 0050 43795379 		.ascii	"CySysWdtUnlock\000"
 6402      73576474 
 6402      556E6C6F 
 6402      636B00
 6403              	.LASF80:
 6404 005f 43795379 		.ascii	"CySysWatchdogFeed\000"
 6404      73576174 
 6404      6368646F 
 6404      67466565 
 6404      6400
 6405              	.LASF22:
 6406 0071 636F756E 		.ascii	"counterNum\000"
 6406      7465724E 
 6406      756D00
 6407              	.LASF96:
 6408 007c 43795379 		.ascii	"CySysClkLfclkPosedgeCatch\000"
 6408      73436C6B 
 6408      4C66636C 
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 175


 6408      6B506F73 
 6408      65646765 
 6409              	.LASF62:
 6410 0096 43795379 		.ascii	"CySysWdtGetCascade\000"
 6410      73576474 
 6410      47657443 
 6410      61736361 
 6410      646500
 6411              	.LASF36:
 6412 00a9 43795379 		.ascii	"CySysClkIloStartMeasurement\000"
 6412      73436C6B 
 6412      496C6F53 
 6412      74617274 
 6412      4D656173 
 6413              	.LASF84:
 6414 00c5 6C66636C 		.ascii	"lfclkPosedgeWdtCounter0Enabled\000"
 6414      6B506F73 
 6414      65646765 
 6414      57647443 
 6414      6F756E74 
 6415              	.LASF8:
 6416 00e4 6C6F6E67 		.ascii	"long long unsigned int\000"
 6416      206C6F6E 
 6416      6720756E 
 6416      7369676E 
 6416      65642069 
 6417              	.LASF50:
 6418 00fb 43795379 		.ascii	"CySysWdtSetClearOnMatch\000"
 6418      73576474 
 6418      53657443 
 6418      6C656172 
 6418      4F6E4D61 
 6419              	.LASF7:
 6420 0113 6C6F6E67 		.ascii	"long long int\000"
 6420      206C6F6E 
 6420      6720696E 
 6420      7400
 6421              	.LASF1:
 6422 0121 7369676E 		.ascii	"signed char\000"
 6422      65642063 
 6422      68617200 
 6423              	.LASF73:
 6424 012d 66756E63 		.ascii	"function\000"
 6424      74696F6E 
 6424      00
 6425              	.LASF46:
 6426 0136 43795379 		.ascii	"CySysWdtLock\000"
 6426      73576474 
 6426      4C6F636B 
 6426      00
 6427              	.LASF20:
 6428 0143 63795764 		.ascii	"cyWdtCallback\000"
 6428      7443616C 
 6428      6C626163 
 6428      6B00
 6429              	.LASF100:
 6430 0151 43794465 		.ascii	"CyDelayUs\000"
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 176


 6430      6C617955 
 6430      7300
 6431              	.LASF19:
 6432 015b 63795F73 		.ascii	"cy_sys_timer_delaytype_enum\000"
 6432      79735F74 
 6432      696D6572 
 6432      5F64656C 
 6432      61797479 
 6433              	.LASF61:
 6434 0177 62697473 		.ascii	"bits\000"
 6434      00
 6435              	.LASF5:
 6436 017c 6C6F6E67 		.ascii	"long int\000"
 6436      20696E74 
 6436      00
 6437              	.LASF59:
 6438 0185 72656756 		.ascii	"regValue\000"
 6438      616C7565 
 6438      00
 6439              	.LASF9:
 6440 018e 75696E74 		.ascii	"uint8\000"
 6440      3800
 6441              	.LASF51:
 6442 0194 656E6162 		.ascii	"enable\000"
 6442      6C6500
 6443              	.LASF13:
 6444 019b 646F7562 		.ascii	"double\000"
 6444      6C6500
 6445              	.LASF39:
 6446 01a2 636F6D70 		.ascii	"compensatedCycles\000"
 6446      656E7361 
 6446      74656443 
 6446      79636C65 
 6446      7300
 6447              	.LASF68:
 6448 01b4 43795379 		.ascii	"CySysClkIloStop\000"
 6448      73436C6B 
 6448      496C6F53 
 6448      746F7000 
 6449              	.LASF40:
 6450 01c4 696C6F43 		.ascii	"iloCompensatedCycles\000"
 6450      6F6D7065 
 6450      6E736174 
 6450      65644379 
 6450      636C6573 
 6451              	.LASF30:
 6452 01d9 636F756E 		.ascii	"countersMask\000"
 6452      74657273 
 6452      4D61736B 
 6452      00
 6453              	.LASF11:
 6454 01e6 75696E74 		.ascii	"uint32\000"
 6454      333200
 6455              	.LASF37:
 6456 01ed 43795379 		.ascii	"CySysClkIloStopMeasurement\000"
 6456      73436C6B 
 6456      496C6F53 
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 177


 6456      746F704D 
 6456      65617375 
 6457              	.LASF74:
 6458 0208 70726576 		.ascii	"prevCallback\000"
 6458      43616C6C 
 6458      6261636B 
 6458      00
 6459              	.LASF58:
 6460 0215 43795379 		.ascii	"CySysWdtSetMatch\000"
 6460      73576474 
 6460      5365744D 
 6460      61746368 
 6460      00
 6461              	.LASF57:
 6462 0226 636F756E 		.ascii	"countersEnableStatus\000"
 6462      74657273 
 6462      456E6162 
 6462      6C655374 
 6462      61747573 
 6463              	.LASF87:
 6464 023b 77647449 		.ascii	"wdtIsrMask\000"
 6464      73724D61 
 6464      736B00
 6465              	.LASF25:
 6466 0246 43795379 		.ascii	"CySysWdtEnable\000"
 6466      73576474 
 6466      456E6162 
 6466      6C6500
 6467              	.LASF72:
 6468 0255 43795379 		.ascii	"CySysWdtSetInterruptCallback\000"
 6468      73576474 
 6468      53657449 
 6468      6E746572 
 6468      72757074 
 6469              	.LASF26:
 6470 0272 636F756E 		.ascii	"counterMask\000"
 6470      7465724D 
 6470      61736B00 
 6471              	.LASF53:
 6472 027e 43795379 		.ascii	"CySysWdtGetClearOnMatch\000"
 6472      73576474 
 6472      47657443 
 6472      6C656172 
 6472      4F6E4D61 
 6473              	.LASF0:
 6474 0296 756E7369 		.ascii	"unsigned int\000"
 6474      676E6564 
 6474      20696E74 
 6474      00
 6475              	.LASF66:
 6476 02a3 66697273 		.ascii	"firstCount\000"
 6476      74436F75 
 6476      6E7400
 6477              	.LASF76:
 6478 02ae 72657443 		.ascii	"retCallback\000"
 6478      616C6C62 
 6478      61636B00 
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 178


 6479              	.LASF38:
 6480 02ba 64657369 		.ascii	"desiredDelay\000"
 6480      72656444 
 6480      656C6179 
 6480      00
 6481              	.LASF6:
 6482 02c7 6C6F6E67 		.ascii	"long unsigned int\000"
 6482      20756E73 
 6482      69676E65 
 6482      6420696E 
 6482      7400
 6483              	.LASF45:
 6484 02d9 696E7465 		.ascii	"interruptState\000"
 6484      72727570 
 6484      74537461 
 6484      746500
 6485              	.LASF83:
 6486 02e8 6D617463 		.ascii	"matchValue\000"
 6486      6856616C 
 6486      756500
 6487              	.LASF97:
 6488 02f3 43795379 		.ascii	"CySysClkLfclkPosedgeRestore\000"
 6488      73436C6B 
 6488      4C66636C 
 6488      6B506F73 
 6488      65646765 
 6489              	.LASF77:
 6490 030f 43795379 		.ascii	"CySysWdtEnableCounterIsr\000"
 6490      73576474 
 6490      456E6162 
 6490      6C65436F 
 6490      756E7465 
 6491              	.LASF4:
 6492 0328 73686F72 		.ascii	"short unsigned int\000"
 6492      7420756E 
 6492      7369676E 
 6492      65642069 
 6492      6E7400
 6493              	.LASF49:
 6494 033b 43795379 		.ascii	"CySysWdtGetEnabledStatus\000"
 6494      73576474 
 6494      47657445 
 6494      6E61626C 
 6494      65645374 
 6495              	.LASF75:
 6496 0354 43795379 		.ascii	"CySysWdtGetInterruptCallback\000"
 6496      73576474 
 6496      47657449 
 6496      6E746572 
 6496      72757074 
 6497              	.LASF79:
 6498 0371 43795379 		.ascii	"CySysWdtIsr\000"
 6498      73576474 
 6498      49737200 
 6499              	.LASF95:
 6500 037d 43795379 		.ascii	"CySysClkIloStart\000"
 6500      73436C6B 
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 179


 6500      496C6F53 
 6500      74617274 
 6500      00
 6501              	.LASF60:
 6502 038e 43795379 		.ascii	"CySysWdtSetToggleBit\000"
 6502      73576474 
 6502      53657454 
 6502      6F67676C 
 6502      65426974 
 6503              	.LASF16:
 6504 03a3 72656733 		.ascii	"reg32\000"
 6504      3200
 6505              	.LASF99:
 6506 03a9 4379456E 		.ascii	"CyEnterCriticalSection\000"
 6506      74657243 
 6506      72697469 
 6506      63616C53 
 6506      65637469 
 6507              	.LASF44:
 6508 03c0 72657475 		.ascii	"returnStatus\000"
 6508      726E5374 
 6508      61747573 
 6508      00
 6509              	.LASF94:
 6510 03cd 433A5C55 		.ascii	"C:\\Users\\Marcus\\Documents\\GitHub\\Tarocco Lite\\"
 6510      73657273 
 6510      5C4D6172 
 6510      6375735C 
 6510      446F6375 
 6511 03fb 4669726D 		.ascii	"Firmware\\dcsd.cydsn\000"
 6511      77617265 
 6511      5C646373 
 6511      642E6379 
 6511      64736E00 
 6512              	.LASF21:
 6513 040f 73697A65 		.ascii	"sizetype\000"
 6513      74797065 
 6513      00
 6514              	.LASF64:
 6515 0418 43795379 		.ascii	"CySysWdtGetMatch\000"
 6515      73576474 
 6515      4765744D 
 6515      61746368 
 6515      00
 6516              	.LASF33:
 6517 0429 6D617463 		.ascii	"match\000"
 6517      6800
 6518              	.LASF17:
 6519 042f 43595F53 		.ascii	"CY_SYS_TIMER_WAIT\000"
 6519      59535F54 
 6519      494D4552 
 6519      5F574149 
 6519      5400
 6520              	.LASF43:
 6521 0441 63686563 		.ascii	"checkStatus\000"
 6521      6B537461 
 6521      74757300 
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 180


 6522              	.LASF98:
 6523 044d 63796465 		.ascii	"cydelayFreqHz\000"
 6523      6C617946 
 6523      72657148 
 6523      7A00
 6524              	.LASF29:
 6525 045b 43795379 		.ascii	"CySysWdtResetCounters\000"
 6525      73576474 
 6525      52657365 
 6525      74436F75 
 6525      6E746572 
 6526              	.LASF70:
 6527 0471 43795379 		.ascii	"CySysWdtClearInterrupt\000"
 6527      73576474 
 6527      436C6561 
 6527      72496E74 
 6527      65727275 
 6528              	.LASF12:
 6529 0488 666C6F61 		.ascii	"float\000"
 6529      7400
 6530              	.LASF31:
 6531 048e 43795379 		.ascii	"CySysTimerDelayUntilMatch\000"
 6531      7354696D 
 6531      65724465 
 6531      6C617955 
 6531      6E74696C 
 6532              	.LASF81:
 6533 04a8 43795379 		.ascii	"CySysTimerDelay\000"
 6533      7354696D 
 6533      65724465 
 6533      6C617900 
 6534              	.LASF27:
 6535 04b8 43795379 		.ascii	"CySysWdtLocked\000"
 6535      73576474 
 6535      4C6F636B 
 6535      656400
 6536              	.LASF91:
 6537 04c7 43794861 		.ascii	"CyHalt\000"
 6537      6C7400
 6538              	.LASF2:
 6539 04ce 756E7369 		.ascii	"unsigned char\000"
 6539      676E6564 
 6539      20636861 
 6539      7200
 6540              	.LASF42:
 6541 04dc 636F6D70 		.ascii	"compensateRunningStatus\000"
 6541      656E7361 
 6541      74655275 
 6541      6E6E696E 
 6541      67537461 
 6542              	.LASF67:
 6543 04f4 6C66636C 		.ascii	"lfclkPosedgeEnabledWdtCounter\000"
 6543      6B506F73 
 6543      65646765 
 6543      456E6162 
 6543      6C656457 
 6544              	.LASF82:
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 181


 6545 0512 64656C61 		.ascii	"delay\000"
 6545      7900
 6546              	.LASF3:
 6547 0518 73686F72 		.ascii	"short int\000"
 6547      7420696E 
 6547      7400
 6548              	.LASF32:
 6549 0522 64656C61 		.ascii	"delayType\000"
 6549      79547970 
 6549      6500
 6550              	.LASF54:
 6551 052c 43795379 		.ascii	"CySysWdtDisable\000"
 6551      73576474 
 6551      44697361 
 6551      626C6500 
 6552              	.LASF28:
 6553 053c 43795379 		.ascii	"CySysClkIloEnabled\000"
 6553      73436C6B 
 6553      496C6F45 
 6553      6E61626C 
 6553      656400
 6554              	.LASF69:
 6555 054f 43795379 		.ascii	"CySysWdtGetInterruptSource\000"
 6555      73576474 
 6555      47657449 
 6555      6E746572 
 6555      72757074 
 6556              	.LASF93:
 6557 056a 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLFClk.c\000"
 6557      72617465 
 6557      645F536F 
 6557      75726365 
 6557      5C50536F 
 6558              	.LASF78:
 6559 058b 43795379 		.ascii	"CySysWdtDisableCounterIsr\000"
 6559      73576474 
 6559      44697361 
 6559      626C6543 
 6559      6F756E74 
 6560              	.LASF14:
 6561 05a5 63686172 		.ascii	"char\000"
 6561      00
 6562              	.LASF23:
 6563 05aa 6D6F6465 		.ascii	"mode\000"
 6563      00
 6564              	.LASF65:
 6565 05af 43795379 		.ascii	"CySysWdtGetCount\000"
 6565      73576474 
 6565      47657443 
 6565      6F756E74 
 6565      00
 6566              	.LASF86:
 6567 05c0 64697361 		.ascii	"disableServicedIsr\000"
 6567      626C6553 
 6567      65727669 
 6567      63656449 
 6567      737200
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 182


 6568              	.LASF35:
 6569 05d3 746D7056 		.ascii	"tmpValue\000"
 6569      616C7565 
 6569      00
 6570              	.LASF55:
 6571 05dc 43795379 		.ascii	"CySysWdtSetCascade\000"
 6571      73576474 
 6571      53657443 
 6571      61736361 
 6571      646500
 6572              	.LASF48:
 6573 05ef 43795379 		.ascii	"CySysWdtGetMode\000"
 6573      73576474 
 6573      4765744D 
 6573      6F646500 
 6574              	.LASF41:
 6575 05ff 64657369 		.ascii	"desiredDelayInCounts\000"
 6575      72656444 
 6575      656C6179 
 6575      496E436F 
 6575      756E7473 
 6576              	.LASF34:
 6577 0614 636F6E66 		.ascii	"configRegValue\000"
 6577      69675265 
 6577      6756616C 
 6577      756500
 6578              	.LASF71:
 6579 0623 7764744C 		.ascii	"wdtLockState\000"
 6579      6F636B53 
 6579      74617465 
 6579      00
 6580              	.LASF85:
 6581 0630 6C66636C 		.ascii	"lfclkPosedgeWdtCounter0Mode\000"
 6581      6B506F73 
 6581      65646765 
 6581      57647443 
 6581      6F756E74 
 6582              	.LASF56:
 6583 064c 63617363 		.ascii	"cascadeMask\000"
 6583      6164654D 
 6583      61736B00 
 6584              	.LASF15:
 6585 0658 63797374 		.ascii	"cystatus\000"
 6585      61747573 
 6585      00
 6586              	.LASF92:
 6587 0661 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 6587      4320342E 
 6587      392E3320 
 6587      32303135 
 6587      30333033 
 6588 0694 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 6588      20726576 
 6588      6973696F 
 6588      6E203232 
 6588      31323230 
 6589 06c7 32202D73 		.ascii	"2 -std=c99 -ffunction-sections -ffat-lto-objects\000"
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccz4Lybr.s 			page 183


 6589      74643D63 
 6589      3939202D 
 6589      6666756E 
 6589      6374696F 
 6590              	.LASF63:
 6591 06f8 43795379 		.ascii	"CySysWdtGetToggleBit\000"
 6591      73576474 
 6591      47657454 
 6591      6F67676C 
 6591      65426974 
 6592              	.LASF52:
 6593 070d 43795379 		.ascii	"CySysClkIloCompensate\000"
 6593      73436C6B 
 6593      496C6F43 
 6593      6F6D7065 
 6593      6E736174 
 6594              	.LASF18:
 6595 0723 43595F53 		.ascii	"CY_SYS_TIMER_INTERRUPT\000"
 6595      59535F54 
 6595      494D4552 
 6595      5F494E54 
 6595      45525255 
 6596              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
