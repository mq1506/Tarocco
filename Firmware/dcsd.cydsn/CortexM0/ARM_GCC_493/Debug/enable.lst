ARM GAS  C:\Users\Marcus\AppData\Local\Temp\cc4QUfAq.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"enable.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.enable_SetDriveMode,"ax",%progbits
  18              		.align	2
  19              		.global	enable_SetDriveMode
  20              		.code	16
  21              		.thumb_func
  22              		.type	enable_SetDriveMode, %function
  23              	enable_SetDriveMode:
  24              	.LFB0:
  25              		.file 1 "Generated_Source\\PSoC4\\enable.c"
   1:Generated_Source\PSoC4/enable.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/enable.c **** * File Name: enable.c  
   3:Generated_Source\PSoC4/enable.c **** * Version 2.20
   4:Generated_Source\PSoC4/enable.c **** *
   5:Generated_Source\PSoC4/enable.c **** * Description:
   6:Generated_Source\PSoC4/enable.c **** *  This file contains API to enable firmware control of a Pins component.
   7:Generated_Source\PSoC4/enable.c **** *
   8:Generated_Source\PSoC4/enable.c **** ********************************************************************************
   9:Generated_Source\PSoC4/enable.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  10:Generated_Source\PSoC4/enable.c **** * You may use this file only in accordance with the license, terms, conditions, 
  11:Generated_Source\PSoC4/enable.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  12:Generated_Source\PSoC4/enable.c **** * the software package with which this file was provided.
  13:Generated_Source\PSoC4/enable.c **** *******************************************************************************/
  14:Generated_Source\PSoC4/enable.c **** 
  15:Generated_Source\PSoC4/enable.c **** #include "cytypes.h"
  16:Generated_Source\PSoC4/enable.c **** #include "enable.h"
  17:Generated_Source\PSoC4/enable.c **** 
  18:Generated_Source\PSoC4/enable.c **** 
  19:Generated_Source\PSoC4/enable.c **** #if defined(enable__PC)
  20:Generated_Source\PSoC4/enable.c ****     #define enable_SetP4PinDriveMode(shift, mode)  \
  21:Generated_Source\PSoC4/enable.c ****     do { \
  22:Generated_Source\PSoC4/enable.c ****         enable_PC =   (enable_PC & \
  23:Generated_Source\PSoC4/enable.c ****                                 (uint32)(~(uint32)(enable_DRIVE_MODE_IND_MASK << \
  24:Generated_Source\PSoC4/enable.c ****                                 (enable_DRIVE_MODE_BITS * (shift))))) | \
  25:Generated_Source\PSoC4/enable.c ****                                 (uint32)((uint32)(mode) << \
  26:Generated_Source\PSoC4/enable.c ****                                 (enable_DRIVE_MODE_BITS * (shift))); \
  27:Generated_Source\PSoC4/enable.c ****     } while (0)
  28:Generated_Source\PSoC4/enable.c **** #else
  29:Generated_Source\PSoC4/enable.c ****     #if (CY_PSOC4_4200L)
  30:Generated_Source\PSoC4/enable.c ****         #define enable_SetP4PinDriveMode(shift, mode)  \
  31:Generated_Source\PSoC4/enable.c ****         do { \
  32:Generated_Source\PSoC4/enable.c ****             enable_USBIO_CTRL_REG = (enable_USBIO_CTRL_REG & \
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\cc4QUfAq.s 			page 2


  33:Generated_Source\PSoC4/enable.c ****                                     (uint32)(~(uint32)(enable_DRIVE_MODE_IND_MASK << \
  34:Generated_Source\PSoC4/enable.c ****                                     (enable_DRIVE_MODE_BITS * (shift))))) | \
  35:Generated_Source\PSoC4/enable.c ****                                     (uint32)((uint32)(mode) << \
  36:Generated_Source\PSoC4/enable.c ****                                     (enable_DRIVE_MODE_BITS * (shift))); \
  37:Generated_Source\PSoC4/enable.c ****         } while (0)
  38:Generated_Source\PSoC4/enable.c ****     #endif
  39:Generated_Source\PSoC4/enable.c **** #endif
  40:Generated_Source\PSoC4/enable.c ****   
  41:Generated_Source\PSoC4/enable.c **** 
  42:Generated_Source\PSoC4/enable.c **** #if defined(enable__PC) || (CY_PSOC4_4200L) 
  43:Generated_Source\PSoC4/enable.c ****     /*******************************************************************************
  44:Generated_Source\PSoC4/enable.c ****     * Function Name: enable_SetDriveMode
  45:Generated_Source\PSoC4/enable.c ****     ****************************************************************************//**
  46:Generated_Source\PSoC4/enable.c ****     *
  47:Generated_Source\PSoC4/enable.c ****     * \brief Sets the drive mode for each of the Pins component's pins.
  48:Generated_Source\PSoC4/enable.c ****     * 
  49:Generated_Source\PSoC4/enable.c ****     * <b>Note</b> This affects all pins in the Pins component instance. Use the
  50:Generated_Source\PSoC4/enable.c ****     * Per-Pin APIs if you wish to control individual pin's drive modes.
  51:Generated_Source\PSoC4/enable.c ****     *
  52:Generated_Source\PSoC4/enable.c ****     * <b>Note</b> USBIOs have limited drive functionality. Refer to the Drive Mode
  53:Generated_Source\PSoC4/enable.c ****     * parameter for more information.
  54:Generated_Source\PSoC4/enable.c ****     *
  55:Generated_Source\PSoC4/enable.c ****     * \param mode
  56:Generated_Source\PSoC4/enable.c ****     *  Mode for the selected signals. Valid options are documented in 
  57:Generated_Source\PSoC4/enable.c ****     *  \ref driveMode.
  58:Generated_Source\PSoC4/enable.c ****     *
  59:Generated_Source\PSoC4/enable.c ****     * \return
  60:Generated_Source\PSoC4/enable.c ****     *  None
  61:Generated_Source\PSoC4/enable.c ****     *
  62:Generated_Source\PSoC4/enable.c ****     * \sideeffect
  63:Generated_Source\PSoC4/enable.c ****     *  If you use read-modify-write operations that are not atomic, the ISR can
  64:Generated_Source\PSoC4/enable.c ****     *  cause corruption of this function. An ISR that interrupts this function 
  65:Generated_Source\PSoC4/enable.c ****     *  and performs writes to the Pins component Drive Mode registers can cause 
  66:Generated_Source\PSoC4/enable.c ****     *  corrupted port data. To avoid this issue, you should either use the Per-Pin
  67:Generated_Source\PSoC4/enable.c ****     *  APIs (primary method) or disable interrupts around this function.
  68:Generated_Source\PSoC4/enable.c ****     *
  69:Generated_Source\PSoC4/enable.c ****     * \funcusage
  70:Generated_Source\PSoC4/enable.c ****     *  \snippet enable_SUT.c usage_enable_SetDriveMode
  71:Generated_Source\PSoC4/enable.c ****     *******************************************************************************/
  72:Generated_Source\PSoC4/enable.c ****     void enable_SetDriveMode(uint8 mode)
  73:Generated_Source\PSoC4/enable.c ****     {
  26              		.loc 1 73 0
  27              		.cfi_startproc
  28              	.LVL0:
  74:Generated_Source\PSoC4/enable.c **** 		enable_SetP4PinDriveMode(enable__0__SHIFT, mode);
  29              		.loc 1 74 0
  30 0000 3821     		mov	r1, #56
  31 0002 034A     		ldr	r2, .L2
  32 0004 C000     		lsl	r0, r0, #3
  33              	.LVL1:
  34 0006 1368     		ldr	r3, [r2]
  75:Generated_Source\PSoC4/enable.c ****     }
  35              		.loc 1 75 0
  36              		@ sp needed
  74:Generated_Source\PSoC4/enable.c **** 		enable_SetP4PinDriveMode(enable__0__SHIFT, mode);
  37              		.loc 1 74 0
  38 0008 8B43     		bic	r3, r1
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\cc4QUfAq.s 			page 3


  39 000a 1843     		orr	r0, r3
  40 000c 1060     		str	r0, [r2]
  41              		.loc 1 75 0
  42 000e 7047     		bx	lr
  43              	.L3:
  44              		.align	2
  45              	.L2:
  46 0010 08010440 		.word	1074004232
  47              		.cfi_endproc
  48              	.LFE0:
  49              		.size	enable_SetDriveMode, .-enable_SetDriveMode
  50              		.section	.text.enable_Write,"ax",%progbits
  51              		.align	2
  52              		.global	enable_Write
  53              		.code	16
  54              		.thumb_func
  55              		.type	enable_Write, %function
  56              	enable_Write:
  57              	.LFB1:
  76:Generated_Source\PSoC4/enable.c **** #endif
  77:Generated_Source\PSoC4/enable.c **** 
  78:Generated_Source\PSoC4/enable.c **** 
  79:Generated_Source\PSoC4/enable.c **** /*******************************************************************************
  80:Generated_Source\PSoC4/enable.c **** * Function Name: enable_Write
  81:Generated_Source\PSoC4/enable.c **** ****************************************************************************//**
  82:Generated_Source\PSoC4/enable.c **** *
  83:Generated_Source\PSoC4/enable.c **** * \brief Writes the value to the physical port (data output register), masking
  84:Generated_Source\PSoC4/enable.c **** *  and shifting the bits appropriately. 
  85:Generated_Source\PSoC4/enable.c **** *
  86:Generated_Source\PSoC4/enable.c **** * The data output register controls the signal applied to the physical pin in 
  87:Generated_Source\PSoC4/enable.c **** * conjunction with the drive mode parameter. This function avoids changing 
  88:Generated_Source\PSoC4/enable.c **** * other bits in the port by using the appropriate method (read-modify-write or
  89:Generated_Source\PSoC4/enable.c **** * bit banding).
  90:Generated_Source\PSoC4/enable.c **** *
  91:Generated_Source\PSoC4/enable.c **** * <b>Note</b> This function should not be used on a hardware digital output pin 
  92:Generated_Source\PSoC4/enable.c **** * as it is driven by the hardware signal attached to it.
  93:Generated_Source\PSoC4/enable.c **** *
  94:Generated_Source\PSoC4/enable.c **** * \param value
  95:Generated_Source\PSoC4/enable.c **** *  Value to write to the component instance.
  96:Generated_Source\PSoC4/enable.c **** *
  97:Generated_Source\PSoC4/enable.c **** * \return 
  98:Generated_Source\PSoC4/enable.c **** *  None 
  99:Generated_Source\PSoC4/enable.c **** *
 100:Generated_Source\PSoC4/enable.c **** * \sideeffect
 101:Generated_Source\PSoC4/enable.c **** *  If you use read-modify-write operations that are not atomic; the Interrupt 
 102:Generated_Source\PSoC4/enable.c **** *  Service Routines (ISR) can cause corruption of this function. An ISR that 
 103:Generated_Source\PSoC4/enable.c **** *  interrupts this function and performs writes to the Pins component data 
 104:Generated_Source\PSoC4/enable.c **** *  register can cause corrupted port data. To avoid this issue, you should 
 105:Generated_Source\PSoC4/enable.c **** *  either use the Per-Pin APIs (primary method) or disable interrupts around 
 106:Generated_Source\PSoC4/enable.c **** *  this function.
 107:Generated_Source\PSoC4/enable.c **** *
 108:Generated_Source\PSoC4/enable.c **** * \funcusage
 109:Generated_Source\PSoC4/enable.c **** *  \snippet enable_SUT.c usage_enable_Write
 110:Generated_Source\PSoC4/enable.c **** *******************************************************************************/
 111:Generated_Source\PSoC4/enable.c **** void enable_Write(uint8 value)
 112:Generated_Source\PSoC4/enable.c **** {
  58              		.loc 1 112 0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\cc4QUfAq.s 			page 4


  59              		.cfi_startproc
  60              	.LVL2:
  61              		.loc 1 112 0
  62 0000 031C     		mov	r3, r0
 113:Generated_Source\PSoC4/enable.c ****     uint8 drVal = (uint8)(enable_DR & (uint8)(~enable_MASK));
  63              		.loc 1 113 0
  64 0002 0220     		mov	r0, #2
  65              	.LVL3:
  66 0004 0449     		ldr	r1, .L5
 114:Generated_Source\PSoC4/enable.c ****     drVal = (drVal | ((uint8)(value << enable_SHIFT) & enable_MASK));
  67              		.loc 1 114 0
  68 0006 5B00     		lsl	r3, r3, #1
 113:Generated_Source\PSoC4/enable.c ****     uint8 drVal = (uint8)(enable_DR & (uint8)(~enable_MASK));
  69              		.loc 1 113 0
  70 0008 0A68     		ldr	r2, [r1]
 115:Generated_Source\PSoC4/enable.c ****     enable_DR = (uint32)drVal;
 116:Generated_Source\PSoC4/enable.c **** }
  71              		.loc 1 116 0
  72              		@ sp needed
 113:Generated_Source\PSoC4/enable.c ****     drVal = (drVal | ((uint8)(value << enable_SHIFT) & enable_MASK));
  73              		.loc 1 113 0
  74 000a 8243     		bic	r2, r0
  75 000c D2B2     		uxtb	r2, r2
 114:Generated_Source\PSoC4/enable.c ****     drVal = (drVal | ((uint8)(value << enable_SHIFT) & enable_MASK));
  76              		.loc 1 114 0
  77 000e 1840     		and	r0, r3
 115:Generated_Source\PSoC4/enable.c ****     enable_DR = (uint32)drVal;
  78              		.loc 1 115 0
  79 0010 1043     		orr	r0, r2
  80 0012 0860     		str	r0, [r1]
  81              		.loc 1 116 0
  82 0014 7047     		bx	lr
  83              	.L6:
  84 0016 C046     		.align	2
  85              	.L5:
  86 0018 00010440 		.word	1074004224
  87              		.cfi_endproc
  88              	.LFE1:
  89              		.size	enable_Write, .-enable_Write
  90              		.section	.text.enable_Read,"ax",%progbits
  91              		.align	2
  92              		.global	enable_Read
  93              		.code	16
  94              		.thumb_func
  95              		.type	enable_Read, %function
  96              	enable_Read:
  97              	.LFB2:
 117:Generated_Source\PSoC4/enable.c **** 
 118:Generated_Source\PSoC4/enable.c **** 
 119:Generated_Source\PSoC4/enable.c **** /*******************************************************************************
 120:Generated_Source\PSoC4/enable.c **** * Function Name: enable_Read
 121:Generated_Source\PSoC4/enable.c **** ****************************************************************************//**
 122:Generated_Source\PSoC4/enable.c **** *
 123:Generated_Source\PSoC4/enable.c **** * \brief Reads the associated physical port (pin status register) and masks 
 124:Generated_Source\PSoC4/enable.c **** *  the required bits according to the width and bit position of the component
 125:Generated_Source\PSoC4/enable.c **** *  instance. 
 126:Generated_Source\PSoC4/enable.c **** *
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\cc4QUfAq.s 			page 5


 127:Generated_Source\PSoC4/enable.c **** * The pin's status register returns the current logic level present on the 
 128:Generated_Source\PSoC4/enable.c **** * physical pin.
 129:Generated_Source\PSoC4/enable.c **** *
 130:Generated_Source\PSoC4/enable.c **** * \return 
 131:Generated_Source\PSoC4/enable.c **** *  The current value for the pins in the component as a right justified number.
 132:Generated_Source\PSoC4/enable.c **** *
 133:Generated_Source\PSoC4/enable.c **** * \funcusage
 134:Generated_Source\PSoC4/enable.c **** *  \snippet enable_SUT.c usage_enable_Read  
 135:Generated_Source\PSoC4/enable.c **** *******************************************************************************/
 136:Generated_Source\PSoC4/enable.c **** uint8 enable_Read(void)
 137:Generated_Source\PSoC4/enable.c **** {
  98              		.loc 1 137 0
  99              		.cfi_startproc
 138:Generated_Source\PSoC4/enable.c ****     return (uint8)((enable_PS & enable_MASK) >> enable_SHIFT);
 100              		.loc 1 138 0
 101 0000 024B     		ldr	r3, .L8
 139:Generated_Source\PSoC4/enable.c **** }
 102              		.loc 1 139 0
 103              		@ sp needed
 138:Generated_Source\PSoC4/enable.c ****     return (uint8)((enable_PS & enable_MASK) >> enable_SHIFT);
 104              		.loc 1 138 0
 105 0002 1868     		ldr	r0, [r3]
 106 0004 8007     		lsl	r0, r0, #30
 107 0006 C00F     		lsr	r0, r0, #31
 108              		.loc 1 139 0
 109 0008 7047     		bx	lr
 110              	.L9:
 111 000a C046     		.align	2
 112              	.L8:
 113 000c 04010440 		.word	1074004228
 114              		.cfi_endproc
 115              	.LFE2:
 116              		.size	enable_Read, .-enable_Read
 117              		.section	.text.enable_ReadDataReg,"ax",%progbits
 118              		.align	2
 119              		.global	enable_ReadDataReg
 120              		.code	16
 121              		.thumb_func
 122              		.type	enable_ReadDataReg, %function
 123              	enable_ReadDataReg:
 124              	.LFB3:
 140:Generated_Source\PSoC4/enable.c **** 
 141:Generated_Source\PSoC4/enable.c **** 
 142:Generated_Source\PSoC4/enable.c **** /*******************************************************************************
 143:Generated_Source\PSoC4/enable.c **** * Function Name: enable_ReadDataReg
 144:Generated_Source\PSoC4/enable.c **** ****************************************************************************//**
 145:Generated_Source\PSoC4/enable.c **** *
 146:Generated_Source\PSoC4/enable.c **** * \brief Reads the associated physical port's data output register and masks 
 147:Generated_Source\PSoC4/enable.c **** *  the correct bits according to the width and bit position of the component 
 148:Generated_Source\PSoC4/enable.c **** *  instance. 
 149:Generated_Source\PSoC4/enable.c **** *
 150:Generated_Source\PSoC4/enable.c **** * The data output register controls the signal applied to the physical pin in 
 151:Generated_Source\PSoC4/enable.c **** * conjunction with the drive mode parameter. This is not the same as the 
 152:Generated_Source\PSoC4/enable.c **** * preferred enable_Read() API because the 
 153:Generated_Source\PSoC4/enable.c **** * enable_ReadDataReg() reads the data register instead of the status 
 154:Generated_Source\PSoC4/enable.c **** * register. For output pins this is a useful function to determine the value 
 155:Generated_Source\PSoC4/enable.c **** * just written to the pin.
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\cc4QUfAq.s 			page 6


 156:Generated_Source\PSoC4/enable.c **** *
 157:Generated_Source\PSoC4/enable.c **** * \return 
 158:Generated_Source\PSoC4/enable.c **** *  The current value of the data register masked and shifted into a right 
 159:Generated_Source\PSoC4/enable.c **** *  justified number for the component instance.
 160:Generated_Source\PSoC4/enable.c **** *
 161:Generated_Source\PSoC4/enable.c **** * \funcusage
 162:Generated_Source\PSoC4/enable.c **** *  \snippet enable_SUT.c usage_enable_ReadDataReg 
 163:Generated_Source\PSoC4/enable.c **** *******************************************************************************/
 164:Generated_Source\PSoC4/enable.c **** uint8 enable_ReadDataReg(void)
 165:Generated_Source\PSoC4/enable.c **** {
 125              		.loc 1 165 0
 126              		.cfi_startproc
 166:Generated_Source\PSoC4/enable.c ****     return (uint8)((enable_DR & enable_MASK) >> enable_SHIFT);
 127              		.loc 1 166 0
 128 0000 024B     		ldr	r3, .L11
 167:Generated_Source\PSoC4/enable.c **** }
 129              		.loc 1 167 0
 130              		@ sp needed
 166:Generated_Source\PSoC4/enable.c ****     return (uint8)((enable_DR & enable_MASK) >> enable_SHIFT);
 131              		.loc 1 166 0
 132 0002 1868     		ldr	r0, [r3]
 133 0004 8007     		lsl	r0, r0, #30
 134 0006 C00F     		lsr	r0, r0, #31
 135              		.loc 1 167 0
 136 0008 7047     		bx	lr
 137              	.L12:
 138 000a C046     		.align	2
 139              	.L11:
 140 000c 00010440 		.word	1074004224
 141              		.cfi_endproc
 142              	.LFE3:
 143              		.size	enable_ReadDataReg, .-enable_ReadDataReg
 144              		.section	.text.enable_SetInterruptMode,"ax",%progbits
 145              		.align	2
 146              		.global	enable_SetInterruptMode
 147              		.code	16
 148              		.thumb_func
 149              		.type	enable_SetInterruptMode, %function
 150              	enable_SetInterruptMode:
 151              	.LFB4:
 168:Generated_Source\PSoC4/enable.c **** 
 169:Generated_Source\PSoC4/enable.c **** 
 170:Generated_Source\PSoC4/enable.c **** /*******************************************************************************
 171:Generated_Source\PSoC4/enable.c **** * Function Name: enable_SetInterruptMode
 172:Generated_Source\PSoC4/enable.c **** ****************************************************************************//**
 173:Generated_Source\PSoC4/enable.c **** *
 174:Generated_Source\PSoC4/enable.c **** * \brief Configures the interrupt mode for each of the Pins component's
 175:Generated_Source\PSoC4/enable.c **** *  pins. Alternatively you may set the interrupt mode for all the pins
 176:Generated_Source\PSoC4/enable.c **** *  specified in the Pins component.
 177:Generated_Source\PSoC4/enable.c **** *
 178:Generated_Source\PSoC4/enable.c **** *  <b>Note</b> The interrupt is port-wide and therefore any enabled pin
 179:Generated_Source\PSoC4/enable.c **** *  interrupt may trigger it.
 180:Generated_Source\PSoC4/enable.c **** *
 181:Generated_Source\PSoC4/enable.c **** * \param position
 182:Generated_Source\PSoC4/enable.c **** *  The pin position as listed in the Pins component. You may OR these to be 
 183:Generated_Source\PSoC4/enable.c **** *  able to configure the interrupt mode of multiple pins within a Pins 
 184:Generated_Source\PSoC4/enable.c **** *  component. Or you may use enable_INTR_ALL to configure the
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\cc4QUfAq.s 			page 7


 185:Generated_Source\PSoC4/enable.c **** *  interrupt mode of all the pins in the Pins component.       
 186:Generated_Source\PSoC4/enable.c **** *  - enable_0_INTR       (First pin in the list)
 187:Generated_Source\PSoC4/enable.c **** *  - enable_1_INTR       (Second pin in the list)
 188:Generated_Source\PSoC4/enable.c **** *  - ...
 189:Generated_Source\PSoC4/enable.c **** *  - enable_INTR_ALL     (All pins in Pins component)
 190:Generated_Source\PSoC4/enable.c **** *
 191:Generated_Source\PSoC4/enable.c **** * \param mode
 192:Generated_Source\PSoC4/enable.c **** *  Interrupt mode for the selected pins. Valid options are documented in
 193:Generated_Source\PSoC4/enable.c **** *  \ref intrMode.
 194:Generated_Source\PSoC4/enable.c **** *
 195:Generated_Source\PSoC4/enable.c **** * \return 
 196:Generated_Source\PSoC4/enable.c **** *  None
 197:Generated_Source\PSoC4/enable.c **** *  
 198:Generated_Source\PSoC4/enable.c **** * \sideeffect
 199:Generated_Source\PSoC4/enable.c **** *  It is recommended that the interrupt be disabled before calling this 
 200:Generated_Source\PSoC4/enable.c **** *  function to avoid unintended interrupt requests. Note that the interrupt
 201:Generated_Source\PSoC4/enable.c **** *  type is port wide, and therefore will trigger for any enabled pin on the 
 202:Generated_Source\PSoC4/enable.c **** *  port.
 203:Generated_Source\PSoC4/enable.c **** *
 204:Generated_Source\PSoC4/enable.c **** * \funcusage
 205:Generated_Source\PSoC4/enable.c **** *  \snippet enable_SUT.c usage_enable_SetInterruptMode
 206:Generated_Source\PSoC4/enable.c **** *******************************************************************************/
 207:Generated_Source\PSoC4/enable.c **** void enable_SetInterruptMode(uint16 position, uint16 mode)
 208:Generated_Source\PSoC4/enable.c **** {
 152              		.loc 1 208 0
 153              		.cfi_startproc
 154              	.LVL4:
 209:Generated_Source\PSoC4/enable.c ****     uint32 intrCfg;
 210:Generated_Source\PSoC4/enable.c ****     
 211:Generated_Source\PSoC4/enable.c ****     intrCfg =  enable_INTCFG & (uint32)(~(uint32)position);
 155              		.loc 1 211 0
 156 0000 034A     		ldr	r2, .L14
 212:Generated_Source\PSoC4/enable.c ****     enable_INTCFG = intrCfg | ((uint32)position & (uint32)mode);
 213:Generated_Source\PSoC4/enable.c **** }
 157              		.loc 1 213 0
 158              		@ sp needed
 211:Generated_Source\PSoC4/enable.c ****     enable_INTCFG = intrCfg | ((uint32)position & (uint32)mode);
 159              		.loc 1 211 0
 160 0002 1368     		ldr	r3, [r2]
 161              	.LVL5:
 162 0004 8343     		bic	r3, r0
 163              	.LVL6:
 212:Generated_Source\PSoC4/enable.c ****     enable_INTCFG = intrCfg | ((uint32)position & (uint32)mode);
 164              		.loc 1 212 0
 165 0006 0840     		and	r0, r1
 166              	.LVL7:
 167 0008 1843     		orr	r0, r3
 168 000a 1060     		str	r0, [r2]
 169              		.loc 1 213 0
 170 000c 7047     		bx	lr
 171              	.L15:
 172 000e C046     		.align	2
 173              	.L14:
 174 0010 0C010440 		.word	1074004236
 175              		.cfi_endproc
 176              	.LFE4:
 177              		.size	enable_SetInterruptMode, .-enable_SetInterruptMode
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\cc4QUfAq.s 			page 8


 178              		.section	.text.enable_ClearInterrupt,"ax",%progbits
 179              		.align	2
 180              		.global	enable_ClearInterrupt
 181              		.code	16
 182              		.thumb_func
 183              		.type	enable_ClearInterrupt, %function
 184              	enable_ClearInterrupt:
 185              	.LFB5:
 214:Generated_Source\PSoC4/enable.c **** 
 215:Generated_Source\PSoC4/enable.c **** 
 216:Generated_Source\PSoC4/enable.c **** /*******************************************************************************
 217:Generated_Source\PSoC4/enable.c **** * Function Name: enable_ClearInterrupt
 218:Generated_Source\PSoC4/enable.c **** ****************************************************************************//**
 219:Generated_Source\PSoC4/enable.c **** *
 220:Generated_Source\PSoC4/enable.c **** * \brief Clears any active interrupts attached with the component and returns 
 221:Generated_Source\PSoC4/enable.c **** *  the value of the interrupt status register allowing determination of which
 222:Generated_Source\PSoC4/enable.c **** *  pins generated an interrupt event.
 223:Generated_Source\PSoC4/enable.c **** *
 224:Generated_Source\PSoC4/enable.c **** * \return 
 225:Generated_Source\PSoC4/enable.c **** *  The right-shifted current value of the interrupt status register. Each pin 
 226:Generated_Source\PSoC4/enable.c **** *  has one bit set if it generated an interrupt event. For example, bit 0 is 
 227:Generated_Source\PSoC4/enable.c **** *  for pin 0 and bit 1 is for pin 1 of the Pins component.
 228:Generated_Source\PSoC4/enable.c **** *  
 229:Generated_Source\PSoC4/enable.c **** * \sideeffect
 230:Generated_Source\PSoC4/enable.c **** *  Clears all bits of the physical port's interrupt status register, not just
 231:Generated_Source\PSoC4/enable.c **** *  those associated with the Pins component.
 232:Generated_Source\PSoC4/enable.c **** *
 233:Generated_Source\PSoC4/enable.c **** * \funcusage
 234:Generated_Source\PSoC4/enable.c **** *  \snippet enable_SUT.c usage_enable_ClearInterrupt
 235:Generated_Source\PSoC4/enable.c **** *******************************************************************************/
 236:Generated_Source\PSoC4/enable.c **** uint8 enable_ClearInterrupt(void)
 237:Generated_Source\PSoC4/enable.c **** {
 186              		.loc 1 237 0
 187              		.cfi_startproc
 238:Generated_Source\PSoC4/enable.c **** 	uint8 maskedStatus = (uint8)(enable_INTSTAT & enable_MASK);
 188              		.loc 1 238 0
 189 0000 0220     		mov	r0, #2
 190 0002 034A     		ldr	r2, .L17
 239:Generated_Source\PSoC4/enable.c **** 	enable_INTSTAT = maskedStatus;
 240:Generated_Source\PSoC4/enable.c ****     return maskedStatus >> enable_SHIFT;
 241:Generated_Source\PSoC4/enable.c **** }
 191              		.loc 1 241 0
 192              		@ sp needed
 238:Generated_Source\PSoC4/enable.c **** 	uint8 maskedStatus = (uint8)(enable_INTSTAT & enable_MASK);
 193              		.loc 1 238 0
 194 0004 1368     		ldr	r3, [r2]
 195 0006 1840     		and	r0, r3
 196              	.LVL8:
 239:Generated_Source\PSoC4/enable.c **** 	enable_INTSTAT = maskedStatus;
 197              		.loc 1 239 0
 198 0008 1060     		str	r0, [r2]
 240:Generated_Source\PSoC4/enable.c **** }
 199              		.loc 1 240 0
 200 000a 4008     		lsr	r0, r0, #1
 201              	.LVL9:
 202 000c C0B2     		uxtb	r0, r0
 203              		.loc 1 241 0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\cc4QUfAq.s 			page 9


 204 000e 7047     		bx	lr
 205              	.L18:
 206              		.align	2
 207              	.L17:
 208 0010 10010440 		.word	1074004240
 209              		.cfi_endproc
 210              	.LFE5:
 211              		.size	enable_ClearInterrupt, .-enable_ClearInterrupt
 212              		.text
 213              	.Letext0:
 214              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 215              		.section	.debug_info,"",%progbits
 216              	.Ldebug_info0:
 217 0000 97010000 		.4byte	0x197
 218 0004 0400     		.2byte	0x4
 219 0006 00000000 		.4byte	.Ldebug_abbrev0
 220 000a 04       		.byte	0x4
 221 000b 01       		.uleb128 0x1
 222 000c 35010000 		.4byte	.LASF27
 223 0010 01       		.byte	0x1
 224 0011 75000000 		.4byte	.LASF28
 225 0015 F7010000 		.4byte	.LASF29
 226 0019 00000000 		.4byte	.Ldebug_ranges0+0
 227 001d 00000000 		.4byte	0
 228 0021 00000000 		.4byte	.Ldebug_line0
 229 0025 02       		.uleb128 0x2
 230 0026 01       		.byte	0x1
 231 0027 06       		.byte	0x6
 232 0028 DF010000 		.4byte	.LASF0
 233 002c 02       		.uleb128 0x2
 234 002d 01       		.byte	0x1
 235 002e 08       		.byte	0x8
 236 002f 3C000000 		.4byte	.LASF1
 237 0033 02       		.uleb128 0x2
 238 0034 02       		.byte	0x2
 239 0035 05       		.byte	0x5
 240 0036 1C010000 		.4byte	.LASF2
 241 003a 02       		.uleb128 0x2
 242 003b 02       		.byte	0x2
 243 003c 07       		.byte	0x7
 244 003d 62000000 		.4byte	.LASF3
 245 0041 02       		.uleb128 0x2
 246 0042 04       		.byte	0x4
 247 0043 05       		.byte	0x5
 248 0044 2C010000 		.4byte	.LASF4
 249 0048 02       		.uleb128 0x2
 250 0049 04       		.byte	0x4
 251 004a 07       		.byte	0x7
 252 004b 50000000 		.4byte	.LASF5
 253 004f 02       		.uleb128 0x2
 254 0050 08       		.byte	0x8
 255 0051 05       		.byte	0x5
 256 0052 E4000000 		.4byte	.LASF6
 257 0056 02       		.uleb128 0x2
 258 0057 08       		.byte	0x8
 259 0058 07       		.byte	0x7
 260 0059 C8000000 		.4byte	.LASF7
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\cc4QUfAq.s 			page 10


 261 005d 03       		.uleb128 0x3
 262 005e 04       		.byte	0x4
 263 005f 05       		.byte	0x5
 264 0060 696E7400 		.ascii	"int\000"
 265 0064 02       		.uleb128 0x2
 266 0065 04       		.byte	0x4
 267 0066 07       		.byte	0x7
 268 0067 BB000000 		.4byte	.LASF8
 269 006b 04       		.uleb128 0x4
 270 006c 26010000 		.4byte	.LASF9
 271 0070 02       		.byte	0x2
 272 0071 9801     		.2byte	0x198
 273 0073 2C000000 		.4byte	0x2c
 274 0077 04       		.uleb128 0x4
 275 0078 9C000000 		.4byte	.LASF10
 276 007c 02       		.byte	0x2
 277 007d 9901     		.2byte	0x199
 278 007f 3A000000 		.4byte	0x3a
 279 0083 04       		.uleb128 0x4
 280 0084 AC000000 		.4byte	.LASF11
 281 0088 02       		.byte	0x2
 282 0089 9A01     		.2byte	0x19a
 283 008b 48000000 		.4byte	0x48
 284 008f 02       		.uleb128 0x2
 285 0090 04       		.byte	0x4
 286 0091 04       		.byte	0x4
 287 0092 20000000 		.4byte	.LASF12
 288 0096 02       		.uleb128 0x2
 289 0097 08       		.byte	0x8
 290 0098 04       		.byte	0x4
 291 0099 95000000 		.4byte	.LASF13
 292 009d 02       		.uleb128 0x2
 293 009e 01       		.byte	0x1
 294 009f 08       		.byte	0x8
 295 00a0 FF000000 		.4byte	.LASF14
 296 00a4 04       		.uleb128 0x4
 297 00a5 00000000 		.4byte	.LASF15
 298 00a9 02       		.byte	0x2
 299 00aa 4402     		.2byte	0x244
 300 00ac B0000000 		.4byte	0xb0
 301 00b0 05       		.uleb128 0x5
 302 00b1 83000000 		.4byte	0x83
 303 00b5 06       		.uleb128 0x6
 304 00b6 0C000000 		.4byte	.LASF16
 305 00ba 01       		.byte	0x1
 306 00bb 48       		.byte	0x48
 307 00bc 00000000 		.4byte	.LFB0
 308 00c0 14000000 		.4byte	.LFE0-.LFB0
 309 00c4 01       		.uleb128 0x1
 310 00c5 9C       		.byte	0x9c
 311 00c6 DA000000 		.4byte	0xda
 312 00ca 07       		.uleb128 0x7
 313 00cb DF000000 		.4byte	.LASF18
 314 00cf 01       		.byte	0x1
 315 00d0 48       		.byte	0x48
 316 00d1 6B000000 		.4byte	0x6b
 317 00d5 00000000 		.4byte	.LLST0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\cc4QUfAq.s 			page 11


 318 00d9 00       		.byte	0
 319 00da 06       		.uleb128 0x6
 320 00db 39020000 		.4byte	.LASF17
 321 00df 01       		.byte	0x1
 322 00e0 6F       		.byte	0x6f
 323 00e1 00000000 		.4byte	.LFB1
 324 00e5 1C000000 		.4byte	.LFE1-.LFB1
 325 00e9 01       		.uleb128 0x1
 326 00ea 9C       		.byte	0x9c
 327 00eb 0A010000 		.4byte	0x10a
 328 00ef 07       		.uleb128 0x7
 329 00f0 06000000 		.4byte	.LASF19
 330 00f4 01       		.byte	0x1
 331 00f5 6F       		.byte	0x6f
 332 00f6 6B000000 		.4byte	0x6b
 333 00fa 21000000 		.4byte	.LLST1
 334 00fe 08       		.uleb128 0x8
 335 00ff 4A000000 		.4byte	.LASF30
 336 0103 01       		.byte	0x1
 337 0104 71       		.byte	0x71
 338 0105 6B000000 		.4byte	0x6b
 339 0109 00       		.byte	0
 340 010a 09       		.uleb128 0x9
 341 010b EB010000 		.4byte	.LASF20
 342 010f 01       		.byte	0x1
 343 0110 88       		.byte	0x88
 344 0111 6B000000 		.4byte	0x6b
 345 0115 00000000 		.4byte	.LFB2
 346 0119 10000000 		.4byte	.LFE2-.LFB2
 347 011d 01       		.uleb128 0x1
 348 011e 9C       		.byte	0x9c
 349 011f 09       		.uleb128 0x9
 350 0120 CC010000 		.4byte	.LASF21
 351 0124 01       		.byte	0x1
 352 0125 A4       		.byte	0xa4
 353 0126 6B000000 		.4byte	0x6b
 354 012a 00000000 		.4byte	.LFB3
 355 012e 10000000 		.4byte	.LFE3-.LFB3
 356 0132 01       		.uleb128 0x1
 357 0133 9C       		.byte	0x9c
 358 0134 06       		.uleb128 0x6
 359 0135 04010000 		.4byte	.LASF22
 360 0139 01       		.byte	0x1
 361 013a CF       		.byte	0xcf
 362 013b 00000000 		.4byte	.LFB4
 363 013f 14000000 		.4byte	.LFE4-.LFB4
 364 0143 01       		.uleb128 0x1
 365 0144 9C       		.byte	0x9c
 366 0145 75010000 		.4byte	0x175
 367 0149 07       		.uleb128 0x7
 368 014a A3000000 		.4byte	.LASF23
 369 014e 01       		.byte	0x1
 370 014f CF       		.byte	0xcf
 371 0150 77000000 		.4byte	0x77
 372 0154 42000000 		.4byte	.LLST2
 373 0158 0A       		.uleb128 0xa
 374 0159 DF000000 		.4byte	.LASF18
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\cc4QUfAq.s 			page 12


 375 015d 01       		.byte	0x1
 376 015e CF       		.byte	0xcf
 377 015f 77000000 		.4byte	0x77
 378 0163 01       		.uleb128 0x1
 379 0164 51       		.byte	0x51
 380 0165 0B       		.uleb128 0xb
 381 0166 B3000000 		.4byte	.LASF25
 382 016a 01       		.byte	0x1
 383 016b D1       		.byte	0xd1
 384 016c 83000000 		.4byte	0x83
 385 0170 63000000 		.4byte	.LLST3
 386 0174 00       		.byte	0
 387 0175 0C       		.uleb128 0xc
 388 0176 26000000 		.4byte	.LASF24
 389 017a 01       		.byte	0x1
 390 017b EC       		.byte	0xec
 391 017c 6B000000 		.4byte	0x6b
 392 0180 00000000 		.4byte	.LFB5
 393 0184 14000000 		.4byte	.LFE5-.LFB5
 394 0188 01       		.uleb128 0x1
 395 0189 9C       		.byte	0x9c
 396 018a 0B       		.uleb128 0xb
 397 018b F2000000 		.4byte	.LASF26
 398 018f 01       		.byte	0x1
 399 0190 EE       		.byte	0xee
 400 0191 6B000000 		.4byte	0x6b
 401 0195 80000000 		.4byte	.LLST4
 402 0199 00       		.byte	0
 403 019a 00       		.byte	0
 404              		.section	.debug_abbrev,"",%progbits
 405              	.Ldebug_abbrev0:
 406 0000 01       		.uleb128 0x1
 407 0001 11       		.uleb128 0x11
 408 0002 01       		.byte	0x1
 409 0003 25       		.uleb128 0x25
 410 0004 0E       		.uleb128 0xe
 411 0005 13       		.uleb128 0x13
 412 0006 0B       		.uleb128 0xb
 413 0007 03       		.uleb128 0x3
 414 0008 0E       		.uleb128 0xe
 415 0009 1B       		.uleb128 0x1b
 416 000a 0E       		.uleb128 0xe
 417 000b 55       		.uleb128 0x55
 418 000c 17       		.uleb128 0x17
 419 000d 11       		.uleb128 0x11
 420 000e 01       		.uleb128 0x1
 421 000f 10       		.uleb128 0x10
 422 0010 17       		.uleb128 0x17
 423 0011 00       		.byte	0
 424 0012 00       		.byte	0
 425 0013 02       		.uleb128 0x2
 426 0014 24       		.uleb128 0x24
 427 0015 00       		.byte	0
 428 0016 0B       		.uleb128 0xb
 429 0017 0B       		.uleb128 0xb
 430 0018 3E       		.uleb128 0x3e
 431 0019 0B       		.uleb128 0xb
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\cc4QUfAq.s 			page 13


 432 001a 03       		.uleb128 0x3
 433 001b 0E       		.uleb128 0xe
 434 001c 00       		.byte	0
 435 001d 00       		.byte	0
 436 001e 03       		.uleb128 0x3
 437 001f 24       		.uleb128 0x24
 438 0020 00       		.byte	0
 439 0021 0B       		.uleb128 0xb
 440 0022 0B       		.uleb128 0xb
 441 0023 3E       		.uleb128 0x3e
 442 0024 0B       		.uleb128 0xb
 443 0025 03       		.uleb128 0x3
 444 0026 08       		.uleb128 0x8
 445 0027 00       		.byte	0
 446 0028 00       		.byte	0
 447 0029 04       		.uleb128 0x4
 448 002a 16       		.uleb128 0x16
 449 002b 00       		.byte	0
 450 002c 03       		.uleb128 0x3
 451 002d 0E       		.uleb128 0xe
 452 002e 3A       		.uleb128 0x3a
 453 002f 0B       		.uleb128 0xb
 454 0030 3B       		.uleb128 0x3b
 455 0031 05       		.uleb128 0x5
 456 0032 49       		.uleb128 0x49
 457 0033 13       		.uleb128 0x13
 458 0034 00       		.byte	0
 459 0035 00       		.byte	0
 460 0036 05       		.uleb128 0x5
 461 0037 35       		.uleb128 0x35
 462 0038 00       		.byte	0
 463 0039 49       		.uleb128 0x49
 464 003a 13       		.uleb128 0x13
 465 003b 00       		.byte	0
 466 003c 00       		.byte	0
 467 003d 06       		.uleb128 0x6
 468 003e 2E       		.uleb128 0x2e
 469 003f 01       		.byte	0x1
 470 0040 3F       		.uleb128 0x3f
 471 0041 19       		.uleb128 0x19
 472 0042 03       		.uleb128 0x3
 473 0043 0E       		.uleb128 0xe
 474 0044 3A       		.uleb128 0x3a
 475 0045 0B       		.uleb128 0xb
 476 0046 3B       		.uleb128 0x3b
 477 0047 0B       		.uleb128 0xb
 478 0048 27       		.uleb128 0x27
 479 0049 19       		.uleb128 0x19
 480 004a 11       		.uleb128 0x11
 481 004b 01       		.uleb128 0x1
 482 004c 12       		.uleb128 0x12
 483 004d 06       		.uleb128 0x6
 484 004e 40       		.uleb128 0x40
 485 004f 18       		.uleb128 0x18
 486 0050 9742     		.uleb128 0x2117
 487 0052 19       		.uleb128 0x19
 488 0053 01       		.uleb128 0x1
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\cc4QUfAq.s 			page 14


 489 0054 13       		.uleb128 0x13
 490 0055 00       		.byte	0
 491 0056 00       		.byte	0
 492 0057 07       		.uleb128 0x7
 493 0058 05       		.uleb128 0x5
 494 0059 00       		.byte	0
 495 005a 03       		.uleb128 0x3
 496 005b 0E       		.uleb128 0xe
 497 005c 3A       		.uleb128 0x3a
 498 005d 0B       		.uleb128 0xb
 499 005e 3B       		.uleb128 0x3b
 500 005f 0B       		.uleb128 0xb
 501 0060 49       		.uleb128 0x49
 502 0061 13       		.uleb128 0x13
 503 0062 02       		.uleb128 0x2
 504 0063 17       		.uleb128 0x17
 505 0064 00       		.byte	0
 506 0065 00       		.byte	0
 507 0066 08       		.uleb128 0x8
 508 0067 34       		.uleb128 0x34
 509 0068 00       		.byte	0
 510 0069 03       		.uleb128 0x3
 511 006a 0E       		.uleb128 0xe
 512 006b 3A       		.uleb128 0x3a
 513 006c 0B       		.uleb128 0xb
 514 006d 3B       		.uleb128 0x3b
 515 006e 0B       		.uleb128 0xb
 516 006f 49       		.uleb128 0x49
 517 0070 13       		.uleb128 0x13
 518 0071 00       		.byte	0
 519 0072 00       		.byte	0
 520 0073 09       		.uleb128 0x9
 521 0074 2E       		.uleb128 0x2e
 522 0075 00       		.byte	0
 523 0076 3F       		.uleb128 0x3f
 524 0077 19       		.uleb128 0x19
 525 0078 03       		.uleb128 0x3
 526 0079 0E       		.uleb128 0xe
 527 007a 3A       		.uleb128 0x3a
 528 007b 0B       		.uleb128 0xb
 529 007c 3B       		.uleb128 0x3b
 530 007d 0B       		.uleb128 0xb
 531 007e 27       		.uleb128 0x27
 532 007f 19       		.uleb128 0x19
 533 0080 49       		.uleb128 0x49
 534 0081 13       		.uleb128 0x13
 535 0082 11       		.uleb128 0x11
 536 0083 01       		.uleb128 0x1
 537 0084 12       		.uleb128 0x12
 538 0085 06       		.uleb128 0x6
 539 0086 40       		.uleb128 0x40
 540 0087 18       		.uleb128 0x18
 541 0088 9742     		.uleb128 0x2117
 542 008a 19       		.uleb128 0x19
 543 008b 00       		.byte	0
 544 008c 00       		.byte	0
 545 008d 0A       		.uleb128 0xa
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\cc4QUfAq.s 			page 15


 546 008e 05       		.uleb128 0x5
 547 008f 00       		.byte	0
 548 0090 03       		.uleb128 0x3
 549 0091 0E       		.uleb128 0xe
 550 0092 3A       		.uleb128 0x3a
 551 0093 0B       		.uleb128 0xb
 552 0094 3B       		.uleb128 0x3b
 553 0095 0B       		.uleb128 0xb
 554 0096 49       		.uleb128 0x49
 555 0097 13       		.uleb128 0x13
 556 0098 02       		.uleb128 0x2
 557 0099 18       		.uleb128 0x18
 558 009a 00       		.byte	0
 559 009b 00       		.byte	0
 560 009c 0B       		.uleb128 0xb
 561 009d 34       		.uleb128 0x34
 562 009e 00       		.byte	0
 563 009f 03       		.uleb128 0x3
 564 00a0 0E       		.uleb128 0xe
 565 00a1 3A       		.uleb128 0x3a
 566 00a2 0B       		.uleb128 0xb
 567 00a3 3B       		.uleb128 0x3b
 568 00a4 0B       		.uleb128 0xb
 569 00a5 49       		.uleb128 0x49
 570 00a6 13       		.uleb128 0x13
 571 00a7 02       		.uleb128 0x2
 572 00a8 17       		.uleb128 0x17
 573 00a9 00       		.byte	0
 574 00aa 00       		.byte	0
 575 00ab 0C       		.uleb128 0xc
 576 00ac 2E       		.uleb128 0x2e
 577 00ad 01       		.byte	0x1
 578 00ae 3F       		.uleb128 0x3f
 579 00af 19       		.uleb128 0x19
 580 00b0 03       		.uleb128 0x3
 581 00b1 0E       		.uleb128 0xe
 582 00b2 3A       		.uleb128 0x3a
 583 00b3 0B       		.uleb128 0xb
 584 00b4 3B       		.uleb128 0x3b
 585 00b5 0B       		.uleb128 0xb
 586 00b6 27       		.uleb128 0x27
 587 00b7 19       		.uleb128 0x19
 588 00b8 49       		.uleb128 0x49
 589 00b9 13       		.uleb128 0x13
 590 00ba 11       		.uleb128 0x11
 591 00bb 01       		.uleb128 0x1
 592 00bc 12       		.uleb128 0x12
 593 00bd 06       		.uleb128 0x6
 594 00be 40       		.uleb128 0x40
 595 00bf 18       		.uleb128 0x18
 596 00c0 9742     		.uleb128 0x2117
 597 00c2 19       		.uleb128 0x19
 598 00c3 00       		.byte	0
 599 00c4 00       		.byte	0
 600 00c5 00       		.byte	0
 601              		.section	.debug_loc,"",%progbits
 602              	.Ldebug_loc0:
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\cc4QUfAq.s 			page 16


 603              	.LLST0:
 604 0000 00000000 		.4byte	.LVL0
 605 0004 06000000 		.4byte	.LVL1
 606 0008 0100     		.2byte	0x1
 607 000a 50       		.byte	0x50
 608 000b 06000000 		.4byte	.LVL1
 609 000f 14000000 		.4byte	.LFE0
 610 0013 0400     		.2byte	0x4
 611 0015 F3       		.byte	0xf3
 612 0016 01       		.uleb128 0x1
 613 0017 50       		.byte	0x50
 614 0018 9F       		.byte	0x9f
 615 0019 00000000 		.4byte	0
 616 001d 00000000 		.4byte	0
 617              	.LLST1:
 618 0021 00000000 		.4byte	.LVL2
 619 0025 04000000 		.4byte	.LVL3
 620 0029 0100     		.2byte	0x1
 621 002b 50       		.byte	0x50
 622 002c 04000000 		.4byte	.LVL3
 623 0030 1C000000 		.4byte	.LFE1
 624 0034 0400     		.2byte	0x4
 625 0036 F3       		.byte	0xf3
 626 0037 01       		.uleb128 0x1
 627 0038 50       		.byte	0x50
 628 0039 9F       		.byte	0x9f
 629 003a 00000000 		.4byte	0
 630 003e 00000000 		.4byte	0
 631              	.LLST2:
 632 0042 00000000 		.4byte	.LVL4
 633 0046 08000000 		.4byte	.LVL7
 634 004a 0100     		.2byte	0x1
 635 004c 50       		.byte	0x50
 636 004d 08000000 		.4byte	.LVL7
 637 0051 14000000 		.4byte	.LFE4
 638 0055 0400     		.2byte	0x4
 639 0057 F3       		.byte	0xf3
 640 0058 01       		.uleb128 0x1
 641 0059 50       		.byte	0x50
 642 005a 9F       		.byte	0x9f
 643 005b 00000000 		.4byte	0
 644 005f 00000000 		.4byte	0
 645              	.LLST3:
 646 0063 04000000 		.4byte	.LVL5
 647 0067 06000000 		.4byte	.LVL6
 648 006b 0B00     		.2byte	0xb
 649 006d 70       		.byte	0x70
 650 006e 00       		.sleb128 0
 651 006f 0A       		.byte	0xa
 652 0070 FFFF     		.2byte	0xffff
 653 0072 1A       		.byte	0x1a
 654 0073 20       		.byte	0x20
 655 0074 73       		.byte	0x73
 656 0075 00       		.sleb128 0
 657 0076 1A       		.byte	0x1a
 658 0077 9F       		.byte	0x9f
 659 0078 00000000 		.4byte	0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\cc4QUfAq.s 			page 17


 660 007c 00000000 		.4byte	0
 661              	.LLST4:
 662 0080 08000000 		.4byte	.LVL8
 663 0084 0C000000 		.4byte	.LVL9
 664 0088 0100     		.2byte	0x1
 665 008a 50       		.byte	0x50
 666 008b 0C000000 		.4byte	.LVL9
 667 008f 14000000 		.4byte	.LFE5
 668 0093 0400     		.2byte	0x4
 669 0095 72       		.byte	0x72
 670 0096 00       		.sleb128 0
 671 0097 06       		.byte	0x6
 672 0098 9F       		.byte	0x9f
 673 0099 00000000 		.4byte	0
 674 009d 00000000 		.4byte	0
 675              		.section	.debug_aranges,"",%progbits
 676 0000 44000000 		.4byte	0x44
 677 0004 0200     		.2byte	0x2
 678 0006 00000000 		.4byte	.Ldebug_info0
 679 000a 04       		.byte	0x4
 680 000b 00       		.byte	0
 681 000c 0000     		.2byte	0
 682 000e 0000     		.2byte	0
 683 0010 00000000 		.4byte	.LFB0
 684 0014 14000000 		.4byte	.LFE0-.LFB0
 685 0018 00000000 		.4byte	.LFB1
 686 001c 1C000000 		.4byte	.LFE1-.LFB1
 687 0020 00000000 		.4byte	.LFB2
 688 0024 10000000 		.4byte	.LFE2-.LFB2
 689 0028 00000000 		.4byte	.LFB3
 690 002c 10000000 		.4byte	.LFE3-.LFB3
 691 0030 00000000 		.4byte	.LFB4
 692 0034 14000000 		.4byte	.LFE4-.LFB4
 693 0038 00000000 		.4byte	.LFB5
 694 003c 14000000 		.4byte	.LFE5-.LFB5
 695 0040 00000000 		.4byte	0
 696 0044 00000000 		.4byte	0
 697              		.section	.debug_ranges,"",%progbits
 698              	.Ldebug_ranges0:
 699 0000 00000000 		.4byte	.LFB0
 700 0004 14000000 		.4byte	.LFE0
 701 0008 00000000 		.4byte	.LFB1
 702 000c 1C000000 		.4byte	.LFE1
 703 0010 00000000 		.4byte	.LFB2
 704 0014 10000000 		.4byte	.LFE2
 705 0018 00000000 		.4byte	.LFB3
 706 001c 10000000 		.4byte	.LFE3
 707 0020 00000000 		.4byte	.LFB4
 708 0024 14000000 		.4byte	.LFE4
 709 0028 00000000 		.4byte	.LFB5
 710 002c 14000000 		.4byte	.LFE5
 711 0030 00000000 		.4byte	0
 712 0034 00000000 		.4byte	0
 713              		.section	.debug_line,"",%progbits
 714              	.Ldebug_line0:
 715 0000 C9000000 		.section	.debug_str,"MS",%progbits,1
 715      02004300 
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\cc4QUfAq.s 			page 18


 715      00000201 
 715      FB0E0D00 
 715      01010101 
 716              	.LASF15:
 717 0000 72656733 		.ascii	"reg32\000"
 717      3200
 718              	.LASF19:
 719 0006 76616C75 		.ascii	"value\000"
 719      6500
 720              	.LASF16:
 721 000c 656E6162 		.ascii	"enable_SetDriveMode\000"
 721      6C655F53 
 721      65744472 
 721      6976654D 
 721      6F646500 
 722              	.LASF12:
 723 0020 666C6F61 		.ascii	"float\000"
 723      7400
 724              	.LASF24:
 725 0026 656E6162 		.ascii	"enable_ClearInterrupt\000"
 725      6C655F43 
 725      6C656172 
 725      496E7465 
 725      72727570 
 726              	.LASF1:
 727 003c 756E7369 		.ascii	"unsigned char\000"
 727      676E6564 
 727      20636861 
 727      7200
 728              	.LASF30:
 729 004a 64725661 		.ascii	"drVal\000"
 729      6C00
 730              	.LASF5:
 731 0050 6C6F6E67 		.ascii	"long unsigned int\000"
 731      20756E73 
 731      69676E65 
 731      6420696E 
 731      7400
 732              	.LASF3:
 733 0062 73686F72 		.ascii	"short unsigned int\000"
 733      7420756E 
 733      7369676E 
 733      65642069 
 733      6E7400
 734              	.LASF28:
 735 0075 47656E65 		.ascii	"Generated_Source\\PSoC4\\enable.c\000"
 735      72617465 
 735      645F536F 
 735      75726365 
 735      5C50536F 
 736              	.LASF13:
 737 0095 646F7562 		.ascii	"double\000"
 737      6C6500
 738              	.LASF10:
 739 009c 75696E74 		.ascii	"uint16\000"
 739      313600
 740              	.LASF23:
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\cc4QUfAq.s 			page 19


 741 00a3 706F7369 		.ascii	"position\000"
 741      74696F6E 
 741      00
 742              	.LASF11:
 743 00ac 75696E74 		.ascii	"uint32\000"
 743      333200
 744              	.LASF25:
 745 00b3 696E7472 		.ascii	"intrCfg\000"
 745      43666700 
 746              	.LASF8:
 747 00bb 756E7369 		.ascii	"unsigned int\000"
 747      676E6564 
 747      20696E74 
 747      00
 748              	.LASF7:
 749 00c8 6C6F6E67 		.ascii	"long long unsigned int\000"
 749      206C6F6E 
 749      6720756E 
 749      7369676E 
 749      65642069 
 750              	.LASF18:
 751 00df 6D6F6465 		.ascii	"mode\000"
 751      00
 752              	.LASF6:
 753 00e4 6C6F6E67 		.ascii	"long long int\000"
 753      206C6F6E 
 753      6720696E 
 753      7400
 754              	.LASF26:
 755 00f2 6D61736B 		.ascii	"maskedStatus\000"
 755      65645374 
 755      61747573 
 755      00
 756              	.LASF14:
 757 00ff 63686172 		.ascii	"char\000"
 757      00
 758              	.LASF22:
 759 0104 656E6162 		.ascii	"enable_SetInterruptMode\000"
 759      6C655F53 
 759      6574496E 
 759      74657272 
 759      7570744D 
 760              	.LASF2:
 761 011c 73686F72 		.ascii	"short int\000"
 761      7420696E 
 761      7400
 762              	.LASF9:
 763 0126 75696E74 		.ascii	"uint8\000"
 763      3800
 764              	.LASF4:
 765 012c 6C6F6E67 		.ascii	"long int\000"
 765      20696E74 
 765      00
 766              	.LASF27:
 767 0135 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 767      4320342E 
 767      392E3320 
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\cc4QUfAq.s 			page 20


 767      32303135 
 767      30333033 
 768 0168 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 768      20726576 
 768      6973696F 
 768      6E203232 
 768      31323230 
 769 019b 32202D73 		.ascii	"2 -std=c99 -ffunction-sections -ffat-lto-objects\000"
 769      74643D63 
 769      3939202D 
 769      6666756E 
 769      6374696F 
 770              	.LASF21:
 771 01cc 656E6162 		.ascii	"enable_ReadDataReg\000"
 771      6C655F52 
 771      65616444 
 771      61746152 
 771      656700
 772              	.LASF0:
 773 01df 7369676E 		.ascii	"signed char\000"
 773      65642063 
 773      68617200 
 774              	.LASF20:
 775 01eb 656E6162 		.ascii	"enable_Read\000"
 775      6C655F52 
 775      65616400 
 776              	.LASF29:
 777 01f7 433A5C55 		.ascii	"C:\\Users\\Marcus\\Documents\\GitHub\\Tarocco Lite\\"
 777      73657273 
 777      5C4D6172 
 777      6375735C 
 777      446F6375 
 778 0225 4669726D 		.ascii	"Firmware\\dcsd.cydsn\000"
 778      77617265 
 778      5C646373 
 778      642E6379 
 778      64736E00 
 779              	.LASF17:
 780 0239 656E6162 		.ascii	"enable_Write\000"
 780      6C655F57 
 780      72697465 
 780      00
 781              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
