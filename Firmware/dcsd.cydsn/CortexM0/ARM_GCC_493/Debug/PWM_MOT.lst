ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM_MOT.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.PWM_MOT_Init,"ax",%progbits
  18              		.align	2
  19              		.global	PWM_MOT_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	PWM_MOT_Init, %function
  23              	PWM_MOT_Init:
  24              	.LFB0:
  25              		.file 1 "Generated_Source\\PSoC4\\PWM_MOT.c"
   1:Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/PWM_MOT.c **** * File Name: PWM_MOT.c
   3:Generated_Source\PSoC4/PWM_MOT.c **** * Version 2.10
   4:Generated_Source\PSoC4/PWM_MOT.c **** *
   5:Generated_Source\PSoC4/PWM_MOT.c **** * Description:
   6:Generated_Source\PSoC4/PWM_MOT.c **** *  This file provides the source code to the API for the PWM_MOT
   7:Generated_Source\PSoC4/PWM_MOT.c **** *  component
   8:Generated_Source\PSoC4/PWM_MOT.c **** *
   9:Generated_Source\PSoC4/PWM_MOT.c **** * Note:
  10:Generated_Source\PSoC4/PWM_MOT.c **** *  None
  11:Generated_Source\PSoC4/PWM_MOT.c **** *
  12:Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
  13:Generated_Source\PSoC4/PWM_MOT.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/PWM_MOT.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/PWM_MOT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/PWM_MOT.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/PWM_MOT.c **** 
  19:Generated_Source\PSoC4/PWM_MOT.c **** #include "PWM_MOT.h"
  20:Generated_Source\PSoC4/PWM_MOT.c **** 
  21:Generated_Source\PSoC4/PWM_MOT.c **** uint8 PWM_MOT_initVar = 0u;
  22:Generated_Source\PSoC4/PWM_MOT.c **** 
  23:Generated_Source\PSoC4/PWM_MOT.c **** 
  24:Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
  25:Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_Init
  26:Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
  27:Generated_Source\PSoC4/PWM_MOT.c **** *
  28:Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
  29:Generated_Source\PSoC4/PWM_MOT.c **** *  Initialize/Restore default PWM_MOT configuration.
  30:Generated_Source\PSoC4/PWM_MOT.c **** *
  31:Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
  32:Generated_Source\PSoC4/PWM_MOT.c **** *  None
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 2


  33:Generated_Source\PSoC4/PWM_MOT.c **** *
  34:Generated_Source\PSoC4/PWM_MOT.c **** * Return:
  35:Generated_Source\PSoC4/PWM_MOT.c **** *  None
  36:Generated_Source\PSoC4/PWM_MOT.c **** *
  37:Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
  38:Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_Init(void)
  39:Generated_Source\PSoC4/PWM_MOT.c **** {
  26              		.loc 1 39 0
  27              		.cfi_startproc
  40:Generated_Source\PSoC4/PWM_MOT.c **** 
  41:Generated_Source\PSoC4/PWM_MOT.c ****     /* Set values from customizer to CTRL */
  42:Generated_Source\PSoC4/PWM_MOT.c ****     #if (PWM_MOT__QUAD == PWM_MOT_CONFIG)
  43:Generated_Source\PSoC4/PWM_MOT.c ****         PWM_MOT_CONTROL_REG = PWM_MOT_CTRL_QUAD_BASE_CONFIG;
  44:Generated_Source\PSoC4/PWM_MOT.c ****         
  45:Generated_Source\PSoC4/PWM_MOT.c ****         /* Set values from customizer to CTRL1 */
  46:Generated_Source\PSoC4/PWM_MOT.c ****         PWM_MOT_TRIG_CONTROL1_REG  = PWM_MOT_QUAD_SIGNALS_MODES;
  47:Generated_Source\PSoC4/PWM_MOT.c **** 
  48:Generated_Source\PSoC4/PWM_MOT.c ****         /* Set values from customizer to INTR */
  49:Generated_Source\PSoC4/PWM_MOT.c ****         PWM_MOT_SetInterruptMode(PWM_MOT_QUAD_INTERRUPT_MASK);
  50:Generated_Source\PSoC4/PWM_MOT.c ****         
  51:Generated_Source\PSoC4/PWM_MOT.c ****          /* Set other values */
  52:Generated_Source\PSoC4/PWM_MOT.c ****         PWM_MOT_SetCounterMode(PWM_MOT_COUNT_DOWN);
  53:Generated_Source\PSoC4/PWM_MOT.c ****         PWM_MOT_WritePeriod(PWM_MOT_QUAD_PERIOD_INIT_VALUE);
  54:Generated_Source\PSoC4/PWM_MOT.c ****         PWM_MOT_WriteCounter(PWM_MOT_QUAD_PERIOD_INIT_VALUE);
  55:Generated_Source\PSoC4/PWM_MOT.c ****     #endif  /* (PWM_MOT__QUAD == PWM_MOT_CONFIG) */
  56:Generated_Source\PSoC4/PWM_MOT.c **** 
  57:Generated_Source\PSoC4/PWM_MOT.c ****     #if (PWM_MOT__TIMER == PWM_MOT_CONFIG)
  58:Generated_Source\PSoC4/PWM_MOT.c ****         PWM_MOT_CONTROL_REG = PWM_MOT_CTRL_TIMER_BASE_CONFIG;
  59:Generated_Source\PSoC4/PWM_MOT.c ****         
  60:Generated_Source\PSoC4/PWM_MOT.c ****         /* Set values from customizer to CTRL1 */
  61:Generated_Source\PSoC4/PWM_MOT.c ****         PWM_MOT_TRIG_CONTROL1_REG  = PWM_MOT_TIMER_SIGNALS_MODES;
  62:Generated_Source\PSoC4/PWM_MOT.c ****     
  63:Generated_Source\PSoC4/PWM_MOT.c ****         /* Set values from customizer to INTR */
  64:Generated_Source\PSoC4/PWM_MOT.c ****         PWM_MOT_SetInterruptMode(PWM_MOT_TC_INTERRUPT_MASK);
  65:Generated_Source\PSoC4/PWM_MOT.c ****         
  66:Generated_Source\PSoC4/PWM_MOT.c ****         /* Set other values from customizer */
  67:Generated_Source\PSoC4/PWM_MOT.c ****         PWM_MOT_WritePeriod(PWM_MOT_TC_PERIOD_VALUE );
  68:Generated_Source\PSoC4/PWM_MOT.c **** 
  69:Generated_Source\PSoC4/PWM_MOT.c ****         #if (PWM_MOT__COMPARE == PWM_MOT_TC_COMP_CAP_MODE)
  70:Generated_Source\PSoC4/PWM_MOT.c ****             PWM_MOT_WriteCompare(PWM_MOT_TC_COMPARE_VALUE);
  71:Generated_Source\PSoC4/PWM_MOT.c **** 
  72:Generated_Source\PSoC4/PWM_MOT.c ****             #if (1u == PWM_MOT_TC_COMPARE_SWAP)
  73:Generated_Source\PSoC4/PWM_MOT.c ****                 PWM_MOT_SetCompareSwap(1u);
  74:Generated_Source\PSoC4/PWM_MOT.c ****                 PWM_MOT_WriteCompareBuf(PWM_MOT_TC_COMPARE_BUF_VALUE);
  75:Generated_Source\PSoC4/PWM_MOT.c ****             #endif  /* (1u == PWM_MOT_TC_COMPARE_SWAP) */
  76:Generated_Source\PSoC4/PWM_MOT.c ****         #endif  /* (PWM_MOT__COMPARE == PWM_MOT_TC_COMP_CAP_MODE) */
  77:Generated_Source\PSoC4/PWM_MOT.c **** 
  78:Generated_Source\PSoC4/PWM_MOT.c ****         /* Initialize counter value */
  79:Generated_Source\PSoC4/PWM_MOT.c ****         #if (PWM_MOT_CY_TCPWM_V2 && PWM_MOT_TIMER_UPDOWN_CNT_USED && !PWM_MOT_CY_TCPWM_4000)
  80:Generated_Source\PSoC4/PWM_MOT.c ****             PWM_MOT_WriteCounter(1u);
  81:Generated_Source\PSoC4/PWM_MOT.c ****         #elif(PWM_MOT__COUNT_DOWN == PWM_MOT_TC_COUNTER_MODE)
  82:Generated_Source\PSoC4/PWM_MOT.c ****             PWM_MOT_WriteCounter(PWM_MOT_TC_PERIOD_VALUE);
  83:Generated_Source\PSoC4/PWM_MOT.c ****         #else
  84:Generated_Source\PSoC4/PWM_MOT.c ****             PWM_MOT_WriteCounter(0u);
  85:Generated_Source\PSoC4/PWM_MOT.c ****         #endif /* (PWM_MOT_CY_TCPWM_V2 && PWM_MOT_TIMER_UPDOWN_CNT_USED && !PWM_MOT_CY_TCPWM_4000) 
  86:Generated_Source\PSoC4/PWM_MOT.c ****     #endif  /* (PWM_MOT__TIMER == PWM_MOT_CONFIG) */
  87:Generated_Source\PSoC4/PWM_MOT.c **** 
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 3


  88:Generated_Source\PSoC4/PWM_MOT.c ****     #if (PWM_MOT__PWM_SEL == PWM_MOT_CONFIG)
  89:Generated_Source\PSoC4/PWM_MOT.c ****         PWM_MOT_CONTROL_REG = PWM_MOT_CTRL_PWM_BASE_CONFIG;
  28              		.loc 1 89 0
  29 0000 8022     		mov	r2, #128
  90:Generated_Source\PSoC4/PWM_MOT.c **** 
  91:Generated_Source\PSoC4/PWM_MOT.c ****         #if (PWM_MOT__PWM_PR == PWM_MOT_PWM_MODE)
  92:Generated_Source\PSoC4/PWM_MOT.c ****             PWM_MOT_CONTROL_REG |= PWM_MOT_CTRL_PWM_RUN_MODE;
  93:Generated_Source\PSoC4/PWM_MOT.c ****             PWM_MOT_WriteCounter(PWM_MOT_PWM_PR_INIT_VALUE);
  94:Generated_Source\PSoC4/PWM_MOT.c ****         #else
  95:Generated_Source\PSoC4/PWM_MOT.c ****             PWM_MOT_CONTROL_REG |= PWM_MOT_CTRL_PWM_ALIGN | PWM_MOT_CTRL_PWM_KILL_EVENT;
  30              		.loc 1 95 0
  31 0002 8021     		mov	r1, #128
  89:Generated_Source\PSoC4/PWM_MOT.c **** 
  32              		.loc 1 89 0
  33 0004 0E4B     		ldr	r3, .L2
  34 0006 D204     		lsl	r2, r2, #19
  35 0008 1A60     		str	r2, [r3]
  36              		.loc 1 95 0
  37 000a 1A68     		ldr	r2, [r3]
  38 000c 8902     		lsl	r1, r1, #10
  39 000e 0A43     		orr	r2, r1
  40 0010 1A60     		str	r2, [r3]
  41              	.LVL0:
  42              	.LBB22:
  43              	.LBB23:
  96:Generated_Source\PSoC4/PWM_MOT.c ****             
  97:Generated_Source\PSoC4/PWM_MOT.c ****             /* Initialize counter value */
  98:Generated_Source\PSoC4/PWM_MOT.c ****             #if (PWM_MOT_CY_TCPWM_V2 && PWM_MOT_PWM_UPDOWN_CNT_USED && !PWM_MOT_CY_TCPWM_4000)
  99:Generated_Source\PSoC4/PWM_MOT.c ****                 PWM_MOT_WriteCounter(1u);
 100:Generated_Source\PSoC4/PWM_MOT.c ****             #elif (PWM_MOT__RIGHT == PWM_MOT_PWM_ALIGN)
 101:Generated_Source\PSoC4/PWM_MOT.c ****                 PWM_MOT_WriteCounter(PWM_MOT_PWM_PERIOD_VALUE);
 102:Generated_Source\PSoC4/PWM_MOT.c ****             #else 
 103:Generated_Source\PSoC4/PWM_MOT.c ****                 PWM_MOT_WriteCounter(0u);
 104:Generated_Source\PSoC4/PWM_MOT.c ****             #endif  /* (PWM_MOT_CY_TCPWM_V2 && PWM_MOT_PWM_UPDOWN_CNT_USED && !PWM_MOT_CY_TCPWM_400
 105:Generated_Source\PSoC4/PWM_MOT.c ****         #endif  /* (PWM_MOT__PWM_PR == PWM_MOT_PWM_MODE) */
 106:Generated_Source\PSoC4/PWM_MOT.c **** 
 107:Generated_Source\PSoC4/PWM_MOT.c ****         #if (PWM_MOT__PWM_DT == PWM_MOT_PWM_MODE)
 108:Generated_Source\PSoC4/PWM_MOT.c ****             PWM_MOT_CONTROL_REG |= PWM_MOT_CTRL_PWM_DEAD_TIME_CYCLE;
 109:Generated_Source\PSoC4/PWM_MOT.c ****         #endif  /* (PWM_MOT__PWM_DT == PWM_MOT_PWM_MODE) */
 110:Generated_Source\PSoC4/PWM_MOT.c **** 
 111:Generated_Source\PSoC4/PWM_MOT.c ****         #if (PWM_MOT__PWM == PWM_MOT_PWM_MODE)
 112:Generated_Source\PSoC4/PWM_MOT.c ****             PWM_MOT_CONTROL_REG |= PWM_MOT_CTRL_PWM_PRESCALER;
 113:Generated_Source\PSoC4/PWM_MOT.c ****         #endif  /* (PWM_MOT__PWM == PWM_MOT_PWM_MODE) */
 114:Generated_Source\PSoC4/PWM_MOT.c **** 
 115:Generated_Source\PSoC4/PWM_MOT.c ****         /* Set values from customizer to CTRL1 */
 116:Generated_Source\PSoC4/PWM_MOT.c ****         PWM_MOT_TRIG_CONTROL1_REG  = PWM_MOT_PWM_SIGNALS_MODES;
 117:Generated_Source\PSoC4/PWM_MOT.c ****     
 118:Generated_Source\PSoC4/PWM_MOT.c ****         /* Set values from customizer to INTR */
 119:Generated_Source\PSoC4/PWM_MOT.c ****         PWM_MOT_SetInterruptMode(PWM_MOT_PWM_INTERRUPT_MASK);
 120:Generated_Source\PSoC4/PWM_MOT.c **** 
 121:Generated_Source\PSoC4/PWM_MOT.c ****         /* Set values from customizer to CTRL2 */
 122:Generated_Source\PSoC4/PWM_MOT.c ****         #if (PWM_MOT__PWM_PR == PWM_MOT_PWM_MODE)
 123:Generated_Source\PSoC4/PWM_MOT.c ****             PWM_MOT_TRIG_CONTROL2_REG =
 124:Generated_Source\PSoC4/PWM_MOT.c ****                     (PWM_MOT_CC_MATCH_NO_CHANGE    |
 125:Generated_Source\PSoC4/PWM_MOT.c ****                     PWM_MOT_OVERLOW_NO_CHANGE      |
 126:Generated_Source\PSoC4/PWM_MOT.c ****                     PWM_MOT_UNDERFLOW_NO_CHANGE);
 127:Generated_Source\PSoC4/PWM_MOT.c ****         #else
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 4


 128:Generated_Source\PSoC4/PWM_MOT.c ****             #if (PWM_MOT__LEFT == PWM_MOT_PWM_ALIGN)
 129:Generated_Source\PSoC4/PWM_MOT.c ****                 PWM_MOT_TRIG_CONTROL2_REG = PWM_MOT_PWM_MODE_LEFT;
 130:Generated_Source\PSoC4/PWM_MOT.c ****             #endif  /* ( PWM_MOT_PWM_LEFT == PWM_MOT_PWM_ALIGN) */
 131:Generated_Source\PSoC4/PWM_MOT.c **** 
 132:Generated_Source\PSoC4/PWM_MOT.c ****             #if (PWM_MOT__RIGHT == PWM_MOT_PWM_ALIGN)
 133:Generated_Source\PSoC4/PWM_MOT.c ****                 PWM_MOT_TRIG_CONTROL2_REG = PWM_MOT_PWM_MODE_RIGHT;
 134:Generated_Source\PSoC4/PWM_MOT.c ****             #endif  /* ( PWM_MOT_PWM_RIGHT == PWM_MOT_PWM_ALIGN) */
 135:Generated_Source\PSoC4/PWM_MOT.c **** 
 136:Generated_Source\PSoC4/PWM_MOT.c ****             #if (PWM_MOT__CENTER == PWM_MOT_PWM_ALIGN)
 137:Generated_Source\PSoC4/PWM_MOT.c ****                 PWM_MOT_TRIG_CONTROL2_REG = PWM_MOT_PWM_MODE_CENTER;
 138:Generated_Source\PSoC4/PWM_MOT.c ****             #endif  /* ( PWM_MOT_PWM_CENTER == PWM_MOT_PWM_ALIGN) */
 139:Generated_Source\PSoC4/PWM_MOT.c **** 
 140:Generated_Source\PSoC4/PWM_MOT.c ****             #if (PWM_MOT__ASYMMETRIC == PWM_MOT_PWM_ALIGN)
 141:Generated_Source\PSoC4/PWM_MOT.c ****                 PWM_MOT_TRIG_CONTROL2_REG = PWM_MOT_PWM_MODE_ASYM;
 142:Generated_Source\PSoC4/PWM_MOT.c ****             #endif  /* (PWM_MOT__ASYMMETRIC == PWM_MOT_PWM_ALIGN) */
 143:Generated_Source\PSoC4/PWM_MOT.c ****         #endif  /* (PWM_MOT__PWM_PR == PWM_MOT_PWM_MODE) */
 144:Generated_Source\PSoC4/PWM_MOT.c **** 
 145:Generated_Source\PSoC4/PWM_MOT.c ****         /* Set other values from customizer */
 146:Generated_Source\PSoC4/PWM_MOT.c ****         PWM_MOT_WritePeriod(PWM_MOT_PWM_PERIOD_VALUE );
 147:Generated_Source\PSoC4/PWM_MOT.c ****         PWM_MOT_WriteCompare(PWM_MOT_PWM_COMPARE_VALUE);
 148:Generated_Source\PSoC4/PWM_MOT.c **** 
 149:Generated_Source\PSoC4/PWM_MOT.c ****         #if (1u == PWM_MOT_PWM_COMPARE_SWAP)
 150:Generated_Source\PSoC4/PWM_MOT.c ****             PWM_MOT_SetCompareSwap(1u);
 151:Generated_Source\PSoC4/PWM_MOT.c ****             PWM_MOT_WriteCompareBuf(PWM_MOT_PWM_COMPARE_BUF_VALUE);
 152:Generated_Source\PSoC4/PWM_MOT.c ****         #endif  /* (1u == PWM_MOT_PWM_COMPARE_SWAP) */
 153:Generated_Source\PSoC4/PWM_MOT.c **** 
 154:Generated_Source\PSoC4/PWM_MOT.c ****         #if (1u == PWM_MOT_PWM_PERIOD_SWAP)
 155:Generated_Source\PSoC4/PWM_MOT.c ****             PWM_MOT_SetPeriodSwap(1u);
 156:Generated_Source\PSoC4/PWM_MOT.c ****             PWM_MOT_WritePeriodBuf(PWM_MOT_PWM_PERIOD_BUF_VALUE);
 157:Generated_Source\PSoC4/PWM_MOT.c ****         #endif  /* (1u == PWM_MOT_PWM_PERIOD_SWAP) */
 158:Generated_Source\PSoC4/PWM_MOT.c ****     #endif  /* (PWM_MOT__PWM_SEL == PWM_MOT_CONFIG) */
 159:Generated_Source\PSoC4/PWM_MOT.c ****     
 160:Generated_Source\PSoC4/PWM_MOT.c **** }
 161:Generated_Source\PSoC4/PWM_MOT.c **** 
 162:Generated_Source\PSoC4/PWM_MOT.c **** 
 163:Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 164:Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_Enable
 165:Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 166:Generated_Source\PSoC4/PWM_MOT.c **** *
 167:Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 168:Generated_Source\PSoC4/PWM_MOT.c **** *  Enables the PWM_MOT.
 169:Generated_Source\PSoC4/PWM_MOT.c **** *
 170:Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 171:Generated_Source\PSoC4/PWM_MOT.c **** *  None
 172:Generated_Source\PSoC4/PWM_MOT.c **** *
 173:Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 174:Generated_Source\PSoC4/PWM_MOT.c **** *  None
 175:Generated_Source\PSoC4/PWM_MOT.c **** *
 176:Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 177:Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_Enable(void)
 178:Generated_Source\PSoC4/PWM_MOT.c **** {
 179:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 180:Generated_Source\PSoC4/PWM_MOT.c **** 
 181:Generated_Source\PSoC4/PWM_MOT.c ****     enableInterrupts = CyEnterCriticalSection();
 182:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_BLOCK_CONTROL_REG |= PWM_MOT_MASK;
 183:Generated_Source\PSoC4/PWM_MOT.c ****     CyExitCriticalSection(enableInterrupts);
 184:Generated_Source\PSoC4/PWM_MOT.c **** 
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 5


 185:Generated_Source\PSoC4/PWM_MOT.c ****     /* Start Timer or PWM if start input is absent */
 186:Generated_Source\PSoC4/PWM_MOT.c ****     #if (PWM_MOT__PWM_SEL == PWM_MOT_CONFIG)
 187:Generated_Source\PSoC4/PWM_MOT.c ****         #if (0u == PWM_MOT_PWM_START_SIGNAL_PRESENT)
 188:Generated_Source\PSoC4/PWM_MOT.c ****             PWM_MOT_TriggerCommand(PWM_MOT_MASK, PWM_MOT_CMD_START);
 189:Generated_Source\PSoC4/PWM_MOT.c ****         #endif /* (0u == PWM_MOT_PWM_START_SIGNAL_PRESENT) */
 190:Generated_Source\PSoC4/PWM_MOT.c ****     #endif /* (PWM_MOT__PWM_SEL == PWM_MOT_CONFIG) */
 191:Generated_Source\PSoC4/PWM_MOT.c **** 
 192:Generated_Source\PSoC4/PWM_MOT.c ****     #if (PWM_MOT__TIMER == PWM_MOT_CONFIG)
 193:Generated_Source\PSoC4/PWM_MOT.c ****         #if (0u == PWM_MOT_TC_START_SIGNAL_PRESENT)
 194:Generated_Source\PSoC4/PWM_MOT.c ****             PWM_MOT_TriggerCommand(PWM_MOT_MASK, PWM_MOT_CMD_START);
 195:Generated_Source\PSoC4/PWM_MOT.c ****         #endif /* (0u == PWM_MOT_TC_START_SIGNAL_PRESENT) */
 196:Generated_Source\PSoC4/PWM_MOT.c ****     #endif /* (PWM_MOT__TIMER == PWM_MOT_CONFIG) */
 197:Generated_Source\PSoC4/PWM_MOT.c ****     
 198:Generated_Source\PSoC4/PWM_MOT.c ****     #if (PWM_MOT__QUAD == PWM_MOT_CONFIG)
 199:Generated_Source\PSoC4/PWM_MOT.c ****         #if (0u != PWM_MOT_QUAD_AUTO_START)
 200:Generated_Source\PSoC4/PWM_MOT.c ****             PWM_MOT_TriggerCommand(PWM_MOT_MASK, PWM_MOT_CMD_RELOAD);
 201:Generated_Source\PSoC4/PWM_MOT.c ****         #endif /* (0u != PWM_MOT_QUAD_AUTO_START) */
 202:Generated_Source\PSoC4/PWM_MOT.c ****     #endif  /* (PWM_MOT__QUAD == PWM_MOT_CONFIG) */
 203:Generated_Source\PSoC4/PWM_MOT.c **** }
 204:Generated_Source\PSoC4/PWM_MOT.c **** 
 205:Generated_Source\PSoC4/PWM_MOT.c **** 
 206:Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 207:Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_Start
 208:Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 209:Generated_Source\PSoC4/PWM_MOT.c **** *
 210:Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 211:Generated_Source\PSoC4/PWM_MOT.c **** *  Initializes the PWM_MOT with default customizer
 212:Generated_Source\PSoC4/PWM_MOT.c **** *  values when called the first time and enables the PWM_MOT.
 213:Generated_Source\PSoC4/PWM_MOT.c **** *  For subsequent calls the configuration is left unchanged and the component is
 214:Generated_Source\PSoC4/PWM_MOT.c **** *  just enabled.
 215:Generated_Source\PSoC4/PWM_MOT.c **** *
 216:Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 217:Generated_Source\PSoC4/PWM_MOT.c **** *  None
 218:Generated_Source\PSoC4/PWM_MOT.c **** *
 219:Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 220:Generated_Source\PSoC4/PWM_MOT.c **** *  None
 221:Generated_Source\PSoC4/PWM_MOT.c **** *
 222:Generated_Source\PSoC4/PWM_MOT.c **** * Global variables:
 223:Generated_Source\PSoC4/PWM_MOT.c **** *  PWM_MOT_initVar: global variable is used to indicate initial
 224:Generated_Source\PSoC4/PWM_MOT.c **** *  configuration of this component.  The variable is initialized to zero and set
 225:Generated_Source\PSoC4/PWM_MOT.c **** *  to 1 the first time PWM_MOT_Start() is called. This allows
 226:Generated_Source\PSoC4/PWM_MOT.c **** *  enabling/disabling a component without re-initialization in all subsequent
 227:Generated_Source\PSoC4/PWM_MOT.c **** *  calls to the PWM_MOT_Start() routine.
 228:Generated_Source\PSoC4/PWM_MOT.c **** *
 229:Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 230:Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_Start(void)
 231:Generated_Source\PSoC4/PWM_MOT.c **** {
 232:Generated_Source\PSoC4/PWM_MOT.c ****     if (0u == PWM_MOT_initVar)
 233:Generated_Source\PSoC4/PWM_MOT.c ****     {
 234:Generated_Source\PSoC4/PWM_MOT.c ****         PWM_MOT_Init();
 235:Generated_Source\PSoC4/PWM_MOT.c ****         PWM_MOT_initVar = 1u;
 236:Generated_Source\PSoC4/PWM_MOT.c ****     }
 237:Generated_Source\PSoC4/PWM_MOT.c **** 
 238:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_Enable();
 239:Generated_Source\PSoC4/PWM_MOT.c **** }
 240:Generated_Source\PSoC4/PWM_MOT.c **** 
 241:Generated_Source\PSoC4/PWM_MOT.c **** 
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 6


 242:Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 243:Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_Stop
 244:Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 245:Generated_Source\PSoC4/PWM_MOT.c **** *
 246:Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 247:Generated_Source\PSoC4/PWM_MOT.c **** *  Disables the PWM_MOT.
 248:Generated_Source\PSoC4/PWM_MOT.c **** *
 249:Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 250:Generated_Source\PSoC4/PWM_MOT.c **** *  None
 251:Generated_Source\PSoC4/PWM_MOT.c **** *
 252:Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 253:Generated_Source\PSoC4/PWM_MOT.c **** *  None
 254:Generated_Source\PSoC4/PWM_MOT.c **** *
 255:Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 256:Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_Stop(void)
 257:Generated_Source\PSoC4/PWM_MOT.c **** {
 258:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 259:Generated_Source\PSoC4/PWM_MOT.c **** 
 260:Generated_Source\PSoC4/PWM_MOT.c ****     enableInterrupts = CyEnterCriticalSection();
 261:Generated_Source\PSoC4/PWM_MOT.c **** 
 262:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_BLOCK_CONTROL_REG &= (uint32)~PWM_MOT_MASK;
 263:Generated_Source\PSoC4/PWM_MOT.c **** 
 264:Generated_Source\PSoC4/PWM_MOT.c ****     CyExitCriticalSection(enableInterrupts);
 265:Generated_Source\PSoC4/PWM_MOT.c **** }
 266:Generated_Source\PSoC4/PWM_MOT.c **** 
 267:Generated_Source\PSoC4/PWM_MOT.c **** 
 268:Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 269:Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_SetMode
 270:Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 271:Generated_Source\PSoC4/PWM_MOT.c **** *
 272:Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 273:Generated_Source\PSoC4/PWM_MOT.c **** *  Sets the operation mode of the PWM_MOT. This function is used when
 274:Generated_Source\PSoC4/PWM_MOT.c **** *  configured as a generic PWM_MOT and the actual mode of operation is
 275:Generated_Source\PSoC4/PWM_MOT.c **** *  set at runtime. The mode must be set while the component is disabled.
 276:Generated_Source\PSoC4/PWM_MOT.c **** *
 277:Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 278:Generated_Source\PSoC4/PWM_MOT.c **** *  mode: Mode for the PWM_MOT to operate in
 279:Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
 280:Generated_Source\PSoC4/PWM_MOT.c **** *   - PWM_MOT_MODE_TIMER_COMPARE - Timer / Counter with
 281:Generated_Source\PSoC4/PWM_MOT.c **** *                                                 compare capability
 282:Generated_Source\PSoC4/PWM_MOT.c **** *         - PWM_MOT_MODE_TIMER_CAPTURE - Timer / Counter with
 283:Generated_Source\PSoC4/PWM_MOT.c **** *                                                 capture capability
 284:Generated_Source\PSoC4/PWM_MOT.c **** *         - PWM_MOT_MODE_QUAD - Quadrature decoder
 285:Generated_Source\PSoC4/PWM_MOT.c **** *         - PWM_MOT_MODE_PWM - PWM
 286:Generated_Source\PSoC4/PWM_MOT.c **** *         - PWM_MOT_MODE_PWM_DT - PWM with dead time
 287:Generated_Source\PSoC4/PWM_MOT.c **** *         - PWM_MOT_MODE_PWM_PR - PWM with pseudo random capability
 288:Generated_Source\PSoC4/PWM_MOT.c **** *
 289:Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 290:Generated_Source\PSoC4/PWM_MOT.c **** *  None
 291:Generated_Source\PSoC4/PWM_MOT.c **** *
 292:Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 293:Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_SetMode(uint32 mode)
 294:Generated_Source\PSoC4/PWM_MOT.c **** {
 295:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 296:Generated_Source\PSoC4/PWM_MOT.c **** 
 297:Generated_Source\PSoC4/PWM_MOT.c ****     enableInterrupts = CyEnterCriticalSection();
 298:Generated_Source\PSoC4/PWM_MOT.c **** 
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 7


 299:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG &= (uint32)~PWM_MOT_MODE_MASK;
 300:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= mode;
 301:Generated_Source\PSoC4/PWM_MOT.c **** 
 302:Generated_Source\PSoC4/PWM_MOT.c ****     CyExitCriticalSection(enableInterrupts);
 303:Generated_Source\PSoC4/PWM_MOT.c **** }
 304:Generated_Source\PSoC4/PWM_MOT.c **** 
 305:Generated_Source\PSoC4/PWM_MOT.c **** 
 306:Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 307:Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_SetQDMode
 308:Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 309:Generated_Source\PSoC4/PWM_MOT.c **** *
 310:Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 311:Generated_Source\PSoC4/PWM_MOT.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 312:Generated_Source\PSoC4/PWM_MOT.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 313:Generated_Source\PSoC4/PWM_MOT.c **** *
 314:Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 315:Generated_Source\PSoC4/PWM_MOT.c **** *  qdMode: Quadrature Decoder mode
 316:Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
 317:Generated_Source\PSoC4/PWM_MOT.c **** *         - PWM_MOT_MODE_X1 - Counts on phi 1 rising
 318:Generated_Source\PSoC4/PWM_MOT.c **** *         - PWM_MOT_MODE_X2 - Counts on both edges of phi1 (2x faster)
 319:Generated_Source\PSoC4/PWM_MOT.c **** *         - PWM_MOT_MODE_X4 - Counts on both edges of phi1 and phi2
 320:Generated_Source\PSoC4/PWM_MOT.c **** *                                        (4x faster)
 321:Generated_Source\PSoC4/PWM_MOT.c **** *
 322:Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 323:Generated_Source\PSoC4/PWM_MOT.c **** *  None
 324:Generated_Source\PSoC4/PWM_MOT.c **** *
 325:Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 326:Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_SetQDMode(uint32 qdMode)
 327:Generated_Source\PSoC4/PWM_MOT.c **** {
 328:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 329:Generated_Source\PSoC4/PWM_MOT.c **** 
 330:Generated_Source\PSoC4/PWM_MOT.c ****     enableInterrupts = CyEnterCriticalSection();
 331:Generated_Source\PSoC4/PWM_MOT.c **** 
 332:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG &= (uint32)~PWM_MOT_QUAD_MODE_MASK;
 333:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= qdMode;
 334:Generated_Source\PSoC4/PWM_MOT.c **** 
 335:Generated_Source\PSoC4/PWM_MOT.c ****     CyExitCriticalSection(enableInterrupts);
 336:Generated_Source\PSoC4/PWM_MOT.c **** }
 337:Generated_Source\PSoC4/PWM_MOT.c **** 
 338:Generated_Source\PSoC4/PWM_MOT.c **** 
 339:Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 340:Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_SetPrescaler
 341:Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 342:Generated_Source\PSoC4/PWM_MOT.c **** *
 343:Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 344:Generated_Source\PSoC4/PWM_MOT.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 345:Generated_Source\PSoC4/PWM_MOT.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 346:Generated_Source\PSoC4/PWM_MOT.c **** *
 347:Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 348:Generated_Source\PSoC4/PWM_MOT.c **** *  prescaler: Prescaler divider value
 349:Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
 350:Generated_Source\PSoC4/PWM_MOT.c **** *         - PWM_MOT_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 351:Generated_Source\PSoC4/PWM_MOT.c **** *         - PWM_MOT_PRESCALE_DIVBY2    - Divide by 2
 352:Generated_Source\PSoC4/PWM_MOT.c **** *         - PWM_MOT_PRESCALE_DIVBY4    - Divide by 4
 353:Generated_Source\PSoC4/PWM_MOT.c **** *         - PWM_MOT_PRESCALE_DIVBY8    - Divide by 8
 354:Generated_Source\PSoC4/PWM_MOT.c **** *         - PWM_MOT_PRESCALE_DIVBY16   - Divide by 16
 355:Generated_Source\PSoC4/PWM_MOT.c **** *         - PWM_MOT_PRESCALE_DIVBY32   - Divide by 32
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 8


 356:Generated_Source\PSoC4/PWM_MOT.c **** *         - PWM_MOT_PRESCALE_DIVBY64   - Divide by 64
 357:Generated_Source\PSoC4/PWM_MOT.c **** *         - PWM_MOT_PRESCALE_DIVBY128  - Divide by 128
 358:Generated_Source\PSoC4/PWM_MOT.c **** *
 359:Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 360:Generated_Source\PSoC4/PWM_MOT.c **** *  None
 361:Generated_Source\PSoC4/PWM_MOT.c **** *
 362:Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 363:Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_SetPrescaler(uint32 prescaler)
 364:Generated_Source\PSoC4/PWM_MOT.c **** {
 365:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 366:Generated_Source\PSoC4/PWM_MOT.c **** 
 367:Generated_Source\PSoC4/PWM_MOT.c ****     enableInterrupts = CyEnterCriticalSection();
 368:Generated_Source\PSoC4/PWM_MOT.c **** 
 369:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG &= (uint32)~PWM_MOT_PRESCALER_MASK;
 370:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= prescaler;
 371:Generated_Source\PSoC4/PWM_MOT.c **** 
 372:Generated_Source\PSoC4/PWM_MOT.c ****     CyExitCriticalSection(enableInterrupts);
 373:Generated_Source\PSoC4/PWM_MOT.c **** }
 374:Generated_Source\PSoC4/PWM_MOT.c **** 
 375:Generated_Source\PSoC4/PWM_MOT.c **** 
 376:Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 377:Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_SetOneShot
 378:Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 379:Generated_Source\PSoC4/PWM_MOT.c **** *
 380:Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 381:Generated_Source\PSoC4/PWM_MOT.c **** *  Writes the register that controls whether the PWM_MOT runs
 382:Generated_Source\PSoC4/PWM_MOT.c **** *  continuously or stops when terminal count is reached.  By default the
 383:Generated_Source\PSoC4/PWM_MOT.c **** *  PWM_MOT operates in the continuous mode.
 384:Generated_Source\PSoC4/PWM_MOT.c **** *
 385:Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 386:Generated_Source\PSoC4/PWM_MOT.c **** *  oneShotEnable
 387:Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
 388:Generated_Source\PSoC4/PWM_MOT.c **** *     - 0 - Continuous
 389:Generated_Source\PSoC4/PWM_MOT.c **** *     - 1 - Enable One Shot
 390:Generated_Source\PSoC4/PWM_MOT.c **** *
 391:Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 392:Generated_Source\PSoC4/PWM_MOT.c **** *  None
 393:Generated_Source\PSoC4/PWM_MOT.c **** *
 394:Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 395:Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_SetOneShot(uint32 oneShotEnable)
 396:Generated_Source\PSoC4/PWM_MOT.c **** {
 397:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 398:Generated_Source\PSoC4/PWM_MOT.c **** 
 399:Generated_Source\PSoC4/PWM_MOT.c ****     enableInterrupts = CyEnterCriticalSection();
 400:Generated_Source\PSoC4/PWM_MOT.c **** 
 401:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG &= (uint32)~PWM_MOT_ONESHOT_MASK;
 402:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_MOT_1BIT_MASK) <<
 403:Generated_Source\PSoC4/PWM_MOT.c ****                                                                PWM_MOT_ONESHOT_SHIFT));
 404:Generated_Source\PSoC4/PWM_MOT.c **** 
 405:Generated_Source\PSoC4/PWM_MOT.c ****     CyExitCriticalSection(enableInterrupts);
 406:Generated_Source\PSoC4/PWM_MOT.c **** }
 407:Generated_Source\PSoC4/PWM_MOT.c **** 
 408:Generated_Source\PSoC4/PWM_MOT.c **** 
 409:Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 410:Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_SetPWMMode
 411:Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 412:Generated_Source\PSoC4/PWM_MOT.c **** *
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 9


 413:Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 414:Generated_Source\PSoC4/PWM_MOT.c **** *  Writes the control register that determines what mode of operation the PWM
 415:Generated_Source\PSoC4/PWM_MOT.c **** *  output lines are driven in.  There is a setting for what to do on a
 416:Generated_Source\PSoC4/PWM_MOT.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 417:Generated_Source\PSoC4/PWM_MOT.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 418:Generated_Source\PSoC4/PWM_MOT.c **** *  the mode.
 419:Generated_Source\PSoC4/PWM_MOT.c **** *
 420:Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 421:Generated_Source\PSoC4/PWM_MOT.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 422:Generated_Source\PSoC4/PWM_MOT.c **** *  for each of the three or use one of the preconfigured PWM settings.
 423:Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
 424:Generated_Source\PSoC4/PWM_MOT.c **** *     - CC_MATCH_SET        - Set on comparison match
 425:Generated_Source\PSoC4/PWM_MOT.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 426:Generated_Source\PSoC4/PWM_MOT.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 427:Generated_Source\PSoC4/PWM_MOT.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 428:Generated_Source\PSoC4/PWM_MOT.c **** *     - OVERLOW_SET         - Set on overflow
 429:Generated_Source\PSoC4/PWM_MOT.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 430:Generated_Source\PSoC4/PWM_MOT.c **** *     - OVERLOW_INVERT      - Invert on overflow
 431:Generated_Source\PSoC4/PWM_MOT.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 432:Generated_Source\PSoC4/PWM_MOT.c **** *     - UNDERFLOW_SET       - Set on underflow
 433:Generated_Source\PSoC4/PWM_MOT.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 434:Generated_Source\PSoC4/PWM_MOT.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 435:Generated_Source\PSoC4/PWM_MOT.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 436:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 437:Generated_Source\PSoC4/PWM_MOT.c **** *                             with up counting mode
 438:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 439:Generated_Source\PSoC4/PWM_MOT.c **** *                             with down counting mode
 440:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 441:Generated_Source\PSoC4/PWM_MOT.c **** *                             combined with up/down 0 mode
 442:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 443:Generated_Source\PSoC4/PWM_MOT.c **** *                             with up/down 1 mode
 444:Generated_Source\PSoC4/PWM_MOT.c **** *
 445:Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 446:Generated_Source\PSoC4/PWM_MOT.c **** *  None
 447:Generated_Source\PSoC4/PWM_MOT.c **** *
 448:Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 449:Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_SetPWMMode(uint32 modeMask)
 450:Generated_Source\PSoC4/PWM_MOT.c **** {
 451:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_TRIG_CONTROL2_REG = (modeMask & PWM_MOT_6BIT_MASK);
 452:Generated_Source\PSoC4/PWM_MOT.c **** }
 453:Generated_Source\PSoC4/PWM_MOT.c **** 
 454:Generated_Source\PSoC4/PWM_MOT.c **** 
 455:Generated_Source\PSoC4/PWM_MOT.c **** 
 456:Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 457:Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_SetPWMSyncKill
 458:Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 459:Generated_Source\PSoC4/PWM_MOT.c **** *
 460:Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 461:Generated_Source\PSoC4/PWM_MOT.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 462:Generated_Source\PSoC4/PWM_MOT.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 463:Generated_Source\PSoC4/PWM_MOT.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 464:Generated_Source\PSoC4/PWM_MOT.c **** *  and PWM with dead time modes.
 465:Generated_Source\PSoC4/PWM_MOT.c **** *
 466:Generated_Source\PSoC4/PWM_MOT.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 467:Generated_Source\PSoC4/PWM_MOT.c **** *  signals until the next terminal count.
 468:Generated_Source\PSoC4/PWM_MOT.c **** *
 469:Generated_Source\PSoC4/PWM_MOT.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 10


 470:Generated_Source\PSoC4/PWM_MOT.c **** *  signals when the kill signal is present.  This mode should only be used
 471:Generated_Source\PSoC4/PWM_MOT.c **** *  when the kill signal (stop input) is configured in the pass through mode
 472:Generated_Source\PSoC4/PWM_MOT.c **** *  (Level sensitive signal).
 473:Generated_Source\PSoC4/PWM_MOT.c **** 
 474:Generated_Source\PSoC4/PWM_MOT.c **** *
 475:Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 476:Generated_Source\PSoC4/PWM_MOT.c **** *  syncKillEnable
 477:Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
 478:Generated_Source\PSoC4/PWM_MOT.c **** *     - 0 - Asynchronous
 479:Generated_Source\PSoC4/PWM_MOT.c **** *     - 1 - Synchronous
 480:Generated_Source\PSoC4/PWM_MOT.c **** *
 481:Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 482:Generated_Source\PSoC4/PWM_MOT.c **** *  None
 483:Generated_Source\PSoC4/PWM_MOT.c **** *
 484:Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 485:Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_SetPWMSyncKill(uint32 syncKillEnable)
 486:Generated_Source\PSoC4/PWM_MOT.c **** {
 487:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 488:Generated_Source\PSoC4/PWM_MOT.c **** 
 489:Generated_Source\PSoC4/PWM_MOT.c ****     enableInterrupts = CyEnterCriticalSection();
 490:Generated_Source\PSoC4/PWM_MOT.c **** 
 491:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG &= (uint32)~PWM_MOT_PWM_SYNC_KILL_MASK;
 492:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_MOT_1BIT_MASK)  <<
 493:Generated_Source\PSoC4/PWM_MOT.c ****                                                PWM_MOT_PWM_SYNC_KILL_SHIFT));
 494:Generated_Source\PSoC4/PWM_MOT.c **** 
 495:Generated_Source\PSoC4/PWM_MOT.c ****     CyExitCriticalSection(enableInterrupts);
 496:Generated_Source\PSoC4/PWM_MOT.c **** }
 497:Generated_Source\PSoC4/PWM_MOT.c **** 
 498:Generated_Source\PSoC4/PWM_MOT.c **** 
 499:Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 500:Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_SetPWMStopOnKill
 501:Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 502:Generated_Source\PSoC4/PWM_MOT.c **** *
 503:Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 504:Generated_Source\PSoC4/PWM_MOT.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 505:Generated_Source\PSoC4/PWM_MOT.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 506:Generated_Source\PSoC4/PWM_MOT.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 507:Generated_Source\PSoC4/PWM_MOT.c **** *
 508:Generated_Source\PSoC4/PWM_MOT.c **** *
 509:Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 510:Generated_Source\PSoC4/PWM_MOT.c **** *  stopOnKillEnable
 511:Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
 512:Generated_Source\PSoC4/PWM_MOT.c **** *     - 0 - Don't stop
 513:Generated_Source\PSoC4/PWM_MOT.c **** *     - 1 - Stop
 514:Generated_Source\PSoC4/PWM_MOT.c **** *
 515:Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 516:Generated_Source\PSoC4/PWM_MOT.c **** *  None
 517:Generated_Source\PSoC4/PWM_MOT.c **** *
 518:Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 519:Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_SetPWMStopOnKill(uint32 stopOnKillEnable)
 520:Generated_Source\PSoC4/PWM_MOT.c **** {
 521:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 522:Generated_Source\PSoC4/PWM_MOT.c **** 
 523:Generated_Source\PSoC4/PWM_MOT.c ****     enableInterrupts = CyEnterCriticalSection();
 524:Generated_Source\PSoC4/PWM_MOT.c **** 
 525:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG &= (uint32)~PWM_MOT_PWM_STOP_KILL_MASK;
 526:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_MOT_1BIT_MASK)  <<
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 11


 527:Generated_Source\PSoC4/PWM_MOT.c ****                                                          PWM_MOT_PWM_STOP_KILL_SHIFT));
 528:Generated_Source\PSoC4/PWM_MOT.c **** 
 529:Generated_Source\PSoC4/PWM_MOT.c ****     CyExitCriticalSection(enableInterrupts);
 530:Generated_Source\PSoC4/PWM_MOT.c **** }
 531:Generated_Source\PSoC4/PWM_MOT.c **** 
 532:Generated_Source\PSoC4/PWM_MOT.c **** 
 533:Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 534:Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_SetPWMDeadTime
 535:Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 536:Generated_Source\PSoC4/PWM_MOT.c **** *
 537:Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 538:Generated_Source\PSoC4/PWM_MOT.c **** *  Writes the dead time control value.  This value delays the rising edge of
 539:Generated_Source\PSoC4/PWM_MOT.c **** *  both the line and line_n signals the designated number of cycles resulting
 540:Generated_Source\PSoC4/PWM_MOT.c **** *  in both signals being inactive for that many cycles.  This functionality is
 541:Generated_Source\PSoC4/PWM_MOT.c **** *  only applicable to the PWM in the dead time mode.
 542:Generated_Source\PSoC4/PWM_MOT.c **** 
 543:Generated_Source\PSoC4/PWM_MOT.c **** *
 544:Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 545:Generated_Source\PSoC4/PWM_MOT.c **** *  Dead time to insert
 546:Generated_Source\PSoC4/PWM_MOT.c **** *   Values: 0 to 255
 547:Generated_Source\PSoC4/PWM_MOT.c **** *
 548:Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 549:Generated_Source\PSoC4/PWM_MOT.c **** *  None
 550:Generated_Source\PSoC4/PWM_MOT.c **** *
 551:Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 552:Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_SetPWMDeadTime(uint32 deadTime)
 553:Generated_Source\PSoC4/PWM_MOT.c **** {
 554:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 555:Generated_Source\PSoC4/PWM_MOT.c **** 
 556:Generated_Source\PSoC4/PWM_MOT.c ****     enableInterrupts = CyEnterCriticalSection();
 557:Generated_Source\PSoC4/PWM_MOT.c **** 
 558:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG &= (uint32)~PWM_MOT_PRESCALER_MASK;
 559:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= ((uint32)((deadTime & PWM_MOT_8BIT_MASK) <<
 560:Generated_Source\PSoC4/PWM_MOT.c ****                                                           PWM_MOT_PRESCALER_SHIFT));
 561:Generated_Source\PSoC4/PWM_MOT.c **** 
 562:Generated_Source\PSoC4/PWM_MOT.c ****     CyExitCriticalSection(enableInterrupts);
 563:Generated_Source\PSoC4/PWM_MOT.c **** }
 564:Generated_Source\PSoC4/PWM_MOT.c **** 
 565:Generated_Source\PSoC4/PWM_MOT.c **** 
 566:Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 567:Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_SetPWMInvert
 568:Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 569:Generated_Source\PSoC4/PWM_MOT.c **** *
 570:Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 571:Generated_Source\PSoC4/PWM_MOT.c **** *  Writes the bits that control whether the line and line_n outputs are
 572:Generated_Source\PSoC4/PWM_MOT.c **** *  inverted from their normal output values.  This functionality is only
 573:Generated_Source\PSoC4/PWM_MOT.c **** *  applicable to the three PWM modes.
 574:Generated_Source\PSoC4/PWM_MOT.c **** *
 575:Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 576:Generated_Source\PSoC4/PWM_MOT.c **** *  mask: Mask of outputs to invert.
 577:Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
 578:Generated_Source\PSoC4/PWM_MOT.c **** *         - PWM_MOT_INVERT_LINE   - Inverts the line output
 579:Generated_Source\PSoC4/PWM_MOT.c **** *         - PWM_MOT_INVERT_LINE_N - Inverts the line_n output
 580:Generated_Source\PSoC4/PWM_MOT.c **** *
 581:Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 582:Generated_Source\PSoC4/PWM_MOT.c **** *  None
 583:Generated_Source\PSoC4/PWM_MOT.c **** *
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 12


 584:Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 585:Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_SetPWMInvert(uint32 mask)
 586:Generated_Source\PSoC4/PWM_MOT.c **** {
 587:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 588:Generated_Source\PSoC4/PWM_MOT.c **** 
 589:Generated_Source\PSoC4/PWM_MOT.c ****     enableInterrupts = CyEnterCriticalSection();
 590:Generated_Source\PSoC4/PWM_MOT.c **** 
 591:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG &= (uint32)~PWM_MOT_INV_OUT_MASK;
 592:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= mask;
 593:Generated_Source\PSoC4/PWM_MOT.c **** 
 594:Generated_Source\PSoC4/PWM_MOT.c ****     CyExitCriticalSection(enableInterrupts);
 595:Generated_Source\PSoC4/PWM_MOT.c **** }
 596:Generated_Source\PSoC4/PWM_MOT.c **** 
 597:Generated_Source\PSoC4/PWM_MOT.c **** 
 598:Generated_Source\PSoC4/PWM_MOT.c **** 
 599:Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 600:Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_WriteCounter
 601:Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 602:Generated_Source\PSoC4/PWM_MOT.c **** *
 603:Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 604:Generated_Source\PSoC4/PWM_MOT.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 605:Generated_Source\PSoC4/PWM_MOT.c **** *  setting the counter (not the period) to the value written. It is not
 606:Generated_Source\PSoC4/PWM_MOT.c **** *  advised to write to this field when the counter is running.
 607:Generated_Source\PSoC4/PWM_MOT.c **** *
 608:Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 609:Generated_Source\PSoC4/PWM_MOT.c **** *  count: value to write
 610:Generated_Source\PSoC4/PWM_MOT.c **** *
 611:Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 612:Generated_Source\PSoC4/PWM_MOT.c **** *  None
 613:Generated_Source\PSoC4/PWM_MOT.c **** *
 614:Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 615:Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_WriteCounter(uint32 count)
 616:Generated_Source\PSoC4/PWM_MOT.c **** {
 617:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_COUNTER_REG = (count & PWM_MOT_16BIT_MASK);
  44              		.loc 1 617 0
  45 0012 0022     		mov	r2, #0
  46 0014 0B49     		ldr	r1, .L2+4
  47              	.LBE23:
  48              	.LBE22:
 160:Generated_Source\PSoC4/PWM_MOT.c **** 
  49              		.loc 1 160 0
  50              		@ sp needed
  51              	.LBB25:
  52              	.LBB24:
  53              		.loc 1 617 0
  54 0016 0A60     		str	r2, [r1]
  55              	.LBE24:
  56              	.LBE25:
 112:Generated_Source\PSoC4/PWM_MOT.c ****         #endif  /* (PWM_MOT__PWM == PWM_MOT_PWM_MODE) */
  57              		.loc 1 112 0
  58 0018 1968     		ldr	r1, [r3]
  59 001a 1960     		str	r1, [r3]
 116:Generated_Source\PSoC4/PWM_MOT.c ****     
  60              		.loc 1 116 0
  61 001c C321     		mov	r1, #195
  62 001e 0A4B     		ldr	r3, .L2+8
  63 0020 8900     		lsl	r1, r1, #2
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 13


  64 0022 1960     		str	r1, [r3]
  65              	.LVL1:
  66              	.LBB26:
  67              	.LBB27:
 618:Generated_Source\PSoC4/PWM_MOT.c **** }
 619:Generated_Source\PSoC4/PWM_MOT.c **** 
 620:Generated_Source\PSoC4/PWM_MOT.c **** 
 621:Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_ReadCounter
 623:Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 624:Generated_Source\PSoC4/PWM_MOT.c **** *
 625:Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 626:Generated_Source\PSoC4/PWM_MOT.c **** *  Reads the current counter value.
 627:Generated_Source\PSoC4/PWM_MOT.c **** *
 628:Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 629:Generated_Source\PSoC4/PWM_MOT.c **** *  None
 630:Generated_Source\PSoC4/PWM_MOT.c **** *
 631:Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 632:Generated_Source\PSoC4/PWM_MOT.c **** *  Current counter value
 633:Generated_Source\PSoC4/PWM_MOT.c **** *
 634:Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 635:Generated_Source\PSoC4/PWM_MOT.c **** uint32 PWM_MOT_ReadCounter(void)
 636:Generated_Source\PSoC4/PWM_MOT.c **** {
 637:Generated_Source\PSoC4/PWM_MOT.c ****     return (PWM_MOT_COUNTER_REG & PWM_MOT_16BIT_MASK);
 638:Generated_Source\PSoC4/PWM_MOT.c **** }
 639:Generated_Source\PSoC4/PWM_MOT.c **** 
 640:Generated_Source\PSoC4/PWM_MOT.c **** 
 641:Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 642:Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_SetCounterMode
 643:Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 644:Generated_Source\PSoC4/PWM_MOT.c **** *
 645:Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 646:Generated_Source\PSoC4/PWM_MOT.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 647:Generated_Source\PSoC4/PWM_MOT.c **** *  and the PWM with a pseudo random output.
 648:Generated_Source\PSoC4/PWM_MOT.c **** *
 649:Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 650:Generated_Source\PSoC4/PWM_MOT.c **** *  counterMode: Enumerated counter type values
 651:Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
 652:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_COUNT_UP       - Counts up
 653:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_COUNT_DOWN     - Counts down
 654:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_COUNT_UPDOWN0  - Counts up and down. Terminal count
 655:Generated_Source\PSoC4/PWM_MOT.c **** *                                         generated when counter reaches 0
 656:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_COUNT_UPDOWN1  - Counts up and down. Terminal count
 657:Generated_Source\PSoC4/PWM_MOT.c **** *                                         generated both when counter reaches 0
 658:Generated_Source\PSoC4/PWM_MOT.c **** *                                         and period
 659:Generated_Source\PSoC4/PWM_MOT.c **** *
 660:Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 661:Generated_Source\PSoC4/PWM_MOT.c **** *  None
 662:Generated_Source\PSoC4/PWM_MOT.c **** *
 663:Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 664:Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_SetCounterMode(uint32 counterMode)
 665:Generated_Source\PSoC4/PWM_MOT.c **** {
 666:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 667:Generated_Source\PSoC4/PWM_MOT.c **** 
 668:Generated_Source\PSoC4/PWM_MOT.c ****     enableInterrupts = CyEnterCriticalSection();
 669:Generated_Source\PSoC4/PWM_MOT.c **** 
 670:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG &= (uint32)~PWM_MOT_UPDOWN_MASK;
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 14


 671:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= counterMode;
 672:Generated_Source\PSoC4/PWM_MOT.c **** 
 673:Generated_Source\PSoC4/PWM_MOT.c ****     CyExitCriticalSection(enableInterrupts);
 674:Generated_Source\PSoC4/PWM_MOT.c **** }
 675:Generated_Source\PSoC4/PWM_MOT.c **** 
 676:Generated_Source\PSoC4/PWM_MOT.c **** 
 677:Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 678:Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_WritePeriod
 679:Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 680:Generated_Source\PSoC4/PWM_MOT.c **** *
 681:Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 682:Generated_Source\PSoC4/PWM_MOT.c **** *  Writes the 16 bit period register with the new period value.
 683:Generated_Source\PSoC4/PWM_MOT.c **** *  To cause the counter to count for N cycles this register should be written
 684:Generated_Source\PSoC4/PWM_MOT.c **** *  with N-1 (counts from 0 to period inclusive).
 685:Generated_Source\PSoC4/PWM_MOT.c **** *
 686:Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 687:Generated_Source\PSoC4/PWM_MOT.c **** *  period: Period value
 688:Generated_Source\PSoC4/PWM_MOT.c **** *
 689:Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 690:Generated_Source\PSoC4/PWM_MOT.c **** *  None
 691:Generated_Source\PSoC4/PWM_MOT.c **** *
 692:Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 693:Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_WritePeriod(uint32 period)
 694:Generated_Source\PSoC4/PWM_MOT.c **** {
 695:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_PERIOD_REG = (period & PWM_MOT_16BIT_MASK);
 696:Generated_Source\PSoC4/PWM_MOT.c **** }
 697:Generated_Source\PSoC4/PWM_MOT.c **** 
 698:Generated_Source\PSoC4/PWM_MOT.c **** 
 699:Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 700:Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_ReadPeriod
 701:Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 702:Generated_Source\PSoC4/PWM_MOT.c **** *
 703:Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 704:Generated_Source\PSoC4/PWM_MOT.c **** *  Reads the 16 bit period register.
 705:Generated_Source\PSoC4/PWM_MOT.c **** *
 706:Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 707:Generated_Source\PSoC4/PWM_MOT.c **** *  None
 708:Generated_Source\PSoC4/PWM_MOT.c **** *
 709:Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 710:Generated_Source\PSoC4/PWM_MOT.c **** *  Period value
 711:Generated_Source\PSoC4/PWM_MOT.c **** *
 712:Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 713:Generated_Source\PSoC4/PWM_MOT.c **** uint32 PWM_MOT_ReadPeriod(void)
 714:Generated_Source\PSoC4/PWM_MOT.c **** {
 715:Generated_Source\PSoC4/PWM_MOT.c ****     return (PWM_MOT_PERIOD_REG & PWM_MOT_16BIT_MASK);
 716:Generated_Source\PSoC4/PWM_MOT.c **** }
 717:Generated_Source\PSoC4/PWM_MOT.c **** 
 718:Generated_Source\PSoC4/PWM_MOT.c **** 
 719:Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 720:Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_SetCompareSwap
 721:Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 722:Generated_Source\PSoC4/PWM_MOT.c **** *
 723:Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 724:Generated_Source\PSoC4/PWM_MOT.c **** *  Writes the register that controls whether the compare registers are
 725:Generated_Source\PSoC4/PWM_MOT.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 726:Generated_Source\PSoC4/PWM_MOT.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 727:Generated_Source\PSoC4/PWM_MOT.c **** *  following a hardware switch event.
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 15


 728:Generated_Source\PSoC4/PWM_MOT.c **** *
 729:Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 730:Generated_Source\PSoC4/PWM_MOT.c **** *  swapEnable
 731:Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
 732:Generated_Source\PSoC4/PWM_MOT.c **** *     - 0 - Disable swap
 733:Generated_Source\PSoC4/PWM_MOT.c **** *     - 1 - Enable swap
 734:Generated_Source\PSoC4/PWM_MOT.c **** *
 735:Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 736:Generated_Source\PSoC4/PWM_MOT.c **** *  None
 737:Generated_Source\PSoC4/PWM_MOT.c **** *
 738:Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 739:Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_SetCompareSwap(uint32 swapEnable)
 740:Generated_Source\PSoC4/PWM_MOT.c **** {
 741:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 742:Generated_Source\PSoC4/PWM_MOT.c **** 
 743:Generated_Source\PSoC4/PWM_MOT.c ****     enableInterrupts = CyEnterCriticalSection();
 744:Generated_Source\PSoC4/PWM_MOT.c **** 
 745:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG &= (uint32)~PWM_MOT_RELOAD_CC_MASK;
 746:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= (swapEnable & PWM_MOT_1BIT_MASK);
 747:Generated_Source\PSoC4/PWM_MOT.c **** 
 748:Generated_Source\PSoC4/PWM_MOT.c ****     CyExitCriticalSection(enableInterrupts);
 749:Generated_Source\PSoC4/PWM_MOT.c **** }
 750:Generated_Source\PSoC4/PWM_MOT.c **** 
 751:Generated_Source\PSoC4/PWM_MOT.c **** 
 752:Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 753:Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_WritePeriodBuf
 754:Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 755:Generated_Source\PSoC4/PWM_MOT.c **** *
 756:Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 757:Generated_Source\PSoC4/PWM_MOT.c **** *  Writes the 16 bit period buf register with the new period value.
 758:Generated_Source\PSoC4/PWM_MOT.c **** *
 759:Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 760:Generated_Source\PSoC4/PWM_MOT.c **** *  periodBuf: Period value
 761:Generated_Source\PSoC4/PWM_MOT.c **** *
 762:Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 763:Generated_Source\PSoC4/PWM_MOT.c **** *  None
 764:Generated_Source\PSoC4/PWM_MOT.c **** *
 765:Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 766:Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_WritePeriodBuf(uint32 periodBuf)
 767:Generated_Source\PSoC4/PWM_MOT.c **** {
 768:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_PERIOD_BUF_REG = (periodBuf & PWM_MOT_16BIT_MASK);
 769:Generated_Source\PSoC4/PWM_MOT.c **** }
 770:Generated_Source\PSoC4/PWM_MOT.c **** 
 771:Generated_Source\PSoC4/PWM_MOT.c **** 
 772:Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 773:Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_ReadPeriodBuf
 774:Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 775:Generated_Source\PSoC4/PWM_MOT.c **** *
 776:Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 777:Generated_Source\PSoC4/PWM_MOT.c **** *  Reads the 16 bit period buf register.
 778:Generated_Source\PSoC4/PWM_MOT.c **** *
 779:Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 780:Generated_Source\PSoC4/PWM_MOT.c **** *  None
 781:Generated_Source\PSoC4/PWM_MOT.c **** *
 782:Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 783:Generated_Source\PSoC4/PWM_MOT.c **** *  Period value
 784:Generated_Source\PSoC4/PWM_MOT.c **** *
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 16


 785:Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 786:Generated_Source\PSoC4/PWM_MOT.c **** uint32 PWM_MOT_ReadPeriodBuf(void)
 787:Generated_Source\PSoC4/PWM_MOT.c **** {
 788:Generated_Source\PSoC4/PWM_MOT.c ****     return (PWM_MOT_PERIOD_BUF_REG & PWM_MOT_16BIT_MASK);
 789:Generated_Source\PSoC4/PWM_MOT.c **** }
 790:Generated_Source\PSoC4/PWM_MOT.c **** 
 791:Generated_Source\PSoC4/PWM_MOT.c **** 
 792:Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 793:Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_SetPeriodSwap
 794:Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 795:Generated_Source\PSoC4/PWM_MOT.c **** *
 796:Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 797:Generated_Source\PSoC4/PWM_MOT.c **** *  Writes the register that controls whether the period registers are
 798:Generated_Source\PSoC4/PWM_MOT.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 799:Generated_Source\PSoC4/PWM_MOT.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 800:Generated_Source\PSoC4/PWM_MOT.c **** *  switch event.
 801:Generated_Source\PSoC4/PWM_MOT.c **** *
 802:Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 803:Generated_Source\PSoC4/PWM_MOT.c **** *  swapEnable
 804:Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
 805:Generated_Source\PSoC4/PWM_MOT.c **** *     - 0 - Disable swap
 806:Generated_Source\PSoC4/PWM_MOT.c **** *     - 1 - Enable swap
 807:Generated_Source\PSoC4/PWM_MOT.c **** *
 808:Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 809:Generated_Source\PSoC4/PWM_MOT.c **** *  None
 810:Generated_Source\PSoC4/PWM_MOT.c **** *
 811:Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 812:Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_SetPeriodSwap(uint32 swapEnable)
 813:Generated_Source\PSoC4/PWM_MOT.c **** {
 814:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 815:Generated_Source\PSoC4/PWM_MOT.c **** 
 816:Generated_Source\PSoC4/PWM_MOT.c ****     enableInterrupts = CyEnterCriticalSection();
 817:Generated_Source\PSoC4/PWM_MOT.c **** 
 818:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG &= (uint32)~PWM_MOT_RELOAD_PERIOD_MASK;
 819:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= ((uint32)((swapEnable & PWM_MOT_1BIT_MASK) <<
 820:Generated_Source\PSoC4/PWM_MOT.c ****                                                             PWM_MOT_RELOAD_PERIOD_SHIFT));
 821:Generated_Source\PSoC4/PWM_MOT.c **** 
 822:Generated_Source\PSoC4/PWM_MOT.c ****     CyExitCriticalSection(enableInterrupts);
 823:Generated_Source\PSoC4/PWM_MOT.c **** }
 824:Generated_Source\PSoC4/PWM_MOT.c **** 
 825:Generated_Source\PSoC4/PWM_MOT.c **** 
 826:Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 827:Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_WriteCompare
 828:Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 829:Generated_Source\PSoC4/PWM_MOT.c **** *
 830:Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 831:Generated_Source\PSoC4/PWM_MOT.c **** *  Writes the 16 bit compare register with the new compare value. Not
 832:Generated_Source\PSoC4/PWM_MOT.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 833:Generated_Source\PSoC4/PWM_MOT.c **** *
 834:Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 835:Generated_Source\PSoC4/PWM_MOT.c **** *  compare: Compare value
 836:Generated_Source\PSoC4/PWM_MOT.c **** *
 837:Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 838:Generated_Source\PSoC4/PWM_MOT.c **** *  None
 839:Generated_Source\PSoC4/PWM_MOT.c **** *
 840:Generated_Source\PSoC4/PWM_MOT.c **** * Note:
 841:Generated_Source\PSoC4/PWM_MOT.c **** *  It is not recommended to use the value equal to "0" or equal to 
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 17


 842:Generated_Source\PSoC4/PWM_MOT.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 843:Generated_Source\PSoC4/PWM_MOT.c **** *  PSoC 4100/PSoC 4200 devices.
 844:Generated_Source\PSoC4/PWM_MOT.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 845:Generated_Source\PSoC4/PWM_MOT.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 846:Generated_Source\PSoC4/PWM_MOT.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 847:Generated_Source\PSoC4/PWM_MOT.c **** *
 848:Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 849:Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_WriteCompare(uint32 compare)
 850:Generated_Source\PSoC4/PWM_MOT.c **** {
 851:Generated_Source\PSoC4/PWM_MOT.c ****     #if (PWM_MOT_CY_TCPWM_4000)
 852:Generated_Source\PSoC4/PWM_MOT.c ****         uint32 currentMode;
 853:Generated_Source\PSoC4/PWM_MOT.c ****     #endif /* (PWM_MOT_CY_TCPWM_4000) */
 854:Generated_Source\PSoC4/PWM_MOT.c **** 
 855:Generated_Source\PSoC4/PWM_MOT.c ****     #if (PWM_MOT_CY_TCPWM_4000)
 856:Generated_Source\PSoC4/PWM_MOT.c ****         currentMode = ((PWM_MOT_CONTROL_REG & PWM_MOT_UPDOWN_MASK) >> PWM_MOT_UPDOWN_SHIFT);
 857:Generated_Source\PSoC4/PWM_MOT.c **** 
 858:Generated_Source\PSoC4/PWM_MOT.c ****         if (((uint32)PWM_MOT__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 859:Generated_Source\PSoC4/PWM_MOT.c ****         {
 860:Generated_Source\PSoC4/PWM_MOT.c ****             compare++;
 861:Generated_Source\PSoC4/PWM_MOT.c ****         }
 862:Generated_Source\PSoC4/PWM_MOT.c ****         else if (((uint32)PWM_MOT__COUNT_UP == currentMode) && (0u != compare))
 863:Generated_Source\PSoC4/PWM_MOT.c ****         {
 864:Generated_Source\PSoC4/PWM_MOT.c ****             compare--;
 865:Generated_Source\PSoC4/PWM_MOT.c ****         }
 866:Generated_Source\PSoC4/PWM_MOT.c ****         else
 867:Generated_Source\PSoC4/PWM_MOT.c ****         {
 868:Generated_Source\PSoC4/PWM_MOT.c ****         }
 869:Generated_Source\PSoC4/PWM_MOT.c ****         
 870:Generated_Source\PSoC4/PWM_MOT.c ****     
 871:Generated_Source\PSoC4/PWM_MOT.c ****     #endif /* (PWM_MOT_CY_TCPWM_4000) */
 872:Generated_Source\PSoC4/PWM_MOT.c ****     
 873:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_COMP_CAP_REG = (compare & PWM_MOT_16BIT_MASK);
 874:Generated_Source\PSoC4/PWM_MOT.c **** }
 875:Generated_Source\PSoC4/PWM_MOT.c **** 
 876:Generated_Source\PSoC4/PWM_MOT.c **** 
 877:Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 878:Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_ReadCompare
 879:Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 880:Generated_Source\PSoC4/PWM_MOT.c **** *
 881:Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 882:Generated_Source\PSoC4/PWM_MOT.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 883:Generated_Source\PSoC4/PWM_MOT.c **** *  or in Quadrature Decoder modes.
 884:Generated_Source\PSoC4/PWM_MOT.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 885:Generated_Source\PSoC4/PWM_MOT.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 886:Generated_Source\PSoC4/PWM_MOT.c **** *  Down counting mode (except 0x0u).
 887:Generated_Source\PSoC4/PWM_MOT.c **** *
 888:Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 889:Generated_Source\PSoC4/PWM_MOT.c **** *  None
 890:Generated_Source\PSoC4/PWM_MOT.c **** *
 891:Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 892:Generated_Source\PSoC4/PWM_MOT.c **** *  Compare value
 893:Generated_Source\PSoC4/PWM_MOT.c **** *
 894:Generated_Source\PSoC4/PWM_MOT.c **** * Note:
 895:Generated_Source\PSoC4/PWM_MOT.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 896:Generated_Source\PSoC4/PWM_MOT.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 897:Generated_Source\PSoC4/PWM_MOT.c **** *  Down counting mode (except 0x0u).
 898:Generated_Source\PSoC4/PWM_MOT.c **** *
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 18


 899:Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 900:Generated_Source\PSoC4/PWM_MOT.c **** uint32 PWM_MOT_ReadCompare(void)
 901:Generated_Source\PSoC4/PWM_MOT.c **** {
 902:Generated_Source\PSoC4/PWM_MOT.c ****     #if (PWM_MOT_CY_TCPWM_4000)
 903:Generated_Source\PSoC4/PWM_MOT.c ****         uint32 currentMode;
 904:Generated_Source\PSoC4/PWM_MOT.c ****         uint32 regVal;
 905:Generated_Source\PSoC4/PWM_MOT.c ****     #endif /* (PWM_MOT_CY_TCPWM_4000) */
 906:Generated_Source\PSoC4/PWM_MOT.c **** 
 907:Generated_Source\PSoC4/PWM_MOT.c ****     #if (PWM_MOT_CY_TCPWM_4000)
 908:Generated_Source\PSoC4/PWM_MOT.c ****         currentMode = ((PWM_MOT_CONTROL_REG & PWM_MOT_UPDOWN_MASK) >> PWM_MOT_UPDOWN_SHIFT);
 909:Generated_Source\PSoC4/PWM_MOT.c ****         
 910:Generated_Source\PSoC4/PWM_MOT.c ****         regVal = PWM_MOT_COMP_CAP_REG;
 911:Generated_Source\PSoC4/PWM_MOT.c ****         
 912:Generated_Source\PSoC4/PWM_MOT.c ****         if (((uint32)PWM_MOT__COUNT_DOWN == currentMode) && (0u != regVal))
 913:Generated_Source\PSoC4/PWM_MOT.c ****         {
 914:Generated_Source\PSoC4/PWM_MOT.c ****             regVal--;
 915:Generated_Source\PSoC4/PWM_MOT.c ****         }
 916:Generated_Source\PSoC4/PWM_MOT.c ****         else if (((uint32)PWM_MOT__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 917:Generated_Source\PSoC4/PWM_MOT.c ****         {
 918:Generated_Source\PSoC4/PWM_MOT.c ****             regVal++;
 919:Generated_Source\PSoC4/PWM_MOT.c ****         }
 920:Generated_Source\PSoC4/PWM_MOT.c ****         else
 921:Generated_Source\PSoC4/PWM_MOT.c ****         {
 922:Generated_Source\PSoC4/PWM_MOT.c ****         }
 923:Generated_Source\PSoC4/PWM_MOT.c **** 
 924:Generated_Source\PSoC4/PWM_MOT.c ****         return (regVal & PWM_MOT_16BIT_MASK);
 925:Generated_Source\PSoC4/PWM_MOT.c ****     #else
 926:Generated_Source\PSoC4/PWM_MOT.c ****         return (PWM_MOT_COMP_CAP_REG & PWM_MOT_16BIT_MASK);
 927:Generated_Source\PSoC4/PWM_MOT.c ****     #endif /* (PWM_MOT_CY_TCPWM_4000) */
 928:Generated_Source\PSoC4/PWM_MOT.c **** }
 929:Generated_Source\PSoC4/PWM_MOT.c **** 
 930:Generated_Source\PSoC4/PWM_MOT.c **** 
 931:Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 932:Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_WriteCompareBuf
 933:Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 934:Generated_Source\PSoC4/PWM_MOT.c **** *
 935:Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 936:Generated_Source\PSoC4/PWM_MOT.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 937:Generated_Source\PSoC4/PWM_MOT.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 938:Generated_Source\PSoC4/PWM_MOT.c **** *
 939:Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 940:Generated_Source\PSoC4/PWM_MOT.c **** *  compareBuf: Compare value
 941:Generated_Source\PSoC4/PWM_MOT.c **** *
 942:Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 943:Generated_Source\PSoC4/PWM_MOT.c **** *  None
 944:Generated_Source\PSoC4/PWM_MOT.c **** *
 945:Generated_Source\PSoC4/PWM_MOT.c **** * Note:
 946:Generated_Source\PSoC4/PWM_MOT.c **** *  It is not recommended to use the value equal to "0" or equal to 
 947:Generated_Source\PSoC4/PWM_MOT.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 948:Generated_Source\PSoC4/PWM_MOT.c **** *  PSoC 4100/PSoC 4200 devices.
 949:Generated_Source\PSoC4/PWM_MOT.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 950:Generated_Source\PSoC4/PWM_MOT.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 951:Generated_Source\PSoC4/PWM_MOT.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 952:Generated_Source\PSoC4/PWM_MOT.c **** *
 953:Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
 954:Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_WriteCompareBuf(uint32 compareBuf)
 955:Generated_Source\PSoC4/PWM_MOT.c **** {
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 19


 956:Generated_Source\PSoC4/PWM_MOT.c ****     #if (PWM_MOT_CY_TCPWM_4000)
 957:Generated_Source\PSoC4/PWM_MOT.c ****         uint32 currentMode;
 958:Generated_Source\PSoC4/PWM_MOT.c ****     #endif /* (PWM_MOT_CY_TCPWM_4000) */
 959:Generated_Source\PSoC4/PWM_MOT.c **** 
 960:Generated_Source\PSoC4/PWM_MOT.c ****     #if (PWM_MOT_CY_TCPWM_4000)
 961:Generated_Source\PSoC4/PWM_MOT.c ****         currentMode = ((PWM_MOT_CONTROL_REG & PWM_MOT_UPDOWN_MASK) >> PWM_MOT_UPDOWN_SHIFT);
 962:Generated_Source\PSoC4/PWM_MOT.c **** 
 963:Generated_Source\PSoC4/PWM_MOT.c ****         if (((uint32)PWM_MOT__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 964:Generated_Source\PSoC4/PWM_MOT.c ****         {
 965:Generated_Source\PSoC4/PWM_MOT.c ****             compareBuf++;
 966:Generated_Source\PSoC4/PWM_MOT.c ****         }
 967:Generated_Source\PSoC4/PWM_MOT.c ****         else if (((uint32)PWM_MOT__COUNT_UP == currentMode) && (0u != compareBuf))
 968:Generated_Source\PSoC4/PWM_MOT.c ****         {
 969:Generated_Source\PSoC4/PWM_MOT.c ****             compareBuf --;
 970:Generated_Source\PSoC4/PWM_MOT.c ****         }
 971:Generated_Source\PSoC4/PWM_MOT.c ****         else
 972:Generated_Source\PSoC4/PWM_MOT.c ****         {
 973:Generated_Source\PSoC4/PWM_MOT.c ****         }
 974:Generated_Source\PSoC4/PWM_MOT.c ****     #endif /* (PWM_MOT_CY_TCPWM_4000) */
 975:Generated_Source\PSoC4/PWM_MOT.c ****     
 976:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_COMP_CAP_BUF_REG = (compareBuf & PWM_MOT_16BIT_MASK);
 977:Generated_Source\PSoC4/PWM_MOT.c **** }
 978:Generated_Source\PSoC4/PWM_MOT.c **** 
 979:Generated_Source\PSoC4/PWM_MOT.c **** 
 980:Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
 981:Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_ReadCompareBuf
 982:Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
 983:Generated_Source\PSoC4/PWM_MOT.c **** *
 984:Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
 985:Generated_Source\PSoC4/PWM_MOT.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 986:Generated_Source\PSoC4/PWM_MOT.c **** *  Capture or in Quadrature Decoder modes.
 987:Generated_Source\PSoC4/PWM_MOT.c **** *
 988:Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
 989:Generated_Source\PSoC4/PWM_MOT.c **** *  None
 990:Generated_Source\PSoC4/PWM_MOT.c **** *
 991:Generated_Source\PSoC4/PWM_MOT.c **** * Return:
 992:Generated_Source\PSoC4/PWM_MOT.c **** *  Compare buffer value
 993:Generated_Source\PSoC4/PWM_MOT.c **** *
 994:Generated_Source\PSoC4/PWM_MOT.c **** * Note:
 995:Generated_Source\PSoC4/PWM_MOT.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 996:Generated_Source\PSoC4/PWM_MOT.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 997:Generated_Source\PSoC4/PWM_MOT.c **** *  Down counting mode (except 0x0u).
 998:Generated_Source\PSoC4/PWM_MOT.c **** *
 999:Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
1000:Generated_Source\PSoC4/PWM_MOT.c **** uint32 PWM_MOT_ReadCompareBuf(void)
1001:Generated_Source\PSoC4/PWM_MOT.c **** {
1002:Generated_Source\PSoC4/PWM_MOT.c ****     #if (PWM_MOT_CY_TCPWM_4000)
1003:Generated_Source\PSoC4/PWM_MOT.c ****         uint32 currentMode;
1004:Generated_Source\PSoC4/PWM_MOT.c ****         uint32 regVal;
1005:Generated_Source\PSoC4/PWM_MOT.c ****     #endif /* (PWM_MOT_CY_TCPWM_4000) */
1006:Generated_Source\PSoC4/PWM_MOT.c **** 
1007:Generated_Source\PSoC4/PWM_MOT.c ****     #if (PWM_MOT_CY_TCPWM_4000)
1008:Generated_Source\PSoC4/PWM_MOT.c ****         currentMode = ((PWM_MOT_CONTROL_REG & PWM_MOT_UPDOWN_MASK) >> PWM_MOT_UPDOWN_SHIFT);
1009:Generated_Source\PSoC4/PWM_MOT.c **** 
1010:Generated_Source\PSoC4/PWM_MOT.c ****         regVal = PWM_MOT_COMP_CAP_BUF_REG;
1011:Generated_Source\PSoC4/PWM_MOT.c ****         
1012:Generated_Source\PSoC4/PWM_MOT.c ****         if (((uint32)PWM_MOT__COUNT_DOWN == currentMode) && (0u != regVal))
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 20


1013:Generated_Source\PSoC4/PWM_MOT.c ****         {
1014:Generated_Source\PSoC4/PWM_MOT.c ****             regVal--;
1015:Generated_Source\PSoC4/PWM_MOT.c ****         }
1016:Generated_Source\PSoC4/PWM_MOT.c ****         else if (((uint32)PWM_MOT__COUNT_UP == currentMode) && (0xFFFFu != regVal))
1017:Generated_Source\PSoC4/PWM_MOT.c ****         {
1018:Generated_Source\PSoC4/PWM_MOT.c ****             regVal++;
1019:Generated_Source\PSoC4/PWM_MOT.c ****         }
1020:Generated_Source\PSoC4/PWM_MOT.c ****         else
1021:Generated_Source\PSoC4/PWM_MOT.c ****         {
1022:Generated_Source\PSoC4/PWM_MOT.c ****         }
1023:Generated_Source\PSoC4/PWM_MOT.c **** 
1024:Generated_Source\PSoC4/PWM_MOT.c ****         return (regVal & PWM_MOT_16BIT_MASK);
1025:Generated_Source\PSoC4/PWM_MOT.c ****     #else
1026:Generated_Source\PSoC4/PWM_MOT.c ****         return (PWM_MOT_COMP_CAP_BUF_REG & PWM_MOT_16BIT_MASK);
1027:Generated_Source\PSoC4/PWM_MOT.c ****     #endif /* (PWM_MOT_CY_TCPWM_4000) */
1028:Generated_Source\PSoC4/PWM_MOT.c **** }
1029:Generated_Source\PSoC4/PWM_MOT.c **** 
1030:Generated_Source\PSoC4/PWM_MOT.c **** 
1031:Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
1032:Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_ReadCapture
1033:Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
1034:Generated_Source\PSoC4/PWM_MOT.c **** *
1035:Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
1036:Generated_Source\PSoC4/PWM_MOT.c **** *  Reads the captured counter value. This API is applicable only for
1037:Generated_Source\PSoC4/PWM_MOT.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1038:Generated_Source\PSoC4/PWM_MOT.c **** *
1039:Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
1040:Generated_Source\PSoC4/PWM_MOT.c **** *  None
1041:Generated_Source\PSoC4/PWM_MOT.c **** *
1042:Generated_Source\PSoC4/PWM_MOT.c **** * Return:
1043:Generated_Source\PSoC4/PWM_MOT.c **** *  Capture value
1044:Generated_Source\PSoC4/PWM_MOT.c **** *
1045:Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
1046:Generated_Source\PSoC4/PWM_MOT.c **** uint32 PWM_MOT_ReadCapture(void)
1047:Generated_Source\PSoC4/PWM_MOT.c **** {
1048:Generated_Source\PSoC4/PWM_MOT.c ****     return (PWM_MOT_COMP_CAP_REG & PWM_MOT_16BIT_MASK);
1049:Generated_Source\PSoC4/PWM_MOT.c **** }
1050:Generated_Source\PSoC4/PWM_MOT.c **** 
1051:Generated_Source\PSoC4/PWM_MOT.c **** 
1052:Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
1053:Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_ReadCaptureBuf
1054:Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
1055:Generated_Source\PSoC4/PWM_MOT.c **** *
1056:Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
1057:Generated_Source\PSoC4/PWM_MOT.c **** *  Reads the capture buffer register. This API is applicable only for
1058:Generated_Source\PSoC4/PWM_MOT.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1059:Generated_Source\PSoC4/PWM_MOT.c **** *
1060:Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
1061:Generated_Source\PSoC4/PWM_MOT.c **** *  None
1062:Generated_Source\PSoC4/PWM_MOT.c **** *
1063:Generated_Source\PSoC4/PWM_MOT.c **** * Return:
1064:Generated_Source\PSoC4/PWM_MOT.c **** *  Capture buffer value
1065:Generated_Source\PSoC4/PWM_MOT.c **** *
1066:Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
1067:Generated_Source\PSoC4/PWM_MOT.c **** uint32 PWM_MOT_ReadCaptureBuf(void)
1068:Generated_Source\PSoC4/PWM_MOT.c **** {
1069:Generated_Source\PSoC4/PWM_MOT.c ****     return (PWM_MOT_COMP_CAP_BUF_REG & PWM_MOT_16BIT_MASK);
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 21


1070:Generated_Source\PSoC4/PWM_MOT.c **** }
1071:Generated_Source\PSoC4/PWM_MOT.c **** 
1072:Generated_Source\PSoC4/PWM_MOT.c **** 
1073:Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
1074:Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_SetCaptureMode
1075:Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
1076:Generated_Source\PSoC4/PWM_MOT.c **** *
1077:Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
1078:Generated_Source\PSoC4/PWM_MOT.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1079:Generated_Source\PSoC4/PWM_MOT.c **** *  This input is not applicable to the Timer/Counter without Capture and
1080:Generated_Source\PSoC4/PWM_MOT.c **** *  Quadrature Decoder modes.
1081:Generated_Source\PSoC4/PWM_MOT.c **** *
1082:Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
1083:Generated_Source\PSoC4/PWM_MOT.c **** *  triggerMode: Enumerated trigger mode value
1084:Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
1085:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_TRIG_LEVEL     - Level
1086:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_TRIG_RISING    - Rising edge
1087:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_TRIG_FALLING   - Falling edge
1088:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_TRIG_BOTH      - Both rising and falling edge
1089:Generated_Source\PSoC4/PWM_MOT.c **** *
1090:Generated_Source\PSoC4/PWM_MOT.c **** * Return:
1091:Generated_Source\PSoC4/PWM_MOT.c **** *  None
1092:Generated_Source\PSoC4/PWM_MOT.c **** *
1093:Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
1094:Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_SetCaptureMode(uint32 triggerMode)
1095:Generated_Source\PSoC4/PWM_MOT.c **** {
1096:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
1097:Generated_Source\PSoC4/PWM_MOT.c **** 
1098:Generated_Source\PSoC4/PWM_MOT.c ****     enableInterrupts = CyEnterCriticalSection();
1099:Generated_Source\PSoC4/PWM_MOT.c **** 
1100:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_TRIG_CONTROL1_REG &= (uint32)~PWM_MOT_CAPTURE_MASK;
1101:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_TRIG_CONTROL1_REG |= triggerMode;
1102:Generated_Source\PSoC4/PWM_MOT.c **** 
1103:Generated_Source\PSoC4/PWM_MOT.c ****     CyExitCriticalSection(enableInterrupts);
1104:Generated_Source\PSoC4/PWM_MOT.c **** }
1105:Generated_Source\PSoC4/PWM_MOT.c **** 
1106:Generated_Source\PSoC4/PWM_MOT.c **** 
1107:Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
1108:Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_SetReloadMode
1109:Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
1110:Generated_Source\PSoC4/PWM_MOT.c **** *
1111:Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
1112:Generated_Source\PSoC4/PWM_MOT.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1113:Generated_Source\PSoC4/PWM_MOT.c **** *  input.
1114:Generated_Source\PSoC4/PWM_MOT.c **** *
1115:Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
1116:Generated_Source\PSoC4/PWM_MOT.c **** *  triggerMode: Enumerated trigger mode value
1117:Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
1118:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_TRIG_LEVEL     - Level
1119:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_TRIG_RISING    - Rising edge
1120:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_TRIG_FALLING   - Falling edge
1121:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_TRIG_BOTH      - Both rising and falling edge
1122:Generated_Source\PSoC4/PWM_MOT.c **** *
1123:Generated_Source\PSoC4/PWM_MOT.c **** * Return:
1124:Generated_Source\PSoC4/PWM_MOT.c **** *  None
1125:Generated_Source\PSoC4/PWM_MOT.c **** *
1126:Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 22


1127:Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_SetReloadMode(uint32 triggerMode)
1128:Generated_Source\PSoC4/PWM_MOT.c **** {
1129:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
1130:Generated_Source\PSoC4/PWM_MOT.c **** 
1131:Generated_Source\PSoC4/PWM_MOT.c ****     enableInterrupts = CyEnterCriticalSection();
1132:Generated_Source\PSoC4/PWM_MOT.c **** 
1133:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_TRIG_CONTROL1_REG &= (uint32)~PWM_MOT_RELOAD_MASK;
1134:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_MOT_RELOAD_SHIFT));
1135:Generated_Source\PSoC4/PWM_MOT.c **** 
1136:Generated_Source\PSoC4/PWM_MOT.c ****     CyExitCriticalSection(enableInterrupts);
1137:Generated_Source\PSoC4/PWM_MOT.c **** }
1138:Generated_Source\PSoC4/PWM_MOT.c **** 
1139:Generated_Source\PSoC4/PWM_MOT.c **** 
1140:Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
1141:Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_SetStartMode
1142:Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
1143:Generated_Source\PSoC4/PWM_MOT.c **** *
1144:Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
1145:Generated_Source\PSoC4/PWM_MOT.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1146:Generated_Source\PSoC4/PWM_MOT.c **** *  phiB input.
1147:Generated_Source\PSoC4/PWM_MOT.c **** *
1148:Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
1149:Generated_Source\PSoC4/PWM_MOT.c **** *  triggerMode: Enumerated trigger mode value
1150:Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
1151:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_TRIG_LEVEL     - Level
1152:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_TRIG_RISING    - Rising edge
1153:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_TRIG_FALLING   - Falling edge
1154:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_TRIG_BOTH      - Both rising and falling edge
1155:Generated_Source\PSoC4/PWM_MOT.c **** *
1156:Generated_Source\PSoC4/PWM_MOT.c **** * Return:
1157:Generated_Source\PSoC4/PWM_MOT.c **** *  None
1158:Generated_Source\PSoC4/PWM_MOT.c **** *
1159:Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
1160:Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_SetStartMode(uint32 triggerMode)
1161:Generated_Source\PSoC4/PWM_MOT.c **** {
1162:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
1163:Generated_Source\PSoC4/PWM_MOT.c **** 
1164:Generated_Source\PSoC4/PWM_MOT.c ****     enableInterrupts = CyEnterCriticalSection();
1165:Generated_Source\PSoC4/PWM_MOT.c **** 
1166:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_TRIG_CONTROL1_REG &= (uint32)~PWM_MOT_START_MASK;
1167:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_MOT_START_SHIFT));
1168:Generated_Source\PSoC4/PWM_MOT.c **** 
1169:Generated_Source\PSoC4/PWM_MOT.c ****     CyExitCriticalSection(enableInterrupts);
1170:Generated_Source\PSoC4/PWM_MOT.c **** }
1171:Generated_Source\PSoC4/PWM_MOT.c **** 
1172:Generated_Source\PSoC4/PWM_MOT.c **** 
1173:Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
1174:Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_SetStopMode
1175:Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
1176:Generated_Source\PSoC4/PWM_MOT.c **** *
1177:Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
1178:Generated_Source\PSoC4/PWM_MOT.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1179:Generated_Source\PSoC4/PWM_MOT.c **** *
1180:Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
1181:Generated_Source\PSoC4/PWM_MOT.c **** *  triggerMode: Enumerated trigger mode value
1182:Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
1183:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_TRIG_LEVEL     - Level
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 23


1184:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_TRIG_RISING    - Rising edge
1185:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_TRIG_FALLING   - Falling edge
1186:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_TRIG_BOTH      - Both rising and falling edge
1187:Generated_Source\PSoC4/PWM_MOT.c **** *
1188:Generated_Source\PSoC4/PWM_MOT.c **** * Return:
1189:Generated_Source\PSoC4/PWM_MOT.c **** *  None
1190:Generated_Source\PSoC4/PWM_MOT.c **** *
1191:Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
1192:Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_SetStopMode(uint32 triggerMode)
1193:Generated_Source\PSoC4/PWM_MOT.c **** {
1194:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
1195:Generated_Source\PSoC4/PWM_MOT.c **** 
1196:Generated_Source\PSoC4/PWM_MOT.c ****     enableInterrupts = CyEnterCriticalSection();
1197:Generated_Source\PSoC4/PWM_MOT.c **** 
1198:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_TRIG_CONTROL1_REG &= (uint32)~PWM_MOT_STOP_MASK;
1199:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_MOT_STOP_SHIFT));
1200:Generated_Source\PSoC4/PWM_MOT.c **** 
1201:Generated_Source\PSoC4/PWM_MOT.c ****     CyExitCriticalSection(enableInterrupts);
1202:Generated_Source\PSoC4/PWM_MOT.c **** }
1203:Generated_Source\PSoC4/PWM_MOT.c **** 
1204:Generated_Source\PSoC4/PWM_MOT.c **** 
1205:Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
1206:Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_SetCountMode
1207:Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
1208:Generated_Source\PSoC4/PWM_MOT.c **** *
1209:Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
1210:Generated_Source\PSoC4/PWM_MOT.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1211:Generated_Source\PSoC4/PWM_MOT.c **** *  input.
1212:Generated_Source\PSoC4/PWM_MOT.c **** *
1213:Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
1214:Generated_Source\PSoC4/PWM_MOT.c **** *  triggerMode: Enumerated trigger mode value
1215:Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
1216:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_TRIG_LEVEL     - Level
1217:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_TRIG_RISING    - Rising edge
1218:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_TRIG_FALLING   - Falling edge
1219:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_TRIG_BOTH      - Both rising and falling edge
1220:Generated_Source\PSoC4/PWM_MOT.c **** *
1221:Generated_Source\PSoC4/PWM_MOT.c **** * Return:
1222:Generated_Source\PSoC4/PWM_MOT.c **** *  None
1223:Generated_Source\PSoC4/PWM_MOT.c **** *
1224:Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
1225:Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_SetCountMode(uint32 triggerMode)
1226:Generated_Source\PSoC4/PWM_MOT.c **** {
1227:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
1228:Generated_Source\PSoC4/PWM_MOT.c **** 
1229:Generated_Source\PSoC4/PWM_MOT.c ****     enableInterrupts = CyEnterCriticalSection();
1230:Generated_Source\PSoC4/PWM_MOT.c **** 
1231:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_TRIG_CONTROL1_REG &= (uint32)~PWM_MOT_COUNT_MASK;
1232:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_MOT_COUNT_SHIFT));
1233:Generated_Source\PSoC4/PWM_MOT.c **** 
1234:Generated_Source\PSoC4/PWM_MOT.c ****     CyExitCriticalSection(enableInterrupts);
1235:Generated_Source\PSoC4/PWM_MOT.c **** }
1236:Generated_Source\PSoC4/PWM_MOT.c **** 
1237:Generated_Source\PSoC4/PWM_MOT.c **** 
1238:Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
1239:Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_TriggerCommand
1240:Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 24


1241:Generated_Source\PSoC4/PWM_MOT.c **** *
1242:Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
1243:Generated_Source\PSoC4/PWM_MOT.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1244:Generated_Source\PSoC4/PWM_MOT.c **** *  The mask can be used to apply this command simultaneously to more than one
1245:Generated_Source\PSoC4/PWM_MOT.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1246:Generated_Source\PSoC4/PWM_MOT.c **** *
1247:Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
1248:Generated_Source\PSoC4/PWM_MOT.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1249:Generated_Source\PSoC4/PWM_MOT.c **** *        command should apply to.  This function from one instance can be used
1250:Generated_Source\PSoC4/PWM_MOT.c **** *        to apply the command to any of the instances in the design.
1251:Generated_Source\PSoC4/PWM_MOT.c **** *        The mask value for a specific instance is available with the MASK
1252:Generated_Source\PSoC4/PWM_MOT.c **** *        define.
1253:Generated_Source\PSoC4/PWM_MOT.c **** *  command: Enumerated command values. Capture command only applicable for
1254:Generated_Source\PSoC4/PWM_MOT.c **** *           Timer/Counter with Capture and PWM modes.
1255:Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
1256:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_CMD_CAPTURE    - Trigger Capture/Switch command
1257:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_CMD_RELOAD     - Trigger Reload/Index command
1258:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_CMD_STOP       - Trigger Stop/Kill command
1259:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_CMD_START      - Trigger Start/phiB command
1260:Generated_Source\PSoC4/PWM_MOT.c **** *
1261:Generated_Source\PSoC4/PWM_MOT.c **** * Return:
1262:Generated_Source\PSoC4/PWM_MOT.c **** *  None
1263:Generated_Source\PSoC4/PWM_MOT.c **** *
1264:Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
1265:Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_TriggerCommand(uint32 mask, uint32 command)
1266:Generated_Source\PSoC4/PWM_MOT.c **** {
1267:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
1268:Generated_Source\PSoC4/PWM_MOT.c **** 
1269:Generated_Source\PSoC4/PWM_MOT.c ****     enableInterrupts = CyEnterCriticalSection();
1270:Generated_Source\PSoC4/PWM_MOT.c **** 
1271:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_COMMAND_REG = ((uint32)(mask << command));
1272:Generated_Source\PSoC4/PWM_MOT.c **** 
1273:Generated_Source\PSoC4/PWM_MOT.c ****     CyExitCriticalSection(enableInterrupts);
1274:Generated_Source\PSoC4/PWM_MOT.c **** }
1275:Generated_Source\PSoC4/PWM_MOT.c **** 
1276:Generated_Source\PSoC4/PWM_MOT.c **** 
1277:Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
1278:Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_ReadStatus
1279:Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
1280:Generated_Source\PSoC4/PWM_MOT.c **** *
1281:Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
1282:Generated_Source\PSoC4/PWM_MOT.c **** *  Reads the status of the PWM_MOT.
1283:Generated_Source\PSoC4/PWM_MOT.c **** *
1284:Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
1285:Generated_Source\PSoC4/PWM_MOT.c **** *  None
1286:Generated_Source\PSoC4/PWM_MOT.c **** *
1287:Generated_Source\PSoC4/PWM_MOT.c **** * Return:
1288:Generated_Source\PSoC4/PWM_MOT.c **** *  Status
1289:Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
1290:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_STATUS_DOWN    - Set if counting down
1291:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_STATUS_RUNNING - Set if counter is running
1292:Generated_Source\PSoC4/PWM_MOT.c **** *
1293:Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
1294:Generated_Source\PSoC4/PWM_MOT.c **** uint32 PWM_MOT_ReadStatus(void)
1295:Generated_Source\PSoC4/PWM_MOT.c **** {
1296:Generated_Source\PSoC4/PWM_MOT.c ****     return ((PWM_MOT_STATUS_REG >> PWM_MOT_RUNNING_STATUS_SHIFT) |
1297:Generated_Source\PSoC4/PWM_MOT.c ****             (PWM_MOT_STATUS_REG & PWM_MOT_STATUS_DOWN));
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 25


1298:Generated_Source\PSoC4/PWM_MOT.c **** }
1299:Generated_Source\PSoC4/PWM_MOT.c **** 
1300:Generated_Source\PSoC4/PWM_MOT.c **** 
1301:Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
1302:Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_SetInterruptMode
1303:Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
1304:Generated_Source\PSoC4/PWM_MOT.c **** *
1305:Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
1306:Generated_Source\PSoC4/PWM_MOT.c **** *  Sets the interrupt mask to control which interrupt
1307:Generated_Source\PSoC4/PWM_MOT.c **** *  requests generate the interrupt signal.
1308:Generated_Source\PSoC4/PWM_MOT.c **** *
1309:Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
1310:Generated_Source\PSoC4/PWM_MOT.c **** *   interruptMask: Mask of bits to be enabled
1311:Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
1312:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_INTR_MASK_TC       - Terminal count mask
1313:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_INTR_MASK_CC_MATCH - Compare count / capture mask
1314:Generated_Source\PSoC4/PWM_MOT.c **** *
1315:Generated_Source\PSoC4/PWM_MOT.c **** * Return:
1316:Generated_Source\PSoC4/PWM_MOT.c **** *  None
1317:Generated_Source\PSoC4/PWM_MOT.c **** *
1318:Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
1319:Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_SetInterruptMode(uint32 interruptMask)
1320:Generated_Source\PSoC4/PWM_MOT.c **** {
1321:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_INTERRUPT_MASK_REG =  interruptMask;
  68              		.loc 1 1321 0
  69 0024 094B     		ldr	r3, .L2+12
  70 0026 1A60     		str	r2, [r3]
  71              	.LBE27:
  72              	.LBE26:
 137:Generated_Source\PSoC4/PWM_MOT.c ****             #endif  /* ( PWM_MOT_PWM_CENTER == PWM_MOT_PWM_ALIGN) */
  73              		.loc 1 137 0
  74 0028 094B     		ldr	r3, .L2+16
  75 002a 1E32     		add	r2, r2, #30
  76 002c 1A60     		str	r2, [r3]
  77              	.LVL2:
  78              	.LBB28:
  79              	.LBB29:
 695:Generated_Source\PSoC4/PWM_MOT.c **** }
  80              		.loc 1 695 0
  81 002e 8022     		mov	r2, #128
  82 0030 084B     		ldr	r3, .L2+20
  83 0032 5201     		lsl	r2, r2, #5
  84 0034 1A60     		str	r2, [r3]
  85              	.LVL3:
  86              	.LBE29:
  87              	.LBE28:
  88              	.LBB30:
  89              	.LBB31:
 873:Generated_Source\PSoC4/PWM_MOT.c **** }
  90              		.loc 1 873 0
  91 0036 0122     		mov	r2, #1
  92 0038 074B     		ldr	r3, .L2+24
  93 003a 1A60     		str	r2, [r3]
  94              	.LBE31:
  95              	.LBE30:
 160:Generated_Source\PSoC4/PWM_MOT.c **** 
  96              		.loc 1 160 0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 26


  97 003c 7047     		bx	lr
  98              	.L3:
  99 003e C046     		.align	2
 100              	.L2:
 101 0040 00010540 		.word	1074069760
 102 0044 08010540 		.word	1074069768
 103 0048 24010540 		.word	1074069796
 104 004c 38010540 		.word	1074069816
 105 0050 28010540 		.word	1074069800
 106 0054 14010540 		.word	1074069780
 107 0058 0C010540 		.word	1074069772
 108              		.cfi_endproc
 109              	.LFE0:
 110              		.size	PWM_MOT_Init, .-PWM_MOT_Init
 111              		.section	.text.PWM_MOT_Enable,"ax",%progbits
 112              		.align	2
 113              		.global	PWM_MOT_Enable
 114              		.code	16
 115              		.thumb_func
 116              		.type	PWM_MOT_Enable, %function
 117              	PWM_MOT_Enable:
 118              	.LFB1:
 178:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 119              		.loc 1 178 0
 120              		.cfi_startproc
 121 0000 08B5     		push	{r3, lr}
 122              		.cfi_def_cfa_offset 8
 123              		.cfi_offset 3, -8
 124              		.cfi_offset 14, -4
 181:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_BLOCK_CONTROL_REG |= PWM_MOT_MASK;
 125              		.loc 1 181 0
 126 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 127              	.LVL4:
 182:Generated_Source\PSoC4/PWM_MOT.c ****     CyExitCriticalSection(enableInterrupts);
 128              		.loc 1 182 0
 129 0006 0123     		mov	r3, #1
 130 0008 074A     		ldr	r2, .L5
 203:Generated_Source\PSoC4/PWM_MOT.c **** 
 131              		.loc 1 203 0
 132              		@ sp needed
 182:Generated_Source\PSoC4/PWM_MOT.c ****     CyExitCriticalSection(enableInterrupts);
 133              		.loc 1 182 0
 134 000a 1168     		ldr	r1, [r2]
 135 000c 0B43     		orr	r3, r1
 136 000e 1360     		str	r3, [r2]
 183:Generated_Source\PSoC4/PWM_MOT.c **** 
 137              		.loc 1 183 0
 138 0010 FFF7FEFF 		bl	CyExitCriticalSection
 139              	.LVL5:
 140              	.LBB32:
 141              	.LBB33:
1269:Generated_Source\PSoC4/PWM_MOT.c **** 
 142              		.loc 1 1269 0
 143 0014 FFF7FEFF 		bl	CyEnterCriticalSection
 144              	.LVL6:
1271:Generated_Source\PSoC4/PWM_MOT.c **** 
 145              		.loc 1 1271 0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 27


 146 0018 8022     		mov	r2, #128
 147 001a 044B     		ldr	r3, .L5+4
 148 001c 5204     		lsl	r2, r2, #17
 149 001e 1A60     		str	r2, [r3]
1273:Generated_Source\PSoC4/PWM_MOT.c **** }
 150              		.loc 1 1273 0
 151 0020 FFF7FEFF 		bl	CyExitCriticalSection
 152              	.LVL7:
 153              	.LBE33:
 154              	.LBE32:
 203:Generated_Source\PSoC4/PWM_MOT.c **** 
 155              		.loc 1 203 0
 156 0024 08BD     		pop	{r3, pc}
 157              	.L6:
 158 0026 C046     		.align	2
 159              	.L5:
 160 0028 00000540 		.word	1074069504
 161 002c 08000540 		.word	1074069512
 162              		.cfi_endproc
 163              	.LFE1:
 164              		.size	PWM_MOT_Enable, .-PWM_MOT_Enable
 165              		.section	.text.PWM_MOT_Start,"ax",%progbits
 166              		.align	2
 167              		.global	PWM_MOT_Start
 168              		.code	16
 169              		.thumb_func
 170              		.type	PWM_MOT_Start, %function
 171              	PWM_MOT_Start:
 172              	.LFB2:
 231:Generated_Source\PSoC4/PWM_MOT.c ****     if (0u == PWM_MOT_initVar)
 173              		.loc 1 231 0
 174              		.cfi_startproc
 175 0000 10B5     		push	{r4, lr}
 176              		.cfi_def_cfa_offset 8
 177              		.cfi_offset 4, -8
 178              		.cfi_offset 14, -4
 232:Generated_Source\PSoC4/PWM_MOT.c ****     {
 179              		.loc 1 232 0
 180 0002 1249     		ldr	r1, .L10
 181 0004 0A78     		ldrb	r2, [r1]
 182 0006 002A     		cmp	r2, #0
 183 0008 1DD1     		bne	.L8
 184              	.LBB34:
 185              	.LBB35:
  89:Generated_Source\PSoC4/PWM_MOT.c **** 
 186              		.loc 1 89 0
 187 000a 8020     		mov	r0, #128
  95:Generated_Source\PSoC4/PWM_MOT.c ****             
 188              		.loc 1 95 0
 189 000c 8024     		mov	r4, #128
  89:Generated_Source\PSoC4/PWM_MOT.c **** 
 190              		.loc 1 89 0
 191 000e 104B     		ldr	r3, .L10+4
 192 0010 C004     		lsl	r0, r0, #19
 193 0012 1860     		str	r0, [r3]
  95:Generated_Source\PSoC4/PWM_MOT.c ****             
 194              		.loc 1 95 0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 28


 195 0014 1868     		ldr	r0, [r3]
 196 0016 A402     		lsl	r4, r4, #10
 197 0018 2043     		orr	r0, r4
 198 001a 1860     		str	r0, [r3]
 199              	.LVL8:
 200              	.LBB36:
 201              	.LBB37:
 617:Generated_Source\PSoC4/PWM_MOT.c **** }
 202              		.loc 1 617 0
 203 001c 0D48     		ldr	r0, .L10+8
 204 001e 0260     		str	r2, [r0]
 205              	.LBE37:
 206              	.LBE36:
 112:Generated_Source\PSoC4/PWM_MOT.c ****         #endif  /* (PWM_MOT__PWM == PWM_MOT_PWM_MODE) */
 207              		.loc 1 112 0
 208 0020 1868     		ldr	r0, [r3]
 209 0022 1860     		str	r0, [r3]
 116:Generated_Source\PSoC4/PWM_MOT.c ****     
 210              		.loc 1 116 0
 211 0024 C320     		mov	r0, #195
 212 0026 0C4B     		ldr	r3, .L10+12
 213 0028 8000     		lsl	r0, r0, #2
 214 002a 1860     		str	r0, [r3]
 215              	.LVL9:
 216              	.LBB38:
 217              	.LBB39:
 218              		.loc 1 1321 0
 219 002c 0B4B     		ldr	r3, .L10+16
 220 002e 1A60     		str	r2, [r3]
 221              	.LBE39:
 222              	.LBE38:
 137:Generated_Source\PSoC4/PWM_MOT.c ****             #endif  /* ( PWM_MOT_PWM_CENTER == PWM_MOT_PWM_ALIGN) */
 223              		.loc 1 137 0
 224 0030 0B4B     		ldr	r3, .L10+20
 225 0032 1E32     		add	r2, r2, #30
 226 0034 1A60     		str	r2, [r3]
 227              	.LVL10:
 228              	.LBB40:
 229              	.LBB41:
 695:Generated_Source\PSoC4/PWM_MOT.c **** }
 230              		.loc 1 695 0
 231 0036 8022     		mov	r2, #128
 232 0038 0A4B     		ldr	r3, .L10+24
 233 003a 5201     		lsl	r2, r2, #5
 234 003c 1A60     		str	r2, [r3]
 235              	.LVL11:
 236              	.LBE41:
 237              	.LBE40:
 238              	.LBB42:
 239              	.LBB43:
 873:Generated_Source\PSoC4/PWM_MOT.c **** }
 240              		.loc 1 873 0
 241 003e 0123     		mov	r3, #1
 242 0040 094A     		ldr	r2, .L10+28
 243 0042 1360     		str	r3, [r2]
 244              	.LBE43:
 245              	.LBE42:
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 29


 246              	.LBE35:
 247              	.LBE34:
 235:Generated_Source\PSoC4/PWM_MOT.c ****     }
 248              		.loc 1 235 0
 249 0044 0B70     		strb	r3, [r1]
 250              	.LVL12:
 251              	.L8:
 238:Generated_Source\PSoC4/PWM_MOT.c **** }
 252              		.loc 1 238 0
 253 0046 FFF7FEFF 		bl	PWM_MOT_Enable
 254              	.LVL13:
 239:Generated_Source\PSoC4/PWM_MOT.c **** 
 255              		.loc 1 239 0
 256              		@ sp needed
 257 004a 10BD     		pop	{r4, pc}
 258              	.L11:
 259              		.align	2
 260              	.L10:
 261 004c 00000000 		.word	.LANCHOR0
 262 0050 00010540 		.word	1074069760
 263 0054 08010540 		.word	1074069768
 264 0058 24010540 		.word	1074069796
 265 005c 38010540 		.word	1074069816
 266 0060 28010540 		.word	1074069800
 267 0064 14010540 		.word	1074069780
 268 0068 0C010540 		.word	1074069772
 269              		.cfi_endproc
 270              	.LFE2:
 271              		.size	PWM_MOT_Start, .-PWM_MOT_Start
 272              		.section	.text.PWM_MOT_Stop,"ax",%progbits
 273              		.align	2
 274              		.global	PWM_MOT_Stop
 275              		.code	16
 276              		.thumb_func
 277              		.type	PWM_MOT_Stop, %function
 278              	PWM_MOT_Stop:
 279              	.LFB3:
 257:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 280              		.loc 1 257 0
 281              		.cfi_startproc
 282 0000 08B5     		push	{r3, lr}
 283              		.cfi_def_cfa_offset 8
 284              		.cfi_offset 3, -8
 285              		.cfi_offset 14, -4
 260:Generated_Source\PSoC4/PWM_MOT.c **** 
 286              		.loc 1 260 0
 287 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 288              	.LVL14:
 262:Generated_Source\PSoC4/PWM_MOT.c **** 
 289              		.loc 1 262 0
 290 0006 0121     		mov	r1, #1
 291 0008 034A     		ldr	r2, .L13
 265:Generated_Source\PSoC4/PWM_MOT.c **** 
 292              		.loc 1 265 0
 293              		@ sp needed
 262:Generated_Source\PSoC4/PWM_MOT.c **** 
 294              		.loc 1 262 0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 30


 295 000a 1368     		ldr	r3, [r2]
 296 000c 8B43     		bic	r3, r1
 297 000e 1360     		str	r3, [r2]
 264:Generated_Source\PSoC4/PWM_MOT.c **** }
 298              		.loc 1 264 0
 299 0010 FFF7FEFF 		bl	CyExitCriticalSection
 300              	.LVL15:
 265:Generated_Source\PSoC4/PWM_MOT.c **** 
 301              		.loc 1 265 0
 302 0014 08BD     		pop	{r3, pc}
 303              	.L14:
 304 0016 C046     		.align	2
 305              	.L13:
 306 0018 00000540 		.word	1074069504
 307              		.cfi_endproc
 308              	.LFE3:
 309              		.size	PWM_MOT_Stop, .-PWM_MOT_Stop
 310              		.section	.text.PWM_MOT_SetMode,"ax",%progbits
 311              		.align	2
 312              		.global	PWM_MOT_SetMode
 313              		.code	16
 314              		.thumb_func
 315              		.type	PWM_MOT_SetMode, %function
 316              	PWM_MOT_SetMode:
 317              	.LFB4:
 294:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 318              		.loc 1 294 0
 319              		.cfi_startproc
 320              	.LVL16:
 321 0000 10B5     		push	{r4, lr}
 322              		.cfi_def_cfa_offset 8
 323              		.cfi_offset 4, -8
 324              		.cfi_offset 14, -4
 294:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 325              		.loc 1 294 0
 326 0002 041C     		mov	r4, r0
 297:Generated_Source\PSoC4/PWM_MOT.c **** 
 327              		.loc 1 297 0
 328 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 329              	.LVL17:
 299:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= mode;
 330              		.loc 1 299 0
 331 0008 054B     		ldr	r3, .L16
 332 000a 064A     		ldr	r2, .L16+4
 333 000c 1968     		ldr	r1, [r3]
 303:Generated_Source\PSoC4/PWM_MOT.c **** 
 334              		.loc 1 303 0
 335              		@ sp needed
 299:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= mode;
 336              		.loc 1 299 0
 337 000e 0A40     		and	r2, r1
 338 0010 1A60     		str	r2, [r3]
 300:Generated_Source\PSoC4/PWM_MOT.c **** 
 339              		.loc 1 300 0
 340 0012 1A68     		ldr	r2, [r3]
 341 0014 2243     		orr	r2, r4
 342 0016 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 31


 302:Generated_Source\PSoC4/PWM_MOT.c **** }
 343              		.loc 1 302 0
 344 0018 FFF7FEFF 		bl	CyExitCriticalSection
 345              	.LVL18:
 346              	.LVL19:
 303:Generated_Source\PSoC4/PWM_MOT.c **** 
 347              		.loc 1 303 0
 348 001c 10BD     		pop	{r4, pc}
 349              	.L17:
 350 001e C046     		.align	2
 351              	.L16:
 352 0020 00010540 		.word	1074069760
 353 0024 FFFFFFF8 		.word	-117440513
 354              		.cfi_endproc
 355              	.LFE4:
 356              		.size	PWM_MOT_SetMode, .-PWM_MOT_SetMode
 357              		.section	.text.PWM_MOT_SetQDMode,"ax",%progbits
 358              		.align	2
 359              		.global	PWM_MOT_SetQDMode
 360              		.code	16
 361              		.thumb_func
 362              		.type	PWM_MOT_SetQDMode, %function
 363              	PWM_MOT_SetQDMode:
 364              	.LFB5:
 327:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 365              		.loc 1 327 0
 366              		.cfi_startproc
 367              	.LVL20:
 368 0000 10B5     		push	{r4, lr}
 369              		.cfi_def_cfa_offset 8
 370              		.cfi_offset 4, -8
 371              		.cfi_offset 14, -4
 327:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 372              		.loc 1 327 0
 373 0002 041C     		mov	r4, r0
 330:Generated_Source\PSoC4/PWM_MOT.c **** 
 374              		.loc 1 330 0
 375 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 376              	.LVL21:
 332:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= qdMode;
 377              		.loc 1 332 0
 378 0008 054B     		ldr	r3, .L19
 379 000a 064A     		ldr	r2, .L19+4
 380 000c 1968     		ldr	r1, [r3]
 336:Generated_Source\PSoC4/PWM_MOT.c **** 
 381              		.loc 1 336 0
 382              		@ sp needed
 332:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= qdMode;
 383              		.loc 1 332 0
 384 000e 0A40     		and	r2, r1
 385 0010 1A60     		str	r2, [r3]
 333:Generated_Source\PSoC4/PWM_MOT.c **** 
 386              		.loc 1 333 0
 387 0012 1A68     		ldr	r2, [r3]
 388 0014 2243     		orr	r2, r4
 389 0016 1A60     		str	r2, [r3]
 335:Generated_Source\PSoC4/PWM_MOT.c **** }
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 32


 390              		.loc 1 335 0
 391 0018 FFF7FEFF 		bl	CyExitCriticalSection
 392              	.LVL22:
 393              	.LVL23:
 336:Generated_Source\PSoC4/PWM_MOT.c **** 
 394              		.loc 1 336 0
 395 001c 10BD     		pop	{r4, pc}
 396              	.L20:
 397 001e C046     		.align	2
 398              	.L19:
 399 0020 00010540 		.word	1074069760
 400 0024 FFFF8FFF 		.word	-7340033
 401              		.cfi_endproc
 402              	.LFE5:
 403              		.size	PWM_MOT_SetQDMode, .-PWM_MOT_SetQDMode
 404              		.section	.text.PWM_MOT_SetPrescaler,"ax",%progbits
 405              		.align	2
 406              		.global	PWM_MOT_SetPrescaler
 407              		.code	16
 408              		.thumb_func
 409              		.type	PWM_MOT_SetPrescaler, %function
 410              	PWM_MOT_SetPrescaler:
 411              	.LFB6:
 364:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 412              		.loc 1 364 0
 413              		.cfi_startproc
 414              	.LVL24:
 415 0000 10B5     		push	{r4, lr}
 416              		.cfi_def_cfa_offset 8
 417              		.cfi_offset 4, -8
 418              		.cfi_offset 14, -4
 364:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 419              		.loc 1 364 0
 420 0002 041C     		mov	r4, r0
 367:Generated_Source\PSoC4/PWM_MOT.c **** 
 421              		.loc 1 367 0
 422 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 423              	.LVL25:
 369:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= prescaler;
 424              		.loc 1 369 0
 425 0008 054B     		ldr	r3, .L22
 426 000a 064A     		ldr	r2, .L22+4
 427 000c 1968     		ldr	r1, [r3]
 373:Generated_Source\PSoC4/PWM_MOT.c **** 
 428              		.loc 1 373 0
 429              		@ sp needed
 369:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= prescaler;
 430              		.loc 1 369 0
 431 000e 0A40     		and	r2, r1
 432 0010 1A60     		str	r2, [r3]
 370:Generated_Source\PSoC4/PWM_MOT.c **** 
 433              		.loc 1 370 0
 434 0012 1A68     		ldr	r2, [r3]
 435 0014 2243     		orr	r2, r4
 436 0016 1A60     		str	r2, [r3]
 372:Generated_Source\PSoC4/PWM_MOT.c **** }
 437              		.loc 1 372 0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 33


 438 0018 FFF7FEFF 		bl	CyExitCriticalSection
 439              	.LVL26:
 440              	.LVL27:
 373:Generated_Source\PSoC4/PWM_MOT.c **** 
 441              		.loc 1 373 0
 442 001c 10BD     		pop	{r4, pc}
 443              	.L23:
 444 001e C046     		.align	2
 445              	.L22:
 446 0020 00010540 		.word	1074069760
 447 0024 FF00FFFF 		.word	-65281
 448              		.cfi_endproc
 449              	.LFE6:
 450              		.size	PWM_MOT_SetPrescaler, .-PWM_MOT_SetPrescaler
 451              		.section	.text.PWM_MOT_SetOneShot,"ax",%progbits
 452              		.align	2
 453              		.global	PWM_MOT_SetOneShot
 454              		.code	16
 455              		.thumb_func
 456              		.type	PWM_MOT_SetOneShot, %function
 457              	PWM_MOT_SetOneShot:
 458              	.LFB7:
 396:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 459              		.loc 1 396 0
 460              		.cfi_startproc
 461              	.LVL28:
 462 0000 10B5     		push	{r4, lr}
 463              		.cfi_def_cfa_offset 8
 464              		.cfi_offset 4, -8
 465              		.cfi_offset 14, -4
 396:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 466              		.loc 1 396 0
 467 0002 041C     		mov	r4, r0
 399:Generated_Source\PSoC4/PWM_MOT.c **** 
 468              		.loc 1 399 0
 469 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 470              	.LVL29:
 401:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_MOT_1BIT_MASK) <<
 471              		.loc 1 401 0
 472 0008 064B     		ldr	r3, .L25
 473 000a 074A     		ldr	r2, .L25+4
 474 000c 1968     		ldr	r1, [r3]
 406:Generated_Source\PSoC4/PWM_MOT.c **** 
 475              		.loc 1 406 0
 476              		@ sp needed
 401:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_MOT_1BIT_MASK) <<
 477              		.loc 1 401 0
 478 000e 0A40     		and	r2, r1
 402:Generated_Source\PSoC4/PWM_MOT.c ****                                                                PWM_MOT_ONESHOT_SHIFT));
 479              		.loc 1 402 0
 480 0010 0121     		mov	r1, #1
 401:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_MOT_1BIT_MASK) <<
 481              		.loc 1 401 0
 482 0012 1A60     		str	r2, [r3]
 402:Generated_Source\PSoC4/PWM_MOT.c ****                                                                PWM_MOT_ONESHOT_SHIFT));
 483              		.loc 1 402 0
 484 0014 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 34


 485 0016 0C40     		and	r4, r1
 486              	.LVL30:
 487 0018 A404     		lsl	r4, r4, #18
 488 001a 1443     		orr	r4, r2
 489 001c 1C60     		str	r4, [r3]
 405:Generated_Source\PSoC4/PWM_MOT.c **** }
 490              		.loc 1 405 0
 491 001e FFF7FEFF 		bl	CyExitCriticalSection
 492              	.LVL31:
 406:Generated_Source\PSoC4/PWM_MOT.c **** 
 493              		.loc 1 406 0
 494 0022 10BD     		pop	{r4, pc}
 495              	.L26:
 496              		.align	2
 497              	.L25:
 498 0024 00010540 		.word	1074069760
 499 0028 FFFFFBFF 		.word	-262145
 500              		.cfi_endproc
 501              	.LFE7:
 502              		.size	PWM_MOT_SetOneShot, .-PWM_MOT_SetOneShot
 503              		.section	.text.PWM_MOT_SetPWMMode,"ax",%progbits
 504              		.align	2
 505              		.global	PWM_MOT_SetPWMMode
 506              		.code	16
 507              		.thumb_func
 508              		.type	PWM_MOT_SetPWMMode, %function
 509              	PWM_MOT_SetPWMMode:
 510              	.LFB8:
 450:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_TRIG_CONTROL2_REG = (modeMask & PWM_MOT_6BIT_MASK);
 511              		.loc 1 450 0
 512              		.cfi_startproc
 513              	.LVL32:
 451:Generated_Source\PSoC4/PWM_MOT.c **** }
 514              		.loc 1 451 0
 515 0000 3F23     		mov	r3, #63
 516 0002 1840     		and	r0, r3
 517              	.LVL33:
 518 0004 014B     		ldr	r3, .L28
 452:Generated_Source\PSoC4/PWM_MOT.c **** 
 519              		.loc 1 452 0
 520              		@ sp needed
 451:Generated_Source\PSoC4/PWM_MOT.c **** }
 521              		.loc 1 451 0
 522 0006 1860     		str	r0, [r3]
 452:Generated_Source\PSoC4/PWM_MOT.c **** 
 523              		.loc 1 452 0
 524 0008 7047     		bx	lr
 525              	.L29:
 526 000a C046     		.align	2
 527              	.L28:
 528 000c 28010540 		.word	1074069800
 529              		.cfi_endproc
 530              	.LFE8:
 531              		.size	PWM_MOT_SetPWMMode, .-PWM_MOT_SetPWMMode
 532              		.section	.text.PWM_MOT_SetPWMSyncKill,"ax",%progbits
 533              		.align	2
 534              		.global	PWM_MOT_SetPWMSyncKill
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 35


 535              		.code	16
 536              		.thumb_func
 537              		.type	PWM_MOT_SetPWMSyncKill, %function
 538              	PWM_MOT_SetPWMSyncKill:
 539              	.LFB9:
 486:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 540              		.loc 1 486 0
 541              		.cfi_startproc
 542              	.LVL34:
 543 0000 10B5     		push	{r4, lr}
 544              		.cfi_def_cfa_offset 8
 545              		.cfi_offset 4, -8
 546              		.cfi_offset 14, -4
 486:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 547              		.loc 1 486 0
 548 0002 041C     		mov	r4, r0
 489:Generated_Source\PSoC4/PWM_MOT.c **** 
 549              		.loc 1 489 0
 550 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 551              	.LVL35:
 491:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_MOT_1BIT_MASK)  <<
 552              		.loc 1 491 0
 553 0008 0421     		mov	r1, #4
 554 000a 064B     		ldr	r3, .L31
 496:Generated_Source\PSoC4/PWM_MOT.c **** 
 555              		.loc 1 496 0
 556              		@ sp needed
 491:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_MOT_1BIT_MASK)  <<
 557              		.loc 1 491 0
 558 000c 1A68     		ldr	r2, [r3]
 559 000e 8A43     		bic	r2, r1
 560 0010 1A60     		str	r2, [r3]
 492:Generated_Source\PSoC4/PWM_MOT.c ****                                                PWM_MOT_PWM_SYNC_KILL_SHIFT));
 561              		.loc 1 492 0
 562 0012 0339     		sub	r1, r1, #3
 563 0014 1A68     		ldr	r2, [r3]
 564 0016 0C40     		and	r4, r1
 565              	.LVL36:
 566 0018 A400     		lsl	r4, r4, #2
 567 001a 1443     		orr	r4, r2
 568 001c 1C60     		str	r4, [r3]
 495:Generated_Source\PSoC4/PWM_MOT.c **** }
 569              		.loc 1 495 0
 570 001e FFF7FEFF 		bl	CyExitCriticalSection
 571              	.LVL37:
 496:Generated_Source\PSoC4/PWM_MOT.c **** 
 572              		.loc 1 496 0
 573 0022 10BD     		pop	{r4, pc}
 574              	.L32:
 575              		.align	2
 576              	.L31:
 577 0024 00010540 		.word	1074069760
 578              		.cfi_endproc
 579              	.LFE9:
 580              		.size	PWM_MOT_SetPWMSyncKill, .-PWM_MOT_SetPWMSyncKill
 581              		.section	.text.PWM_MOT_SetPWMStopOnKill,"ax",%progbits
 582              		.align	2
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 36


 583              		.global	PWM_MOT_SetPWMStopOnKill
 584              		.code	16
 585              		.thumb_func
 586              		.type	PWM_MOT_SetPWMStopOnKill, %function
 587              	PWM_MOT_SetPWMStopOnKill:
 588              	.LFB10:
 520:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 589              		.loc 1 520 0
 590              		.cfi_startproc
 591              	.LVL38:
 592 0000 10B5     		push	{r4, lr}
 593              		.cfi_def_cfa_offset 8
 594              		.cfi_offset 4, -8
 595              		.cfi_offset 14, -4
 520:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 596              		.loc 1 520 0
 597 0002 041C     		mov	r4, r0
 523:Generated_Source\PSoC4/PWM_MOT.c **** 
 598              		.loc 1 523 0
 599 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 600              	.LVL39:
 525:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_MOT_1BIT_MASK)  <<
 601              		.loc 1 525 0
 602 0008 0821     		mov	r1, #8
 603 000a 064B     		ldr	r3, .L34
 530:Generated_Source\PSoC4/PWM_MOT.c **** 
 604              		.loc 1 530 0
 605              		@ sp needed
 525:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_MOT_1BIT_MASK)  <<
 606              		.loc 1 525 0
 607 000c 1A68     		ldr	r2, [r3]
 608 000e 8A43     		bic	r2, r1
 609 0010 1A60     		str	r2, [r3]
 526:Generated_Source\PSoC4/PWM_MOT.c ****                                                          PWM_MOT_PWM_STOP_KILL_SHIFT));
 610              		.loc 1 526 0
 611 0012 0739     		sub	r1, r1, #7
 612 0014 1A68     		ldr	r2, [r3]
 613 0016 0C40     		and	r4, r1
 614              	.LVL40:
 615 0018 E400     		lsl	r4, r4, #3
 616 001a 1443     		orr	r4, r2
 617 001c 1C60     		str	r4, [r3]
 529:Generated_Source\PSoC4/PWM_MOT.c **** }
 618              		.loc 1 529 0
 619 001e FFF7FEFF 		bl	CyExitCriticalSection
 620              	.LVL41:
 530:Generated_Source\PSoC4/PWM_MOT.c **** 
 621              		.loc 1 530 0
 622 0022 10BD     		pop	{r4, pc}
 623              	.L35:
 624              		.align	2
 625              	.L34:
 626 0024 00010540 		.word	1074069760
 627              		.cfi_endproc
 628              	.LFE10:
 629              		.size	PWM_MOT_SetPWMStopOnKill, .-PWM_MOT_SetPWMStopOnKill
 630              		.section	.text.PWM_MOT_SetPWMDeadTime,"ax",%progbits
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 37


 631              		.align	2
 632              		.global	PWM_MOT_SetPWMDeadTime
 633              		.code	16
 634              		.thumb_func
 635              		.type	PWM_MOT_SetPWMDeadTime, %function
 636              	PWM_MOT_SetPWMDeadTime:
 637              	.LFB11:
 553:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 638              		.loc 1 553 0
 639              		.cfi_startproc
 640              	.LVL42:
 641 0000 10B5     		push	{r4, lr}
 642              		.cfi_def_cfa_offset 8
 643              		.cfi_offset 4, -8
 644              		.cfi_offset 14, -4
 553:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 645              		.loc 1 553 0
 646 0002 041C     		mov	r4, r0
 556:Generated_Source\PSoC4/PWM_MOT.c **** 
 647              		.loc 1 556 0
 648 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 649              	.LVL43:
 558:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= ((uint32)((deadTime & PWM_MOT_8BIT_MASK) <<
 650              		.loc 1 558 0
 651 0008 064B     		ldr	r3, .L37
 652 000a 074A     		ldr	r2, .L37+4
 653 000c 1968     		ldr	r1, [r3]
 559:Generated_Source\PSoC4/PWM_MOT.c ****                                                           PWM_MOT_PRESCALER_SHIFT));
 654              		.loc 1 559 0
 655 000e 2406     		lsl	r4, r4, #24
 656              	.LVL44:
 558:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= ((uint32)((deadTime & PWM_MOT_8BIT_MASK) <<
 657              		.loc 1 558 0
 658 0010 0A40     		and	r2, r1
 659 0012 1A60     		str	r2, [r3]
 559:Generated_Source\PSoC4/PWM_MOT.c ****                                                           PWM_MOT_PRESCALER_SHIFT));
 660              		.loc 1 559 0
 661 0014 1A68     		ldr	r2, [r3]
 662 0016 240C     		lsr	r4, r4, #16
 663 0018 1443     		orr	r4, r2
 664 001a 1C60     		str	r4, [r3]
 562:Generated_Source\PSoC4/PWM_MOT.c **** }
 665              		.loc 1 562 0
 666 001c FFF7FEFF 		bl	CyExitCriticalSection
 667              	.LVL45:
 563:Generated_Source\PSoC4/PWM_MOT.c **** 
 668              		.loc 1 563 0
 669              		@ sp needed
 670 0020 10BD     		pop	{r4, pc}
 671              	.L38:
 672 0022 C046     		.align	2
 673              	.L37:
 674 0024 00010540 		.word	1074069760
 675 0028 FF00FFFF 		.word	-65281
 676              		.cfi_endproc
 677              	.LFE11:
 678              		.size	PWM_MOT_SetPWMDeadTime, .-PWM_MOT_SetPWMDeadTime
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 38


 679              		.section	.text.PWM_MOT_SetPWMInvert,"ax",%progbits
 680              		.align	2
 681              		.global	PWM_MOT_SetPWMInvert
 682              		.code	16
 683              		.thumb_func
 684              		.type	PWM_MOT_SetPWMInvert, %function
 685              	PWM_MOT_SetPWMInvert:
 686              	.LFB12:
 586:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 687              		.loc 1 586 0
 688              		.cfi_startproc
 689              	.LVL46:
 690 0000 10B5     		push	{r4, lr}
 691              		.cfi_def_cfa_offset 8
 692              		.cfi_offset 4, -8
 693              		.cfi_offset 14, -4
 586:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 694              		.loc 1 586 0
 695 0002 041C     		mov	r4, r0
 589:Generated_Source\PSoC4/PWM_MOT.c **** 
 696              		.loc 1 589 0
 697 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 698              	.LVL47:
 591:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= mask;
 699              		.loc 1 591 0
 700 0008 054B     		ldr	r3, .L40
 701 000a 064A     		ldr	r2, .L40+4
 702 000c 1968     		ldr	r1, [r3]
 595:Generated_Source\PSoC4/PWM_MOT.c **** 
 703              		.loc 1 595 0
 704              		@ sp needed
 591:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= mask;
 705              		.loc 1 591 0
 706 000e 0A40     		and	r2, r1
 707 0010 1A60     		str	r2, [r3]
 592:Generated_Source\PSoC4/PWM_MOT.c **** 
 708              		.loc 1 592 0
 709 0012 1A68     		ldr	r2, [r3]
 710 0014 2243     		orr	r2, r4
 711 0016 1A60     		str	r2, [r3]
 594:Generated_Source\PSoC4/PWM_MOT.c **** }
 712              		.loc 1 594 0
 713 0018 FFF7FEFF 		bl	CyExitCriticalSection
 714              	.LVL48:
 715              	.LVL49:
 595:Generated_Source\PSoC4/PWM_MOT.c **** 
 716              		.loc 1 595 0
 717 001c 10BD     		pop	{r4, pc}
 718              	.L41:
 719 001e C046     		.align	2
 720              	.L40:
 721 0020 00010540 		.word	1074069760
 722 0024 FFFFCFFF 		.word	-3145729
 723              		.cfi_endproc
 724              	.LFE12:
 725              		.size	PWM_MOT_SetPWMInvert, .-PWM_MOT_SetPWMInvert
 726              		.section	.text.PWM_MOT_WriteCounter,"ax",%progbits
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 39


 727              		.align	2
 728              		.global	PWM_MOT_WriteCounter
 729              		.code	16
 730              		.thumb_func
 731              		.type	PWM_MOT_WriteCounter, %function
 732              	PWM_MOT_WriteCounter:
 733              	.LFB13:
 616:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_COUNTER_REG = (count & PWM_MOT_16BIT_MASK);
 734              		.loc 1 616 0
 735              		.cfi_startproc
 736              	.LVL50:
 617:Generated_Source\PSoC4/PWM_MOT.c **** }
 737              		.loc 1 617 0
 738 0000 024B     		ldr	r3, .L43
 739 0002 0004     		lsl	r0, r0, #16
 740              	.LVL51:
 741 0004 000C     		lsr	r0, r0, #16
 742 0006 1860     		str	r0, [r3]
 618:Generated_Source\PSoC4/PWM_MOT.c **** 
 743              		.loc 1 618 0
 744              		@ sp needed
 745 0008 7047     		bx	lr
 746              	.L44:
 747 000a C046     		.align	2
 748              	.L43:
 749 000c 08010540 		.word	1074069768
 750              		.cfi_endproc
 751              	.LFE13:
 752              		.size	PWM_MOT_WriteCounter, .-PWM_MOT_WriteCounter
 753              		.section	.text.PWM_MOT_ReadCounter,"ax",%progbits
 754              		.align	2
 755              		.global	PWM_MOT_ReadCounter
 756              		.code	16
 757              		.thumb_func
 758              		.type	PWM_MOT_ReadCounter, %function
 759              	PWM_MOT_ReadCounter:
 760              	.LFB14:
 636:Generated_Source\PSoC4/PWM_MOT.c ****     return (PWM_MOT_COUNTER_REG & PWM_MOT_16BIT_MASK);
 761              		.loc 1 636 0
 762              		.cfi_startproc
 637:Generated_Source\PSoC4/PWM_MOT.c **** }
 763              		.loc 1 637 0
 764 0000 024B     		ldr	r3, .L46
 638:Generated_Source\PSoC4/PWM_MOT.c **** 
 765              		.loc 1 638 0
 766              		@ sp needed
 637:Generated_Source\PSoC4/PWM_MOT.c **** }
 767              		.loc 1 637 0
 768 0002 1868     		ldr	r0, [r3]
 769 0004 0004     		lsl	r0, r0, #16
 770 0006 000C     		lsr	r0, r0, #16
 638:Generated_Source\PSoC4/PWM_MOT.c **** 
 771              		.loc 1 638 0
 772 0008 7047     		bx	lr
 773              	.L47:
 774 000a C046     		.align	2
 775              	.L46:
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 40


 776 000c 08010540 		.word	1074069768
 777              		.cfi_endproc
 778              	.LFE14:
 779              		.size	PWM_MOT_ReadCounter, .-PWM_MOT_ReadCounter
 780              		.section	.text.PWM_MOT_SetCounterMode,"ax",%progbits
 781              		.align	2
 782              		.global	PWM_MOT_SetCounterMode
 783              		.code	16
 784              		.thumb_func
 785              		.type	PWM_MOT_SetCounterMode, %function
 786              	PWM_MOT_SetCounterMode:
 787              	.LFB15:
 665:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 788              		.loc 1 665 0
 789              		.cfi_startproc
 790              	.LVL52:
 791 0000 10B5     		push	{r4, lr}
 792              		.cfi_def_cfa_offset 8
 793              		.cfi_offset 4, -8
 794              		.cfi_offset 14, -4
 665:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 795              		.loc 1 665 0
 796 0002 041C     		mov	r4, r0
 668:Generated_Source\PSoC4/PWM_MOT.c **** 
 797              		.loc 1 668 0
 798 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 799              	.LVL53:
 670:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= counterMode;
 800              		.loc 1 670 0
 801 0008 054B     		ldr	r3, .L49
 802 000a 064A     		ldr	r2, .L49+4
 803 000c 1968     		ldr	r1, [r3]
 674:Generated_Source\PSoC4/PWM_MOT.c **** 
 804              		.loc 1 674 0
 805              		@ sp needed
 670:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= counterMode;
 806              		.loc 1 670 0
 807 000e 0A40     		and	r2, r1
 808 0010 1A60     		str	r2, [r3]
 671:Generated_Source\PSoC4/PWM_MOT.c **** 
 809              		.loc 1 671 0
 810 0012 1A68     		ldr	r2, [r3]
 811 0014 2243     		orr	r2, r4
 812 0016 1A60     		str	r2, [r3]
 673:Generated_Source\PSoC4/PWM_MOT.c **** }
 813              		.loc 1 673 0
 814 0018 FFF7FEFF 		bl	CyExitCriticalSection
 815              	.LVL54:
 816              	.LVL55:
 674:Generated_Source\PSoC4/PWM_MOT.c **** 
 817              		.loc 1 674 0
 818 001c 10BD     		pop	{r4, pc}
 819              	.L50:
 820 001e C046     		.align	2
 821              	.L49:
 822 0020 00010540 		.word	1074069760
 823 0024 FFFFFCFF 		.word	-196609
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 41


 824              		.cfi_endproc
 825              	.LFE15:
 826              		.size	PWM_MOT_SetCounterMode, .-PWM_MOT_SetCounterMode
 827              		.section	.text.PWM_MOT_WritePeriod,"ax",%progbits
 828              		.align	2
 829              		.global	PWM_MOT_WritePeriod
 830              		.code	16
 831              		.thumb_func
 832              		.type	PWM_MOT_WritePeriod, %function
 833              	PWM_MOT_WritePeriod:
 834              	.LFB16:
 694:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_PERIOD_REG = (period & PWM_MOT_16BIT_MASK);
 835              		.loc 1 694 0
 836              		.cfi_startproc
 837              	.LVL56:
 695:Generated_Source\PSoC4/PWM_MOT.c **** }
 838              		.loc 1 695 0
 839 0000 024B     		ldr	r3, .L52
 840 0002 0004     		lsl	r0, r0, #16
 841              	.LVL57:
 842 0004 000C     		lsr	r0, r0, #16
 843 0006 1860     		str	r0, [r3]
 696:Generated_Source\PSoC4/PWM_MOT.c **** 
 844              		.loc 1 696 0
 845              		@ sp needed
 846 0008 7047     		bx	lr
 847              	.L53:
 848 000a C046     		.align	2
 849              	.L52:
 850 000c 14010540 		.word	1074069780
 851              		.cfi_endproc
 852              	.LFE16:
 853              		.size	PWM_MOT_WritePeriod, .-PWM_MOT_WritePeriod
 854              		.section	.text.PWM_MOT_ReadPeriod,"ax",%progbits
 855              		.align	2
 856              		.global	PWM_MOT_ReadPeriod
 857              		.code	16
 858              		.thumb_func
 859              		.type	PWM_MOT_ReadPeriod, %function
 860              	PWM_MOT_ReadPeriod:
 861              	.LFB17:
 714:Generated_Source\PSoC4/PWM_MOT.c ****     return (PWM_MOT_PERIOD_REG & PWM_MOT_16BIT_MASK);
 862              		.loc 1 714 0
 863              		.cfi_startproc
 715:Generated_Source\PSoC4/PWM_MOT.c **** }
 864              		.loc 1 715 0
 865 0000 024B     		ldr	r3, .L55
 716:Generated_Source\PSoC4/PWM_MOT.c **** 
 866              		.loc 1 716 0
 867              		@ sp needed
 715:Generated_Source\PSoC4/PWM_MOT.c **** }
 868              		.loc 1 715 0
 869 0002 1868     		ldr	r0, [r3]
 870 0004 0004     		lsl	r0, r0, #16
 871 0006 000C     		lsr	r0, r0, #16
 716:Generated_Source\PSoC4/PWM_MOT.c **** 
 872              		.loc 1 716 0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 42


 873 0008 7047     		bx	lr
 874              	.L56:
 875 000a C046     		.align	2
 876              	.L55:
 877 000c 14010540 		.word	1074069780
 878              		.cfi_endproc
 879              	.LFE17:
 880              		.size	PWM_MOT_ReadPeriod, .-PWM_MOT_ReadPeriod
 881              		.section	.text.PWM_MOT_SetCompareSwap,"ax",%progbits
 882              		.align	2
 883              		.global	PWM_MOT_SetCompareSwap
 884              		.code	16
 885              		.thumb_func
 886              		.type	PWM_MOT_SetCompareSwap, %function
 887              	PWM_MOT_SetCompareSwap:
 888              	.LFB18:
 740:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 889              		.loc 1 740 0
 890              		.cfi_startproc
 891              	.LVL58:
 892 0000 10B5     		push	{r4, lr}
 893              		.cfi_def_cfa_offset 8
 894              		.cfi_offset 4, -8
 895              		.cfi_offset 14, -4
 740:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 896              		.loc 1 740 0
 897 0002 041C     		mov	r4, r0
 743:Generated_Source\PSoC4/PWM_MOT.c **** 
 898              		.loc 1 743 0
 899 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 900              	.LVL59:
 745:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= (swapEnable & PWM_MOT_1BIT_MASK);
 901              		.loc 1 745 0
 902 0008 0122     		mov	r2, #1
 903 000a 054B     		ldr	r3, .L58
 749:Generated_Source\PSoC4/PWM_MOT.c **** 
 904              		.loc 1 749 0
 905              		@ sp needed
 745:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= (swapEnable & PWM_MOT_1BIT_MASK);
 906              		.loc 1 745 0
 907 000c 1968     		ldr	r1, [r3]
 908 000e 9143     		bic	r1, r2
 909 0010 1960     		str	r1, [r3]
 746:Generated_Source\PSoC4/PWM_MOT.c **** 
 910              		.loc 1 746 0
 911 0012 1968     		ldr	r1, [r3]
 912 0014 2240     		and	r2, r4
 913 0016 0A43     		orr	r2, r1
 914 0018 1A60     		str	r2, [r3]
 748:Generated_Source\PSoC4/PWM_MOT.c **** }
 915              		.loc 1 748 0
 916 001a FFF7FEFF 		bl	CyExitCriticalSection
 917              	.LVL60:
 918              	.LVL61:
 749:Generated_Source\PSoC4/PWM_MOT.c **** 
 919              		.loc 1 749 0
 920 001e 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 43


 921              	.L59:
 922              		.align	2
 923              	.L58:
 924 0020 00010540 		.word	1074069760
 925              		.cfi_endproc
 926              	.LFE18:
 927              		.size	PWM_MOT_SetCompareSwap, .-PWM_MOT_SetCompareSwap
 928              		.section	.text.PWM_MOT_WritePeriodBuf,"ax",%progbits
 929              		.align	2
 930              		.global	PWM_MOT_WritePeriodBuf
 931              		.code	16
 932              		.thumb_func
 933              		.type	PWM_MOT_WritePeriodBuf, %function
 934              	PWM_MOT_WritePeriodBuf:
 935              	.LFB19:
 767:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_PERIOD_BUF_REG = (periodBuf & PWM_MOT_16BIT_MASK);
 936              		.loc 1 767 0
 937              		.cfi_startproc
 938              	.LVL62:
 768:Generated_Source\PSoC4/PWM_MOT.c **** }
 939              		.loc 1 768 0
 940 0000 024B     		ldr	r3, .L61
 941 0002 0004     		lsl	r0, r0, #16
 942              	.LVL63:
 943 0004 000C     		lsr	r0, r0, #16
 944 0006 1860     		str	r0, [r3]
 769:Generated_Source\PSoC4/PWM_MOT.c **** 
 945              		.loc 1 769 0
 946              		@ sp needed
 947 0008 7047     		bx	lr
 948              	.L62:
 949 000a C046     		.align	2
 950              	.L61:
 951 000c 18010540 		.word	1074069784
 952              		.cfi_endproc
 953              	.LFE19:
 954              		.size	PWM_MOT_WritePeriodBuf, .-PWM_MOT_WritePeriodBuf
 955              		.section	.text.PWM_MOT_ReadPeriodBuf,"ax",%progbits
 956              		.align	2
 957              		.global	PWM_MOT_ReadPeriodBuf
 958              		.code	16
 959              		.thumb_func
 960              		.type	PWM_MOT_ReadPeriodBuf, %function
 961              	PWM_MOT_ReadPeriodBuf:
 962              	.LFB20:
 787:Generated_Source\PSoC4/PWM_MOT.c ****     return (PWM_MOT_PERIOD_BUF_REG & PWM_MOT_16BIT_MASK);
 963              		.loc 1 787 0
 964              		.cfi_startproc
 788:Generated_Source\PSoC4/PWM_MOT.c **** }
 965              		.loc 1 788 0
 966 0000 024B     		ldr	r3, .L64
 789:Generated_Source\PSoC4/PWM_MOT.c **** 
 967              		.loc 1 789 0
 968              		@ sp needed
 788:Generated_Source\PSoC4/PWM_MOT.c **** }
 969              		.loc 1 788 0
 970 0002 1868     		ldr	r0, [r3]
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 44


 971 0004 0004     		lsl	r0, r0, #16
 972 0006 000C     		lsr	r0, r0, #16
 789:Generated_Source\PSoC4/PWM_MOT.c **** 
 973              		.loc 1 789 0
 974 0008 7047     		bx	lr
 975              	.L65:
 976 000a C046     		.align	2
 977              	.L64:
 978 000c 18010540 		.word	1074069784
 979              		.cfi_endproc
 980              	.LFE20:
 981              		.size	PWM_MOT_ReadPeriodBuf, .-PWM_MOT_ReadPeriodBuf
 982              		.section	.text.PWM_MOT_SetPeriodSwap,"ax",%progbits
 983              		.align	2
 984              		.global	PWM_MOT_SetPeriodSwap
 985              		.code	16
 986              		.thumb_func
 987              		.type	PWM_MOT_SetPeriodSwap, %function
 988              	PWM_MOT_SetPeriodSwap:
 989              	.LFB21:
 813:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 990              		.loc 1 813 0
 991              		.cfi_startproc
 992              	.LVL64:
 993 0000 10B5     		push	{r4, lr}
 994              		.cfi_def_cfa_offset 8
 995              		.cfi_offset 4, -8
 996              		.cfi_offset 14, -4
 813:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 997              		.loc 1 813 0
 998 0002 041C     		mov	r4, r0
 816:Generated_Source\PSoC4/PWM_MOT.c **** 
 999              		.loc 1 816 0
 1000 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1001              	.LVL65:
 818:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= ((uint32)((swapEnable & PWM_MOT_1BIT_MASK) <<
 1002              		.loc 1 818 0
 1003 0008 0221     		mov	r1, #2
 1004 000a 064B     		ldr	r3, .L67
 823:Generated_Source\PSoC4/PWM_MOT.c **** 
 1005              		.loc 1 823 0
 1006              		@ sp needed
 818:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_CONTROL_REG |= ((uint32)((swapEnable & PWM_MOT_1BIT_MASK) <<
 1007              		.loc 1 818 0
 1008 000c 1A68     		ldr	r2, [r3]
 1009 000e 8A43     		bic	r2, r1
 1010 0010 1A60     		str	r2, [r3]
 819:Generated_Source\PSoC4/PWM_MOT.c ****                                                             PWM_MOT_RELOAD_PERIOD_SHIFT));
 1011              		.loc 1 819 0
 1012 0012 0139     		sub	r1, r1, #1
 1013 0014 1A68     		ldr	r2, [r3]
 1014 0016 0C40     		and	r4, r1
 1015              	.LVL66:
 1016 0018 6400     		lsl	r4, r4, #1
 1017 001a 1443     		orr	r4, r2
 1018 001c 1C60     		str	r4, [r3]
 822:Generated_Source\PSoC4/PWM_MOT.c **** }
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 45


 1019              		.loc 1 822 0
 1020 001e FFF7FEFF 		bl	CyExitCriticalSection
 1021              	.LVL67:
 823:Generated_Source\PSoC4/PWM_MOT.c **** 
 1022              		.loc 1 823 0
 1023 0022 10BD     		pop	{r4, pc}
 1024              	.L68:
 1025              		.align	2
 1026              	.L67:
 1027 0024 00010540 		.word	1074069760
 1028              		.cfi_endproc
 1029              	.LFE21:
 1030              		.size	PWM_MOT_SetPeriodSwap, .-PWM_MOT_SetPeriodSwap
 1031              		.section	.text.PWM_MOT_WriteCompare,"ax",%progbits
 1032              		.align	2
 1033              		.global	PWM_MOT_WriteCompare
 1034              		.code	16
 1035              		.thumb_func
 1036              		.type	PWM_MOT_WriteCompare, %function
 1037              	PWM_MOT_WriteCompare:
 1038              	.LFB22:
 850:Generated_Source\PSoC4/PWM_MOT.c ****     #if (PWM_MOT_CY_TCPWM_4000)
 1039              		.loc 1 850 0
 1040              		.cfi_startproc
 1041              	.LVL68:
 873:Generated_Source\PSoC4/PWM_MOT.c **** }
 1042              		.loc 1 873 0
 1043 0000 024B     		ldr	r3, .L70
 1044 0002 0004     		lsl	r0, r0, #16
 1045              	.LVL69:
 1046 0004 000C     		lsr	r0, r0, #16
 1047 0006 1860     		str	r0, [r3]
 874:Generated_Source\PSoC4/PWM_MOT.c **** 
 1048              		.loc 1 874 0
 1049              		@ sp needed
 1050 0008 7047     		bx	lr
 1051              	.L71:
 1052 000a C046     		.align	2
 1053              	.L70:
 1054 000c 0C010540 		.word	1074069772
 1055              		.cfi_endproc
 1056              	.LFE22:
 1057              		.size	PWM_MOT_WriteCompare, .-PWM_MOT_WriteCompare
 1058              		.section	.text.PWM_MOT_ReadCompare,"ax",%progbits
 1059              		.align	2
 1060              		.global	PWM_MOT_ReadCompare
 1061              		.code	16
 1062              		.thumb_func
 1063              		.type	PWM_MOT_ReadCompare, %function
 1064              	PWM_MOT_ReadCompare:
 1065              	.LFB23:
 901:Generated_Source\PSoC4/PWM_MOT.c ****     #if (PWM_MOT_CY_TCPWM_4000)
 1066              		.loc 1 901 0
 1067              		.cfi_startproc
 926:Generated_Source\PSoC4/PWM_MOT.c ****     #endif /* (PWM_MOT_CY_TCPWM_4000) */
 1068              		.loc 1 926 0
 1069 0000 024B     		ldr	r3, .L73
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 46


 928:Generated_Source\PSoC4/PWM_MOT.c **** 
 1070              		.loc 1 928 0
 1071              		@ sp needed
 926:Generated_Source\PSoC4/PWM_MOT.c ****     #endif /* (PWM_MOT_CY_TCPWM_4000) */
 1072              		.loc 1 926 0
 1073 0002 1868     		ldr	r0, [r3]
 1074 0004 0004     		lsl	r0, r0, #16
 1075 0006 000C     		lsr	r0, r0, #16
 928:Generated_Source\PSoC4/PWM_MOT.c **** 
 1076              		.loc 1 928 0
 1077 0008 7047     		bx	lr
 1078              	.L74:
 1079 000a C046     		.align	2
 1080              	.L73:
 1081 000c 0C010540 		.word	1074069772
 1082              		.cfi_endproc
 1083              	.LFE23:
 1084              		.size	PWM_MOT_ReadCompare, .-PWM_MOT_ReadCompare
 1085              		.section	.text.PWM_MOT_WriteCompareBuf,"ax",%progbits
 1086              		.align	2
 1087              		.global	PWM_MOT_WriteCompareBuf
 1088              		.code	16
 1089              		.thumb_func
 1090              		.type	PWM_MOT_WriteCompareBuf, %function
 1091              	PWM_MOT_WriteCompareBuf:
 1092              	.LFB24:
 955:Generated_Source\PSoC4/PWM_MOT.c ****     #if (PWM_MOT_CY_TCPWM_4000)
 1093              		.loc 1 955 0
 1094              		.cfi_startproc
 1095              	.LVL70:
 976:Generated_Source\PSoC4/PWM_MOT.c **** }
 1096              		.loc 1 976 0
 1097 0000 024B     		ldr	r3, .L76
 1098 0002 0004     		lsl	r0, r0, #16
 1099              	.LVL71:
 1100 0004 000C     		lsr	r0, r0, #16
 1101 0006 1860     		str	r0, [r3]
 977:Generated_Source\PSoC4/PWM_MOT.c **** 
 1102              		.loc 1 977 0
 1103              		@ sp needed
 1104 0008 7047     		bx	lr
 1105              	.L77:
 1106 000a C046     		.align	2
 1107              	.L76:
 1108 000c 10010540 		.word	1074069776
 1109              		.cfi_endproc
 1110              	.LFE24:
 1111              		.size	PWM_MOT_WriteCompareBuf, .-PWM_MOT_WriteCompareBuf
 1112              		.section	.text.PWM_MOT_ReadCompareBuf,"ax",%progbits
 1113              		.align	2
 1114              		.global	PWM_MOT_ReadCompareBuf
 1115              		.code	16
 1116              		.thumb_func
 1117              		.type	PWM_MOT_ReadCompareBuf, %function
 1118              	PWM_MOT_ReadCompareBuf:
 1119              	.LFB25:
1001:Generated_Source\PSoC4/PWM_MOT.c ****     #if (PWM_MOT_CY_TCPWM_4000)
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 47


 1120              		.loc 1 1001 0
 1121              		.cfi_startproc
1026:Generated_Source\PSoC4/PWM_MOT.c ****     #endif /* (PWM_MOT_CY_TCPWM_4000) */
 1122              		.loc 1 1026 0
 1123 0000 024B     		ldr	r3, .L79
1028:Generated_Source\PSoC4/PWM_MOT.c **** 
 1124              		.loc 1 1028 0
 1125              		@ sp needed
1026:Generated_Source\PSoC4/PWM_MOT.c ****     #endif /* (PWM_MOT_CY_TCPWM_4000) */
 1126              		.loc 1 1026 0
 1127 0002 1868     		ldr	r0, [r3]
 1128 0004 0004     		lsl	r0, r0, #16
 1129 0006 000C     		lsr	r0, r0, #16
1028:Generated_Source\PSoC4/PWM_MOT.c **** 
 1130              		.loc 1 1028 0
 1131 0008 7047     		bx	lr
 1132              	.L80:
 1133 000a C046     		.align	2
 1134              	.L79:
 1135 000c 10010540 		.word	1074069776
 1136              		.cfi_endproc
 1137              	.LFE25:
 1138              		.size	PWM_MOT_ReadCompareBuf, .-PWM_MOT_ReadCompareBuf
 1139              		.section	.text.PWM_MOT_ReadCapture,"ax",%progbits
 1140              		.align	2
 1141              		.global	PWM_MOT_ReadCapture
 1142              		.code	16
 1143              		.thumb_func
 1144              		.type	PWM_MOT_ReadCapture, %function
 1145              	PWM_MOT_ReadCapture:
 1146              	.LFB26:
1047:Generated_Source\PSoC4/PWM_MOT.c ****     return (PWM_MOT_COMP_CAP_REG & PWM_MOT_16BIT_MASK);
 1147              		.loc 1 1047 0
 1148              		.cfi_startproc
1048:Generated_Source\PSoC4/PWM_MOT.c **** }
 1149              		.loc 1 1048 0
 1150 0000 024B     		ldr	r3, .L82
1049:Generated_Source\PSoC4/PWM_MOT.c **** 
 1151              		.loc 1 1049 0
 1152              		@ sp needed
1048:Generated_Source\PSoC4/PWM_MOT.c **** }
 1153              		.loc 1 1048 0
 1154 0002 1868     		ldr	r0, [r3]
 1155 0004 0004     		lsl	r0, r0, #16
 1156 0006 000C     		lsr	r0, r0, #16
1049:Generated_Source\PSoC4/PWM_MOT.c **** 
 1157              		.loc 1 1049 0
 1158 0008 7047     		bx	lr
 1159              	.L83:
 1160 000a C046     		.align	2
 1161              	.L82:
 1162 000c 0C010540 		.word	1074069772
 1163              		.cfi_endproc
 1164              	.LFE26:
 1165              		.size	PWM_MOT_ReadCapture, .-PWM_MOT_ReadCapture
 1166              		.section	.text.PWM_MOT_ReadCaptureBuf,"ax",%progbits
 1167              		.align	2
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 48


 1168              		.global	PWM_MOT_ReadCaptureBuf
 1169              		.code	16
 1170              		.thumb_func
 1171              		.type	PWM_MOT_ReadCaptureBuf, %function
 1172              	PWM_MOT_ReadCaptureBuf:
 1173              	.LFB27:
1068:Generated_Source\PSoC4/PWM_MOT.c ****     return (PWM_MOT_COMP_CAP_BUF_REG & PWM_MOT_16BIT_MASK);
 1174              		.loc 1 1068 0
 1175              		.cfi_startproc
1069:Generated_Source\PSoC4/PWM_MOT.c **** }
 1176              		.loc 1 1069 0
 1177 0000 024B     		ldr	r3, .L85
1070:Generated_Source\PSoC4/PWM_MOT.c **** 
 1178              		.loc 1 1070 0
 1179              		@ sp needed
1069:Generated_Source\PSoC4/PWM_MOT.c **** }
 1180              		.loc 1 1069 0
 1181 0002 1868     		ldr	r0, [r3]
 1182 0004 0004     		lsl	r0, r0, #16
 1183 0006 000C     		lsr	r0, r0, #16
1070:Generated_Source\PSoC4/PWM_MOT.c **** 
 1184              		.loc 1 1070 0
 1185 0008 7047     		bx	lr
 1186              	.L86:
 1187 000a C046     		.align	2
 1188              	.L85:
 1189 000c 10010540 		.word	1074069776
 1190              		.cfi_endproc
 1191              	.LFE27:
 1192              		.size	PWM_MOT_ReadCaptureBuf, .-PWM_MOT_ReadCaptureBuf
 1193              		.section	.text.PWM_MOT_SetCaptureMode,"ax",%progbits
 1194              		.align	2
 1195              		.global	PWM_MOT_SetCaptureMode
 1196              		.code	16
 1197              		.thumb_func
 1198              		.type	PWM_MOT_SetCaptureMode, %function
 1199              	PWM_MOT_SetCaptureMode:
 1200              	.LFB28:
1095:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 1201              		.loc 1 1095 0
 1202              		.cfi_startproc
 1203              	.LVL72:
 1204 0000 10B5     		push	{r4, lr}
 1205              		.cfi_def_cfa_offset 8
 1206              		.cfi_offset 4, -8
 1207              		.cfi_offset 14, -4
1095:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 1208              		.loc 1 1095 0
 1209 0002 041C     		mov	r4, r0
1098:Generated_Source\PSoC4/PWM_MOT.c **** 
 1210              		.loc 1 1098 0
 1211 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1212              	.LVL73:
1100:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_TRIG_CONTROL1_REG |= triggerMode;
 1213              		.loc 1 1100 0
 1214 0008 0321     		mov	r1, #3
 1215 000a 054B     		ldr	r3, .L88
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 49


1104:Generated_Source\PSoC4/PWM_MOT.c **** 
 1216              		.loc 1 1104 0
 1217              		@ sp needed
1100:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_TRIG_CONTROL1_REG |= triggerMode;
 1218              		.loc 1 1100 0
 1219 000c 1A68     		ldr	r2, [r3]
 1220 000e 8A43     		bic	r2, r1
 1221 0010 1A60     		str	r2, [r3]
1101:Generated_Source\PSoC4/PWM_MOT.c **** 
 1222              		.loc 1 1101 0
 1223 0012 1A68     		ldr	r2, [r3]
 1224 0014 2243     		orr	r2, r4
 1225 0016 1A60     		str	r2, [r3]
1103:Generated_Source\PSoC4/PWM_MOT.c **** }
 1226              		.loc 1 1103 0
 1227 0018 FFF7FEFF 		bl	CyExitCriticalSection
 1228              	.LVL74:
 1229              	.LVL75:
1104:Generated_Source\PSoC4/PWM_MOT.c **** 
 1230              		.loc 1 1104 0
 1231 001c 10BD     		pop	{r4, pc}
 1232              	.L89:
 1233 001e C046     		.align	2
 1234              	.L88:
 1235 0020 24010540 		.word	1074069796
 1236              		.cfi_endproc
 1237              	.LFE28:
 1238              		.size	PWM_MOT_SetCaptureMode, .-PWM_MOT_SetCaptureMode
 1239              		.section	.text.PWM_MOT_SetReloadMode,"ax",%progbits
 1240              		.align	2
 1241              		.global	PWM_MOT_SetReloadMode
 1242              		.code	16
 1243              		.thumb_func
 1244              		.type	PWM_MOT_SetReloadMode, %function
 1245              	PWM_MOT_SetReloadMode:
 1246              	.LFB29:
1128:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 1247              		.loc 1 1128 0
 1248              		.cfi_startproc
 1249              	.LVL76:
 1250 0000 10B5     		push	{r4, lr}
 1251              		.cfi_def_cfa_offset 8
 1252              		.cfi_offset 4, -8
 1253              		.cfi_offset 14, -4
1128:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 1254              		.loc 1 1128 0
 1255 0002 041C     		mov	r4, r0
1131:Generated_Source\PSoC4/PWM_MOT.c **** 
 1256              		.loc 1 1131 0
 1257 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1258              	.LVL77:
1133:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_MOT_RELOAD_SHIFT));
 1259              		.loc 1 1133 0
 1260 0008 3021     		mov	r1, #48
 1261 000a 054B     		ldr	r3, .L91
1137:Generated_Source\PSoC4/PWM_MOT.c **** 
 1262              		.loc 1 1137 0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 50


 1263              		@ sp needed
1133:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_MOT_RELOAD_SHIFT));
 1264              		.loc 1 1133 0
 1265 000c 1A68     		ldr	r2, [r3]
 1266 000e 8A43     		bic	r2, r1
 1267 0010 1A60     		str	r2, [r3]
1134:Generated_Source\PSoC4/PWM_MOT.c **** 
 1268              		.loc 1 1134 0
 1269 0012 1968     		ldr	r1, [r3]
 1270 0014 2201     		lsl	r2, r4, #4
 1271 0016 0A43     		orr	r2, r1
 1272 0018 1A60     		str	r2, [r3]
1136:Generated_Source\PSoC4/PWM_MOT.c **** }
 1273              		.loc 1 1136 0
 1274 001a FFF7FEFF 		bl	CyExitCriticalSection
 1275              	.LVL78:
 1276              	.LVL79:
1137:Generated_Source\PSoC4/PWM_MOT.c **** 
 1277              		.loc 1 1137 0
 1278 001e 10BD     		pop	{r4, pc}
 1279              	.L92:
 1280              		.align	2
 1281              	.L91:
 1282 0020 24010540 		.word	1074069796
 1283              		.cfi_endproc
 1284              	.LFE29:
 1285              		.size	PWM_MOT_SetReloadMode, .-PWM_MOT_SetReloadMode
 1286              		.section	.text.PWM_MOT_SetStartMode,"ax",%progbits
 1287              		.align	2
 1288              		.global	PWM_MOT_SetStartMode
 1289              		.code	16
 1290              		.thumb_func
 1291              		.type	PWM_MOT_SetStartMode, %function
 1292              	PWM_MOT_SetStartMode:
 1293              	.LFB30:
1161:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 1294              		.loc 1 1161 0
 1295              		.cfi_startproc
 1296              	.LVL80:
 1297 0000 10B5     		push	{r4, lr}
 1298              		.cfi_def_cfa_offset 8
 1299              		.cfi_offset 4, -8
 1300              		.cfi_offset 14, -4
1161:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 1301              		.loc 1 1161 0
 1302 0002 041C     		mov	r4, r0
1164:Generated_Source\PSoC4/PWM_MOT.c **** 
 1303              		.loc 1 1164 0
 1304 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1305              	.LVL81:
1166:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_MOT_START_SHIFT));
 1306              		.loc 1 1166 0
 1307 0008 054B     		ldr	r3, .L94
 1308 000a 064A     		ldr	r2, .L94+4
 1309 000c 1968     		ldr	r1, [r3]
1170:Generated_Source\PSoC4/PWM_MOT.c **** 
 1310              		.loc 1 1170 0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 51


 1311              		@ sp needed
1166:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_MOT_START_SHIFT));
 1312              		.loc 1 1166 0
 1313 000e 0A40     		and	r2, r1
 1314 0010 1A60     		str	r2, [r3]
1167:Generated_Source\PSoC4/PWM_MOT.c **** 
 1315              		.loc 1 1167 0
 1316 0012 1968     		ldr	r1, [r3]
 1317 0014 2202     		lsl	r2, r4, #8
 1318 0016 0A43     		orr	r2, r1
 1319 0018 1A60     		str	r2, [r3]
1169:Generated_Source\PSoC4/PWM_MOT.c **** }
 1320              		.loc 1 1169 0
 1321 001a FFF7FEFF 		bl	CyExitCriticalSection
 1322              	.LVL82:
 1323              	.LVL83:
1170:Generated_Source\PSoC4/PWM_MOT.c **** 
 1324              		.loc 1 1170 0
 1325 001e 10BD     		pop	{r4, pc}
 1326              	.L95:
 1327              		.align	2
 1328              	.L94:
 1329 0020 24010540 		.word	1074069796
 1330 0024 FFFCFFFF 		.word	-769
 1331              		.cfi_endproc
 1332              	.LFE30:
 1333              		.size	PWM_MOT_SetStartMode, .-PWM_MOT_SetStartMode
 1334              		.section	.text.PWM_MOT_SetStopMode,"ax",%progbits
 1335              		.align	2
 1336              		.global	PWM_MOT_SetStopMode
 1337              		.code	16
 1338              		.thumb_func
 1339              		.type	PWM_MOT_SetStopMode, %function
 1340              	PWM_MOT_SetStopMode:
 1341              	.LFB31:
1193:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 1342              		.loc 1 1193 0
 1343              		.cfi_startproc
 1344              	.LVL84:
 1345 0000 10B5     		push	{r4, lr}
 1346              		.cfi_def_cfa_offset 8
 1347              		.cfi_offset 4, -8
 1348              		.cfi_offset 14, -4
1193:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 1349              		.loc 1 1193 0
 1350 0002 041C     		mov	r4, r0
1196:Generated_Source\PSoC4/PWM_MOT.c **** 
 1351              		.loc 1 1196 0
 1352 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1353              	.LVL85:
1198:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_MOT_STOP_SHIFT));
 1354              		.loc 1 1198 0
 1355 0008 C021     		mov	r1, #192
 1356 000a 054B     		ldr	r3, .L97
1202:Generated_Source\PSoC4/PWM_MOT.c **** 
 1357              		.loc 1 1202 0
 1358              		@ sp needed
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 52


1198:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_MOT_STOP_SHIFT));
 1359              		.loc 1 1198 0
 1360 000c 1A68     		ldr	r2, [r3]
 1361 000e 8A43     		bic	r2, r1
 1362 0010 1A60     		str	r2, [r3]
1199:Generated_Source\PSoC4/PWM_MOT.c **** 
 1363              		.loc 1 1199 0
 1364 0012 1968     		ldr	r1, [r3]
 1365 0014 A201     		lsl	r2, r4, #6
 1366 0016 0A43     		orr	r2, r1
 1367 0018 1A60     		str	r2, [r3]
1201:Generated_Source\PSoC4/PWM_MOT.c **** }
 1368              		.loc 1 1201 0
 1369 001a FFF7FEFF 		bl	CyExitCriticalSection
 1370              	.LVL86:
 1371              	.LVL87:
1202:Generated_Source\PSoC4/PWM_MOT.c **** 
 1372              		.loc 1 1202 0
 1373 001e 10BD     		pop	{r4, pc}
 1374              	.L98:
 1375              		.align	2
 1376              	.L97:
 1377 0020 24010540 		.word	1074069796
 1378              		.cfi_endproc
 1379              	.LFE31:
 1380              		.size	PWM_MOT_SetStopMode, .-PWM_MOT_SetStopMode
 1381              		.section	.text.PWM_MOT_SetCountMode,"ax",%progbits
 1382              		.align	2
 1383              		.global	PWM_MOT_SetCountMode
 1384              		.code	16
 1385              		.thumb_func
 1386              		.type	PWM_MOT_SetCountMode, %function
 1387              	PWM_MOT_SetCountMode:
 1388              	.LFB32:
1226:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 1389              		.loc 1 1226 0
 1390              		.cfi_startproc
 1391              	.LVL88:
 1392 0000 10B5     		push	{r4, lr}
 1393              		.cfi_def_cfa_offset 8
 1394              		.cfi_offset 4, -8
 1395              		.cfi_offset 14, -4
1226:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 1396              		.loc 1 1226 0
 1397 0002 041C     		mov	r4, r0
1229:Generated_Source\PSoC4/PWM_MOT.c **** 
 1398              		.loc 1 1229 0
 1399 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1400              	.LVL89:
1231:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_MOT_COUNT_SHIFT));
 1401              		.loc 1 1231 0
 1402 0008 0C21     		mov	r1, #12
 1403 000a 054B     		ldr	r3, .L100
1235:Generated_Source\PSoC4/PWM_MOT.c **** 
 1404              		.loc 1 1235 0
 1405              		@ sp needed
1231:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_MOT_COUNT_SHIFT));
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 53


 1406              		.loc 1 1231 0
 1407 000c 1A68     		ldr	r2, [r3]
 1408 000e 8A43     		bic	r2, r1
 1409 0010 1A60     		str	r2, [r3]
1232:Generated_Source\PSoC4/PWM_MOT.c **** 
 1410              		.loc 1 1232 0
 1411 0012 1968     		ldr	r1, [r3]
 1412 0014 A200     		lsl	r2, r4, #2
 1413 0016 0A43     		orr	r2, r1
 1414 0018 1A60     		str	r2, [r3]
1234:Generated_Source\PSoC4/PWM_MOT.c **** }
 1415              		.loc 1 1234 0
 1416 001a FFF7FEFF 		bl	CyExitCriticalSection
 1417              	.LVL90:
 1418              	.LVL91:
1235:Generated_Source\PSoC4/PWM_MOT.c **** 
 1419              		.loc 1 1235 0
 1420 001e 10BD     		pop	{r4, pc}
 1421              	.L101:
 1422              		.align	2
 1423              	.L100:
 1424 0020 24010540 		.word	1074069796
 1425              		.cfi_endproc
 1426              	.LFE32:
 1427              		.size	PWM_MOT_SetCountMode, .-PWM_MOT_SetCountMode
 1428              		.section	.text.PWM_MOT_TriggerCommand,"ax",%progbits
 1429              		.align	2
 1430              		.global	PWM_MOT_TriggerCommand
 1431              		.code	16
 1432              		.thumb_func
 1433              		.type	PWM_MOT_TriggerCommand, %function
 1434              	PWM_MOT_TriggerCommand:
 1435              	.LFB33:
1266:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 1436              		.loc 1 1266 0
 1437              		.cfi_startproc
 1438              	.LVL92:
 1439 0000 38B5     		push	{r3, r4, r5, lr}
 1440              		.cfi_def_cfa_offset 16
 1441              		.cfi_offset 3, -16
 1442              		.cfi_offset 4, -12
 1443              		.cfi_offset 5, -8
 1444              		.cfi_offset 14, -4
1266:Generated_Source\PSoC4/PWM_MOT.c ****     uint8 enableInterrupts;
 1445              		.loc 1 1266 0
 1446 0002 0D1C     		mov	r5, r1
 1447 0004 041C     		mov	r4, r0
1271:Generated_Source\PSoC4/PWM_MOT.c **** 
 1448              		.loc 1 1271 0
 1449 0006 AC40     		lsl	r4, r4, r5
1269:Generated_Source\PSoC4/PWM_MOT.c **** 
 1450              		.loc 1 1269 0
 1451 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1452              	.LVL93:
1271:Generated_Source\PSoC4/PWM_MOT.c **** 
 1453              		.loc 1 1271 0
 1454 000c 024B     		ldr	r3, .L103
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 54


1274:Generated_Source\PSoC4/PWM_MOT.c **** 
 1455              		.loc 1 1274 0
 1456              		@ sp needed
1271:Generated_Source\PSoC4/PWM_MOT.c **** 
 1457              		.loc 1 1271 0
 1458 000e 1C60     		str	r4, [r3]
1273:Generated_Source\PSoC4/PWM_MOT.c **** }
 1459              		.loc 1 1273 0
 1460 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1461              	.LVL94:
 1462              	.LVL95:
1274:Generated_Source\PSoC4/PWM_MOT.c **** 
 1463              		.loc 1 1274 0
 1464 0014 38BD     		pop	{r3, r4, r5, pc}
 1465              	.L104:
 1466 0016 C046     		.align	2
 1467              	.L103:
 1468 0018 08000540 		.word	1074069512
 1469              		.cfi_endproc
 1470              	.LFE33:
 1471              		.size	PWM_MOT_TriggerCommand, .-PWM_MOT_TriggerCommand
 1472              		.section	.text.PWM_MOT_ReadStatus,"ax",%progbits
 1473              		.align	2
 1474              		.global	PWM_MOT_ReadStatus
 1475              		.code	16
 1476              		.thumb_func
 1477              		.type	PWM_MOT_ReadStatus, %function
 1478              	PWM_MOT_ReadStatus:
 1479              	.LFB34:
1295:Generated_Source\PSoC4/PWM_MOT.c ****     return ((PWM_MOT_STATUS_REG >> PWM_MOT_RUNNING_STATUS_SHIFT) |
 1480              		.loc 1 1295 0
 1481              		.cfi_startproc
1297:Generated_Source\PSoC4/PWM_MOT.c **** }
 1482              		.loc 1 1297 0
 1483 0000 0120     		mov	r0, #1
1296:Generated_Source\PSoC4/PWM_MOT.c ****             (PWM_MOT_STATUS_REG & PWM_MOT_STATUS_DOWN));
 1484              		.loc 1 1296 0
 1485 0002 034A     		ldr	r2, .L106
1298:Generated_Source\PSoC4/PWM_MOT.c **** 
 1486              		.loc 1 1298 0
 1487              		@ sp needed
1296:Generated_Source\PSoC4/PWM_MOT.c ****             (PWM_MOT_STATUS_REG & PWM_MOT_STATUS_DOWN));
 1488              		.loc 1 1296 0
 1489 0004 1368     		ldr	r3, [r2]
1297:Generated_Source\PSoC4/PWM_MOT.c **** }
 1490              		.loc 1 1297 0
 1491 0006 1268     		ldr	r2, [r2]
1296:Generated_Source\PSoC4/PWM_MOT.c ****             (PWM_MOT_STATUS_REG & PWM_MOT_STATUS_DOWN));
 1492              		.loc 1 1296 0
 1493 0008 9B0F     		lsr	r3, r3, #30
1297:Generated_Source\PSoC4/PWM_MOT.c **** }
 1494              		.loc 1 1297 0
 1495 000a 1040     		and	r0, r2
1296:Generated_Source\PSoC4/PWM_MOT.c ****             (PWM_MOT_STATUS_REG & PWM_MOT_STATUS_DOWN));
 1496              		.loc 1 1296 0
 1497 000c 1843     		orr	r0, r3
1298:Generated_Source\PSoC4/PWM_MOT.c **** 
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 55


 1498              		.loc 1 1298 0
 1499 000e 7047     		bx	lr
 1500              	.L107:
 1501              		.align	2
 1502              	.L106:
 1503 0010 04010540 		.word	1074069764
 1504              		.cfi_endproc
 1505              	.LFE34:
 1506              		.size	PWM_MOT_ReadStatus, .-PWM_MOT_ReadStatus
 1507              		.section	.text.PWM_MOT_SetInterruptMode,"ax",%progbits
 1508              		.align	2
 1509              		.global	PWM_MOT_SetInterruptMode
 1510              		.code	16
 1511              		.thumb_func
 1512              		.type	PWM_MOT_SetInterruptMode, %function
 1513              	PWM_MOT_SetInterruptMode:
 1514              	.LFB35:
1320:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_INTERRUPT_MASK_REG =  interruptMask;
 1515              		.loc 1 1320 0
 1516              		.cfi_startproc
 1517              	.LVL96:
 1518              		.loc 1 1321 0
 1519 0000 014B     		ldr	r3, .L109
1322:Generated_Source\PSoC4/PWM_MOT.c **** }
 1520              		.loc 1 1322 0
 1521              		@ sp needed
1321:Generated_Source\PSoC4/PWM_MOT.c **** }
 1522              		.loc 1 1321 0
 1523 0002 1860     		str	r0, [r3]
 1524              		.loc 1 1322 0
 1525 0004 7047     		bx	lr
 1526              	.L110:
 1527 0006 C046     		.align	2
 1528              	.L109:
 1529 0008 38010540 		.word	1074069816
 1530              		.cfi_endproc
 1531              	.LFE35:
 1532              		.size	PWM_MOT_SetInterruptMode, .-PWM_MOT_SetInterruptMode
 1533              		.section	.text.PWM_MOT_GetInterruptSourceMasked,"ax",%progbits
 1534              		.align	2
 1535              		.global	PWM_MOT_GetInterruptSourceMasked
 1536              		.code	16
 1537              		.thumb_func
 1538              		.type	PWM_MOT_GetInterruptSourceMasked, %function
 1539              	PWM_MOT_GetInterruptSourceMasked:
 1540              	.LFB36:
1323:Generated_Source\PSoC4/PWM_MOT.c **** 
1324:Generated_Source\PSoC4/PWM_MOT.c **** 
1325:Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
1326:Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_GetInterruptSourceMasked
1327:Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
1328:Generated_Source\PSoC4/PWM_MOT.c **** *
1329:Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
1330:Generated_Source\PSoC4/PWM_MOT.c **** *  Gets the interrupt requests masked by the interrupt mask.
1331:Generated_Source\PSoC4/PWM_MOT.c **** *
1332:Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
1333:Generated_Source\PSoC4/PWM_MOT.c **** *   None
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 56


1334:Generated_Source\PSoC4/PWM_MOT.c **** *
1335:Generated_Source\PSoC4/PWM_MOT.c **** * Return:
1336:Generated_Source\PSoC4/PWM_MOT.c **** *  Masked interrupt source
1337:Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
1338:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_INTR_MASK_TC       - Terminal count mask
1339:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_INTR_MASK_CC_MATCH - Compare count / capture mask
1340:Generated_Source\PSoC4/PWM_MOT.c **** *
1341:Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
1342:Generated_Source\PSoC4/PWM_MOT.c **** uint32 PWM_MOT_GetInterruptSourceMasked(void)
1343:Generated_Source\PSoC4/PWM_MOT.c **** {
 1541              		.loc 1 1343 0
 1542              		.cfi_startproc
1344:Generated_Source\PSoC4/PWM_MOT.c ****     return (PWM_MOT_INTERRUPT_MASKED_REG);
 1543              		.loc 1 1344 0
 1544 0000 014B     		ldr	r3, .L112
1345:Generated_Source\PSoC4/PWM_MOT.c **** }
 1545              		.loc 1 1345 0
 1546              		@ sp needed
1344:Generated_Source\PSoC4/PWM_MOT.c ****     return (PWM_MOT_INTERRUPT_MASKED_REG);
 1547              		.loc 1 1344 0
 1548 0002 1868     		ldr	r0, [r3]
 1549              		.loc 1 1345 0
 1550 0004 7047     		bx	lr
 1551              	.L113:
 1552 0006 C046     		.align	2
 1553              	.L112:
 1554 0008 3C010540 		.word	1074069820
 1555              		.cfi_endproc
 1556              	.LFE36:
 1557              		.size	PWM_MOT_GetInterruptSourceMasked, .-PWM_MOT_GetInterruptSourceMasked
 1558              		.section	.text.PWM_MOT_GetInterruptSource,"ax",%progbits
 1559              		.align	2
 1560              		.global	PWM_MOT_GetInterruptSource
 1561              		.code	16
 1562              		.thumb_func
 1563              		.type	PWM_MOT_GetInterruptSource, %function
 1564              	PWM_MOT_GetInterruptSource:
 1565              	.LFB37:
1346:Generated_Source\PSoC4/PWM_MOT.c **** 
1347:Generated_Source\PSoC4/PWM_MOT.c **** 
1348:Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
1349:Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_GetInterruptSource
1350:Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
1351:Generated_Source\PSoC4/PWM_MOT.c **** *
1352:Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
1353:Generated_Source\PSoC4/PWM_MOT.c **** *  Gets the interrupt requests (without masking).
1354:Generated_Source\PSoC4/PWM_MOT.c **** *
1355:Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
1356:Generated_Source\PSoC4/PWM_MOT.c **** *  None
1357:Generated_Source\PSoC4/PWM_MOT.c **** *
1358:Generated_Source\PSoC4/PWM_MOT.c **** * Return:
1359:Generated_Source\PSoC4/PWM_MOT.c **** *  Interrupt request value
1360:Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
1361:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_INTR_MASK_TC       - Terminal count mask
1362:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_INTR_MASK_CC_MATCH - Compare count / capture mask
1363:Generated_Source\PSoC4/PWM_MOT.c **** *
1364:Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 57


1365:Generated_Source\PSoC4/PWM_MOT.c **** uint32 PWM_MOT_GetInterruptSource(void)
1366:Generated_Source\PSoC4/PWM_MOT.c **** {
 1566              		.loc 1 1366 0
 1567              		.cfi_startproc
1367:Generated_Source\PSoC4/PWM_MOT.c ****     return (PWM_MOT_INTERRUPT_REQ_REG);
 1568              		.loc 1 1367 0
 1569 0000 014B     		ldr	r3, .L115
1368:Generated_Source\PSoC4/PWM_MOT.c **** }
 1570              		.loc 1 1368 0
 1571              		@ sp needed
1367:Generated_Source\PSoC4/PWM_MOT.c ****     return (PWM_MOT_INTERRUPT_REQ_REG);
 1572              		.loc 1 1367 0
 1573 0002 1868     		ldr	r0, [r3]
 1574              		.loc 1 1368 0
 1575 0004 7047     		bx	lr
 1576              	.L116:
 1577 0006 C046     		.align	2
 1578              	.L115:
 1579 0008 30010540 		.word	1074069808
 1580              		.cfi_endproc
 1581              	.LFE37:
 1582              		.size	PWM_MOT_GetInterruptSource, .-PWM_MOT_GetInterruptSource
 1583              		.section	.text.PWM_MOT_ClearInterrupt,"ax",%progbits
 1584              		.align	2
 1585              		.global	PWM_MOT_ClearInterrupt
 1586              		.code	16
 1587              		.thumb_func
 1588              		.type	PWM_MOT_ClearInterrupt, %function
 1589              	PWM_MOT_ClearInterrupt:
 1590              	.LFB38:
1369:Generated_Source\PSoC4/PWM_MOT.c **** 
1370:Generated_Source\PSoC4/PWM_MOT.c **** 
1371:Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
1372:Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_ClearInterrupt
1373:Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
1374:Generated_Source\PSoC4/PWM_MOT.c **** *
1375:Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
1376:Generated_Source\PSoC4/PWM_MOT.c **** *  Clears the interrupt request.
1377:Generated_Source\PSoC4/PWM_MOT.c **** *
1378:Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
1379:Generated_Source\PSoC4/PWM_MOT.c **** *   interruptMask: Mask of interrupts to clear
1380:Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
1381:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_INTR_MASK_TC       - Terminal count mask
1382:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_INTR_MASK_CC_MATCH - Compare count / capture mask
1383:Generated_Source\PSoC4/PWM_MOT.c **** *
1384:Generated_Source\PSoC4/PWM_MOT.c **** * Return:
1385:Generated_Source\PSoC4/PWM_MOT.c **** *  None
1386:Generated_Source\PSoC4/PWM_MOT.c **** *
1387:Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
1388:Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_ClearInterrupt(uint32 interruptMask)
1389:Generated_Source\PSoC4/PWM_MOT.c **** {
 1591              		.loc 1 1389 0
 1592              		.cfi_startproc
 1593              	.LVL97:
1390:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_INTERRUPT_REQ_REG = interruptMask;
 1594              		.loc 1 1390 0
 1595 0000 014B     		ldr	r3, .L118
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 58


1391:Generated_Source\PSoC4/PWM_MOT.c **** }
 1596              		.loc 1 1391 0
 1597              		@ sp needed
1390:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_INTERRUPT_REQ_REG = interruptMask;
 1598              		.loc 1 1390 0
 1599 0002 1860     		str	r0, [r3]
 1600              		.loc 1 1391 0
 1601 0004 7047     		bx	lr
 1602              	.L119:
 1603 0006 C046     		.align	2
 1604              	.L118:
 1605 0008 30010540 		.word	1074069808
 1606              		.cfi_endproc
 1607              	.LFE38:
 1608              		.size	PWM_MOT_ClearInterrupt, .-PWM_MOT_ClearInterrupt
 1609              		.section	.text.PWM_MOT_SetInterrupt,"ax",%progbits
 1610              		.align	2
 1611              		.global	PWM_MOT_SetInterrupt
 1612              		.code	16
 1613              		.thumb_func
 1614              		.type	PWM_MOT_SetInterrupt, %function
 1615              	PWM_MOT_SetInterrupt:
 1616              	.LFB39:
1392:Generated_Source\PSoC4/PWM_MOT.c **** 
1393:Generated_Source\PSoC4/PWM_MOT.c **** 
1394:Generated_Source\PSoC4/PWM_MOT.c **** /*******************************************************************************
1395:Generated_Source\PSoC4/PWM_MOT.c **** * Function Name: PWM_MOT_SetInterrupt
1396:Generated_Source\PSoC4/PWM_MOT.c **** ********************************************************************************
1397:Generated_Source\PSoC4/PWM_MOT.c **** *
1398:Generated_Source\PSoC4/PWM_MOT.c **** * Summary:
1399:Generated_Source\PSoC4/PWM_MOT.c **** *  Sets a software interrupt request.
1400:Generated_Source\PSoC4/PWM_MOT.c **** *
1401:Generated_Source\PSoC4/PWM_MOT.c **** * Parameters:
1402:Generated_Source\PSoC4/PWM_MOT.c **** *   interruptMask: Mask of interrupts to set
1403:Generated_Source\PSoC4/PWM_MOT.c **** *   Values:
1404:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_INTR_MASK_TC       - Terminal count mask
1405:Generated_Source\PSoC4/PWM_MOT.c **** *     - PWM_MOT_INTR_MASK_CC_MATCH - Compare count / capture mask
1406:Generated_Source\PSoC4/PWM_MOT.c **** *
1407:Generated_Source\PSoC4/PWM_MOT.c **** * Return:
1408:Generated_Source\PSoC4/PWM_MOT.c **** *  None
1409:Generated_Source\PSoC4/PWM_MOT.c **** *
1410:Generated_Source\PSoC4/PWM_MOT.c **** *******************************************************************************/
1411:Generated_Source\PSoC4/PWM_MOT.c **** void PWM_MOT_SetInterrupt(uint32 interruptMask)
1412:Generated_Source\PSoC4/PWM_MOT.c **** {
 1617              		.loc 1 1412 0
 1618              		.cfi_startproc
 1619              	.LVL98:
1413:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_INTERRUPT_SET_REG = interruptMask;
 1620              		.loc 1 1413 0
 1621 0000 014B     		ldr	r3, .L121
1414:Generated_Source\PSoC4/PWM_MOT.c **** }
 1622              		.loc 1 1414 0
 1623              		@ sp needed
1413:Generated_Source\PSoC4/PWM_MOT.c ****     PWM_MOT_INTERRUPT_SET_REG = interruptMask;
 1624              		.loc 1 1413 0
 1625 0002 1860     		str	r0, [r3]
 1626              		.loc 1 1414 0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 59


 1627 0004 7047     		bx	lr
 1628              	.L122:
 1629 0006 C046     		.align	2
 1630              	.L121:
 1631 0008 34010540 		.word	1074069812
 1632              		.cfi_endproc
 1633              	.LFE39:
 1634              		.size	PWM_MOT_SetInterrupt, .-PWM_MOT_SetInterrupt
 1635              		.global	PWM_MOT_initVar
 1636              		.bss
 1637              		.set	.LANCHOR0,. + 0
 1638              		.type	PWM_MOT_initVar, %object
 1639              		.size	PWM_MOT_initVar, 1
 1640              	PWM_MOT_initVar:
 1641 0000 00       		.space	1
 1642              		.text
 1643              	.Letext0:
 1644              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1645              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 1646              		.section	.debug_info,"",%progbits
 1647              	.Ldebug_info0:
 1648 0000 270A0000 		.4byte	0xa27
 1649 0004 0400     		.2byte	0x4
 1650 0006 00000000 		.4byte	.Ldebug_abbrev0
 1651 000a 04       		.byte	0x4
 1652 000b 01       		.uleb128 0x1
 1653 000c 35050000 		.4byte	.LASF75
 1654 0010 01       		.byte	0x1
 1655 0011 45000000 		.4byte	.LASF76
 1656 0015 C2020000 		.4byte	.LASF77
 1657 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 1658 001d 00000000 		.4byte	0
 1659 0021 00000000 		.4byte	.Ldebug_line0
 1660 0025 02       		.uleb128 0x2
 1661 0026 01       		.byte	0x1
 1662 0027 06       		.byte	0x6
 1663 0028 D7000000 		.4byte	.LASF0
 1664 002c 02       		.uleb128 0x2
 1665 002d 01       		.byte	0x1
 1666 002e 08       		.byte	0x8
 1667 002f 9B030000 		.4byte	.LASF1
 1668 0033 02       		.uleb128 0x2
 1669 0034 02       		.byte	0x2
 1670 0035 05       		.byte	0x5
 1671 0036 BA030000 		.4byte	.LASF2
 1672 003a 02       		.uleb128 0x2
 1673 003b 02       		.byte	0x2
 1674 003c 07       		.byte	0x7
 1675 003d 85020000 		.4byte	.LASF3
 1676 0041 02       		.uleb128 0x2
 1677 0042 04       		.byte	0x4
 1678 0043 05       		.byte	0x5
 1679 0044 0C010000 		.4byte	.LASF4
 1680 0048 02       		.uleb128 0x2
 1681 0049 04       		.byte	0x4
 1682 004a 07       		.byte	0x7
 1683 004b 0F020000 		.4byte	.LASF5
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 60


 1684 004f 02       		.uleb128 0x2
 1685 0050 08       		.byte	0x8
 1686 0051 05       		.byte	0x5
 1687 0052 C9000000 		.4byte	.LASF6
 1688 0056 02       		.uleb128 0x2
 1689 0057 08       		.byte	0x8
 1690 0058 07       		.byte	0x7
 1691 0059 6D000000 		.4byte	.LASF7
 1692 005d 03       		.uleb128 0x3
 1693 005e 04       		.byte	0x4
 1694 005f 05       		.byte	0x5
 1695 0060 696E7400 		.ascii	"int\000"
 1696 0064 02       		.uleb128 0x2
 1697 0065 04       		.byte	0x4
 1698 0066 07       		.byte	0x7
 1699 0067 E7010000 		.4byte	.LASF8
 1700 006b 04       		.uleb128 0x4
 1701 006c 15010000 		.4byte	.LASF9
 1702 0070 02       		.byte	0x2
 1703 0071 9801     		.2byte	0x198
 1704 0073 2C000000 		.4byte	0x2c
 1705 0077 04       		.uleb128 0x4
 1706 0078 6A010000 		.4byte	.LASF10
 1707 007c 02       		.byte	0x2
 1708 007d 9A01     		.2byte	0x19a
 1709 007f 48000000 		.4byte	0x48
 1710 0083 02       		.uleb128 0x2
 1711 0084 04       		.byte	0x4
 1712 0085 04       		.byte	0x4
 1713 0086 8B030000 		.4byte	.LASF11
 1714 008a 02       		.uleb128 0x2
 1715 008b 08       		.byte	0x8
 1716 008c 04       		.byte	0x4
 1717 008d 2B010000 		.4byte	.LASF12
 1718 0091 02       		.uleb128 0x2
 1719 0092 01       		.byte	0x1
 1720 0093 08       		.byte	0x8
 1721 0094 75040000 		.4byte	.LASF13
 1722 0098 04       		.uleb128 0x4
 1723 0099 BC020000 		.4byte	.LASF14
 1724 009d 02       		.byte	0x2
 1725 009e 4402     		.2byte	0x244
 1726 00a0 A4000000 		.4byte	0xa4
 1727 00a4 05       		.uleb128 0x5
 1728 00a5 77000000 		.4byte	0x77
 1729 00a9 02       		.uleb128 0x2
 1730 00aa 04       		.byte	0x4
 1731 00ab 07       		.byte	0x7
 1732 00ac 04030000 		.4byte	.LASF15
 1733 00b0 06       		.uleb128 0x6
 1734 00b1 CC050000 		.4byte	.LASF18
 1735 00b5 01       		.byte	0x1
 1736 00b6 F104     		.2byte	0x4f1
 1737 00b8 01       		.byte	0x1
 1738 00b9 E2000000 		.4byte	0xe2
 1739 00bd 07       		.uleb128 0x7
 1740 00be 8A010000 		.4byte	.LASF16
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 61


 1741 00c2 01       		.byte	0x1
 1742 00c3 F104     		.2byte	0x4f1
 1743 00c5 77000000 		.4byte	0x77
 1744 00c9 07       		.uleb128 0x7
 1745 00ca 07020000 		.4byte	.LASF17
 1746 00ce 01       		.byte	0x1
 1747 00cf F104     		.2byte	0x4f1
 1748 00d1 77000000 		.4byte	0x77
 1749 00d5 08       		.uleb128 0x8
 1750 00d6 D1040000 		.4byte	.LASF30
 1751 00da 01       		.byte	0x1
 1752 00db F304     		.2byte	0x4f3
 1753 00dd 6B000000 		.4byte	0x6b
 1754 00e1 00       		.byte	0
 1755 00e2 06       		.uleb128 0x6
 1756 00e3 FD030000 		.4byte	.LASF19
 1757 00e7 01       		.byte	0x1
 1758 00e8 6702     		.2byte	0x267
 1759 00ea 01       		.byte	0x1
 1760 00eb FC000000 		.4byte	0xfc
 1761 00ef 07       		.uleb128 0x7
 1762 00f0 00000000 		.4byte	.LASF20
 1763 00f4 01       		.byte	0x1
 1764 00f5 6702     		.2byte	0x267
 1765 00f7 77000000 		.4byte	0x77
 1766 00fb 00       		.byte	0
 1767 00fc 06       		.uleb128 0x6
 1768 00fd B0000000 		.4byte	.LASF21
 1769 0101 01       		.byte	0x1
 1770 0102 2705     		.2byte	0x527
 1771 0104 01       		.byte	0x1
 1772 0105 16010000 		.4byte	0x116
 1773 0109 07       		.uleb128 0x7
 1774 010a 12040000 		.4byte	.LASF22
 1775 010e 01       		.byte	0x1
 1776 010f 2705     		.2byte	0x527
 1777 0111 77000000 		.4byte	0x77
 1778 0115 00       		.byte	0
 1779 0116 06       		.uleb128 0x6
 1780 0117 E3000000 		.4byte	.LASF23
 1781 011b 01       		.byte	0x1
 1782 011c B502     		.2byte	0x2b5
 1783 011e 01       		.byte	0x1
 1784 011f 30010000 		.4byte	0x130
 1785 0123 07       		.uleb128 0x7
 1786 0124 66000000 		.4byte	.LASF24
 1787 0128 01       		.byte	0x1
 1788 0129 B502     		.2byte	0x2b5
 1789 012b 77000000 		.4byte	0x77
 1790 012f 00       		.byte	0
 1791 0130 06       		.uleb128 0x6
 1792 0131 63030000 		.4byte	.LASF25
 1793 0135 01       		.byte	0x1
 1794 0136 5103     		.2byte	0x351
 1795 0138 01       		.byte	0x1
 1796 0139 4A010000 		.4byte	0x14a
 1797 013d 07       		.uleb128 0x7
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 62


 1798 013e 44030000 		.4byte	.LASF26
 1799 0142 01       		.byte	0x1
 1800 0143 5103     		.2byte	0x351
 1801 0145 77000000 		.4byte	0x77
 1802 0149 00       		.byte	0
 1803 014a 09       		.uleb128 0x9
 1804 014b C4030000 		.4byte	.LASF78
 1805 014f 01       		.byte	0x1
 1806 0150 26       		.byte	0x26
 1807 0151 01       		.byte	0x1
 1808 0152 0A       		.uleb128 0xa
 1809 0153 4A010000 		.4byte	0x14a
 1810 0157 00000000 		.4byte	.LFB0
 1811 015b 5C000000 		.4byte	.LFE0-.LFB0
 1812 015f 01       		.uleb128 0x1
 1813 0160 9C       		.byte	0x9c
 1814 0161 CB010000 		.4byte	0x1cb
 1815 0165 0B       		.uleb128 0xb
 1816 0166 E2000000 		.4byte	0xe2
 1817 016a 12000000 		.4byte	.LBB22
 1818 016e 00000000 		.4byte	.Ldebug_ranges0+0
 1819 0172 01       		.byte	0x1
 1820 0173 67       		.byte	0x67
 1821 0174 7F010000 		.4byte	0x17f
 1822 0178 0C       		.uleb128 0xc
 1823 0179 EF000000 		.4byte	0xef
 1824 017d 00       		.byte	0
 1825 017e 00       		.byte	0
 1826 017f 0D       		.uleb128 0xd
 1827 0180 FC000000 		.4byte	0xfc
 1828 0184 24000000 		.4byte	.LBB26
 1829 0188 04000000 		.4byte	.LBE26-.LBB26
 1830 018c 01       		.byte	0x1
 1831 018d 77       		.byte	0x77
 1832 018e 99010000 		.4byte	0x199
 1833 0192 0C       		.uleb128 0xc
 1834 0193 09010000 		.4byte	0x109
 1835 0197 00       		.byte	0
 1836 0198 00       		.byte	0
 1837 0199 0D       		.uleb128 0xd
 1838 019a 16010000 		.4byte	0x116
 1839 019e 2E000000 		.4byte	.LBB28
 1840 01a2 08000000 		.4byte	.LBE28-.LBB28
 1841 01a6 01       		.byte	0x1
 1842 01a7 92       		.byte	0x92
 1843 01a8 B4010000 		.4byte	0x1b4
 1844 01ac 0E       		.uleb128 0xe
 1845 01ad 23010000 		.4byte	0x123
 1846 01b1 0010     		.2byte	0x1000
 1847 01b3 00       		.byte	0
 1848 01b4 0F       		.uleb128 0xf
 1849 01b5 30010000 		.4byte	0x130
 1850 01b9 36000000 		.4byte	.LBB30
 1851 01bd 06000000 		.4byte	.LBE30-.LBB30
 1852 01c1 01       		.byte	0x1
 1853 01c2 93       		.byte	0x93
 1854 01c3 0C       		.uleb128 0xc
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 63


 1855 01c4 3D010000 		.4byte	0x13d
 1856 01c8 01       		.byte	0x1
 1857 01c9 00       		.byte	0
 1858 01ca 00       		.byte	0
 1859 01cb 10       		.uleb128 0x10
 1860 01cc 84000000 		.4byte	.LASF27
 1861 01d0 01       		.byte	0x1
 1862 01d1 B1       		.byte	0xb1
 1863 01d2 00000000 		.4byte	.LFB1
 1864 01d6 30000000 		.4byte	.LFE1-.LFB1
 1865 01da 01       		.uleb128 0x1
 1866 01db 9C       		.byte	0x9c
 1867 01dc 47020000 		.4byte	0x247
 1868 01e0 11       		.uleb128 0x11
 1869 01e1 D1040000 		.4byte	.LASF30
 1870 01e5 01       		.byte	0x1
 1871 01e6 B3       		.byte	0xb3
 1872 01e7 6B000000 		.4byte	0x6b
 1873 01eb 00000000 		.4byte	.LLST0
 1874 01ef 0D       		.uleb128 0xd
 1875 01f0 B0000000 		.4byte	0xb0
 1876 01f4 14000000 		.4byte	.LBB32
 1877 01f8 10000000 		.4byte	.LBE32-.LBB32
 1878 01fc 01       		.byte	0x1
 1879 01fd BC       		.byte	0xbc
 1880 01fe 34020000 		.4byte	0x234
 1881 0202 0C       		.uleb128 0xc
 1882 0203 C9000000 		.4byte	0xc9
 1883 0207 18       		.byte	0x18
 1884 0208 0C       		.uleb128 0xc
 1885 0209 BD000000 		.4byte	0xbd
 1886 020d 01       		.byte	0x1
 1887 020e 12       		.uleb128 0x12
 1888 020f 14000000 		.4byte	.LBB33
 1889 0213 10000000 		.4byte	.LBE33-.LBB33
 1890 0217 13       		.uleb128 0x13
 1891 0218 D5000000 		.4byte	0xd5
 1892 021c 13000000 		.4byte	.LLST1
 1893 0220 14       		.uleb128 0x14
 1894 0221 18000000 		.4byte	.LVL6
 1895 0225 120A0000 		.4byte	0xa12
 1896 0229 14       		.uleb128 0x14
 1897 022a 24000000 		.4byte	.LVL7
 1898 022e 1D0A0000 		.4byte	0xa1d
 1899 0232 00       		.byte	0
 1900 0233 00       		.byte	0
 1901 0234 14       		.uleb128 0x14
 1902 0235 06000000 		.4byte	.LVL4
 1903 0239 120A0000 		.4byte	0xa12
 1904 023d 14       		.uleb128 0x14
 1905 023e 14000000 		.4byte	.LVL5
 1906 0242 1D0A0000 		.4byte	0xa1d
 1907 0246 00       		.byte	0
 1908 0247 10       		.uleb128 0x10
 1909 0248 A5010000 		.4byte	.LASF28
 1910 024c 01       		.byte	0x1
 1911 024d E6       		.byte	0xe6
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 64


 1912 024e 00000000 		.4byte	.LFB2
 1913 0252 6C000000 		.4byte	.LFE2-.LFB2
 1914 0256 01       		.uleb128 0x1
 1915 0257 9C       		.byte	0x9c
 1916 0258 EA020000 		.4byte	0x2ea
 1917 025c 0D       		.uleb128 0xd
 1918 025d 4A010000 		.4byte	0x14a
 1919 0261 0A000000 		.4byte	.LBB34
 1920 0265 3A000000 		.4byte	.LBE34-.LBB34
 1921 0269 01       		.byte	0x1
 1922 026a EA       		.byte	0xea
 1923 026b E0020000 		.4byte	0x2e0
 1924 026f 0D       		.uleb128 0xd
 1925 0270 E2000000 		.4byte	0xe2
 1926 0274 1C000000 		.4byte	.LBB36
 1927 0278 04000000 		.4byte	.LBE36-.LBB36
 1928 027c 01       		.byte	0x1
 1929 027d 67       		.byte	0x67
 1930 027e 8C020000 		.4byte	0x28c
 1931 0282 15       		.uleb128 0x15
 1932 0283 EF000000 		.4byte	0xef
 1933 0287 26000000 		.4byte	.LLST2
 1934 028b 00       		.byte	0
 1935 028c 0D       		.uleb128 0xd
 1936 028d FC000000 		.4byte	0xfc
 1937 0291 2C000000 		.4byte	.LBB38
 1938 0295 04000000 		.4byte	.LBE38-.LBB38
 1939 0299 01       		.byte	0x1
 1940 029a 77       		.byte	0x77
 1941 029b A9020000 		.4byte	0x2a9
 1942 029f 15       		.uleb128 0x15
 1943 02a0 09010000 		.4byte	0x109
 1944 02a4 3A000000 		.4byte	.LLST3
 1945 02a8 00       		.byte	0
 1946 02a9 0D       		.uleb128 0xd
 1947 02aa 16010000 		.4byte	0x116
 1948 02ae 36000000 		.4byte	.LBB40
 1949 02b2 08000000 		.4byte	.LBE40-.LBB40
 1950 02b6 01       		.byte	0x1
 1951 02b7 92       		.byte	0x92
 1952 02b8 C6020000 		.4byte	0x2c6
 1953 02bc 15       		.uleb128 0x15
 1954 02bd 23010000 		.4byte	0x123
 1955 02c1 4E000000 		.4byte	.LLST4
 1956 02c5 00       		.byte	0
 1957 02c6 0F       		.uleb128 0xf
 1958 02c7 30010000 		.4byte	0x130
 1959 02cb 3E000000 		.4byte	.LBB42
 1960 02cf 06000000 		.4byte	.LBE42-.LBB42
 1961 02d3 01       		.byte	0x1
 1962 02d4 93       		.byte	0x93
 1963 02d5 15       		.uleb128 0x15
 1964 02d6 3D010000 		.4byte	0x13d
 1965 02da 64000000 		.4byte	.LLST5
 1966 02de 00       		.byte	0
 1967 02df 00       		.byte	0
 1968 02e0 14       		.uleb128 0x14
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 65


 1969 02e1 4A000000 		.4byte	.LVL13
 1970 02e5 CB010000 		.4byte	0x1cb
 1971 02e9 00       		.byte	0
 1972 02ea 16       		.uleb128 0x16
 1973 02eb 71010000 		.4byte	.LASF29
 1974 02ef 01       		.byte	0x1
 1975 02f0 0001     		.2byte	0x100
 1976 02f2 00000000 		.4byte	.LFB3
 1977 02f6 1C000000 		.4byte	.LFE3-.LFB3
 1978 02fa 01       		.uleb128 0x1
 1979 02fb 9C       		.byte	0x9c
 1980 02fc 23030000 		.4byte	0x323
 1981 0300 17       		.uleb128 0x17
 1982 0301 D1040000 		.4byte	.LASF30
 1983 0305 01       		.byte	0x1
 1984 0306 0201     		.2byte	0x102
 1985 0308 6B000000 		.4byte	0x6b
 1986 030c 78000000 		.4byte	.LLST6
 1987 0310 14       		.uleb128 0x14
 1988 0311 06000000 		.4byte	.LVL14
 1989 0315 120A0000 		.4byte	0xa12
 1990 0319 14       		.uleb128 0x14
 1991 031a 14000000 		.4byte	.LVL15
 1992 031e 1D0A0000 		.4byte	0xa1d
 1993 0322 00       		.byte	0
 1994 0323 16       		.uleb128 0x16
 1995 0324 1B010000 		.4byte	.LASF31
 1996 0328 01       		.byte	0x1
 1997 0329 2501     		.2byte	0x125
 1998 032b 00000000 		.4byte	.LFB4
 1999 032f 28000000 		.4byte	.LFE4-.LFB4
 2000 0333 01       		.uleb128 0x1
 2001 0334 9C       		.byte	0x9c
 2002 0335 6C030000 		.4byte	0x36c
 2003 0339 18       		.uleb128 0x18
 2004 033a 7A040000 		.4byte	.LASF33
 2005 033e 01       		.byte	0x1
 2006 033f 2501     		.2byte	0x125
 2007 0341 77000000 		.4byte	0x77
 2008 0345 8B000000 		.4byte	.LLST7
 2009 0349 17       		.uleb128 0x17
 2010 034a D1040000 		.4byte	.LASF30
 2011 034e 01       		.byte	0x1
 2012 034f 2701     		.2byte	0x127
 2013 0351 6B000000 		.4byte	0x6b
 2014 0355 B7000000 		.4byte	.LLST8
 2015 0359 14       		.uleb128 0x14
 2016 035a 08000000 		.4byte	.LVL17
 2017 035e 120A0000 		.4byte	0xa12
 2018 0362 14       		.uleb128 0x14
 2019 0363 1C000000 		.4byte	.LVL18
 2020 0367 1D0A0000 		.4byte	0xa1d
 2021 036b 00       		.byte	0
 2022 036c 16       		.uleb128 0x16
 2023 036d 73020000 		.4byte	.LASF32
 2024 0371 01       		.byte	0x1
 2025 0372 4601     		.2byte	0x146
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 66


 2026 0374 00000000 		.4byte	.LFB5
 2027 0378 28000000 		.4byte	.LFE5-.LFB5
 2028 037c 01       		.uleb128 0x1
 2029 037d 9C       		.byte	0x9c
 2030 037e B5030000 		.4byte	0x3b5
 2031 0382 18       		.uleb128 0x18
 2032 0383 A9000000 		.4byte	.LASF34
 2033 0387 01       		.byte	0x1
 2034 0388 4601     		.2byte	0x146
 2035 038a 77000000 		.4byte	0x77
 2036 038e CA000000 		.4byte	.LLST9
 2037 0392 17       		.uleb128 0x17
 2038 0393 D1040000 		.4byte	.LASF30
 2039 0397 01       		.byte	0x1
 2040 0398 4801     		.2byte	0x148
 2041 039a 6B000000 		.4byte	0x6b
 2042 039e F6000000 		.4byte	.LLST10
 2043 03a2 14       		.uleb128 0x14
 2044 03a3 08000000 		.4byte	.LVL21
 2045 03a7 120A0000 		.4byte	0xa12
 2046 03ab 14       		.uleb128 0x14
 2047 03ac 1C000000 		.4byte	.LVL22
 2048 03b0 1D0A0000 		.4byte	0xa1d
 2049 03b4 00       		.byte	0
 2050 03b5 16       		.uleb128 0x16
 2051 03b6 E8030000 		.4byte	.LASF35
 2052 03ba 01       		.byte	0x1
 2053 03bb 6B01     		.2byte	0x16b
 2054 03bd 00000000 		.4byte	.LFB6
 2055 03c1 28000000 		.4byte	.LFE6-.LFB6
 2056 03c5 01       		.uleb128 0x1
 2057 03c6 9C       		.byte	0x9c
 2058 03c7 FE030000 		.4byte	0x3fe
 2059 03cb 18       		.uleb128 0x18
 2060 03cc 91030000 		.4byte	.LASF36
 2061 03d0 01       		.byte	0x1
 2062 03d1 6B01     		.2byte	0x16b
 2063 03d3 77000000 		.4byte	0x77
 2064 03d7 09010000 		.4byte	.LLST11
 2065 03db 17       		.uleb128 0x17
 2066 03dc D1040000 		.4byte	.LASF30
 2067 03e0 01       		.byte	0x1
 2068 03e1 6D01     		.2byte	0x16d
 2069 03e3 6B000000 		.4byte	0x6b
 2070 03e7 35010000 		.4byte	.LLST12
 2071 03eb 14       		.uleb128 0x14
 2072 03ec 08000000 		.4byte	.LVL25
 2073 03f0 120A0000 		.4byte	0xa12
 2074 03f4 14       		.uleb128 0x14
 2075 03f5 1C000000 		.4byte	.LVL26
 2076 03f9 1D0A0000 		.4byte	0xa1d
 2077 03fd 00       		.byte	0
 2078 03fe 16       		.uleb128 0x16
 2079 03ff 78030000 		.4byte	.LASF37
 2080 0403 01       		.byte	0x1
 2081 0404 8B01     		.2byte	0x18b
 2082 0406 00000000 		.4byte	.LFB7
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 67


 2083 040a 2C000000 		.4byte	.LFE7-.LFB7
 2084 040e 01       		.uleb128 0x1
 2085 040f 9C       		.byte	0x9c
 2086 0410 47040000 		.4byte	0x447
 2087 0414 18       		.uleb128 0x18
 2088 0415 98020000 		.4byte	.LASF38
 2089 0419 01       		.byte	0x1
 2090 041a 8B01     		.2byte	0x18b
 2091 041c 77000000 		.4byte	0x77
 2092 0420 48010000 		.4byte	.LLST13
 2093 0424 17       		.uleb128 0x17
 2094 0425 D1040000 		.4byte	.LASF30
 2095 0429 01       		.byte	0x1
 2096 042a 8D01     		.2byte	0x18d
 2097 042c 6B000000 		.4byte	0x6b
 2098 0430 74010000 		.4byte	.LLST14
 2099 0434 14       		.uleb128 0x14
 2100 0435 08000000 		.4byte	.LVL29
 2101 0439 120A0000 		.4byte	0xa12
 2102 043d 14       		.uleb128 0x14
 2103 043e 22000000 		.4byte	.LVL31
 2104 0442 1D0A0000 		.4byte	0xa1d
 2105 0446 00       		.byte	0
 2106 0447 16       		.uleb128 0x16
 2107 0448 34040000 		.4byte	.LASF39
 2108 044c 01       		.byte	0x1
 2109 044d C101     		.2byte	0x1c1
 2110 044f 00000000 		.4byte	.LFB8
 2111 0453 10000000 		.4byte	.LFE8-.LFB8
 2112 0457 01       		.uleb128 0x1
 2113 0458 9C       		.byte	0x9c
 2114 0459 6E040000 		.4byte	0x46e
 2115 045d 18       		.uleb128 0x18
 2116 045e 21020000 		.4byte	.LASF40
 2117 0462 01       		.byte	0x1
 2118 0463 C101     		.2byte	0x1c1
 2119 0465 77000000 		.4byte	0x77
 2120 0469 87010000 		.4byte	.LLST15
 2121 046d 00       		.byte	0
 2122 046e 16       		.uleb128 0x16
 2123 046f 4C030000 		.4byte	.LASF41
 2124 0473 01       		.byte	0x1
 2125 0474 E501     		.2byte	0x1e5
 2126 0476 00000000 		.4byte	.LFB9
 2127 047a 28000000 		.4byte	.LFE9-.LFB9
 2128 047e 01       		.uleb128 0x1
 2129 047f 9C       		.byte	0x9c
 2130 0480 B7040000 		.4byte	0x4b7
 2131 0484 18       		.uleb128 0x18
 2132 0485 0D030000 		.4byte	.LASF42
 2133 0489 01       		.byte	0x1
 2134 048a E501     		.2byte	0x1e5
 2135 048c 77000000 		.4byte	0x77
 2136 0490 A8010000 		.4byte	.LLST16
 2137 0494 17       		.uleb128 0x17
 2138 0495 D1040000 		.4byte	.LASF30
 2139 0499 01       		.byte	0x1
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 68


 2140 049a E701     		.2byte	0x1e7
 2141 049c 6B000000 		.4byte	0x6b
 2142 04a0 D4010000 		.4byte	.LLST17
 2143 04a4 14       		.uleb128 0x14
 2144 04a5 08000000 		.4byte	.LVL35
 2145 04a9 120A0000 		.4byte	0xa12
 2146 04ad 14       		.uleb128 0x14
 2147 04ae 22000000 		.4byte	.LVL37
 2148 04b2 1D0A0000 		.4byte	0xa1d
 2149 04b6 00       		.byte	0
 2150 04b7 16       		.uleb128 0x16
 2151 04b8 E2040000 		.4byte	.LASF43
 2152 04bc 01       		.byte	0x1
 2153 04bd 0702     		.2byte	0x207
 2154 04bf 00000000 		.4byte	.LFB10
 2155 04c3 28000000 		.4byte	.LFE10-.LFB10
 2156 04c7 01       		.uleb128 0x1
 2157 04c8 9C       		.byte	0x9c
 2158 04c9 00050000 		.4byte	0x500
 2159 04cd 18       		.uleb128 0x18
 2160 04ce A9030000 		.4byte	.LASF44
 2161 04d2 01       		.byte	0x1
 2162 04d3 0702     		.2byte	0x207
 2163 04d5 77000000 		.4byte	0x77
 2164 04d9 E7010000 		.4byte	.LLST18
 2165 04dd 17       		.uleb128 0x17
 2166 04de D1040000 		.4byte	.LASF30
 2167 04e2 01       		.byte	0x1
 2168 04e3 0902     		.2byte	0x209
 2169 04e5 6B000000 		.4byte	0x6b
 2170 04e9 13020000 		.4byte	.LLST19
 2171 04ed 14       		.uleb128 0x14
 2172 04ee 08000000 		.4byte	.LVL39
 2173 04f2 120A0000 		.4byte	0xa12
 2174 04f6 14       		.uleb128 0x14
 2175 04f7 22000000 		.4byte	.LVL41
 2176 04fb 1D0A0000 		.4byte	0xa1d
 2177 04ff 00       		.byte	0
 2178 0500 16       		.uleb128 0x16
 2179 0501 BA040000 		.4byte	.LASF45
 2180 0505 01       		.byte	0x1
 2181 0506 2802     		.2byte	0x228
 2182 0508 00000000 		.4byte	.LFB11
 2183 050c 2C000000 		.4byte	.LFE11-.LFB11
 2184 0510 01       		.uleb128 0x1
 2185 0511 9C       		.byte	0x9c
 2186 0512 49050000 		.4byte	0x549
 2187 0516 18       		.uleb128 0x18
 2188 0517 B3010000 		.4byte	.LASF46
 2189 051b 01       		.byte	0x1
 2190 051c 2802     		.2byte	0x228
 2191 051e 77000000 		.4byte	0x77
 2192 0522 26020000 		.4byte	.LLST20
 2193 0526 17       		.uleb128 0x17
 2194 0527 D1040000 		.4byte	.LASF30
 2195 052b 01       		.byte	0x1
 2196 052c 2A02     		.2byte	0x22a
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 69


 2197 052e 6B000000 		.4byte	0x6b
 2198 0532 52020000 		.4byte	.LLST21
 2199 0536 14       		.uleb128 0x14
 2200 0537 08000000 		.4byte	.LVL43
 2201 053b 120A0000 		.4byte	0xa12
 2202 053f 14       		.uleb128 0x14
 2203 0540 20000000 		.4byte	.LVL45
 2204 0544 1D0A0000 		.4byte	0xa1d
 2205 0548 00       		.byte	0
 2206 0549 16       		.uleb128 0x16
 2207 054a 1C030000 		.4byte	.LASF47
 2208 054e 01       		.byte	0x1
 2209 054f 4902     		.2byte	0x249
 2210 0551 00000000 		.4byte	.LFB12
 2211 0555 28000000 		.4byte	.LFE12-.LFB12
 2212 0559 01       		.uleb128 0x1
 2213 055a 9C       		.byte	0x9c
 2214 055b 92050000 		.4byte	0x592
 2215 055f 18       		.uleb128 0x18
 2216 0560 8A010000 		.4byte	.LASF16
 2217 0564 01       		.byte	0x1
 2218 0565 4902     		.2byte	0x249
 2219 0567 77000000 		.4byte	0x77
 2220 056b 65020000 		.4byte	.LLST22
 2221 056f 17       		.uleb128 0x17
 2222 0570 D1040000 		.4byte	.LASF30
 2223 0574 01       		.byte	0x1
 2224 0575 4B02     		.2byte	0x24b
 2225 0577 6B000000 		.4byte	0x6b
 2226 057b 91020000 		.4byte	.LLST23
 2227 057f 14       		.uleb128 0x14
 2228 0580 08000000 		.4byte	.LVL47
 2229 0584 120A0000 		.4byte	0xa12
 2230 0588 14       		.uleb128 0x14
 2231 0589 1C000000 		.4byte	.LVL48
 2232 058d 1D0A0000 		.4byte	0xa1d
 2233 0591 00       		.byte	0
 2234 0592 0A       		.uleb128 0xa
 2235 0593 E2000000 		.4byte	0xe2
 2236 0597 00000000 		.4byte	.LFB13
 2237 059b 10000000 		.4byte	.LFE13-.LFB13
 2238 059f 01       		.uleb128 0x1
 2239 05a0 9C       		.byte	0x9c
 2240 05a1 AF050000 		.4byte	0x5af
 2241 05a5 15       		.uleb128 0x15
 2242 05a6 EF000000 		.4byte	0xef
 2243 05aa A4020000 		.4byte	.LLST24
 2244 05ae 00       		.byte	0
 2245 05af 19       		.uleb128 0x19
 2246 05b0 9B040000 		.4byte	.LASF50
 2247 05b4 01       		.byte	0x1
 2248 05b5 7B02     		.2byte	0x27b
 2249 05b7 77000000 		.4byte	0x77
 2250 05bb 00000000 		.4byte	.LFB14
 2251 05bf 10000000 		.4byte	.LFE14-.LFB14
 2252 05c3 01       		.uleb128 0x1
 2253 05c4 9C       		.byte	0x9c
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 70


 2254 05c5 16       		.uleb128 0x16
 2255 05c6 1E050000 		.4byte	.LASF48
 2256 05ca 01       		.byte	0x1
 2257 05cb 9802     		.2byte	0x298
 2258 05cd 00000000 		.4byte	.LFB15
 2259 05d1 28000000 		.4byte	.LFE15-.LFB15
 2260 05d5 01       		.uleb128 0x1
 2261 05d6 9C       		.byte	0x9c
 2262 05d7 0E060000 		.4byte	0x60e
 2263 05db 18       		.uleb128 0x18
 2264 05dc 7F040000 		.4byte	.LASF49
 2265 05e0 01       		.byte	0x1
 2266 05e1 9802     		.2byte	0x298
 2267 05e3 77000000 		.4byte	0x77
 2268 05e7 C5020000 		.4byte	.LLST25
 2269 05eb 17       		.uleb128 0x17
 2270 05ec D1040000 		.4byte	.LASF30
 2271 05f0 01       		.byte	0x1
 2272 05f1 9A02     		.2byte	0x29a
 2273 05f3 6B000000 		.4byte	0x6b
 2274 05f7 F1020000 		.4byte	.LLST26
 2275 05fb 14       		.uleb128 0x14
 2276 05fc 08000000 		.4byte	.LVL53
 2277 0600 120A0000 		.4byte	0xa12
 2278 0604 14       		.uleb128 0x14
 2279 0605 1C000000 		.4byte	.LVL54
 2280 0609 1D0A0000 		.4byte	0xa1d
 2281 060d 00       		.byte	0
 2282 060e 0A       		.uleb128 0xa
 2283 060f 16010000 		.4byte	0x116
 2284 0613 00000000 		.4byte	.LFB16
 2285 0617 10000000 		.4byte	.LFE16-.LFB16
 2286 061b 01       		.uleb128 0x1
 2287 061c 9C       		.byte	0x9c
 2288 061d 2B060000 		.4byte	0x62b
 2289 0621 15       		.uleb128 0x15
 2290 0622 23010000 		.4byte	0x123
 2291 0626 04030000 		.4byte	.LLST27
 2292 062a 00       		.byte	0
 2293 062b 19       		.uleb128 0x19
 2294 062c 31030000 		.4byte	.LASF51
 2295 0630 01       		.byte	0x1
 2296 0631 C902     		.2byte	0x2c9
 2297 0633 77000000 		.4byte	0x77
 2298 0637 00000000 		.4byte	.LFB17
 2299 063b 10000000 		.4byte	.LFE17-.LFB17
 2300 063f 01       		.uleb128 0x1
 2301 0640 9C       		.byte	0x9c
 2302 0641 16       		.uleb128 0x16
 2303 0642 5E040000 		.4byte	.LASF52
 2304 0646 01       		.byte	0x1
 2305 0647 E302     		.2byte	0x2e3
 2306 0649 00000000 		.4byte	.LFB18
 2307 064d 24000000 		.4byte	.LFE18-.LFB18
 2308 0651 01       		.uleb128 0x1
 2309 0652 9C       		.byte	0x9c
 2310 0653 8A060000 		.4byte	0x68a
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 71


 2311 0657 18       		.uleb128 0x18
 2312 0658 13050000 		.4byte	.LASF53
 2313 065c 01       		.byte	0x1
 2314 065d E302     		.2byte	0x2e3
 2315 065f 77000000 		.4byte	0x77
 2316 0663 25030000 		.4byte	.LLST28
 2317 0667 17       		.uleb128 0x17
 2318 0668 D1040000 		.4byte	.LASF30
 2319 066c 01       		.byte	0x1
 2320 066d E502     		.2byte	0x2e5
 2321 066f 6B000000 		.4byte	0x6b
 2322 0673 51030000 		.4byte	.LLST29
 2323 0677 14       		.uleb128 0x14
 2324 0678 08000000 		.4byte	.LVL59
 2325 067c 120A0000 		.4byte	0xa12
 2326 0680 14       		.uleb128 0x14
 2327 0681 1E000000 		.4byte	.LVL60
 2328 0685 1D0A0000 		.4byte	0xa1d
 2329 0689 00       		.byte	0
 2330 068a 16       		.uleb128 0x16
 2331 068b 53010000 		.4byte	.LASF54
 2332 068f 01       		.byte	0x1
 2333 0690 FE02     		.2byte	0x2fe
 2334 0692 00000000 		.4byte	.LFB19
 2335 0696 10000000 		.4byte	.LFE19-.LFB19
 2336 069a 01       		.uleb128 0x1
 2337 069b 9C       		.byte	0x9c
 2338 069c B1060000 		.4byte	0x6b1
 2339 06a0 18       		.uleb128 0x18
 2340 06a1 F8050000 		.4byte	.LASF55
 2341 06a5 01       		.byte	0x1
 2342 06a6 FE02     		.2byte	0x2fe
 2343 06a8 77000000 		.4byte	0x77
 2344 06ac 64030000 		.4byte	.LLST30
 2345 06b0 00       		.byte	0
 2346 06b1 19       		.uleb128 0x19
 2347 06b2 A6020000 		.4byte	.LASF56
 2348 06b6 01       		.byte	0x1
 2349 06b7 1203     		.2byte	0x312
 2350 06b9 77000000 		.4byte	0x77
 2351 06bd 00000000 		.4byte	.LFB20
 2352 06c1 10000000 		.4byte	.LFE20-.LFB20
 2353 06c5 01       		.uleb128 0x1
 2354 06c6 9C       		.byte	0x9c
 2355 06c7 16       		.uleb128 0x16
 2356 06c8 93000000 		.4byte	.LASF57
 2357 06cc 01       		.byte	0x1
 2358 06cd 2C03     		.2byte	0x32c
 2359 06cf 00000000 		.4byte	.LFB21
 2360 06d3 28000000 		.4byte	.LFE21-.LFB21
 2361 06d7 01       		.uleb128 0x1
 2362 06d8 9C       		.byte	0x9c
 2363 06d9 10070000 		.4byte	0x710
 2364 06dd 18       		.uleb128 0x18
 2365 06de 13050000 		.4byte	.LASF53
 2366 06e2 01       		.byte	0x1
 2367 06e3 2C03     		.2byte	0x32c
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 72


 2368 06e5 77000000 		.4byte	0x77
 2369 06e9 85030000 		.4byte	.LLST31
 2370 06ed 17       		.uleb128 0x17
 2371 06ee D1040000 		.4byte	.LASF30
 2372 06f2 01       		.byte	0x1
 2373 06f3 2E03     		.2byte	0x32e
 2374 06f5 6B000000 		.4byte	0x6b
 2375 06f9 B1030000 		.4byte	.LLST32
 2376 06fd 14       		.uleb128 0x14
 2377 06fe 08000000 		.4byte	.LVL65
 2378 0702 120A0000 		.4byte	0xa12
 2379 0706 14       		.uleb128 0x14
 2380 0707 22000000 		.4byte	.LVL67
 2381 070b 1D0A0000 		.4byte	0xa1d
 2382 070f 00       		.byte	0
 2383 0710 0A       		.uleb128 0xa
 2384 0711 30010000 		.4byte	0x130
 2385 0715 00000000 		.4byte	.LFB22
 2386 0719 10000000 		.4byte	.LFE22-.LFB22
 2387 071d 01       		.uleb128 0x1
 2388 071e 9C       		.byte	0x9c
 2389 071f 2D070000 		.4byte	0x72d
 2390 0723 15       		.uleb128 0x15
 2391 0724 3D010000 		.4byte	0x13d
 2392 0728 C4030000 		.4byte	.LLST33
 2393 072c 00       		.byte	0
 2394 072d 19       		.uleb128 0x19
 2395 072e 20040000 		.4byte	.LASF58
 2396 0732 01       		.byte	0x1
 2397 0733 8403     		.2byte	0x384
 2398 0735 77000000 		.4byte	0x77
 2399 0739 00000000 		.4byte	.LFB23
 2400 073d 10000000 		.4byte	.LFE23-.LFB23
 2401 0741 01       		.uleb128 0x1
 2402 0742 9C       		.byte	0x9c
 2403 0743 16       		.uleb128 0x16
 2404 0744 FB040000 		.4byte	.LASF59
 2405 0748 01       		.byte	0x1
 2406 0749 BA03     		.2byte	0x3ba
 2407 074b 00000000 		.4byte	.LFB24
 2408 074f 10000000 		.4byte	.LFE24-.LFB24
 2409 0753 01       		.uleb128 0x1
 2410 0754 9C       		.byte	0x9c
 2411 0755 6A070000 		.4byte	0x76a
 2412 0759 18       		.uleb128 0x18
 2413 075a AF040000 		.4byte	.LASF60
 2414 075e 01       		.byte	0x1
 2415 075f BA03     		.2byte	0x3ba
 2416 0761 77000000 		.4byte	0x77
 2417 0765 E5030000 		.4byte	.LLST34
 2418 0769 00       		.byte	0
 2419 076a 19       		.uleb128 0x19
 2420 076b 47040000 		.4byte	.LASF61
 2421 076f 01       		.byte	0x1
 2422 0770 E803     		.2byte	0x3e8
 2423 0772 77000000 		.4byte	0x77
 2424 0776 00000000 		.4byte	.LFB25
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 73


 2425 077a 10000000 		.4byte	.LFE25-.LFB25
 2426 077e 01       		.uleb128 0x1
 2427 077f 9C       		.byte	0x9c
 2428 0780 19       		.uleb128 0x19
 2429 0781 BC010000 		.4byte	.LASF62
 2430 0785 01       		.byte	0x1
 2431 0786 1604     		.2byte	0x416
 2432 0788 77000000 		.4byte	0x77
 2433 078c 00000000 		.4byte	.LFB26
 2434 0790 10000000 		.4byte	.LFE26-.LFB26
 2435 0794 01       		.uleb128 0x1
 2436 0795 9C       		.byte	0x9c
 2437 0796 19       		.uleb128 0x19
 2438 0797 45020000 		.4byte	.LASF63
 2439 079b 01       		.byte	0x1
 2440 079c 2B04     		.2byte	0x42b
 2441 079e 77000000 		.4byte	0x77
 2442 07a2 00000000 		.4byte	.LFB27
 2443 07a6 10000000 		.4byte	.LFE27-.LFB27
 2444 07aa 01       		.uleb128 0x1
 2445 07ab 9C       		.byte	0x9c
 2446 07ac 16       		.uleb128 0x16
 2447 07ad D0010000 		.4byte	.LASF64
 2448 07b1 01       		.byte	0x1
 2449 07b2 4604     		.2byte	0x446
 2450 07b4 00000000 		.4byte	.LFB28
 2451 07b8 24000000 		.4byte	.LFE28-.LFB28
 2452 07bc 01       		.uleb128 0x1
 2453 07bd 9C       		.byte	0x9c
 2454 07be F5070000 		.4byte	0x7f5
 2455 07c2 18       		.uleb128 0x18
 2456 07c3 7E010000 		.4byte	.LASF65
 2457 07c7 01       		.byte	0x1
 2458 07c8 4604     		.2byte	0x446
 2459 07ca 77000000 		.4byte	0x77
 2460 07ce 06040000 		.4byte	.LLST35
 2461 07d2 17       		.uleb128 0x17
 2462 07d3 D1040000 		.4byte	.LASF30
 2463 07d7 01       		.byte	0x1
 2464 07d8 4804     		.2byte	0x448
 2465 07da 6B000000 		.4byte	0x6b
 2466 07de 32040000 		.4byte	.LLST36
 2467 07e2 14       		.uleb128 0x14
 2468 07e3 08000000 		.4byte	.LVL73
 2469 07e7 120A0000 		.4byte	0xa12
 2470 07eb 14       		.uleb128 0x14
 2471 07ec 1C000000 		.4byte	.LVL74
 2472 07f0 1D0A0000 		.4byte	0xa1d
 2473 07f4 00       		.byte	0
 2474 07f5 16       		.uleb128 0x16
 2475 07f6 8F010000 		.4byte	.LASF66
 2476 07fa 01       		.byte	0x1
 2477 07fb 6704     		.2byte	0x467
 2478 07fd 00000000 		.4byte	.LFB29
 2479 0801 24000000 		.4byte	.LFE29-.LFB29
 2480 0805 01       		.uleb128 0x1
 2481 0806 9C       		.byte	0x9c
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 74


 2482 0807 3E080000 		.4byte	0x83e
 2483 080b 18       		.uleb128 0x18
 2484 080c 7E010000 		.4byte	.LASF65
 2485 0810 01       		.byte	0x1
 2486 0811 6704     		.2byte	0x467
 2487 0813 77000000 		.4byte	0x77
 2488 0817 45040000 		.4byte	.LLST37
 2489 081b 17       		.uleb128 0x17
 2490 081c D1040000 		.4byte	.LASF30
 2491 0820 01       		.byte	0x1
 2492 0821 6904     		.2byte	0x469
 2493 0823 6B000000 		.4byte	0x6b
 2494 0827 71040000 		.4byte	.LLST38
 2495 082b 14       		.uleb128 0x14
 2496 082c 08000000 		.4byte	.LVL77
 2497 0830 120A0000 		.4byte	0xa12
 2498 0834 14       		.uleb128 0x14
 2499 0835 1E000000 		.4byte	.LVL78
 2500 0839 1D0A0000 		.4byte	0xa1d
 2501 083d 00       		.byte	0
 2502 083e 16       		.uleb128 0x16
 2503 083f E3050000 		.4byte	.LASF67
 2504 0843 01       		.byte	0x1
 2505 0844 8804     		.2byte	0x488
 2506 0846 00000000 		.4byte	.LFB30
 2507 084a 28000000 		.4byte	.LFE30-.LFB30
 2508 084e 01       		.uleb128 0x1
 2509 084f 9C       		.byte	0x9c
 2510 0850 87080000 		.4byte	0x887
 2511 0854 18       		.uleb128 0x18
 2512 0855 7E010000 		.4byte	.LASF65
 2513 0859 01       		.byte	0x1
 2514 085a 8804     		.2byte	0x488
 2515 085c 77000000 		.4byte	0x77
 2516 0860 84040000 		.4byte	.LLST39
 2517 0864 17       		.uleb128 0x17
 2518 0865 D1040000 		.4byte	.LASF30
 2519 0869 01       		.byte	0x1
 2520 086a 8A04     		.2byte	0x48a
 2521 086c 6B000000 		.4byte	0x6b
 2522 0870 B0040000 		.4byte	.LLST40
 2523 0874 14       		.uleb128 0x14
 2524 0875 08000000 		.4byte	.LVL81
 2525 0879 120A0000 		.4byte	0xa12
 2526 087d 14       		.uleb128 0x14
 2527 087e 1E000000 		.4byte	.LVL82
 2528 0882 1D0A0000 		.4byte	0xa1d
 2529 0886 00       		.byte	0
 2530 0887 16       		.uleb128 0x16
 2531 0888 06000000 		.4byte	.LASF68
 2532 088c 01       		.byte	0x1
 2533 088d A804     		.2byte	0x4a8
 2534 088f 00000000 		.4byte	.LFB31
 2535 0893 24000000 		.4byte	.LFE31-.LFB31
 2536 0897 01       		.uleb128 0x1
 2537 0898 9C       		.byte	0x9c
 2538 0899 D0080000 		.4byte	0x8d0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 75


 2539 089d 18       		.uleb128 0x18
 2540 089e 7E010000 		.4byte	.LASF65
 2541 08a2 01       		.byte	0x1
 2542 08a3 A804     		.2byte	0x4a8
 2543 08a5 77000000 		.4byte	0x77
 2544 08a9 C3040000 		.4byte	.LLST41
 2545 08ad 17       		.uleb128 0x17
 2546 08ae D1040000 		.4byte	.LASF30
 2547 08b2 01       		.byte	0x1
 2548 08b3 AA04     		.2byte	0x4aa
 2549 08b5 6B000000 		.4byte	0x6b
 2550 08b9 EF040000 		.4byte	.LLST42
 2551 08bd 14       		.uleb128 0x14
 2552 08be 08000000 		.4byte	.LVL85
 2553 08c2 120A0000 		.4byte	0xa12
 2554 08c6 14       		.uleb128 0x14
 2555 08c7 1E000000 		.4byte	.LVL86
 2556 08cb 1D0A0000 		.4byte	0xa1d
 2557 08cf 00       		.byte	0
 2558 08d0 16       		.uleb128 0x16
 2559 08d1 F7000000 		.4byte	.LASF69
 2560 08d5 01       		.byte	0x1
 2561 08d6 C904     		.2byte	0x4c9
 2562 08d8 00000000 		.4byte	.LFB32
 2563 08dc 24000000 		.4byte	.LFE32-.LFB32
 2564 08e0 01       		.uleb128 0x1
 2565 08e1 9C       		.byte	0x9c
 2566 08e2 19090000 		.4byte	0x919
 2567 08e6 18       		.uleb128 0x18
 2568 08e7 7E010000 		.4byte	.LASF65
 2569 08eb 01       		.byte	0x1
 2570 08ec C904     		.2byte	0x4c9
 2571 08ee 77000000 		.4byte	0x77
 2572 08f2 02050000 		.4byte	.LLST43
 2573 08f6 17       		.uleb128 0x17
 2574 08f7 D1040000 		.4byte	.LASF30
 2575 08fb 01       		.byte	0x1
 2576 08fc CB04     		.2byte	0x4cb
 2577 08fe 6B000000 		.4byte	0x6b
 2578 0902 2E050000 		.4byte	.LLST44
 2579 0906 14       		.uleb128 0x14
 2580 0907 08000000 		.4byte	.LVL89
 2581 090b 120A0000 		.4byte	0xa12
 2582 090f 14       		.uleb128 0x14
 2583 0910 1E000000 		.4byte	.LVL90
 2584 0914 1D0A0000 		.4byte	0xa1d
 2585 0918 00       		.byte	0
 2586 0919 0A       		.uleb128 0xa
 2587 091a B0000000 		.4byte	0xb0
 2588 091e 00000000 		.4byte	.LFB33
 2589 0922 1C000000 		.4byte	.LFE33-.LFB33
 2590 0926 01       		.uleb128 0x1
 2591 0927 9C       		.byte	0x9c
 2592 0928 5A090000 		.4byte	0x95a
 2593 092c 15       		.uleb128 0x15
 2594 092d BD000000 		.4byte	0xbd
 2595 0931 41050000 		.4byte	.LLST45
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 76


 2596 0935 15       		.uleb128 0x15
 2597 0936 C9000000 		.4byte	0xc9
 2598 093a 62050000 		.4byte	.LLST46
 2599 093e 13       		.uleb128 0x13
 2600 093f D5000000 		.4byte	0xd5
 2601 0943 8E050000 		.4byte	.LLST47
 2602 0947 14       		.uleb128 0x14
 2603 0948 0C000000 		.4byte	.LVL93
 2604 094c 120A0000 		.4byte	0xa12
 2605 0950 14       		.uleb128 0x14
 2606 0951 14000000 		.4byte	.LVL94
 2607 0955 1D0A0000 		.4byte	0xa1d
 2608 0959 00       		.byte	0
 2609 095a 19       		.uleb128 0x19
 2610 095b F4010000 		.4byte	.LASF70
 2611 095f 01       		.byte	0x1
 2612 0960 0E05     		.2byte	0x50e
 2613 0962 77000000 		.4byte	0x77
 2614 0966 00000000 		.4byte	.LFB34
 2615 096a 14000000 		.4byte	.LFE34-.LFB34
 2616 096e 01       		.uleb128 0x1
 2617 096f 9C       		.byte	0x9c
 2618 0970 0A       		.uleb128 0xa
 2619 0971 FC000000 		.4byte	0xfc
 2620 0975 00000000 		.4byte	.LFB35
 2621 0979 0C000000 		.4byte	.LFE35-.LFB35
 2622 097d 01       		.uleb128 0x1
 2623 097e 9C       		.byte	0x9c
 2624 097f 8B090000 		.4byte	0x98b
 2625 0983 1A       		.uleb128 0x1a
 2626 0984 09010000 		.4byte	0x109
 2627 0988 01       		.uleb128 0x1
 2628 0989 50       		.byte	0x50
 2629 098a 00       		.byte	0
 2630 098b 19       		.uleb128 0x19
 2631 098c 32010000 		.4byte	.LASF71
 2632 0990 01       		.byte	0x1
 2633 0991 3E05     		.2byte	0x53e
 2634 0993 77000000 		.4byte	0x77
 2635 0997 00000000 		.4byte	.LFB36
 2636 099b 0C000000 		.4byte	.LFE36-.LFB36
 2637 099f 01       		.uleb128 0x1
 2638 09a0 9C       		.byte	0x9c
 2639 09a1 19       		.uleb128 0x19
 2640 09a2 2A020000 		.4byte	.LASF72
 2641 09a6 01       		.byte	0x1
 2642 09a7 5505     		.2byte	0x555
 2643 09a9 77000000 		.4byte	0x77
 2644 09ad 00000000 		.4byte	.LFB37
 2645 09b1 0C000000 		.4byte	.LFE37-.LFB37
 2646 09b5 01       		.uleb128 0x1
 2647 09b6 9C       		.byte	0x9c
 2648 09b7 16       		.uleb128 0x16
 2649 09b8 D1030000 		.4byte	.LASF73
 2650 09bc 01       		.byte	0x1
 2651 09bd 6C05     		.2byte	0x56c
 2652 09bf 00000000 		.4byte	.LFB38
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 77


 2653 09c3 0C000000 		.4byte	.LFE38-.LFB38
 2654 09c7 01       		.uleb128 0x1
 2655 09c8 9C       		.byte	0x9c
 2656 09c9 DC090000 		.4byte	0x9dc
 2657 09cd 1B       		.uleb128 0x1b
 2658 09ce 12040000 		.4byte	.LASF22
 2659 09d2 01       		.byte	0x1
 2660 09d3 6C05     		.2byte	0x56c
 2661 09d5 77000000 		.4byte	0x77
 2662 09d9 01       		.uleb128 0x1
 2663 09da 50       		.byte	0x50
 2664 09db 00       		.byte	0
 2665 09dc 16       		.uleb128 0x16
 2666 09dd 30000000 		.4byte	.LASF74
 2667 09e1 01       		.byte	0x1
 2668 09e2 8305     		.2byte	0x583
 2669 09e4 00000000 		.4byte	.LFB39
 2670 09e8 0C000000 		.4byte	.LFE39-.LFB39
 2671 09ec 01       		.uleb128 0x1
 2672 09ed 9C       		.byte	0x9c
 2673 09ee 010A0000 		.4byte	0xa01
 2674 09f2 1B       		.uleb128 0x1b
 2675 09f3 12040000 		.4byte	.LASF22
 2676 09f7 01       		.byte	0x1
 2677 09f8 8305     		.2byte	0x583
 2678 09fa 77000000 		.4byte	0x77
 2679 09fe 01       		.uleb128 0x1
 2680 09ff 50       		.byte	0x50
 2681 0a00 00       		.byte	0
 2682 0a01 1C       		.uleb128 0x1c
 2683 0a02 8B040000 		.4byte	.LASF79
 2684 0a06 01       		.byte	0x1
 2685 0a07 15       		.byte	0x15
 2686 0a08 6B000000 		.4byte	0x6b
 2687 0a0c 05       		.uleb128 0x5
 2688 0a0d 03       		.byte	0x3
 2689 0a0e 00000000 		.4byte	PWM_MOT_initVar
 2690 0a12 1D       		.uleb128 0x1d
 2691 0a13 5C020000 		.4byte	.LASF80
 2692 0a17 03       		.byte	0x3
 2693 0a18 E3       		.byte	0xe3
 2694 0a19 6B000000 		.4byte	0x6b
 2695 0a1d 1E       		.uleb128 0x1e
 2696 0a1e 1A000000 		.4byte	.LASF81
 2697 0a22 03       		.byte	0x3
 2698 0a23 E4       		.byte	0xe4
 2699 0a24 1F       		.uleb128 0x1f
 2700 0a25 6B000000 		.4byte	0x6b
 2701 0a29 00       		.byte	0
 2702 0a2a 00       		.byte	0
 2703              		.section	.debug_abbrev,"",%progbits
 2704              	.Ldebug_abbrev0:
 2705 0000 01       		.uleb128 0x1
 2706 0001 11       		.uleb128 0x11
 2707 0002 01       		.byte	0x1
 2708 0003 25       		.uleb128 0x25
 2709 0004 0E       		.uleb128 0xe
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 78


 2710 0005 13       		.uleb128 0x13
 2711 0006 0B       		.uleb128 0xb
 2712 0007 03       		.uleb128 0x3
 2713 0008 0E       		.uleb128 0xe
 2714 0009 1B       		.uleb128 0x1b
 2715 000a 0E       		.uleb128 0xe
 2716 000b 55       		.uleb128 0x55
 2717 000c 17       		.uleb128 0x17
 2718 000d 11       		.uleb128 0x11
 2719 000e 01       		.uleb128 0x1
 2720 000f 10       		.uleb128 0x10
 2721 0010 17       		.uleb128 0x17
 2722 0011 00       		.byte	0
 2723 0012 00       		.byte	0
 2724 0013 02       		.uleb128 0x2
 2725 0014 24       		.uleb128 0x24
 2726 0015 00       		.byte	0
 2727 0016 0B       		.uleb128 0xb
 2728 0017 0B       		.uleb128 0xb
 2729 0018 3E       		.uleb128 0x3e
 2730 0019 0B       		.uleb128 0xb
 2731 001a 03       		.uleb128 0x3
 2732 001b 0E       		.uleb128 0xe
 2733 001c 00       		.byte	0
 2734 001d 00       		.byte	0
 2735 001e 03       		.uleb128 0x3
 2736 001f 24       		.uleb128 0x24
 2737 0020 00       		.byte	0
 2738 0021 0B       		.uleb128 0xb
 2739 0022 0B       		.uleb128 0xb
 2740 0023 3E       		.uleb128 0x3e
 2741 0024 0B       		.uleb128 0xb
 2742 0025 03       		.uleb128 0x3
 2743 0026 08       		.uleb128 0x8
 2744 0027 00       		.byte	0
 2745 0028 00       		.byte	0
 2746 0029 04       		.uleb128 0x4
 2747 002a 16       		.uleb128 0x16
 2748 002b 00       		.byte	0
 2749 002c 03       		.uleb128 0x3
 2750 002d 0E       		.uleb128 0xe
 2751 002e 3A       		.uleb128 0x3a
 2752 002f 0B       		.uleb128 0xb
 2753 0030 3B       		.uleb128 0x3b
 2754 0031 05       		.uleb128 0x5
 2755 0032 49       		.uleb128 0x49
 2756 0033 13       		.uleb128 0x13
 2757 0034 00       		.byte	0
 2758 0035 00       		.byte	0
 2759 0036 05       		.uleb128 0x5
 2760 0037 35       		.uleb128 0x35
 2761 0038 00       		.byte	0
 2762 0039 49       		.uleb128 0x49
 2763 003a 13       		.uleb128 0x13
 2764 003b 00       		.byte	0
 2765 003c 00       		.byte	0
 2766 003d 06       		.uleb128 0x6
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 79


 2767 003e 2E       		.uleb128 0x2e
 2768 003f 01       		.byte	0x1
 2769 0040 3F       		.uleb128 0x3f
 2770 0041 19       		.uleb128 0x19
 2771 0042 03       		.uleb128 0x3
 2772 0043 0E       		.uleb128 0xe
 2773 0044 3A       		.uleb128 0x3a
 2774 0045 0B       		.uleb128 0xb
 2775 0046 3B       		.uleb128 0x3b
 2776 0047 05       		.uleb128 0x5
 2777 0048 27       		.uleb128 0x27
 2778 0049 19       		.uleb128 0x19
 2779 004a 20       		.uleb128 0x20
 2780 004b 0B       		.uleb128 0xb
 2781 004c 01       		.uleb128 0x1
 2782 004d 13       		.uleb128 0x13
 2783 004e 00       		.byte	0
 2784 004f 00       		.byte	0
 2785 0050 07       		.uleb128 0x7
 2786 0051 05       		.uleb128 0x5
 2787 0052 00       		.byte	0
 2788 0053 03       		.uleb128 0x3
 2789 0054 0E       		.uleb128 0xe
 2790 0055 3A       		.uleb128 0x3a
 2791 0056 0B       		.uleb128 0xb
 2792 0057 3B       		.uleb128 0x3b
 2793 0058 05       		.uleb128 0x5
 2794 0059 49       		.uleb128 0x49
 2795 005a 13       		.uleb128 0x13
 2796 005b 00       		.byte	0
 2797 005c 00       		.byte	0
 2798 005d 08       		.uleb128 0x8
 2799 005e 34       		.uleb128 0x34
 2800 005f 00       		.byte	0
 2801 0060 03       		.uleb128 0x3
 2802 0061 0E       		.uleb128 0xe
 2803 0062 3A       		.uleb128 0x3a
 2804 0063 0B       		.uleb128 0xb
 2805 0064 3B       		.uleb128 0x3b
 2806 0065 05       		.uleb128 0x5
 2807 0066 49       		.uleb128 0x49
 2808 0067 13       		.uleb128 0x13
 2809 0068 00       		.byte	0
 2810 0069 00       		.byte	0
 2811 006a 09       		.uleb128 0x9
 2812 006b 2E       		.uleb128 0x2e
 2813 006c 00       		.byte	0
 2814 006d 3F       		.uleb128 0x3f
 2815 006e 19       		.uleb128 0x19
 2816 006f 03       		.uleb128 0x3
 2817 0070 0E       		.uleb128 0xe
 2818 0071 3A       		.uleb128 0x3a
 2819 0072 0B       		.uleb128 0xb
 2820 0073 3B       		.uleb128 0x3b
 2821 0074 0B       		.uleb128 0xb
 2822 0075 27       		.uleb128 0x27
 2823 0076 19       		.uleb128 0x19
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 80


 2824 0077 20       		.uleb128 0x20
 2825 0078 0B       		.uleb128 0xb
 2826 0079 00       		.byte	0
 2827 007a 00       		.byte	0
 2828 007b 0A       		.uleb128 0xa
 2829 007c 2E       		.uleb128 0x2e
 2830 007d 01       		.byte	0x1
 2831 007e 31       		.uleb128 0x31
 2832 007f 13       		.uleb128 0x13
 2833 0080 11       		.uleb128 0x11
 2834 0081 01       		.uleb128 0x1
 2835 0082 12       		.uleb128 0x12
 2836 0083 06       		.uleb128 0x6
 2837 0084 40       		.uleb128 0x40
 2838 0085 18       		.uleb128 0x18
 2839 0086 9742     		.uleb128 0x2117
 2840 0088 19       		.uleb128 0x19
 2841 0089 01       		.uleb128 0x1
 2842 008a 13       		.uleb128 0x13
 2843 008b 00       		.byte	0
 2844 008c 00       		.byte	0
 2845 008d 0B       		.uleb128 0xb
 2846 008e 1D       		.uleb128 0x1d
 2847 008f 01       		.byte	0x1
 2848 0090 31       		.uleb128 0x31
 2849 0091 13       		.uleb128 0x13
 2850 0092 52       		.uleb128 0x52
 2851 0093 01       		.uleb128 0x1
 2852 0094 55       		.uleb128 0x55
 2853 0095 17       		.uleb128 0x17
 2854 0096 58       		.uleb128 0x58
 2855 0097 0B       		.uleb128 0xb
 2856 0098 59       		.uleb128 0x59
 2857 0099 0B       		.uleb128 0xb
 2858 009a 01       		.uleb128 0x1
 2859 009b 13       		.uleb128 0x13
 2860 009c 00       		.byte	0
 2861 009d 00       		.byte	0
 2862 009e 0C       		.uleb128 0xc
 2863 009f 05       		.uleb128 0x5
 2864 00a0 00       		.byte	0
 2865 00a1 31       		.uleb128 0x31
 2866 00a2 13       		.uleb128 0x13
 2867 00a3 1C       		.uleb128 0x1c
 2868 00a4 0B       		.uleb128 0xb
 2869 00a5 00       		.byte	0
 2870 00a6 00       		.byte	0
 2871 00a7 0D       		.uleb128 0xd
 2872 00a8 1D       		.uleb128 0x1d
 2873 00a9 01       		.byte	0x1
 2874 00aa 31       		.uleb128 0x31
 2875 00ab 13       		.uleb128 0x13
 2876 00ac 11       		.uleb128 0x11
 2877 00ad 01       		.uleb128 0x1
 2878 00ae 12       		.uleb128 0x12
 2879 00af 06       		.uleb128 0x6
 2880 00b0 58       		.uleb128 0x58
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 81


 2881 00b1 0B       		.uleb128 0xb
 2882 00b2 59       		.uleb128 0x59
 2883 00b3 0B       		.uleb128 0xb
 2884 00b4 01       		.uleb128 0x1
 2885 00b5 13       		.uleb128 0x13
 2886 00b6 00       		.byte	0
 2887 00b7 00       		.byte	0
 2888 00b8 0E       		.uleb128 0xe
 2889 00b9 05       		.uleb128 0x5
 2890 00ba 00       		.byte	0
 2891 00bb 31       		.uleb128 0x31
 2892 00bc 13       		.uleb128 0x13
 2893 00bd 1C       		.uleb128 0x1c
 2894 00be 05       		.uleb128 0x5
 2895 00bf 00       		.byte	0
 2896 00c0 00       		.byte	0
 2897 00c1 0F       		.uleb128 0xf
 2898 00c2 1D       		.uleb128 0x1d
 2899 00c3 01       		.byte	0x1
 2900 00c4 31       		.uleb128 0x31
 2901 00c5 13       		.uleb128 0x13
 2902 00c6 11       		.uleb128 0x11
 2903 00c7 01       		.uleb128 0x1
 2904 00c8 12       		.uleb128 0x12
 2905 00c9 06       		.uleb128 0x6
 2906 00ca 58       		.uleb128 0x58
 2907 00cb 0B       		.uleb128 0xb
 2908 00cc 59       		.uleb128 0x59
 2909 00cd 0B       		.uleb128 0xb
 2910 00ce 00       		.byte	0
 2911 00cf 00       		.byte	0
 2912 00d0 10       		.uleb128 0x10
 2913 00d1 2E       		.uleb128 0x2e
 2914 00d2 01       		.byte	0x1
 2915 00d3 3F       		.uleb128 0x3f
 2916 00d4 19       		.uleb128 0x19
 2917 00d5 03       		.uleb128 0x3
 2918 00d6 0E       		.uleb128 0xe
 2919 00d7 3A       		.uleb128 0x3a
 2920 00d8 0B       		.uleb128 0xb
 2921 00d9 3B       		.uleb128 0x3b
 2922 00da 0B       		.uleb128 0xb
 2923 00db 27       		.uleb128 0x27
 2924 00dc 19       		.uleb128 0x19
 2925 00dd 11       		.uleb128 0x11
 2926 00de 01       		.uleb128 0x1
 2927 00df 12       		.uleb128 0x12
 2928 00e0 06       		.uleb128 0x6
 2929 00e1 40       		.uleb128 0x40
 2930 00e2 18       		.uleb128 0x18
 2931 00e3 9742     		.uleb128 0x2117
 2932 00e5 19       		.uleb128 0x19
 2933 00e6 01       		.uleb128 0x1
 2934 00e7 13       		.uleb128 0x13
 2935 00e8 00       		.byte	0
 2936 00e9 00       		.byte	0
 2937 00ea 11       		.uleb128 0x11
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 82


 2938 00eb 34       		.uleb128 0x34
 2939 00ec 00       		.byte	0
 2940 00ed 03       		.uleb128 0x3
 2941 00ee 0E       		.uleb128 0xe
 2942 00ef 3A       		.uleb128 0x3a
 2943 00f0 0B       		.uleb128 0xb
 2944 00f1 3B       		.uleb128 0x3b
 2945 00f2 0B       		.uleb128 0xb
 2946 00f3 49       		.uleb128 0x49
 2947 00f4 13       		.uleb128 0x13
 2948 00f5 02       		.uleb128 0x2
 2949 00f6 17       		.uleb128 0x17
 2950 00f7 00       		.byte	0
 2951 00f8 00       		.byte	0
 2952 00f9 12       		.uleb128 0x12
 2953 00fa 0B       		.uleb128 0xb
 2954 00fb 01       		.byte	0x1
 2955 00fc 11       		.uleb128 0x11
 2956 00fd 01       		.uleb128 0x1
 2957 00fe 12       		.uleb128 0x12
 2958 00ff 06       		.uleb128 0x6
 2959 0100 00       		.byte	0
 2960 0101 00       		.byte	0
 2961 0102 13       		.uleb128 0x13
 2962 0103 34       		.uleb128 0x34
 2963 0104 00       		.byte	0
 2964 0105 31       		.uleb128 0x31
 2965 0106 13       		.uleb128 0x13
 2966 0107 02       		.uleb128 0x2
 2967 0108 17       		.uleb128 0x17
 2968 0109 00       		.byte	0
 2969 010a 00       		.byte	0
 2970 010b 14       		.uleb128 0x14
 2971 010c 898201   		.uleb128 0x4109
 2972 010f 00       		.byte	0
 2973 0110 11       		.uleb128 0x11
 2974 0111 01       		.uleb128 0x1
 2975 0112 31       		.uleb128 0x31
 2976 0113 13       		.uleb128 0x13
 2977 0114 00       		.byte	0
 2978 0115 00       		.byte	0
 2979 0116 15       		.uleb128 0x15
 2980 0117 05       		.uleb128 0x5
 2981 0118 00       		.byte	0
 2982 0119 31       		.uleb128 0x31
 2983 011a 13       		.uleb128 0x13
 2984 011b 02       		.uleb128 0x2
 2985 011c 17       		.uleb128 0x17
 2986 011d 00       		.byte	0
 2987 011e 00       		.byte	0
 2988 011f 16       		.uleb128 0x16
 2989 0120 2E       		.uleb128 0x2e
 2990 0121 01       		.byte	0x1
 2991 0122 3F       		.uleb128 0x3f
 2992 0123 19       		.uleb128 0x19
 2993 0124 03       		.uleb128 0x3
 2994 0125 0E       		.uleb128 0xe
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 83


 2995 0126 3A       		.uleb128 0x3a
 2996 0127 0B       		.uleb128 0xb
 2997 0128 3B       		.uleb128 0x3b
 2998 0129 05       		.uleb128 0x5
 2999 012a 27       		.uleb128 0x27
 3000 012b 19       		.uleb128 0x19
 3001 012c 11       		.uleb128 0x11
 3002 012d 01       		.uleb128 0x1
 3003 012e 12       		.uleb128 0x12
 3004 012f 06       		.uleb128 0x6
 3005 0130 40       		.uleb128 0x40
 3006 0131 18       		.uleb128 0x18
 3007 0132 9742     		.uleb128 0x2117
 3008 0134 19       		.uleb128 0x19
 3009 0135 01       		.uleb128 0x1
 3010 0136 13       		.uleb128 0x13
 3011 0137 00       		.byte	0
 3012 0138 00       		.byte	0
 3013 0139 17       		.uleb128 0x17
 3014 013a 34       		.uleb128 0x34
 3015 013b 00       		.byte	0
 3016 013c 03       		.uleb128 0x3
 3017 013d 0E       		.uleb128 0xe
 3018 013e 3A       		.uleb128 0x3a
 3019 013f 0B       		.uleb128 0xb
 3020 0140 3B       		.uleb128 0x3b
 3021 0141 05       		.uleb128 0x5
 3022 0142 49       		.uleb128 0x49
 3023 0143 13       		.uleb128 0x13
 3024 0144 02       		.uleb128 0x2
 3025 0145 17       		.uleb128 0x17
 3026 0146 00       		.byte	0
 3027 0147 00       		.byte	0
 3028 0148 18       		.uleb128 0x18
 3029 0149 05       		.uleb128 0x5
 3030 014a 00       		.byte	0
 3031 014b 03       		.uleb128 0x3
 3032 014c 0E       		.uleb128 0xe
 3033 014d 3A       		.uleb128 0x3a
 3034 014e 0B       		.uleb128 0xb
 3035 014f 3B       		.uleb128 0x3b
 3036 0150 05       		.uleb128 0x5
 3037 0151 49       		.uleb128 0x49
 3038 0152 13       		.uleb128 0x13
 3039 0153 02       		.uleb128 0x2
 3040 0154 17       		.uleb128 0x17
 3041 0155 00       		.byte	0
 3042 0156 00       		.byte	0
 3043 0157 19       		.uleb128 0x19
 3044 0158 2E       		.uleb128 0x2e
 3045 0159 00       		.byte	0
 3046 015a 3F       		.uleb128 0x3f
 3047 015b 19       		.uleb128 0x19
 3048 015c 03       		.uleb128 0x3
 3049 015d 0E       		.uleb128 0xe
 3050 015e 3A       		.uleb128 0x3a
 3051 015f 0B       		.uleb128 0xb
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 84


 3052 0160 3B       		.uleb128 0x3b
 3053 0161 05       		.uleb128 0x5
 3054 0162 27       		.uleb128 0x27
 3055 0163 19       		.uleb128 0x19
 3056 0164 49       		.uleb128 0x49
 3057 0165 13       		.uleb128 0x13
 3058 0166 11       		.uleb128 0x11
 3059 0167 01       		.uleb128 0x1
 3060 0168 12       		.uleb128 0x12
 3061 0169 06       		.uleb128 0x6
 3062 016a 40       		.uleb128 0x40
 3063 016b 18       		.uleb128 0x18
 3064 016c 9742     		.uleb128 0x2117
 3065 016e 19       		.uleb128 0x19
 3066 016f 00       		.byte	0
 3067 0170 00       		.byte	0
 3068 0171 1A       		.uleb128 0x1a
 3069 0172 05       		.uleb128 0x5
 3070 0173 00       		.byte	0
 3071 0174 31       		.uleb128 0x31
 3072 0175 13       		.uleb128 0x13
 3073 0176 02       		.uleb128 0x2
 3074 0177 18       		.uleb128 0x18
 3075 0178 00       		.byte	0
 3076 0179 00       		.byte	0
 3077 017a 1B       		.uleb128 0x1b
 3078 017b 05       		.uleb128 0x5
 3079 017c 00       		.byte	0
 3080 017d 03       		.uleb128 0x3
 3081 017e 0E       		.uleb128 0xe
 3082 017f 3A       		.uleb128 0x3a
 3083 0180 0B       		.uleb128 0xb
 3084 0181 3B       		.uleb128 0x3b
 3085 0182 05       		.uleb128 0x5
 3086 0183 49       		.uleb128 0x49
 3087 0184 13       		.uleb128 0x13
 3088 0185 02       		.uleb128 0x2
 3089 0186 18       		.uleb128 0x18
 3090 0187 00       		.byte	0
 3091 0188 00       		.byte	0
 3092 0189 1C       		.uleb128 0x1c
 3093 018a 34       		.uleb128 0x34
 3094 018b 00       		.byte	0
 3095 018c 03       		.uleb128 0x3
 3096 018d 0E       		.uleb128 0xe
 3097 018e 3A       		.uleb128 0x3a
 3098 018f 0B       		.uleb128 0xb
 3099 0190 3B       		.uleb128 0x3b
 3100 0191 0B       		.uleb128 0xb
 3101 0192 49       		.uleb128 0x49
 3102 0193 13       		.uleb128 0x13
 3103 0194 3F       		.uleb128 0x3f
 3104 0195 19       		.uleb128 0x19
 3105 0196 02       		.uleb128 0x2
 3106 0197 18       		.uleb128 0x18
 3107 0198 00       		.byte	0
 3108 0199 00       		.byte	0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 85


 3109 019a 1D       		.uleb128 0x1d
 3110 019b 2E       		.uleb128 0x2e
 3111 019c 00       		.byte	0
 3112 019d 3F       		.uleb128 0x3f
 3113 019e 19       		.uleb128 0x19
 3114 019f 03       		.uleb128 0x3
 3115 01a0 0E       		.uleb128 0xe
 3116 01a1 3A       		.uleb128 0x3a
 3117 01a2 0B       		.uleb128 0xb
 3118 01a3 3B       		.uleb128 0x3b
 3119 01a4 0B       		.uleb128 0xb
 3120 01a5 27       		.uleb128 0x27
 3121 01a6 19       		.uleb128 0x19
 3122 01a7 49       		.uleb128 0x49
 3123 01a8 13       		.uleb128 0x13
 3124 01a9 3C       		.uleb128 0x3c
 3125 01aa 19       		.uleb128 0x19
 3126 01ab 00       		.byte	0
 3127 01ac 00       		.byte	0
 3128 01ad 1E       		.uleb128 0x1e
 3129 01ae 2E       		.uleb128 0x2e
 3130 01af 01       		.byte	0x1
 3131 01b0 3F       		.uleb128 0x3f
 3132 01b1 19       		.uleb128 0x19
 3133 01b2 03       		.uleb128 0x3
 3134 01b3 0E       		.uleb128 0xe
 3135 01b4 3A       		.uleb128 0x3a
 3136 01b5 0B       		.uleb128 0xb
 3137 01b6 3B       		.uleb128 0x3b
 3138 01b7 0B       		.uleb128 0xb
 3139 01b8 27       		.uleb128 0x27
 3140 01b9 19       		.uleb128 0x19
 3141 01ba 3C       		.uleb128 0x3c
 3142 01bb 19       		.uleb128 0x19
 3143 01bc 00       		.byte	0
 3144 01bd 00       		.byte	0
 3145 01be 1F       		.uleb128 0x1f
 3146 01bf 05       		.uleb128 0x5
 3147 01c0 00       		.byte	0
 3148 01c1 49       		.uleb128 0x49
 3149 01c2 13       		.uleb128 0x13
 3150 01c3 00       		.byte	0
 3151 01c4 00       		.byte	0
 3152 01c5 00       		.byte	0
 3153              		.section	.debug_loc,"",%progbits
 3154              	.Ldebug_loc0:
 3155              	.LLST0:
 3156 0000 06000000 		.4byte	.LVL4
 3157 0004 13000000 		.4byte	.LVL5-1
 3158 0008 0100     		.2byte	0x1
 3159 000a 50       		.byte	0x50
 3160 000b 00000000 		.4byte	0
 3161 000f 00000000 		.4byte	0
 3162              	.LLST1:
 3163 0013 18000000 		.4byte	.LVL6
 3164 0017 23000000 		.4byte	.LVL7-1
 3165 001b 0100     		.2byte	0x1
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 86


 3166 001d 50       		.byte	0x50
 3167 001e 00000000 		.4byte	0
 3168 0022 00000000 		.4byte	0
 3169              	.LLST2:
 3170 0026 1C000000 		.4byte	.LVL8
 3171 002a 46000000 		.4byte	.LVL12
 3172 002e 0200     		.2byte	0x2
 3173 0030 30       		.byte	0x30
 3174 0031 9F       		.byte	0x9f
 3175 0032 00000000 		.4byte	0
 3176 0036 00000000 		.4byte	0
 3177              	.LLST3:
 3178 003a 2C000000 		.4byte	.LVL9
 3179 003e 46000000 		.4byte	.LVL12
 3180 0042 0200     		.2byte	0x2
 3181 0044 30       		.byte	0x30
 3182 0045 9F       		.byte	0x9f
 3183 0046 00000000 		.4byte	0
 3184 004a 00000000 		.4byte	0
 3185              	.LLST4:
 3186 004e 36000000 		.4byte	.LVL10
 3187 0052 46000000 		.4byte	.LVL12
 3188 0056 0400     		.2byte	0x4
 3189 0058 0A       		.byte	0xa
 3190 0059 0010     		.2byte	0x1000
 3191 005b 9F       		.byte	0x9f
 3192 005c 00000000 		.4byte	0
 3193 0060 00000000 		.4byte	0
 3194              	.LLST5:
 3195 0064 3E000000 		.4byte	.LVL11
 3196 0068 46000000 		.4byte	.LVL12
 3197 006c 0200     		.2byte	0x2
 3198 006e 31       		.byte	0x31
 3199 006f 9F       		.byte	0x9f
 3200 0070 00000000 		.4byte	0
 3201 0074 00000000 		.4byte	0
 3202              	.LLST6:
 3203 0078 06000000 		.4byte	.LVL14
 3204 007c 13000000 		.4byte	.LVL15-1
 3205 0080 0100     		.2byte	0x1
 3206 0082 50       		.byte	0x50
 3207 0083 00000000 		.4byte	0
 3208 0087 00000000 		.4byte	0
 3209              	.LLST7:
 3210 008b 00000000 		.4byte	.LVL16
 3211 008f 07000000 		.4byte	.LVL17-1
 3212 0093 0100     		.2byte	0x1
 3213 0095 50       		.byte	0x50
 3214 0096 07000000 		.4byte	.LVL17-1
 3215 009a 1C000000 		.4byte	.LVL19
 3216 009e 0100     		.2byte	0x1
 3217 00a0 54       		.byte	0x54
 3218 00a1 1C000000 		.4byte	.LVL19
 3219 00a5 28000000 		.4byte	.LFE4
 3220 00a9 0400     		.2byte	0x4
 3221 00ab F3       		.byte	0xf3
 3222 00ac 01       		.uleb128 0x1
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 87


 3223 00ad 50       		.byte	0x50
 3224 00ae 9F       		.byte	0x9f
 3225 00af 00000000 		.4byte	0
 3226 00b3 00000000 		.4byte	0
 3227              	.LLST8:
 3228 00b7 08000000 		.4byte	.LVL17
 3229 00bb 1B000000 		.4byte	.LVL18-1
 3230 00bf 0100     		.2byte	0x1
 3231 00c1 50       		.byte	0x50
 3232 00c2 00000000 		.4byte	0
 3233 00c6 00000000 		.4byte	0
 3234              	.LLST9:
 3235 00ca 00000000 		.4byte	.LVL20
 3236 00ce 07000000 		.4byte	.LVL21-1
 3237 00d2 0100     		.2byte	0x1
 3238 00d4 50       		.byte	0x50
 3239 00d5 07000000 		.4byte	.LVL21-1
 3240 00d9 1C000000 		.4byte	.LVL23
 3241 00dd 0100     		.2byte	0x1
 3242 00df 54       		.byte	0x54
 3243 00e0 1C000000 		.4byte	.LVL23
 3244 00e4 28000000 		.4byte	.LFE5
 3245 00e8 0400     		.2byte	0x4
 3246 00ea F3       		.byte	0xf3
 3247 00eb 01       		.uleb128 0x1
 3248 00ec 50       		.byte	0x50
 3249 00ed 9F       		.byte	0x9f
 3250 00ee 00000000 		.4byte	0
 3251 00f2 00000000 		.4byte	0
 3252              	.LLST10:
 3253 00f6 08000000 		.4byte	.LVL21
 3254 00fa 1B000000 		.4byte	.LVL22-1
 3255 00fe 0100     		.2byte	0x1
 3256 0100 50       		.byte	0x50
 3257 0101 00000000 		.4byte	0
 3258 0105 00000000 		.4byte	0
 3259              	.LLST11:
 3260 0109 00000000 		.4byte	.LVL24
 3261 010d 07000000 		.4byte	.LVL25-1
 3262 0111 0100     		.2byte	0x1
 3263 0113 50       		.byte	0x50
 3264 0114 07000000 		.4byte	.LVL25-1
 3265 0118 1C000000 		.4byte	.LVL27
 3266 011c 0100     		.2byte	0x1
 3267 011e 54       		.byte	0x54
 3268 011f 1C000000 		.4byte	.LVL27
 3269 0123 28000000 		.4byte	.LFE6
 3270 0127 0400     		.2byte	0x4
 3271 0129 F3       		.byte	0xf3
 3272 012a 01       		.uleb128 0x1
 3273 012b 50       		.byte	0x50
 3274 012c 9F       		.byte	0x9f
 3275 012d 00000000 		.4byte	0
 3276 0131 00000000 		.4byte	0
 3277              	.LLST12:
 3278 0135 08000000 		.4byte	.LVL25
 3279 0139 1B000000 		.4byte	.LVL26-1
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 88


 3280 013d 0100     		.2byte	0x1
 3281 013f 50       		.byte	0x50
 3282 0140 00000000 		.4byte	0
 3283 0144 00000000 		.4byte	0
 3284              	.LLST13:
 3285 0148 00000000 		.4byte	.LVL28
 3286 014c 07000000 		.4byte	.LVL29-1
 3287 0150 0100     		.2byte	0x1
 3288 0152 50       		.byte	0x50
 3289 0153 07000000 		.4byte	.LVL29-1
 3290 0157 18000000 		.4byte	.LVL30
 3291 015b 0100     		.2byte	0x1
 3292 015d 54       		.byte	0x54
 3293 015e 18000000 		.4byte	.LVL30
 3294 0162 2C000000 		.4byte	.LFE7
 3295 0166 0400     		.2byte	0x4
 3296 0168 F3       		.byte	0xf3
 3297 0169 01       		.uleb128 0x1
 3298 016a 50       		.byte	0x50
 3299 016b 9F       		.byte	0x9f
 3300 016c 00000000 		.4byte	0
 3301 0170 00000000 		.4byte	0
 3302              	.LLST14:
 3303 0174 08000000 		.4byte	.LVL29
 3304 0178 21000000 		.4byte	.LVL31-1
 3305 017c 0100     		.2byte	0x1
 3306 017e 50       		.byte	0x50
 3307 017f 00000000 		.4byte	0
 3308 0183 00000000 		.4byte	0
 3309              	.LLST15:
 3310 0187 00000000 		.4byte	.LVL32
 3311 018b 04000000 		.4byte	.LVL33
 3312 018f 0100     		.2byte	0x1
 3313 0191 50       		.byte	0x50
 3314 0192 04000000 		.4byte	.LVL33
 3315 0196 10000000 		.4byte	.LFE8
 3316 019a 0400     		.2byte	0x4
 3317 019c F3       		.byte	0xf3
 3318 019d 01       		.uleb128 0x1
 3319 019e 50       		.byte	0x50
 3320 019f 9F       		.byte	0x9f
 3321 01a0 00000000 		.4byte	0
 3322 01a4 00000000 		.4byte	0
 3323              	.LLST16:
 3324 01a8 00000000 		.4byte	.LVL34
 3325 01ac 07000000 		.4byte	.LVL35-1
 3326 01b0 0100     		.2byte	0x1
 3327 01b2 50       		.byte	0x50
 3328 01b3 07000000 		.4byte	.LVL35-1
 3329 01b7 18000000 		.4byte	.LVL36
 3330 01bb 0100     		.2byte	0x1
 3331 01bd 54       		.byte	0x54
 3332 01be 18000000 		.4byte	.LVL36
 3333 01c2 28000000 		.4byte	.LFE9
 3334 01c6 0400     		.2byte	0x4
 3335 01c8 F3       		.byte	0xf3
 3336 01c9 01       		.uleb128 0x1
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 89


 3337 01ca 50       		.byte	0x50
 3338 01cb 9F       		.byte	0x9f
 3339 01cc 00000000 		.4byte	0
 3340 01d0 00000000 		.4byte	0
 3341              	.LLST17:
 3342 01d4 08000000 		.4byte	.LVL35
 3343 01d8 21000000 		.4byte	.LVL37-1
 3344 01dc 0100     		.2byte	0x1
 3345 01de 50       		.byte	0x50
 3346 01df 00000000 		.4byte	0
 3347 01e3 00000000 		.4byte	0
 3348              	.LLST18:
 3349 01e7 00000000 		.4byte	.LVL38
 3350 01eb 07000000 		.4byte	.LVL39-1
 3351 01ef 0100     		.2byte	0x1
 3352 01f1 50       		.byte	0x50
 3353 01f2 07000000 		.4byte	.LVL39-1
 3354 01f6 18000000 		.4byte	.LVL40
 3355 01fa 0100     		.2byte	0x1
 3356 01fc 54       		.byte	0x54
 3357 01fd 18000000 		.4byte	.LVL40
 3358 0201 28000000 		.4byte	.LFE10
 3359 0205 0400     		.2byte	0x4
 3360 0207 F3       		.byte	0xf3
 3361 0208 01       		.uleb128 0x1
 3362 0209 50       		.byte	0x50
 3363 020a 9F       		.byte	0x9f
 3364 020b 00000000 		.4byte	0
 3365 020f 00000000 		.4byte	0
 3366              	.LLST19:
 3367 0213 08000000 		.4byte	.LVL39
 3368 0217 21000000 		.4byte	.LVL41-1
 3369 021b 0100     		.2byte	0x1
 3370 021d 50       		.byte	0x50
 3371 021e 00000000 		.4byte	0
 3372 0222 00000000 		.4byte	0
 3373              	.LLST20:
 3374 0226 00000000 		.4byte	.LVL42
 3375 022a 07000000 		.4byte	.LVL43-1
 3376 022e 0100     		.2byte	0x1
 3377 0230 50       		.byte	0x50
 3378 0231 07000000 		.4byte	.LVL43-1
 3379 0235 10000000 		.4byte	.LVL44
 3380 0239 0100     		.2byte	0x1
 3381 023b 54       		.byte	0x54
 3382 023c 10000000 		.4byte	.LVL44
 3383 0240 2C000000 		.4byte	.LFE11
 3384 0244 0400     		.2byte	0x4
 3385 0246 F3       		.byte	0xf3
 3386 0247 01       		.uleb128 0x1
 3387 0248 50       		.byte	0x50
 3388 0249 9F       		.byte	0x9f
 3389 024a 00000000 		.4byte	0
 3390 024e 00000000 		.4byte	0
 3391              	.LLST21:
 3392 0252 08000000 		.4byte	.LVL43
 3393 0256 1F000000 		.4byte	.LVL45-1
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 90


 3394 025a 0100     		.2byte	0x1
 3395 025c 50       		.byte	0x50
 3396 025d 00000000 		.4byte	0
 3397 0261 00000000 		.4byte	0
 3398              	.LLST22:
 3399 0265 00000000 		.4byte	.LVL46
 3400 0269 07000000 		.4byte	.LVL47-1
 3401 026d 0100     		.2byte	0x1
 3402 026f 50       		.byte	0x50
 3403 0270 07000000 		.4byte	.LVL47-1
 3404 0274 1C000000 		.4byte	.LVL49
 3405 0278 0100     		.2byte	0x1
 3406 027a 54       		.byte	0x54
 3407 027b 1C000000 		.4byte	.LVL49
 3408 027f 28000000 		.4byte	.LFE12
 3409 0283 0400     		.2byte	0x4
 3410 0285 F3       		.byte	0xf3
 3411 0286 01       		.uleb128 0x1
 3412 0287 50       		.byte	0x50
 3413 0288 9F       		.byte	0x9f
 3414 0289 00000000 		.4byte	0
 3415 028d 00000000 		.4byte	0
 3416              	.LLST23:
 3417 0291 08000000 		.4byte	.LVL47
 3418 0295 1B000000 		.4byte	.LVL48-1
 3419 0299 0100     		.2byte	0x1
 3420 029b 50       		.byte	0x50
 3421 029c 00000000 		.4byte	0
 3422 02a0 00000000 		.4byte	0
 3423              	.LLST24:
 3424 02a4 00000000 		.4byte	.LVL50
 3425 02a8 04000000 		.4byte	.LVL51
 3426 02ac 0100     		.2byte	0x1
 3427 02ae 50       		.byte	0x50
 3428 02af 04000000 		.4byte	.LVL51
 3429 02b3 10000000 		.4byte	.LFE13
 3430 02b7 0400     		.2byte	0x4
 3431 02b9 F3       		.byte	0xf3
 3432 02ba 01       		.uleb128 0x1
 3433 02bb 50       		.byte	0x50
 3434 02bc 9F       		.byte	0x9f
 3435 02bd 00000000 		.4byte	0
 3436 02c1 00000000 		.4byte	0
 3437              	.LLST25:
 3438 02c5 00000000 		.4byte	.LVL52
 3439 02c9 07000000 		.4byte	.LVL53-1
 3440 02cd 0100     		.2byte	0x1
 3441 02cf 50       		.byte	0x50
 3442 02d0 07000000 		.4byte	.LVL53-1
 3443 02d4 1C000000 		.4byte	.LVL55
 3444 02d8 0100     		.2byte	0x1
 3445 02da 54       		.byte	0x54
 3446 02db 1C000000 		.4byte	.LVL55
 3447 02df 28000000 		.4byte	.LFE15
 3448 02e3 0400     		.2byte	0x4
 3449 02e5 F3       		.byte	0xf3
 3450 02e6 01       		.uleb128 0x1
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 91


 3451 02e7 50       		.byte	0x50
 3452 02e8 9F       		.byte	0x9f
 3453 02e9 00000000 		.4byte	0
 3454 02ed 00000000 		.4byte	0
 3455              	.LLST26:
 3456 02f1 08000000 		.4byte	.LVL53
 3457 02f5 1B000000 		.4byte	.LVL54-1
 3458 02f9 0100     		.2byte	0x1
 3459 02fb 50       		.byte	0x50
 3460 02fc 00000000 		.4byte	0
 3461 0300 00000000 		.4byte	0
 3462              	.LLST27:
 3463 0304 00000000 		.4byte	.LVL56
 3464 0308 04000000 		.4byte	.LVL57
 3465 030c 0100     		.2byte	0x1
 3466 030e 50       		.byte	0x50
 3467 030f 04000000 		.4byte	.LVL57
 3468 0313 10000000 		.4byte	.LFE16
 3469 0317 0400     		.2byte	0x4
 3470 0319 F3       		.byte	0xf3
 3471 031a 01       		.uleb128 0x1
 3472 031b 50       		.byte	0x50
 3473 031c 9F       		.byte	0x9f
 3474 031d 00000000 		.4byte	0
 3475 0321 00000000 		.4byte	0
 3476              	.LLST28:
 3477 0325 00000000 		.4byte	.LVL58
 3478 0329 07000000 		.4byte	.LVL59-1
 3479 032d 0100     		.2byte	0x1
 3480 032f 50       		.byte	0x50
 3481 0330 07000000 		.4byte	.LVL59-1
 3482 0334 1E000000 		.4byte	.LVL61
 3483 0338 0100     		.2byte	0x1
 3484 033a 54       		.byte	0x54
 3485 033b 1E000000 		.4byte	.LVL61
 3486 033f 24000000 		.4byte	.LFE18
 3487 0343 0400     		.2byte	0x4
 3488 0345 F3       		.byte	0xf3
 3489 0346 01       		.uleb128 0x1
 3490 0347 50       		.byte	0x50
 3491 0348 9F       		.byte	0x9f
 3492 0349 00000000 		.4byte	0
 3493 034d 00000000 		.4byte	0
 3494              	.LLST29:
 3495 0351 08000000 		.4byte	.LVL59
 3496 0355 1D000000 		.4byte	.LVL60-1
 3497 0359 0100     		.2byte	0x1
 3498 035b 50       		.byte	0x50
 3499 035c 00000000 		.4byte	0
 3500 0360 00000000 		.4byte	0
 3501              	.LLST30:
 3502 0364 00000000 		.4byte	.LVL62
 3503 0368 04000000 		.4byte	.LVL63
 3504 036c 0100     		.2byte	0x1
 3505 036e 50       		.byte	0x50
 3506 036f 04000000 		.4byte	.LVL63
 3507 0373 10000000 		.4byte	.LFE19
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 92


 3508 0377 0400     		.2byte	0x4
 3509 0379 F3       		.byte	0xf3
 3510 037a 01       		.uleb128 0x1
 3511 037b 50       		.byte	0x50
 3512 037c 9F       		.byte	0x9f
 3513 037d 00000000 		.4byte	0
 3514 0381 00000000 		.4byte	0
 3515              	.LLST31:
 3516 0385 00000000 		.4byte	.LVL64
 3517 0389 07000000 		.4byte	.LVL65-1
 3518 038d 0100     		.2byte	0x1
 3519 038f 50       		.byte	0x50
 3520 0390 07000000 		.4byte	.LVL65-1
 3521 0394 18000000 		.4byte	.LVL66
 3522 0398 0100     		.2byte	0x1
 3523 039a 54       		.byte	0x54
 3524 039b 18000000 		.4byte	.LVL66
 3525 039f 28000000 		.4byte	.LFE21
 3526 03a3 0400     		.2byte	0x4
 3527 03a5 F3       		.byte	0xf3
 3528 03a6 01       		.uleb128 0x1
 3529 03a7 50       		.byte	0x50
 3530 03a8 9F       		.byte	0x9f
 3531 03a9 00000000 		.4byte	0
 3532 03ad 00000000 		.4byte	0
 3533              	.LLST32:
 3534 03b1 08000000 		.4byte	.LVL65
 3535 03b5 21000000 		.4byte	.LVL67-1
 3536 03b9 0100     		.2byte	0x1
 3537 03bb 50       		.byte	0x50
 3538 03bc 00000000 		.4byte	0
 3539 03c0 00000000 		.4byte	0
 3540              	.LLST33:
 3541 03c4 00000000 		.4byte	.LVL68
 3542 03c8 04000000 		.4byte	.LVL69
 3543 03cc 0100     		.2byte	0x1
 3544 03ce 50       		.byte	0x50
 3545 03cf 04000000 		.4byte	.LVL69
 3546 03d3 10000000 		.4byte	.LFE22
 3547 03d7 0400     		.2byte	0x4
 3548 03d9 F3       		.byte	0xf3
 3549 03da 01       		.uleb128 0x1
 3550 03db 50       		.byte	0x50
 3551 03dc 9F       		.byte	0x9f
 3552 03dd 00000000 		.4byte	0
 3553 03e1 00000000 		.4byte	0
 3554              	.LLST34:
 3555 03e5 00000000 		.4byte	.LVL70
 3556 03e9 04000000 		.4byte	.LVL71
 3557 03ed 0100     		.2byte	0x1
 3558 03ef 50       		.byte	0x50
 3559 03f0 04000000 		.4byte	.LVL71
 3560 03f4 10000000 		.4byte	.LFE24
 3561 03f8 0400     		.2byte	0x4
 3562 03fa F3       		.byte	0xf3
 3563 03fb 01       		.uleb128 0x1
 3564 03fc 50       		.byte	0x50
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 93


 3565 03fd 9F       		.byte	0x9f
 3566 03fe 00000000 		.4byte	0
 3567 0402 00000000 		.4byte	0
 3568              	.LLST35:
 3569 0406 00000000 		.4byte	.LVL72
 3570 040a 07000000 		.4byte	.LVL73-1
 3571 040e 0100     		.2byte	0x1
 3572 0410 50       		.byte	0x50
 3573 0411 07000000 		.4byte	.LVL73-1
 3574 0415 1C000000 		.4byte	.LVL75
 3575 0419 0100     		.2byte	0x1
 3576 041b 54       		.byte	0x54
 3577 041c 1C000000 		.4byte	.LVL75
 3578 0420 24000000 		.4byte	.LFE28
 3579 0424 0400     		.2byte	0x4
 3580 0426 F3       		.byte	0xf3
 3581 0427 01       		.uleb128 0x1
 3582 0428 50       		.byte	0x50
 3583 0429 9F       		.byte	0x9f
 3584 042a 00000000 		.4byte	0
 3585 042e 00000000 		.4byte	0
 3586              	.LLST36:
 3587 0432 08000000 		.4byte	.LVL73
 3588 0436 1B000000 		.4byte	.LVL74-1
 3589 043a 0100     		.2byte	0x1
 3590 043c 50       		.byte	0x50
 3591 043d 00000000 		.4byte	0
 3592 0441 00000000 		.4byte	0
 3593              	.LLST37:
 3594 0445 00000000 		.4byte	.LVL76
 3595 0449 07000000 		.4byte	.LVL77-1
 3596 044d 0100     		.2byte	0x1
 3597 044f 50       		.byte	0x50
 3598 0450 07000000 		.4byte	.LVL77-1
 3599 0454 1E000000 		.4byte	.LVL79
 3600 0458 0100     		.2byte	0x1
 3601 045a 54       		.byte	0x54
 3602 045b 1E000000 		.4byte	.LVL79
 3603 045f 24000000 		.4byte	.LFE29
 3604 0463 0400     		.2byte	0x4
 3605 0465 F3       		.byte	0xf3
 3606 0466 01       		.uleb128 0x1
 3607 0467 50       		.byte	0x50
 3608 0468 9F       		.byte	0x9f
 3609 0469 00000000 		.4byte	0
 3610 046d 00000000 		.4byte	0
 3611              	.LLST38:
 3612 0471 08000000 		.4byte	.LVL77
 3613 0475 1D000000 		.4byte	.LVL78-1
 3614 0479 0100     		.2byte	0x1
 3615 047b 50       		.byte	0x50
 3616 047c 00000000 		.4byte	0
 3617 0480 00000000 		.4byte	0
 3618              	.LLST39:
 3619 0484 00000000 		.4byte	.LVL80
 3620 0488 07000000 		.4byte	.LVL81-1
 3621 048c 0100     		.2byte	0x1
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 94


 3622 048e 50       		.byte	0x50
 3623 048f 07000000 		.4byte	.LVL81-1
 3624 0493 1E000000 		.4byte	.LVL83
 3625 0497 0100     		.2byte	0x1
 3626 0499 54       		.byte	0x54
 3627 049a 1E000000 		.4byte	.LVL83
 3628 049e 28000000 		.4byte	.LFE30
 3629 04a2 0400     		.2byte	0x4
 3630 04a4 F3       		.byte	0xf3
 3631 04a5 01       		.uleb128 0x1
 3632 04a6 50       		.byte	0x50
 3633 04a7 9F       		.byte	0x9f
 3634 04a8 00000000 		.4byte	0
 3635 04ac 00000000 		.4byte	0
 3636              	.LLST40:
 3637 04b0 08000000 		.4byte	.LVL81
 3638 04b4 1D000000 		.4byte	.LVL82-1
 3639 04b8 0100     		.2byte	0x1
 3640 04ba 50       		.byte	0x50
 3641 04bb 00000000 		.4byte	0
 3642 04bf 00000000 		.4byte	0
 3643              	.LLST41:
 3644 04c3 00000000 		.4byte	.LVL84
 3645 04c7 07000000 		.4byte	.LVL85-1
 3646 04cb 0100     		.2byte	0x1
 3647 04cd 50       		.byte	0x50
 3648 04ce 07000000 		.4byte	.LVL85-1
 3649 04d2 1E000000 		.4byte	.LVL87
 3650 04d6 0100     		.2byte	0x1
 3651 04d8 54       		.byte	0x54
 3652 04d9 1E000000 		.4byte	.LVL87
 3653 04dd 24000000 		.4byte	.LFE31
 3654 04e1 0400     		.2byte	0x4
 3655 04e3 F3       		.byte	0xf3
 3656 04e4 01       		.uleb128 0x1
 3657 04e5 50       		.byte	0x50
 3658 04e6 9F       		.byte	0x9f
 3659 04e7 00000000 		.4byte	0
 3660 04eb 00000000 		.4byte	0
 3661              	.LLST42:
 3662 04ef 08000000 		.4byte	.LVL85
 3663 04f3 1D000000 		.4byte	.LVL86-1
 3664 04f7 0100     		.2byte	0x1
 3665 04f9 50       		.byte	0x50
 3666 04fa 00000000 		.4byte	0
 3667 04fe 00000000 		.4byte	0
 3668              	.LLST43:
 3669 0502 00000000 		.4byte	.LVL88
 3670 0506 07000000 		.4byte	.LVL89-1
 3671 050a 0100     		.2byte	0x1
 3672 050c 50       		.byte	0x50
 3673 050d 07000000 		.4byte	.LVL89-1
 3674 0511 1E000000 		.4byte	.LVL91
 3675 0515 0100     		.2byte	0x1
 3676 0517 54       		.byte	0x54
 3677 0518 1E000000 		.4byte	.LVL91
 3678 051c 24000000 		.4byte	.LFE32
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 95


 3679 0520 0400     		.2byte	0x4
 3680 0522 F3       		.byte	0xf3
 3681 0523 01       		.uleb128 0x1
 3682 0524 50       		.byte	0x50
 3683 0525 9F       		.byte	0x9f
 3684 0526 00000000 		.4byte	0
 3685 052a 00000000 		.4byte	0
 3686              	.LLST44:
 3687 052e 08000000 		.4byte	.LVL89
 3688 0532 1D000000 		.4byte	.LVL90-1
 3689 0536 0100     		.2byte	0x1
 3690 0538 50       		.byte	0x50
 3691 0539 00000000 		.4byte	0
 3692 053d 00000000 		.4byte	0
 3693              	.LLST45:
 3694 0541 00000000 		.4byte	.LVL92
 3695 0545 0B000000 		.4byte	.LVL93-1
 3696 0549 0100     		.2byte	0x1
 3697 054b 50       		.byte	0x50
 3698 054c 0B000000 		.4byte	.LVL93-1
 3699 0550 1C000000 		.4byte	.LFE33
 3700 0554 0400     		.2byte	0x4
 3701 0556 F3       		.byte	0xf3
 3702 0557 01       		.uleb128 0x1
 3703 0558 50       		.byte	0x50
 3704 0559 9F       		.byte	0x9f
 3705 055a 00000000 		.4byte	0
 3706 055e 00000000 		.4byte	0
 3707              	.LLST46:
 3708 0562 00000000 		.4byte	.LVL92
 3709 0566 0B000000 		.4byte	.LVL93-1
 3710 056a 0100     		.2byte	0x1
 3711 056c 51       		.byte	0x51
 3712 056d 0B000000 		.4byte	.LVL93-1
 3713 0571 14000000 		.4byte	.LVL95
 3714 0575 0100     		.2byte	0x1
 3715 0577 55       		.byte	0x55
 3716 0578 14000000 		.4byte	.LVL95
 3717 057c 1C000000 		.4byte	.LFE33
 3718 0580 0400     		.2byte	0x4
 3719 0582 F3       		.byte	0xf3
 3720 0583 01       		.uleb128 0x1
 3721 0584 51       		.byte	0x51
 3722 0585 9F       		.byte	0x9f
 3723 0586 00000000 		.4byte	0
 3724 058a 00000000 		.4byte	0
 3725              	.LLST47:
 3726 058e 0C000000 		.4byte	.LVL93
 3727 0592 13000000 		.4byte	.LVL94-1
 3728 0596 0100     		.2byte	0x1
 3729 0598 50       		.byte	0x50
 3730 0599 00000000 		.4byte	0
 3731 059d 00000000 		.4byte	0
 3732              		.section	.debug_aranges,"",%progbits
 3733 0000 54010000 		.4byte	0x154
 3734 0004 0200     		.2byte	0x2
 3735 0006 00000000 		.4byte	.Ldebug_info0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 96


 3736 000a 04       		.byte	0x4
 3737 000b 00       		.byte	0
 3738 000c 0000     		.2byte	0
 3739 000e 0000     		.2byte	0
 3740 0010 00000000 		.4byte	.LFB0
 3741 0014 5C000000 		.4byte	.LFE0-.LFB0
 3742 0018 00000000 		.4byte	.LFB1
 3743 001c 30000000 		.4byte	.LFE1-.LFB1
 3744 0020 00000000 		.4byte	.LFB2
 3745 0024 6C000000 		.4byte	.LFE2-.LFB2
 3746 0028 00000000 		.4byte	.LFB3
 3747 002c 1C000000 		.4byte	.LFE3-.LFB3
 3748 0030 00000000 		.4byte	.LFB4
 3749 0034 28000000 		.4byte	.LFE4-.LFB4
 3750 0038 00000000 		.4byte	.LFB5
 3751 003c 28000000 		.4byte	.LFE5-.LFB5
 3752 0040 00000000 		.4byte	.LFB6
 3753 0044 28000000 		.4byte	.LFE6-.LFB6
 3754 0048 00000000 		.4byte	.LFB7
 3755 004c 2C000000 		.4byte	.LFE7-.LFB7
 3756 0050 00000000 		.4byte	.LFB8
 3757 0054 10000000 		.4byte	.LFE8-.LFB8
 3758 0058 00000000 		.4byte	.LFB9
 3759 005c 28000000 		.4byte	.LFE9-.LFB9
 3760 0060 00000000 		.4byte	.LFB10
 3761 0064 28000000 		.4byte	.LFE10-.LFB10
 3762 0068 00000000 		.4byte	.LFB11
 3763 006c 2C000000 		.4byte	.LFE11-.LFB11
 3764 0070 00000000 		.4byte	.LFB12
 3765 0074 28000000 		.4byte	.LFE12-.LFB12
 3766 0078 00000000 		.4byte	.LFB13
 3767 007c 10000000 		.4byte	.LFE13-.LFB13
 3768 0080 00000000 		.4byte	.LFB14
 3769 0084 10000000 		.4byte	.LFE14-.LFB14
 3770 0088 00000000 		.4byte	.LFB15
 3771 008c 28000000 		.4byte	.LFE15-.LFB15
 3772 0090 00000000 		.4byte	.LFB16
 3773 0094 10000000 		.4byte	.LFE16-.LFB16
 3774 0098 00000000 		.4byte	.LFB17
 3775 009c 10000000 		.4byte	.LFE17-.LFB17
 3776 00a0 00000000 		.4byte	.LFB18
 3777 00a4 24000000 		.4byte	.LFE18-.LFB18
 3778 00a8 00000000 		.4byte	.LFB19
 3779 00ac 10000000 		.4byte	.LFE19-.LFB19
 3780 00b0 00000000 		.4byte	.LFB20
 3781 00b4 10000000 		.4byte	.LFE20-.LFB20
 3782 00b8 00000000 		.4byte	.LFB21
 3783 00bc 28000000 		.4byte	.LFE21-.LFB21
 3784 00c0 00000000 		.4byte	.LFB22
 3785 00c4 10000000 		.4byte	.LFE22-.LFB22
 3786 00c8 00000000 		.4byte	.LFB23
 3787 00cc 10000000 		.4byte	.LFE23-.LFB23
 3788 00d0 00000000 		.4byte	.LFB24
 3789 00d4 10000000 		.4byte	.LFE24-.LFB24
 3790 00d8 00000000 		.4byte	.LFB25
 3791 00dc 10000000 		.4byte	.LFE25-.LFB25
 3792 00e0 00000000 		.4byte	.LFB26
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 97


 3793 00e4 10000000 		.4byte	.LFE26-.LFB26
 3794 00e8 00000000 		.4byte	.LFB27
 3795 00ec 10000000 		.4byte	.LFE27-.LFB27
 3796 00f0 00000000 		.4byte	.LFB28
 3797 00f4 24000000 		.4byte	.LFE28-.LFB28
 3798 00f8 00000000 		.4byte	.LFB29
 3799 00fc 24000000 		.4byte	.LFE29-.LFB29
 3800 0100 00000000 		.4byte	.LFB30
 3801 0104 28000000 		.4byte	.LFE30-.LFB30
 3802 0108 00000000 		.4byte	.LFB31
 3803 010c 24000000 		.4byte	.LFE31-.LFB31
 3804 0110 00000000 		.4byte	.LFB32
 3805 0114 24000000 		.4byte	.LFE32-.LFB32
 3806 0118 00000000 		.4byte	.LFB33
 3807 011c 1C000000 		.4byte	.LFE33-.LFB33
 3808 0120 00000000 		.4byte	.LFB34
 3809 0124 14000000 		.4byte	.LFE34-.LFB34
 3810 0128 00000000 		.4byte	.LFB35
 3811 012c 0C000000 		.4byte	.LFE35-.LFB35
 3812 0130 00000000 		.4byte	.LFB36
 3813 0134 0C000000 		.4byte	.LFE36-.LFB36
 3814 0138 00000000 		.4byte	.LFB37
 3815 013c 0C000000 		.4byte	.LFE37-.LFB37
 3816 0140 00000000 		.4byte	.LFB38
 3817 0144 0C000000 		.4byte	.LFE38-.LFB38
 3818 0148 00000000 		.4byte	.LFB39
 3819 014c 0C000000 		.4byte	.LFE39-.LFB39
 3820 0150 00000000 		.4byte	0
 3821 0154 00000000 		.4byte	0
 3822              		.section	.debug_ranges,"",%progbits
 3823              	.Ldebug_ranges0:
 3824 0000 12000000 		.4byte	.LBB22
 3825 0004 16000000 		.4byte	.LBE22
 3826 0008 16000000 		.4byte	.LBB25
 3827 000c 18000000 		.4byte	.LBE25
 3828 0010 00000000 		.4byte	0
 3829 0014 00000000 		.4byte	0
 3830 0018 00000000 		.4byte	.LFB0
 3831 001c 5C000000 		.4byte	.LFE0
 3832 0020 00000000 		.4byte	.LFB1
 3833 0024 30000000 		.4byte	.LFE1
 3834 0028 00000000 		.4byte	.LFB2
 3835 002c 6C000000 		.4byte	.LFE2
 3836 0030 00000000 		.4byte	.LFB3
 3837 0034 1C000000 		.4byte	.LFE3
 3838 0038 00000000 		.4byte	.LFB4
 3839 003c 28000000 		.4byte	.LFE4
 3840 0040 00000000 		.4byte	.LFB5
 3841 0044 28000000 		.4byte	.LFE5
 3842 0048 00000000 		.4byte	.LFB6
 3843 004c 28000000 		.4byte	.LFE6
 3844 0050 00000000 		.4byte	.LFB7
 3845 0054 2C000000 		.4byte	.LFE7
 3846 0058 00000000 		.4byte	.LFB8
 3847 005c 10000000 		.4byte	.LFE8
 3848 0060 00000000 		.4byte	.LFB9
 3849 0064 28000000 		.4byte	.LFE9
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 98


 3850 0068 00000000 		.4byte	.LFB10
 3851 006c 28000000 		.4byte	.LFE10
 3852 0070 00000000 		.4byte	.LFB11
 3853 0074 2C000000 		.4byte	.LFE11
 3854 0078 00000000 		.4byte	.LFB12
 3855 007c 28000000 		.4byte	.LFE12
 3856 0080 00000000 		.4byte	.LFB13
 3857 0084 10000000 		.4byte	.LFE13
 3858 0088 00000000 		.4byte	.LFB14
 3859 008c 10000000 		.4byte	.LFE14
 3860 0090 00000000 		.4byte	.LFB15
 3861 0094 28000000 		.4byte	.LFE15
 3862 0098 00000000 		.4byte	.LFB16
 3863 009c 10000000 		.4byte	.LFE16
 3864 00a0 00000000 		.4byte	.LFB17
 3865 00a4 10000000 		.4byte	.LFE17
 3866 00a8 00000000 		.4byte	.LFB18
 3867 00ac 24000000 		.4byte	.LFE18
 3868 00b0 00000000 		.4byte	.LFB19
 3869 00b4 10000000 		.4byte	.LFE19
 3870 00b8 00000000 		.4byte	.LFB20
 3871 00bc 10000000 		.4byte	.LFE20
 3872 00c0 00000000 		.4byte	.LFB21
 3873 00c4 28000000 		.4byte	.LFE21
 3874 00c8 00000000 		.4byte	.LFB22
 3875 00cc 10000000 		.4byte	.LFE22
 3876 00d0 00000000 		.4byte	.LFB23
 3877 00d4 10000000 		.4byte	.LFE23
 3878 00d8 00000000 		.4byte	.LFB24
 3879 00dc 10000000 		.4byte	.LFE24
 3880 00e0 00000000 		.4byte	.LFB25
 3881 00e4 10000000 		.4byte	.LFE25
 3882 00e8 00000000 		.4byte	.LFB26
 3883 00ec 10000000 		.4byte	.LFE26
 3884 00f0 00000000 		.4byte	.LFB27
 3885 00f4 10000000 		.4byte	.LFE27
 3886 00f8 00000000 		.4byte	.LFB28
 3887 00fc 24000000 		.4byte	.LFE28
 3888 0100 00000000 		.4byte	.LFB29
 3889 0104 24000000 		.4byte	.LFE29
 3890 0108 00000000 		.4byte	.LFB30
 3891 010c 28000000 		.4byte	.LFE30
 3892 0110 00000000 		.4byte	.LFB31
 3893 0114 24000000 		.4byte	.LFE31
 3894 0118 00000000 		.4byte	.LFB32
 3895 011c 24000000 		.4byte	.LFE32
 3896 0120 00000000 		.4byte	.LFB33
 3897 0124 1C000000 		.4byte	.LFE33
 3898 0128 00000000 		.4byte	.LFB34
 3899 012c 14000000 		.4byte	.LFE34
 3900 0130 00000000 		.4byte	.LFB35
 3901 0134 0C000000 		.4byte	.LFE35
 3902 0138 00000000 		.4byte	.LFB36
 3903 013c 0C000000 		.4byte	.LFE36
 3904 0140 00000000 		.4byte	.LFB37
 3905 0144 0C000000 		.4byte	.LFE37
 3906 0148 00000000 		.4byte	.LFB38
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 99


 3907 014c 0C000000 		.4byte	.LFE38
 3908 0150 00000000 		.4byte	.LFB39
 3909 0154 0C000000 		.4byte	.LFE39
 3910 0158 00000000 		.4byte	0
 3911 015c 00000000 		.4byte	0
 3912              		.section	.debug_line,"",%progbits
 3913              	.Ldebug_line0:
 3914 0000 1B040000 		.section	.debug_str,"MS",%progbits,1
 3914      02004F00 
 3914      00000201 
 3914      FB0E0D00 
 3914      01010101 
 3915              	.LASF20:
 3916 0000 636F756E 		.ascii	"count\000"
 3916      7400
 3917              	.LASF68:
 3918 0006 50574D5F 		.ascii	"PWM_MOT_SetStopMode\000"
 3918      4D4F545F 
 3918      53657453 
 3918      746F704D 
 3918      6F646500 
 3919              	.LASF81:
 3920 001a 43794578 		.ascii	"CyExitCriticalSection\000"
 3920      69744372 
 3920      69746963 
 3920      616C5365 
 3920      6374696F 
 3921              	.LASF74:
 3922 0030 50574D5F 		.ascii	"PWM_MOT_SetInterrupt\000"
 3922      4D4F545F 
 3922      53657449 
 3922      6E746572 
 3922      72757074 
 3923              	.LASF76:
 3924 0045 47656E65 		.ascii	"Generated_Source\\PSoC4\\PWM_MOT.c\000"
 3924      72617465 
 3924      645F536F 
 3924      75726365 
 3924      5C50536F 
 3925              	.LASF24:
 3926 0066 70657269 		.ascii	"period\000"
 3926      6F6400
 3927              	.LASF7:
 3928 006d 6C6F6E67 		.ascii	"long long unsigned int\000"
 3928      206C6F6E 
 3928      6720756E 
 3928      7369676E 
 3928      65642069 
 3929              	.LASF27:
 3930 0084 50574D5F 		.ascii	"PWM_MOT_Enable\000"
 3930      4D4F545F 
 3930      456E6162 
 3930      6C6500
 3931              	.LASF57:
 3932 0093 50574D5F 		.ascii	"PWM_MOT_SetPeriodSwap\000"
 3932      4D4F545F 
 3932      53657450 
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 100


 3932      6572696F 
 3932      64537761 
 3933              	.LASF34:
 3934 00a9 71644D6F 		.ascii	"qdMode\000"
 3934      646500
 3935              	.LASF21:
 3936 00b0 50574D5F 		.ascii	"PWM_MOT_SetInterruptMode\000"
 3936      4D4F545F 
 3936      53657449 
 3936      6E746572 
 3936      72757074 
 3937              	.LASF6:
 3938 00c9 6C6F6E67 		.ascii	"long long int\000"
 3938      206C6F6E 
 3938      6720696E 
 3938      7400
 3939              	.LASF0:
 3940 00d7 7369676E 		.ascii	"signed char\000"
 3940      65642063 
 3940      68617200 
 3941              	.LASF23:
 3942 00e3 50574D5F 		.ascii	"PWM_MOT_WritePeriod\000"
 3942      4D4F545F 
 3942      57726974 
 3942      65506572 
 3942      696F6400 
 3943              	.LASF69:
 3944 00f7 50574D5F 		.ascii	"PWM_MOT_SetCountMode\000"
 3944      4D4F545F 
 3944      53657443 
 3944      6F756E74 
 3944      4D6F6465 
 3945              	.LASF4:
 3946 010c 6C6F6E67 		.ascii	"long int\000"
 3946      20696E74 
 3946      00
 3947              	.LASF9:
 3948 0115 75696E74 		.ascii	"uint8\000"
 3948      3800
 3949              	.LASF31:
 3950 011b 50574D5F 		.ascii	"PWM_MOT_SetMode\000"
 3950      4D4F545F 
 3950      5365744D 
 3950      6F646500 
 3951              	.LASF12:
 3952 012b 646F7562 		.ascii	"double\000"
 3952      6C6500
 3953              	.LASF71:
 3954 0132 50574D5F 		.ascii	"PWM_MOT_GetInterruptSourceMasked\000"
 3954      4D4F545F 
 3954      47657449 
 3954      6E746572 
 3954      72757074 
 3955              	.LASF54:
 3956 0153 50574D5F 		.ascii	"PWM_MOT_WritePeriodBuf\000"
 3956      4D4F545F 
 3956      57726974 
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 101


 3956      65506572 
 3956      696F6442 
 3957              	.LASF10:
 3958 016a 75696E74 		.ascii	"uint32\000"
 3958      333200
 3959              	.LASF29:
 3960 0171 50574D5F 		.ascii	"PWM_MOT_Stop\000"
 3960      4D4F545F 
 3960      53746F70 
 3960      00
 3961              	.LASF65:
 3962 017e 74726967 		.ascii	"triggerMode\000"
 3962      6765724D 
 3962      6F646500 
 3963              	.LASF16:
 3964 018a 6D61736B 		.ascii	"mask\000"
 3964      00
 3965              	.LASF66:
 3966 018f 50574D5F 		.ascii	"PWM_MOT_SetReloadMode\000"
 3966      4D4F545F 
 3966      53657452 
 3966      656C6F61 
 3966      644D6F64 
 3967              	.LASF28:
 3968 01a5 50574D5F 		.ascii	"PWM_MOT_Start\000"
 3968      4D4F545F 
 3968      53746172 
 3968      7400
 3969              	.LASF46:
 3970 01b3 64656164 		.ascii	"deadTime\000"
 3970      54696D65 
 3970      00
 3971              	.LASF62:
 3972 01bc 50574D5F 		.ascii	"PWM_MOT_ReadCapture\000"
 3972      4D4F545F 
 3972      52656164 
 3972      43617074 
 3972      75726500 
 3973              	.LASF64:
 3974 01d0 50574D5F 		.ascii	"PWM_MOT_SetCaptureMode\000"
 3974      4D4F545F 
 3974      53657443 
 3974      61707475 
 3974      72654D6F 
 3975              	.LASF8:
 3976 01e7 756E7369 		.ascii	"unsigned int\000"
 3976      676E6564 
 3976      20696E74 
 3976      00
 3977              	.LASF70:
 3978 01f4 50574D5F 		.ascii	"PWM_MOT_ReadStatus\000"
 3978      4D4F545F 
 3978      52656164 
 3978      53746174 
 3978      757300
 3979              	.LASF17:
 3980 0207 636F6D6D 		.ascii	"command\000"
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 102


 3980      616E6400 
 3981              	.LASF5:
 3982 020f 6C6F6E67 		.ascii	"long unsigned int\000"
 3982      20756E73 
 3982      69676E65 
 3982      6420696E 
 3982      7400
 3983              	.LASF40:
 3984 0221 6D6F6465 		.ascii	"modeMask\000"
 3984      4D61736B 
 3984      00
 3985              	.LASF72:
 3986 022a 50574D5F 		.ascii	"PWM_MOT_GetInterruptSource\000"
 3986      4D4F545F 
 3986      47657449 
 3986      6E746572 
 3986      72757074 
 3987              	.LASF63:
 3988 0245 50574D5F 		.ascii	"PWM_MOT_ReadCaptureBuf\000"
 3988      4D4F545F 
 3988      52656164 
 3988      43617074 
 3988      75726542 
 3989              	.LASF80:
 3990 025c 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3990      74657243 
 3990      72697469 
 3990      63616C53 
 3990      65637469 
 3991              	.LASF32:
 3992 0273 50574D5F 		.ascii	"PWM_MOT_SetQDMode\000"
 3992      4D4F545F 
 3992      53657451 
 3992      444D6F64 
 3992      6500
 3993              	.LASF3:
 3994 0285 73686F72 		.ascii	"short unsigned int\000"
 3994      7420756E 
 3994      7369676E 
 3994      65642069 
 3994      6E7400
 3995              	.LASF38:
 3996 0298 6F6E6553 		.ascii	"oneShotEnable\000"
 3996      686F7445 
 3996      6E61626C 
 3996      6500
 3997              	.LASF56:
 3998 02a6 50574D5F 		.ascii	"PWM_MOT_ReadPeriodBuf\000"
 3998      4D4F545F 
 3998      52656164 
 3998      50657269 
 3998      6F644275 
 3999              	.LASF14:
 4000 02bc 72656733 		.ascii	"reg32\000"
 4000      3200
 4001              	.LASF77:
 4002 02c2 433A5C55 		.ascii	"C:\\Users\\Marcus\\Documents\\GitHub\\Tarocco Lite\\"
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 103


 4002      73657273 
 4002      5C4D6172 
 4002      6375735C 
 4002      446F6375 
 4003 02f0 4669726D 		.ascii	"Firmware\\dcsd.cydsn\000"
 4003      77617265 
 4003      5C646373 
 4003      642E6379 
 4003      64736E00 
 4004              	.LASF15:
 4005 0304 73697A65 		.ascii	"sizetype\000"
 4005      74797065 
 4005      00
 4006              	.LASF42:
 4007 030d 73796E63 		.ascii	"syncKillEnable\000"
 4007      4B696C6C 
 4007      456E6162 
 4007      6C6500
 4008              	.LASF47:
 4009 031c 50574D5F 		.ascii	"PWM_MOT_SetPWMInvert\000"
 4009      4D4F545F 
 4009      53657450 
 4009      574D496E 
 4009      76657274 
 4010              	.LASF51:
 4011 0331 50574D5F 		.ascii	"PWM_MOT_ReadPeriod\000"
 4011      4D4F545F 
 4011      52656164 
 4011      50657269 
 4011      6F6400
 4012              	.LASF26:
 4013 0344 636F6D70 		.ascii	"compare\000"
 4013      61726500 
 4014              	.LASF41:
 4015 034c 50574D5F 		.ascii	"PWM_MOT_SetPWMSyncKill\000"
 4015      4D4F545F 
 4015      53657450 
 4015      574D5379 
 4015      6E634B69 
 4016              	.LASF25:
 4017 0363 50574D5F 		.ascii	"PWM_MOT_WriteCompare\000"
 4017      4D4F545F 
 4017      57726974 
 4017      65436F6D 
 4017      70617265 
 4018              	.LASF37:
 4019 0378 50574D5F 		.ascii	"PWM_MOT_SetOneShot\000"
 4019      4D4F545F 
 4019      5365744F 
 4019      6E655368 
 4019      6F7400
 4020              	.LASF11:
 4021 038b 666C6F61 		.ascii	"float\000"
 4021      7400
 4022              	.LASF36:
 4023 0391 70726573 		.ascii	"prescaler\000"
 4023      63616C65 
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 104


 4023      7200
 4024              	.LASF1:
 4025 039b 756E7369 		.ascii	"unsigned char\000"
 4025      676E6564 
 4025      20636861 
 4025      7200
 4026              	.LASF44:
 4027 03a9 73746F70 		.ascii	"stopOnKillEnable\000"
 4027      4F6E4B69 
 4027      6C6C456E 
 4027      61626C65 
 4027      00
 4028              	.LASF2:
 4029 03ba 73686F72 		.ascii	"short int\000"
 4029      7420696E 
 4029      7400
 4030              	.LASF78:
 4031 03c4 50574D5F 		.ascii	"PWM_MOT_Init\000"
 4031      4D4F545F 
 4031      496E6974 
 4031      00
 4032              	.LASF73:
 4033 03d1 50574D5F 		.ascii	"PWM_MOT_ClearInterrupt\000"
 4033      4D4F545F 
 4033      436C6561 
 4033      72496E74 
 4033      65727275 
 4034              	.LASF35:
 4035 03e8 50574D5F 		.ascii	"PWM_MOT_SetPrescaler\000"
 4035      4D4F545F 
 4035      53657450 
 4035      72657363 
 4035      616C6572 
 4036              	.LASF19:
 4037 03fd 50574D5F 		.ascii	"PWM_MOT_WriteCounter\000"
 4037      4D4F545F 
 4037      57726974 
 4037      65436F75 
 4037      6E746572 
 4038              	.LASF22:
 4039 0412 696E7465 		.ascii	"interruptMask\000"
 4039      72727570 
 4039      744D6173 
 4039      6B00
 4040              	.LASF58:
 4041 0420 50574D5F 		.ascii	"PWM_MOT_ReadCompare\000"
 4041      4D4F545F 
 4041      52656164 
 4041      436F6D70 
 4041      61726500 
 4042              	.LASF39:
 4043 0434 50574D5F 		.ascii	"PWM_MOT_SetPWMMode\000"
 4043      4D4F545F 
 4043      53657450 
 4043      574D4D6F 
 4043      646500
 4044              	.LASF61:
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 105


 4045 0447 50574D5F 		.ascii	"PWM_MOT_ReadCompareBuf\000"
 4045      4D4F545F 
 4045      52656164 
 4045      436F6D70 
 4045      61726542 
 4046              	.LASF52:
 4047 045e 50574D5F 		.ascii	"PWM_MOT_SetCompareSwap\000"
 4047      4D4F545F 
 4047      53657443 
 4047      6F6D7061 
 4047      72655377 
 4048              	.LASF13:
 4049 0475 63686172 		.ascii	"char\000"
 4049      00
 4050              	.LASF33:
 4051 047a 6D6F6465 		.ascii	"mode\000"
 4051      00
 4052              	.LASF49:
 4053 047f 636F756E 		.ascii	"counterMode\000"
 4053      7465724D 
 4053      6F646500 
 4054              	.LASF79:
 4055 048b 50574D5F 		.ascii	"PWM_MOT_initVar\000"
 4055      4D4F545F 
 4055      696E6974 
 4055      56617200 
 4056              	.LASF50:
 4057 049b 50574D5F 		.ascii	"PWM_MOT_ReadCounter\000"
 4057      4D4F545F 
 4057      52656164 
 4057      436F756E 
 4057      74657200 
 4058              	.LASF60:
 4059 04af 636F6D70 		.ascii	"compareBuf\000"
 4059      61726542 
 4059      756600
 4060              	.LASF45:
 4061 04ba 50574D5F 		.ascii	"PWM_MOT_SetPWMDeadTime\000"
 4061      4D4F545F 
 4061      53657450 
 4061      574D4465 
 4061      61645469 
 4062              	.LASF30:
 4063 04d1 656E6162 		.ascii	"enableInterrupts\000"
 4063      6C65496E 
 4063      74657272 
 4063      75707473 
 4063      00
 4064              	.LASF43:
 4065 04e2 50574D5F 		.ascii	"PWM_MOT_SetPWMStopOnKill\000"
 4065      4D4F545F 
 4065      53657450 
 4065      574D5374 
 4065      6F704F6E 
 4066              	.LASF59:
 4067 04fb 50574D5F 		.ascii	"PWM_MOT_WriteCompareBuf\000"
 4067      4D4F545F 
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccj7ZZWs.s 			page 106


 4067      57726974 
 4067      65436F6D 
 4067      70617265 
 4068              	.LASF53:
 4069 0513 73776170 		.ascii	"swapEnable\000"
 4069      456E6162 
 4069      6C6500
 4070              	.LASF48:
 4071 051e 50574D5F 		.ascii	"PWM_MOT_SetCounterMode\000"
 4071      4D4F545F 
 4071      53657443 
 4071      6F756E74 
 4071      65724D6F 
 4072              	.LASF75:
 4073 0535 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 4073      4320342E 
 4073      392E3320 
 4073      32303135 
 4073      30333033 
 4074 0568 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 4074      20726576 
 4074      6973696F 
 4074      6E203232 
 4074      31323230 
 4075 059b 32202D73 		.ascii	"2 -std=c99 -ffunction-sections -ffat-lto-objects\000"
 4075      74643D63 
 4075      3939202D 
 4075      6666756E 
 4075      6374696F 
 4076              	.LASF18:
 4077 05cc 50574D5F 		.ascii	"PWM_MOT_TriggerCommand\000"
 4077      4D4F545F 
 4077      54726967 
 4077      67657243 
 4077      6F6D6D61 
 4078              	.LASF67:
 4079 05e3 50574D5F 		.ascii	"PWM_MOT_SetStartMode\000"
 4079      4D4F545F 
 4079      53657453 
 4079      74617274 
 4079      4D6F6465 
 4080              	.LASF55:
 4081 05f8 70657269 		.ascii	"periodBuf\000"
 4081      6F644275 
 4081      6600
 4082              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
