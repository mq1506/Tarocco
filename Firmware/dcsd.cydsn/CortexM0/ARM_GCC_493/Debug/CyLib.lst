ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLib.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
  18              		.align	2
  19              		.code	16
  20              		.thumb_func
  21              		.type	CySysTickServiceCallbacks, %function
  22              	CySysTickServiceCallbacks:
  23              	.LFB42:
  24              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.40
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 2


  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  37:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  38:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  40:Generated_Source\PSoC4/CyLib.c **** 
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  43:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  44:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  45:Generated_Source\PSoC4/CyLib.c **** *
  46:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  47:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  48:Generated_Source\PSoC4/CyLib.c **** *
  49:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  50:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  51:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  52:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  53:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  54:Generated_Source\PSoC4/CyLib.c **** 
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  57:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  58:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  59:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  60:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  61:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  71:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  72:Generated_Source\PSoC4/CyLib.c **** 
  73:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  74:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  75:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  76:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  77:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  82:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  83:Generated_Source\PSoC4/CyLib.c **** 
  84:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  85:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  86:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  87:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  88:Generated_Source\PSoC4/CyLib.c **** 
  89:Generated_Source\PSoC4/CyLib.c **** 
  90:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 3


  91:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  92:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  93:Generated_Source\PSoC4/CyLib.c **** *
  94:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  95:Generated_Source\PSoC4/CyLib.c **** *
  96:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
  97:Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
  98:Generated_Source\PSoC4/CyLib.c **** * Resources tab.
  99:Generated_Source\PSoC4/CyLib.c **** *
 100:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 101:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 102:Generated_Source\PSoC4/CyLib.c **** *
 103:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 104:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 105:Generated_Source\PSoC4/CyLib.c **** {
 106:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
 107:Generated_Source\PSoC4/CyLib.c **** 
 108:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 109:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 110:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 111:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 112:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 113:Generated_Source\PSoC4/CyLib.c **** 
 114:Generated_Source\PSoC4/CyLib.c **** 
 115:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 116:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 117:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 118:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 119:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 120:Generated_Source\PSoC4/CyLib.c **** 
 121:Generated_Source\PSoC4/CyLib.c **** }
 122:Generated_Source\PSoC4/CyLib.c **** 
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 125:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 126:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 127:Generated_Source\PSoC4/CyLib.c **** *
 128:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 129:Generated_Source\PSoC4/CyLib.c **** *
 130:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 131:Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 132:Generated_Source\PSoC4/CyLib.c **** *
 133:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 134:Generated_Source\PSoC4/CyLib.c **** *
 135:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 136:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 137:Generated_Source\PSoC4/CyLib.c **** {
 138:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 139:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 140:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 141:Generated_Source\PSoC4/CyLib.c **** 
 142:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 143:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 144:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 145:Generated_Source\PSoC4/CyLib.c **** 
 146:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 147:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 4


 148:Generated_Source\PSoC4/CyLib.c **** 
 149:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 150:Generated_Source\PSoC4/CyLib.c **** 
 151:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 152:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 153:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 154:Generated_Source\PSoC4/CyLib.c ****     *
 155:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 156:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 157:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 158:Generated_Source\PSoC4/CyLib.c ****     *
 159:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 160:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 161:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 162:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 163:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 164:Generated_Source\PSoC4/CyLib.c ****     *
 165:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 166:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 167:Generated_Source\PSoC4/CyLib.c ****     *
 168:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 169:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 170:Generated_Source\PSoC4/CyLib.c ****     *
 171:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 172:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 173:Generated_Source\PSoC4/CyLib.c ****     {
 174:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 175:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 176:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 177:Generated_Source\PSoC4/CyLib.c **** 
 178:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 179:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 180:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 181:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 182:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 183:Generated_Source\PSoC4/CyLib.c **** 
 184:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 185:Generated_Source\PSoC4/CyLib.c ****         {
 186:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 187:Generated_Source\PSoC4/CyLib.c **** 
 188:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 189:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 190:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 191:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 192:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 193:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 194:Generated_Source\PSoC4/CyLib.c **** 
 195:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 196:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 197:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 198:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 199:Generated_Source\PSoC4/CyLib.c ****                 {
 200:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 201:Generated_Source\PSoC4/CyLib.c ****                     {
 202:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 203:Generated_Source\PSoC4/CyLib.c ****                         break;
 204:Generated_Source\PSoC4/CyLib.c ****                     }
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 5


 205:Generated_Source\PSoC4/CyLib.c ****                 }
 206:Generated_Source\PSoC4/CyLib.c ****             #else
 207:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 208:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 209:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 210:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 211:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 212:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 213:Generated_Source\PSoC4/CyLib.c ****                 #else
 214:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 215:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 216:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 217:Generated_Source\PSoC4/CyLib.c **** 
 218:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 219:Generated_Source\PSoC4/CyLib.c **** 
 220:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 221:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 222:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 223:Generated_Source\PSoC4/CyLib.c ****                 {
 224:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 225:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 226:Generated_Source\PSoC4/CyLib.c ****                 }
 227:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 228:Generated_Source\PSoC4/CyLib.c **** 
 229:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 230:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 231:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 232:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 233:Generated_Source\PSoC4/CyLib.c **** 
 234:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 235:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 238:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 239:Generated_Source\PSoC4/CyLib.c **** 
 240:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 241:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 242:Generated_Source\PSoC4/CyLib.c ****             {
 243:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 244:Generated_Source\PSoC4/CyLib.c ****             }
 245:Generated_Source\PSoC4/CyLib.c ****             else
 246:Generated_Source\PSoC4/CyLib.c ****             {
 247:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 248:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 249:Generated_Source\PSoC4/CyLib.c **** 
 250:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 251:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 252:Generated_Source\PSoC4/CyLib.c **** 
 253:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 254:Generated_Source\PSoC4/CyLib.c ****             }
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 257:Generated_Source\PSoC4/CyLib.c **** 
 258:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 259:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 260:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 261:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 6


 262:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 263:Generated_Source\PSoC4/CyLib.c **** 
 264:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 265:Generated_Source\PSoC4/CyLib.c ****         }
 266:Generated_Source\PSoC4/CyLib.c ****     }
 267:Generated_Source\PSoC4/CyLib.c **** 
 268:Generated_Source\PSoC4/CyLib.c **** 
 269:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 270:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 271:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 272:Generated_Source\PSoC4/CyLib.c ****     *
 273:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 274:Generated_Source\PSoC4/CyLib.c ****     *
 275:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 276:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 277:Generated_Source\PSoC4/CyLib.c ****     *
 278:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 279:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 280:Generated_Source\PSoC4/CyLib.c ****     *
 281:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 282:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 283:Generated_Source\PSoC4/CyLib.c ****     {
 284:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 285:Generated_Source\PSoC4/CyLib.c ****     }
 286:Generated_Source\PSoC4/CyLib.c **** 
 287:Generated_Source\PSoC4/CyLib.c **** 
 288:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 289:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 290:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 291:Generated_Source\PSoC4/CyLib.c ****     *
 292:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 293:Generated_Source\PSoC4/CyLib.c ****     *
 294:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 295:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 296:Generated_Source\PSoC4/CyLib.c ****     *
 297:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 298:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 299:Generated_Source\PSoC4/CyLib.c ****     *
 300:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 301:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 302:Generated_Source\PSoC4/CyLib.c ****     {
 303:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 304:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 305:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 306:Generated_Source\PSoC4/CyLib.c ****     }
 307:Generated_Source\PSoC4/CyLib.c **** 
 308:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 309:Generated_Source\PSoC4/CyLib.c **** 
 310:Generated_Source\PSoC4/CyLib.c **** 
 311:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 312:Generated_Source\PSoC4/CyLib.c **** 
 313:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 314:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 315:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 316:Generated_Source\PSoC4/CyLib.c ****     *
 317:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 318:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 7


 319:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 320:Generated_Source\PSoC4/CyLib.c ****     *
 321:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 322:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 325:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 328:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 329:Generated_Source\PSoC4/CyLib.c ****     {
 330:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 331:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 332:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 333:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 334:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 335:Generated_Source\PSoC4/CyLib.c **** 
 336:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 337:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 338:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 339:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 340:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 341:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 342:Generated_Source\PSoC4/CyLib.c **** 
 343:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 344:Generated_Source\PSoC4/CyLib.c ****     }
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c **** 
 347:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 348:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 349:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 350:Generated_Source\PSoC4/CyLib.c ****     *
 351:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 352:Generated_Source\PSoC4/CyLib.c ****     *
 353:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 354:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 355:Generated_Source\PSoC4/CyLib.c ****     *
 356:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 357:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 360:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 361:Generated_Source\PSoC4/CyLib.c ****     {
 362:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 363:Generated_Source\PSoC4/CyLib.c **** 
 364:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 365:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 366:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 367:Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 368:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 369:Generated_Source\PSoC4/CyLib.c ****     }
 370:Generated_Source\PSoC4/CyLib.c **** 
 371:Generated_Source\PSoC4/CyLib.c **** 
 372:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 373:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 374:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 375:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 8


 376:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 377:Generated_Source\PSoC4/CyLib.c ****     *
 378:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 379:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 380:Generated_Source\PSoC4/CyLib.c ****     *
 381:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 382:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 383:Generated_Source\PSoC4/CyLib.c ****     *
 384:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 385:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 386:Generated_Source\PSoC4/CyLib.c ****     {
 387:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 388:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 389:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 390:Generated_Source\PSoC4/CyLib.c ****     }
 391:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 392:Generated_Source\PSoC4/CyLib.c **** 
 393:Generated_Source\PSoC4/CyLib.c **** 
 394:Generated_Source\PSoC4/CyLib.c **** 
 395:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 396:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 397:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 398:Generated_Source\PSoC4/CyLib.c **** *
 399:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 400:Generated_Source\PSoC4/CyLib.c **** *
 401:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 402:Generated_Source\PSoC4/CyLib.c **** *
 403:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 404:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 405:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 406:Generated_Source\PSoC4/CyLib.c **** *
 407:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 408:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 409:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 410:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 411:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 412:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 413:Generated_Source\PSoC4/CyLib.c **** *
 414:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 415:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 416:Generated_Source\PSoC4/CyLib.c **** *
 417:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 418:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 419:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 420:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 421:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
 422:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 423:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 424:Generated_Source\PSoC4/CyLib.c **** *
 425:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 426:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 427:Generated_Source\PSoC4/CyLib.c **** {
 428:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 429:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 430:Generated_Source\PSoC4/CyLib.c **** 
 431:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 432:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 9


 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 435:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 436:Generated_Source\PSoC4/CyLib.c **** 
 437:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 438:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 439:Generated_Source\PSoC4/CyLib.c ****     {
 440:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 441:Generated_Source\PSoC4/CyLib.c ****     }
 442:Generated_Source\PSoC4/CyLib.c ****     else
 443:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 444:Generated_Source\PSoC4/CyLib.c ****     {
 445:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 446:Generated_Source\PSoC4/CyLib.c ****     }
 447:Generated_Source\PSoC4/CyLib.c **** 
 448:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 449:Generated_Source\PSoC4/CyLib.c **** 
 450:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 451:Generated_Source\PSoC4/CyLib.c **** }
 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c **** 
 454:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 455:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 456:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 457:Generated_Source\PSoC4/CyLib.c **** *
 458:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 459:Generated_Source\PSoC4/CyLib.c **** *
 460:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 461:Generated_Source\PSoC4/CyLib.c **** *
 462:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 463:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 464:Generated_Source\PSoC4/CyLib.c **** {
 465:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 466:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 467:Generated_Source\PSoC4/CyLib.c **** 
 468:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 469:Generated_Source\PSoC4/CyLib.c **** 
 470:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 471:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 472:Generated_Source\PSoC4/CyLib.c ****     {
 473:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 474:Generated_Source\PSoC4/CyLib.c ****     }
 475:Generated_Source\PSoC4/CyLib.c ****     else
 476:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 477:Generated_Source\PSoC4/CyLib.c ****     {
 478:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 479:Generated_Source\PSoC4/CyLib.c ****     }
 480:Generated_Source\PSoC4/CyLib.c **** 
 481:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 482:Generated_Source\PSoC4/CyLib.c **** 
 483:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 484:Generated_Source\PSoC4/CyLib.c **** }
 485:Generated_Source\PSoC4/CyLib.c **** 
 486:Generated_Source\PSoC4/CyLib.c **** 
 487:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 488:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 489:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 10


 490:Generated_Source\PSoC4/CyLib.c **** *
 491:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 492:Generated_Source\PSoC4/CyLib.c **** *
 493:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 494:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 495:Generated_Source\PSoC4/CyLib.c **** *
 496:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 497:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 498:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 499:Generated_Source\PSoC4/CyLib.c **** *
 500:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 501:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 502:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 503:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 504:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 505:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 506:Generated_Source\PSoC4/CyLib.c **** *
 507:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 508:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 509:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 510:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 511:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 512:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 513:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 514:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 515:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 516:Generated_Source\PSoC4/CyLib.c **** *
 517:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 518:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 519:Generated_Source\PSoC4/CyLib.c **** {
 520:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 521:Generated_Source\PSoC4/CyLib.c **** 
 522:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 523:Generated_Source\PSoC4/CyLib.c **** 
 524:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 525:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 526:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 527:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 528:Generated_Source\PSoC4/CyLib.c **** 
 529:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 530:Generated_Source\PSoC4/CyLib.c **** }
 531:Generated_Source\PSoC4/CyLib.c **** 
 532:Generated_Source\PSoC4/CyLib.c **** 
 533:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 534:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 535:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 536:Generated_Source\PSoC4/CyLib.c **** *
 537:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 538:Generated_Source\PSoC4/CyLib.c **** *
 539:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 540:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 541:Generated_Source\PSoC4/CyLib.c **** *
 542:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 543:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 544:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 545:Generated_Source\PSoC4/CyLib.c **** *
 546:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 11


 547:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 548:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 549:Generated_Source\PSoC4/CyLib.c **** *
 550:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 551:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 552:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 553:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 554:Generated_Source\PSoC4/CyLib.c **** *
 555:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 556:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 557:Generated_Source\PSoC4/CyLib.c **** *
 558:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 559:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 560:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 561:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 562:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 563:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 564:Generated_Source\PSoC4/CyLib.c **** *
 565:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 566:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 567:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 568:Generated_Source\PSoC4/CyLib.c **** *
 569:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 570:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 571:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 572:Generated_Source\PSoC4/CyLib.c **** * 4.
 573:Generated_Source\PSoC4/CyLib.c **** *
 574:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 575:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 576:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 577:Generated_Source\PSoC4/CyLib.c ****     {
 578:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 579:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 580:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 581:Generated_Source\PSoC4/CyLib.c ****         #else
 582:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 583:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 584:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 585:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 586:Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 587:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 588:Generated_Source\PSoC4/CyLib.c **** 
 589:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 590:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 591:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 592:Generated_Source\PSoC4/CyLib.c **** 
 593:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 594:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 595:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 596:Generated_Source\PSoC4/CyLib.c **** 
 597:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 598:Generated_Source\PSoC4/CyLib.c **** 
 599:Generated_Source\PSoC4/CyLib.c **** 
 600:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 601:Generated_Source\PSoC4/CyLib.c **** 
 602:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 603:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 12


 604:Generated_Source\PSoC4/CyLib.c ****             {
 605:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 606:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 607:Generated_Source\PSoC4/CyLib.c ****             }
 608:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 609:Generated_Source\PSoC4/CyLib.c **** 
 610:Generated_Source\PSoC4/CyLib.c **** 
 611:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 612:Generated_Source\PSoC4/CyLib.c **** 
 613:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 614:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 615:Generated_Source\PSoC4/CyLib.c ****                 {
 616:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 617:Generated_Source\PSoC4/CyLib.c **** 
 618:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 619:Generated_Source\PSoC4/CyLib.c ****                 {
 620:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 621:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 622:Generated_Source\PSoC4/CyLib.c ****                 }
 623:Generated_Source\PSoC4/CyLib.c **** 
 624:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 625:Generated_Source\PSoC4/CyLib.c ****                 }
 626:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 627:Generated_Source\PSoC4/CyLib.c **** 
 628:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 629:Generated_Source\PSoC4/CyLib.c **** 
 630:Generated_Source\PSoC4/CyLib.c **** 
 631:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 632:Generated_Source\PSoC4/CyLib.c **** 
 633:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 634:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 635:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 636:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 637:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 638:Generated_Source\PSoC4/CyLib.c **** 
 639:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 640:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 641:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 642:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 645:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 646:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 647:Generated_Source\PSoC4/CyLib.c **** 
 648:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 649:Generated_Source\PSoC4/CyLib.c **** 
 650:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 651:Generated_Source\PSoC4/CyLib.c ****         {
 652:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 653:Generated_Source\PSoC4/CyLib.c ****             {
 654:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 655:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 656:Generated_Source\PSoC4/CyLib.c ****             }
 657:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 658:Generated_Source\PSoC4/CyLib.c ****             {
 659:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 660:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 13


 661:Generated_Source\PSoC4/CyLib.c ****             }
 662:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 663:Generated_Source\PSoC4/CyLib.c ****             {
 664:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 665:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 666:Generated_Source\PSoC4/CyLib.c ****             }
 667:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 668:Generated_Source\PSoC4/CyLib.c ****             {
 669:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 670:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 671:Generated_Source\PSoC4/CyLib.c ****             }
 672:Generated_Source\PSoC4/CyLib.c ****             else
 673:Generated_Source\PSoC4/CyLib.c ****             {
 674:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 675:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 676:Generated_Source\PSoC4/CyLib.c ****             }
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 679:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 680:Generated_Source\PSoC4/CyLib.c **** 
 681:Generated_Source\PSoC4/CyLib.c **** 
 682:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 683:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 684:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 685:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 686:Generated_Source\PSoC4/CyLib.c ****             *
 687:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 688:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 689:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 690:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 691:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 692:Generated_Source\PSoC4/CyLib.c ****             {
 693:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 694:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 695:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 696:Generated_Source\PSoC4/CyLib.c **** 
 697:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 698:Generated_Source\PSoC4/CyLib.c **** 
 699:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 700:Generated_Source\PSoC4/CyLib.c ****             }
 701:Generated_Source\PSoC4/CyLib.c ****             else
 702:Generated_Source\PSoC4/CyLib.c ****             {
 703:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 704:Generated_Source\PSoC4/CyLib.c ****             }
 705:Generated_Source\PSoC4/CyLib.c **** 
 706:Generated_Source\PSoC4/CyLib.c **** 
 707:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 708:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 709:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 710:Generated_Source\PSoC4/CyLib.c ****             *
 711:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 712:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 713:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 714:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 715:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 716:Generated_Source\PSoC4/CyLib.c ****             {
 717:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 14


 718:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 719:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 720:Generated_Source\PSoC4/CyLib.c ****             }
 721:Generated_Source\PSoC4/CyLib.c **** 
 722:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 723:Generated_Source\PSoC4/CyLib.c **** 
 724:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 725:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 726:Generated_Source\PSoC4/CyLib.c ****                 {
 727:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 728:Generated_Source\PSoC4/CyLib.c ****                 }
 729:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 730:Generated_Source\PSoC4/CyLib.c ****                 {
 731:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 732:Generated_Source\PSoC4/CyLib.c ****                 }
 733:Generated_Source\PSoC4/CyLib.c ****                 else
 734:Generated_Source\PSoC4/CyLib.c ****                 {
 735:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 736:Generated_Source\PSoC4/CyLib.c ****                 }
 737:Generated_Source\PSoC4/CyLib.c ****             #else
 738:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 739:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 740:Generated_Source\PSoC4/CyLib.c **** 
 741:Generated_Source\PSoC4/CyLib.c **** 
 742:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 743:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 744:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 745:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 746:Generated_Source\PSoC4/CyLib.c **** 
 747:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 748:Generated_Source\PSoC4/CyLib.c ****             {
 749:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 750:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 751:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 752:Generated_Source\PSoC4/CyLib.c ****             }
 753:Generated_Source\PSoC4/CyLib.c ****         }
 754:Generated_Source\PSoC4/CyLib.c ****         else
 755:Generated_Source\PSoC4/CyLib.c ****         {
 756:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 757:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 758:Generated_Source\PSoC4/CyLib.c ****         }
 759:Generated_Source\PSoC4/CyLib.c **** 
 760:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 761:Generated_Source\PSoC4/CyLib.c **** 
 762:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 763:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 764:Generated_Source\PSoC4/CyLib.c ****             {
 765:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 766:Generated_Source\PSoC4/CyLib.c ****             }
 767:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 768:Generated_Source\PSoC4/CyLib.c **** 
 769:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 770:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 771:Generated_Source\PSoC4/CyLib.c ****             {
 772:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 773:Generated_Source\PSoC4/CyLib.c ****             }
 774:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 15


 775:Generated_Source\PSoC4/CyLib.c **** 
 776:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 777:Generated_Source\PSoC4/CyLib.c ****     }
 778:Generated_Source\PSoC4/CyLib.c **** 
 779:Generated_Source\PSoC4/CyLib.c **** #else
 780:Generated_Source\PSoC4/CyLib.c **** 
 781:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 782:Generated_Source\PSoC4/CyLib.c ****     {
 783:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 784:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 785:Generated_Source\PSoC4/CyLib.c **** 
 786:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 787:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 788:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 789:Generated_Source\PSoC4/CyLib.c ****         
 790:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 791:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 792:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 795:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 796:Generated_Source\PSoC4/CyLib.c ****         #else
 797:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 798:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 799:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 800:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 801:Generated_Source\PSoC4/CyLib.c ****         {
 802:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 803:Generated_Source\PSoC4/CyLib.c **** 
 804:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 805:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 806:Generated_Source\PSoC4/CyLib.c ****                 {
 807:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 808:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 809:Generated_Source\PSoC4/CyLib.c ****                 }
 810:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 811:Generated_Source\PSoC4/CyLib.c **** 
 812:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 813:Generated_Source\PSoC4/CyLib.c **** 
 814:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 815:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 816:Generated_Source\PSoC4/CyLib.c ****                     {
 817:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 818:Generated_Source\PSoC4/CyLib.c **** 
 819:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 820:Generated_Source\PSoC4/CyLib.c ****                     {
 821:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 822:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 823:Generated_Source\PSoC4/CyLib.c ****                     }
 824:Generated_Source\PSoC4/CyLib.c **** 
 825:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 826:Generated_Source\PSoC4/CyLib.c ****                     }
 827:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 828:Generated_Source\PSoC4/CyLib.c **** 
 829:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 830:Generated_Source\PSoC4/CyLib.c **** 
 831:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 16


 832:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 833:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 834:Generated_Source\PSoC4/CyLib.c **** 
 835:Generated_Source\PSoC4/CyLib.c **** 
 836:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 837:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 838:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 839:Generated_Source\PSoC4/CyLib.c ****                 {
 840:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 841:Generated_Source\PSoC4/CyLib.c ****                 }
 842:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 843:Generated_Source\PSoC4/CyLib.c ****                 {
 844:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 845:Generated_Source\PSoC4/CyLib.c ****                 }
 846:Generated_Source\PSoC4/CyLib.c ****                 else
 847:Generated_Source\PSoC4/CyLib.c ****                 {
 848:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 849:Generated_Source\PSoC4/CyLib.c ****                 }
 850:Generated_Source\PSoC4/CyLib.c ****             #else
 851:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 852:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 853:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 854:Generated_Source\PSoC4/CyLib.c **** 
 855:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 856:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 857:Generated_Source\PSoC4/CyLib.c **** 
 858:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 859:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 860:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 861:Generated_Source\PSoC4/CyLib.c **** 
 862:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 863:Generated_Source\PSoC4/CyLib.c **** 
 864:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 865:Generated_Source\PSoC4/CyLib.c ****             {
 866:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 867:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 868:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 869:Generated_Source\PSoC4/CyLib.c **** 
 870:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 871:Generated_Source\PSoC4/CyLib.c **** 
 872:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 873:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 874:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 875:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 876:Generated_Source\PSoC4/CyLib.c ****             }
 877:Generated_Source\PSoC4/CyLib.c **** 
 878:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 879:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 880:Generated_Source\PSoC4/CyLib.c ****                 {
 881:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 882:Generated_Source\PSoC4/CyLib.c ****                 }
 883:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 884:Generated_Source\PSoC4/CyLib.c ****         
 885:Generated_Source\PSoC4/CyLib.c ****         
 886:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 887:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 888:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 17


 889:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
 890:Generated_Source\PSoC4/CyLib.c ****                 }
 891:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 892:Generated_Source\PSoC4/CyLib.c **** 
 893:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 894:Generated_Source\PSoC4/CyLib.c ****         }
 895:Generated_Source\PSoC4/CyLib.c ****         else
 896:Generated_Source\PSoC4/CyLib.c ****         {
 897:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 898:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 899:Generated_Source\PSoC4/CyLib.c ****         }
 900:Generated_Source\PSoC4/CyLib.c ****     }
 901:Generated_Source\PSoC4/CyLib.c **** 
 902:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 903:Generated_Source\PSoC4/CyLib.c **** 
 904:Generated_Source\PSoC4/CyLib.c **** 
 905:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 906:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 907:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 908:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 909:Generated_Source\PSoC4/CyLib.c ****     *
 910:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 911:Generated_Source\PSoC4/CyLib.c ****     *
 912:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 913:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 914:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 915:Generated_Source\PSoC4/CyLib.c ****     *
 916:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 917:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 918:Generated_Source\PSoC4/CyLib.c ****     *
 919:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 920:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 921:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
 922:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 923:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 924:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
 925:Generated_Source\PSoC4/CyLib.c ****     *
 926:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 927:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 928:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 929:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 930:Generated_Source\PSoC4/CyLib.c ****     *
 931:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 932:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 933:Generated_Source\PSoC4/CyLib.c ****     {
 934:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 935:Generated_Source\PSoC4/CyLib.c **** 
 936:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 937:Generated_Source\PSoC4/CyLib.c **** 
 938:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 939:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 940:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 941:Generated_Source\PSoC4/CyLib.c **** 
 942:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 943:Generated_Source\PSoC4/CyLib.c ****     }
 944:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 945:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 18


 946:Generated_Source\PSoC4/CyLib.c **** 
 947:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 948:Generated_Source\PSoC4/CyLib.c **** 
 949:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 950:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
 951:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 952:Generated_Source\PSoC4/CyLib.c ****     *
 953:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
 954:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
 955:Generated_Source\PSoC4/CyLib.c ****     *
 956:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
 957:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
 958:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
 959:Generated_Source\PSoC4/CyLib.c ****     * called.
 960:Generated_Source\PSoC4/CyLib.c ****     *
 961:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
 962:Generated_Source\PSoC4/CyLib.c ****     *
 963:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
 964:Generated_Source\PSoC4/CyLib.c ****     *
 965:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
 966:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
 967:Generated_Source\PSoC4/CyLib.c ****     *
 968:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
 969:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
 970:Generated_Source\PSoC4/CyLib.c ****     *
 971:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
 972:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
 973:Generated_Source\PSoC4/CyLib.c ****     * is returned.
 974:Generated_Source\PSoC4/CyLib.c ****     *
 975:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
 976:Generated_Source\PSoC4/CyLib.c ****     *
 977:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 978:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
 979:Generated_Source\PSoC4/CyLib.c ****     {
 980:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 981:Generated_Source\PSoC4/CyLib.c **** 
 982:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
 983:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
 984:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 985:Generated_Source\PSoC4/CyLib.c **** 
 986:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
 987:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
 988:Generated_Source\PSoC4/CyLib.c **** 
 989:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
 990:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 991:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_WCO_SRSSV2 */
 992:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
 993:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
 994:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
 995:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
 996:Generated_Source\PSoC4/CyLib.c **** 
 997:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
 998:Generated_Source\PSoC4/CyLib.c ****         {
 999:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1000:Generated_Source\PSoC4/CyLib.c **** 
1001:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1002:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 19


1003:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1004:Generated_Source\PSoC4/CyLib.c **** 
1005:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1006:Generated_Source\PSoC4/CyLib.c ****                 {
1007:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1008:Generated_Source\PSoC4/CyLib.c ****                     break;
1009:Generated_Source\PSoC4/CyLib.c ****                 }
1010:Generated_Source\PSoC4/CyLib.c ****             }
1011:Generated_Source\PSoC4/CyLib.c **** 
1012:Generated_Source\PSoC4/CyLib.c ****         }
1013:Generated_Source\PSoC4/CyLib.c **** 
1014:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1015:Generated_Source\PSoC4/CyLib.c ****     }
1016:Generated_Source\PSoC4/CyLib.c **** 
1017:Generated_Source\PSoC4/CyLib.c **** 
1018:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1019:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1020:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1021:Generated_Source\PSoC4/CyLib.c ****     *
1022:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1023:Generated_Source\PSoC4/CyLib.c ****     *
1024:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1025:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1026:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1027:Generated_Source\PSoC4/CyLib.c ****     *
1028:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1029:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1030:Generated_Source\PSoC4/CyLib.c ****     {
1031:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1032:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1036:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1037:Generated_Source\PSoC4/CyLib.c ****         #else
1038:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1039:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1040:Generated_Source\PSoC4/CyLib.c ****     }
1041:Generated_Source\PSoC4/CyLib.c **** 
1042:Generated_Source\PSoC4/CyLib.c **** 
1043:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1044:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1045:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1046:Generated_Source\PSoC4/CyLib.c ****     *
1047:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1048:Generated_Source\PSoC4/CyLib.c ****     *
1049:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1050:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1051:Generated_Source\PSoC4/CyLib.c ****     *
1052:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1053:Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1054:Generated_Source\PSoC4/CyLib.c ****     *
1055:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1056:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1057:Generated_Source\PSoC4/CyLib.c ****     *
1058:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1059:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 20


1060:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1061:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1062:Generated_Source\PSoC4/CyLib.c ****     {
1063:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1064:Generated_Source\PSoC4/CyLib.c **** 
1065:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1066:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1067:Generated_Source\PSoC4/CyLib.c ****         #else
1068:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1069:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1070:Generated_Source\PSoC4/CyLib.c **** 
1071:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1072:Generated_Source\PSoC4/CyLib.c ****     }
1073:Generated_Source\PSoC4/CyLib.c **** 
1074:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS)
1075:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1076:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1077:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1078:Generated_Source\PSoC4/CyLib.c ****         *
1079:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1080:Generated_Source\PSoC4/CyLib.c ****         *
1081:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1082:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1083:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1084:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1085:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1086:Generated_Source\PSoC4/CyLib.c ****         *
1087:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1088:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1089:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1090:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1091:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1092:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1093:Generated_Source\PSoC4/CyLib.c ****         *
1094:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1095:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1096:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1097:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1098:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1099:Generated_Source\PSoC4/CyLib.c ****         *
1100:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1101:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1102:Generated_Source\PSoC4/CyLib.c ****         {
1103:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1104:Generated_Source\PSoC4/CyLib.c **** 
1105:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1106:Generated_Source\PSoC4/CyLib.c ****             {
1107:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1108:Generated_Source\PSoC4/CyLib.c **** 
1109:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1110:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1111:Generated_Source\PSoC4/CyLib.c **** 
1112:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1113:Generated_Source\PSoC4/CyLib.c ****             }
1114:Generated_Source\PSoC4/CyLib.c ****             else
1115:Generated_Source\PSoC4/CyLib.c ****             {
1116:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 21


1117:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1118:Generated_Source\PSoC4/CyLib.c ****             }
1119:Generated_Source\PSoC4/CyLib.c ****         }
1120:Generated_Source\PSoC4/CyLib.c **** 
1121:Generated_Source\PSoC4/CyLib.c ****     #else
1122:Generated_Source\PSoC4/CyLib.c **** 
1123:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1124:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1125:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1126:Generated_Source\PSoC4/CyLib.c ****         *
1127:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1128:Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1129:Generated_Source\PSoC4/CyLib.c ****         *
1130:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1131:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1132:Generated_Source\PSoC4/CyLib.c ****         *
1133:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1134:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1135:Generated_Source\PSoC4/CyLib.c ****         *
1136:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1137:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1138:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1139:Generated_Source\PSoC4/CyLib.c ****         *
1140:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1141:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1142:Generated_Source\PSoC4/CyLib.c ****         *
1143:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1144:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1145:Generated_Source\PSoC4/CyLib.c ****         *
1146:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1147:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1148:Generated_Source\PSoC4/CyLib.c ****         *
1149:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1150:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1151:Generated_Source\PSoC4/CyLib.c ****         *
1152:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1153:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1154:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1155:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1156:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1157:Generated_Source\PSoC4/CyLib.c ****         *
1158:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1159:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1160:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1161:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1162:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1163:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1164:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1165:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1166:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1167:Generated_Source\PSoC4/CyLib.c ****         *
1168:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1169:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1170:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1171:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1172:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1173:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 22


1174:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1175:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1176:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1177:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1178:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1179:Generated_Source\PSoC4/CyLib.c ****         *
1180:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1181:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1182:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1183:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1184:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1185:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1186:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1187:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1188:Generated_Source\PSoC4/CyLib.c ****         *
1189:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1190:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1191:Generated_Source\PSoC4/CyLib.c ****         {
1192:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1193:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1194:Generated_Source\PSoC4/CyLib.c **** 
1195:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1196:Generated_Source\PSoC4/CyLib.c **** 
1197:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1198:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1199:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1200:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1201:Generated_Source\PSoC4/CyLib.c **** 
1202:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1203:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1204:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1205:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1206:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1207:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1208:Generated_Source\PSoC4/CyLib.c **** 
1209:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1210:Generated_Source\PSoC4/CyLib.c **** 
1211:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1212:Generated_Source\PSoC4/CyLib.c ****         }
1213:Generated_Source\PSoC4/CyLib.c **** 
1214:Generated_Source\PSoC4/CyLib.c **** 
1215:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1216:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1217:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1218:Generated_Source\PSoC4/CyLib.c ****         *
1219:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1220:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1221:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1222:Generated_Source\PSoC4/CyLib.c ****         *
1223:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
1224:Generated_Source\PSoC4/CyLib.c ****         *
1225:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1226:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1227:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1228:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1229:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1230:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 23


1231:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1232:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1233:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1234:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1235:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1236:Generated_Source\PSoC4/CyLib.c ****         *
1237:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1238:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1239:Generated_Source\PSoC4/CyLib.c ****         *
1240:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1241:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1242:Generated_Source\PSoC4/CyLib.c ****         {
1243:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1244:Generated_Source\PSoC4/CyLib.c **** 
1245:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1246:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1247:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1248:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1249:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1250:Generated_Source\PSoC4/CyLib.c **** 
1251:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1252:Generated_Source\PSoC4/CyLib.c **** 
1253:Generated_Source\PSoC4/CyLib.c **** 
1254:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1255:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1256:Generated_Source\PSoC4/CyLib.c ****             {
1257:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1258:Generated_Source\PSoC4/CyLib.c ****             }
1259:Generated_Source\PSoC4/CyLib.c ****             else
1260:Generated_Source\PSoC4/CyLib.c ****             {
1261:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1262:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1263:Generated_Source\PSoC4/CyLib.c **** 
1264:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1265:Generated_Source\PSoC4/CyLib.c ****                 {
1266:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1267:Generated_Source\PSoC4/CyLib.c ****                 }
1268:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1269:Generated_Source\PSoC4/CyLib.c ****                 {
1270:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1271:Generated_Source\PSoC4/CyLib.c ****                 }
1272:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1273:Generated_Source\PSoC4/CyLib.c ****                 {
1274:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1275:Generated_Source\PSoC4/CyLib.c ****                 }
1276:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1277:Generated_Source\PSoC4/CyLib.c ****                 {
1278:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1279:Generated_Source\PSoC4/CyLib.c ****                 }
1280:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1281:Generated_Source\PSoC4/CyLib.c ****                 {
1282:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1283:Generated_Source\PSoC4/CyLib.c ****                 }
1284:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1285:Generated_Source\PSoC4/CyLib.c ****                 {
1286:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1287:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 24


1288:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1289:Generated_Source\PSoC4/CyLib.c ****                 {
1290:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1291:Generated_Source\PSoC4/CyLib.c ****                 }
1292:Generated_Source\PSoC4/CyLib.c ****                 else
1293:Generated_Source\PSoC4/CyLib.c ****                 {
1294:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1295:Generated_Source\PSoC4/CyLib.c ****                 }
1296:Generated_Source\PSoC4/CyLib.c **** 
1297:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1298:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1299:Generated_Source\PSoC4/CyLib.c **** 
1300:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1301:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1302:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1303:Generated_Source\PSoC4/CyLib.c ****                 {
1304:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1305:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1306:Generated_Source\PSoC4/CyLib.c ****                 }
1307:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1308:Generated_Source\PSoC4/CyLib.c ****                 {
1309:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1310:Generated_Source\PSoC4/CyLib.c ****                 }
1311:Generated_Source\PSoC4/CyLib.c ****                 else
1312:Generated_Source\PSoC4/CyLib.c ****                 {
1313:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1314:Generated_Source\PSoC4/CyLib.c ****                 }
1315:Generated_Source\PSoC4/CyLib.c **** 
1316:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1317:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1318:Generated_Source\PSoC4/CyLib.c ****                 {
1319:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1320:Generated_Source\PSoC4/CyLib.c ****                 }
1321:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1322:Generated_Source\PSoC4/CyLib.c ****                 {
1323:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1324:Generated_Source\PSoC4/CyLib.c ****                 }
1325:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1326:Generated_Source\PSoC4/CyLib.c ****                 {
1327:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1328:Generated_Source\PSoC4/CyLib.c ****                 }
1329:Generated_Source\PSoC4/CyLib.c ****                 else
1330:Generated_Source\PSoC4/CyLib.c ****                 {
1331:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1332:Generated_Source\PSoC4/CyLib.c ****                 }
1333:Generated_Source\PSoC4/CyLib.c **** 
1334:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1335:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1336:Generated_Source\PSoC4/CyLib.c **** 
1337:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1338:Generated_Source\PSoC4/CyLib.c **** 
1339:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1340:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1341:Generated_Source\PSoC4/CyLib.c ****                 {
1342:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1343:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1344:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 25


1345:Generated_Source\PSoC4/CyLib.c ****                 else
1346:Generated_Source\PSoC4/CyLib.c ****                 {
1347:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1348:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1349:Generated_Source\PSoC4/CyLib.c ****                     */
1350:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1351:Generated_Source\PSoC4/CyLib.c ****                 }
1352:Generated_Source\PSoC4/CyLib.c ****             }
1353:Generated_Source\PSoC4/CyLib.c **** 
1354:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1355:Generated_Source\PSoC4/CyLib.c ****         }
1356:Generated_Source\PSoC4/CyLib.c **** 
1357:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1358:Generated_Source\PSoC4/CyLib.c **** 
1359:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1360:Generated_Source\PSoC4/CyLib.c **** 
1361:Generated_Source\PSoC4/CyLib.c **** 
1362:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1363:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1364:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1365:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1366:Generated_Source\PSoC4/CyLib.c ****     *
1367:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1368:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1369:Generated_Source\PSoC4/CyLib.c ****     *
1370:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1371:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1372:Generated_Source\PSoC4/CyLib.c ****     *
1373:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1374:Generated_Source\PSoC4/CyLib.c ****     *
1375:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1376:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1377:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1378:Generated_Source\PSoC4/CyLib.c ****     *
1379:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1380:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1381:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1382:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1383:Generated_Source\PSoC4/CyLib.c ****     *
1384:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1385:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1386:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1387:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1388:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1389:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1390:Generated_Source\PSoC4/CyLib.c ****     *
1391:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1392:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1393:Generated_Source\PSoC4/CyLib.c ****     {
1394:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1395:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1396:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1397:Generated_Source\PSoC4/CyLib.c **** 
1398:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1399:Generated_Source\PSoC4/CyLib.c ****         {
1400:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1401:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 26


1402:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1403:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1404:Generated_Source\PSoC4/CyLib.c **** 
1405:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1406:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1407:Generated_Source\PSoC4/CyLib.c **** 
1408:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1409:Generated_Source\PSoC4/CyLib.c **** 
1410:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1411:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1412:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1413:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1414:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1415:Generated_Source\PSoC4/CyLib.c **** 
1416:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1417:Generated_Source\PSoC4/CyLib.c ****             {
1418:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1419:Generated_Source\PSoC4/CyLib.c **** 
1420:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1421:Generated_Source\PSoC4/CyLib.c ****                 {
1422:Generated_Source\PSoC4/CyLib.c **** 
1423:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1424:Generated_Source\PSoC4/CyLib.c ****                     {
1425:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1426:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1427:Generated_Source\PSoC4/CyLib.c ****                         break;
1428:Generated_Source\PSoC4/CyLib.c ****                     }
1429:Generated_Source\PSoC4/CyLib.c **** 
1430:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1431:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1432:Generated_Source\PSoC4/CyLib.c ****                 }
1433:Generated_Source\PSoC4/CyLib.c ****             }
1434:Generated_Source\PSoC4/CyLib.c ****         }
1435:Generated_Source\PSoC4/CyLib.c ****         else
1436:Generated_Source\PSoC4/CyLib.c ****         {
1437:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1438:Generated_Source\PSoC4/CyLib.c ****         }
1439:Generated_Source\PSoC4/CyLib.c **** 
1440:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1441:Generated_Source\PSoC4/CyLib.c ****     }
1442:Generated_Source\PSoC4/CyLib.c **** 
1443:Generated_Source\PSoC4/CyLib.c **** 
1444:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1445:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1446:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1447:Generated_Source\PSoC4/CyLib.c ****     *
1448:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1449:Generated_Source\PSoC4/CyLib.c ****     *
1450:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1451:Generated_Source\PSoC4/CyLib.c ****     *
1452:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1453:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1454:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1455:Generated_Source\PSoC4/CyLib.c ****     *
1456:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1457:Generated_Source\PSoC4/CyLib.c ****     *
1458:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 27


1459:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1460:Generated_Source\PSoC4/CyLib.c ****     {
1461:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1462:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1463:Generated_Source\PSoC4/CyLib.c **** 
1464:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1465:Generated_Source\PSoC4/CyLib.c **** 
1466:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1467:Generated_Source\PSoC4/CyLib.c **** 
1468:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1469:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1470:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1471:Generated_Source\PSoC4/CyLib.c ****         {
1472:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1473:Generated_Source\PSoC4/CyLib.c ****         }
1474:Generated_Source\PSoC4/CyLib.c **** 
1475:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1476:Generated_Source\PSoC4/CyLib.c **** 
1477:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1478:Generated_Source\PSoC4/CyLib.c ****     }
1479:Generated_Source\PSoC4/CyLib.c **** 
1480:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1481:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1482:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1483:Generated_Source\PSoC4/CyLib.c ****     *
1484:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1485:Generated_Source\PSoC4/CyLib.c ****     *
1486:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1487:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1488:Generated_Source\PSoC4/CyLib.c ****     *
1489:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1490:Generated_Source\PSoC4/CyLib.c ****     *
1491:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1492:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1493:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1494:Generated_Source\PSoC4/CyLib.c ****     *
1495:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1496:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1497:Generated_Source\PSoC4/CyLib.c ****     {
1498:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1499:Generated_Source\PSoC4/CyLib.c **** 
1500:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1501:Generated_Source\PSoC4/CyLib.c ****         {
1502:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1503:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1504:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1505:Generated_Source\PSoC4/CyLib.c ****         }
1506:Generated_Source\PSoC4/CyLib.c ****     }
1507:Generated_Source\PSoC4/CyLib.c **** 
1508:Generated_Source\PSoC4/CyLib.c **** 
1509:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1510:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1511:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1512:Generated_Source\PSoC4/CyLib.c ****     *
1513:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1514:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1515:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 28


1516:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1517:Generated_Source\PSoC4/CyLib.c ****     *
1518:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1519:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1520:Generated_Source\PSoC4/CyLib.c ****     *
1521:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1522:Generated_Source\PSoC4/CyLib.c ****     *
1523:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1524:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1525:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1526:Generated_Source\PSoC4/CyLib.c ****     *
1527:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1528:Generated_Source\PSoC4/CyLib.c ****     * divider.
1529:Generated_Source\PSoC4/CyLib.c ****     *
1530:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1531:Generated_Source\PSoC4/CyLib.c ****     *
1532:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1533:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1534:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1535:Generated_Source\PSoC4/CyLib.c ****     *
1536:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1537:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1538:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1539:Generated_Source\PSoC4/CyLib.c ****     *
1540:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1542:Generated_Source\PSoC4/CyLib.c ****     {
1543:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1544:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1545:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1546:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1547:Generated_Source\PSoC4/CyLib.c **** 
1548:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1549:Generated_Source\PSoC4/CyLib.c **** 
1550:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1551:Generated_Source\PSoC4/CyLib.c **** 
1552:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1553:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1554:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1555:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1556:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1557:Generated_Source\PSoC4/CyLib.c ****         {
1558:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1559:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1560:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1561:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1562:Generated_Source\PSoC4/CyLib.c **** 
1563:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1564:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1565:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1566:Generated_Source\PSoC4/CyLib.c **** 
1567:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1568:Generated_Source\PSoC4/CyLib.c **** 
1569:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1570:Generated_Source\PSoC4/CyLib.c ****         }
1571:Generated_Source\PSoC4/CyLib.c **** 
1572:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 29


1573:Generated_Source\PSoC4/CyLib.c **** 
1574:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1575:Generated_Source\PSoC4/CyLib.c ****     }
1576:Generated_Source\PSoC4/CyLib.c **** 
1577:Generated_Source\PSoC4/CyLib.c **** 
1578:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1579:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1580:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1581:Generated_Source\PSoC4/CyLib.c ****     *
1582:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1583:Generated_Source\PSoC4/CyLib.c ****     *
1584:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1585:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1586:Generated_Source\PSoC4/CyLib.c ****     *
1587:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1588:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1589:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1590:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1591:Generated_Source\PSoC4/CyLib.c ****     *
1592:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1593:Generated_Source\PSoC4/CyLib.c ****     *
1594:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1595:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1596:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1597:Generated_Source\PSoC4/CyLib.c ****     *
1598:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1599:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1600:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1601:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1602:Generated_Source\PSoC4/CyLib.c ****     *
1603:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1604:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1605:Generated_Source\PSoC4/CyLib.c ****     *
1606:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1607:Generated_Source\PSoC4/CyLib.c ****     *
1608:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1609:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1610:Generated_Source\PSoC4/CyLib.c ****     {
1611:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1612:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1613:Generated_Source\PSoC4/CyLib.c **** 
1614:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1615:Generated_Source\PSoC4/CyLib.c **** 
1616:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1617:Generated_Source\PSoC4/CyLib.c ****         {
1618:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1619:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1620:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1621:Generated_Source\PSoC4/CyLib.c ****         }
1622:Generated_Source\PSoC4/CyLib.c **** 
1623:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1624:Generated_Source\PSoC4/CyLib.c ****     }
1625:Generated_Source\PSoC4/CyLib.c **** 
1626:Generated_Source\PSoC4/CyLib.c **** 
1627:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1628:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1629:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 30


1630:Generated_Source\PSoC4/CyLib.c ****     *
1631:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1632:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1633:Generated_Source\PSoC4/CyLib.c ****     *
1634:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1635:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1636:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1639:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1640:Generated_Source\PSoC4/CyLib.c ****     *
1641:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1642:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1643:Generated_Source\PSoC4/CyLib.c ****     {
1644:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1645:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1646:Generated_Source\PSoC4/CyLib.c **** 
1647:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1648:Generated_Source\PSoC4/CyLib.c **** 
1649:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1650:Generated_Source\PSoC4/CyLib.c **** 
1651:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1652:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1653:Generated_Source\PSoC4/CyLib.c **** 
1654:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1655:Generated_Source\PSoC4/CyLib.c **** 
1656:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1657:Generated_Source\PSoC4/CyLib.c ****     }
1658:Generated_Source\PSoC4/CyLib.c **** 
1659:Generated_Source\PSoC4/CyLib.c **** 
1660:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1661:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1662:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1663:Generated_Source\PSoC4/CyLib.c ****     *
1664:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1665:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1666:Generated_Source\PSoC4/CyLib.c ****     *
1667:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1668:Generated_Source\PSoC4/CyLib.c ****     *
1669:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1670:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1671:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1672:Generated_Source\PSoC4/CyLib.c ****     *
1673:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1674:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1675:Generated_Source\PSoC4/CyLib.c ****     *
1676:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1677:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1678:Generated_Source\PSoC4/CyLib.c ****     {
1679:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1680:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1681:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1682:Generated_Source\PSoC4/CyLib.c **** 
1683:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1684:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1685:Generated_Source\PSoC4/CyLib.c **** 
1686:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 31


1687:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1688:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1689:Generated_Source\PSoC4/CyLib.c ****         {
1690:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1691:Generated_Source\PSoC4/CyLib.c ****         }
1692:Generated_Source\PSoC4/CyLib.c **** 
1693:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1694:Generated_Source\PSoC4/CyLib.c ****     }
1695:Generated_Source\PSoC4/CyLib.c **** 
1696:Generated_Source\PSoC4/CyLib.c **** 
1697:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1698:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1699:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1700:Generated_Source\PSoC4/CyLib.c ****     *
1701:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1702:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1703:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1704:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1705:Generated_Source\PSoC4/CyLib.c ****     *
1706:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1707:Generated_Source\PSoC4/CyLib.c ****     *
1708:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1709:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1710:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1711:Generated_Source\PSoC4/CyLib.c ****     *
1712:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1713:Generated_Source\PSoC4/CyLib.c ****     *
1714:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1715:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1716:Generated_Source\PSoC4/CyLib.c ****     {
1717:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1718:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1719:Generated_Source\PSoC4/CyLib.c **** 
1720:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1721:Generated_Source\PSoC4/CyLib.c **** 
1722:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1723:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1724:Generated_Source\PSoC4/CyLib.c **** 
1725:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1728:Generated_Source\PSoC4/CyLib.c ****     }
1729:Generated_Source\PSoC4/CyLib.c **** 
1730:Generated_Source\PSoC4/CyLib.c **** 
1731:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1732:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1733:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1734:Generated_Source\PSoC4/CyLib.c ****     *
1735:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1736:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1737:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1738:Generated_Source\PSoC4/CyLib.c ****     *
1739:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1740:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1741:Generated_Source\PSoC4/CyLib.c ****     *
1742:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1743:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 32


1744:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1745:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1746:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1747:Generated_Source\PSoC4/CyLib.c ****     *
1748:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1749:Generated_Source\PSoC4/CyLib.c ****     *
1750:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1751:Generated_Source\PSoC4/CyLib.c ****     *
1752:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1753:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1754:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1755:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1756:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1757:Generated_Source\PSoC4/CyLib.c ****     *
1758:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
1759:Generated_Source\PSoC4/CyLib.c ****     *
1760:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1761:Generated_Source\PSoC4/CyLib.c ****     * frequency.
1762:Generated_Source\PSoC4/CyLib.c ****     *
1763:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
1764:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1765:Generated_Source\PSoC4/CyLib.c ****     *
1766:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1767:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1768:Generated_Source\PSoC4/CyLib.c ****     {
1769:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1770:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1773:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1774:Generated_Source\PSoC4/CyLib.c **** 
1775:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1776:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1777:Generated_Source\PSoC4/CyLib.c **** 
1778:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1779:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1780:Generated_Source\PSoC4/CyLib.c **** 
1781:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1782:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1783:Generated_Source\PSoC4/CyLib.c **** 
1784:Generated_Source\PSoC4/CyLib.c **** 
1785:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1786:Generated_Source\PSoC4/CyLib.c **** 
1787:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1788:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1789:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1790:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1791:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1792:Generated_Source\PSoC4/CyLib.c ****         {
1793:Generated_Source\PSoC4/CyLib.c **** 
1794:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1795:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1796:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1797:Generated_Source\PSoC4/CyLib.c **** 
1798:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1799:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1800:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 33


1801:Generated_Source\PSoC4/CyLib.c **** 
1802:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1803:Generated_Source\PSoC4/CyLib.c ****             {
1804:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1805:Generated_Source\PSoC4/CyLib.c ****                 {
1806:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1809:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1810:Generated_Source\PSoC4/CyLib.c **** 
1811:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1812:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1813:Generated_Source\PSoC4/CyLib.c **** 
1814:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1815:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1816:Generated_Source\PSoC4/CyLib.c **** 
1817:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1818:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1819:Generated_Source\PSoC4/CyLib.c ****                     {
1820:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1821:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1822:Generated_Source\PSoC4/CyLib.c ****                         break;
1823:Generated_Source\PSoC4/CyLib.c ****                     }
1824:Generated_Source\PSoC4/CyLib.c ****                 }
1825:Generated_Source\PSoC4/CyLib.c **** 
1826:Generated_Source\PSoC4/CyLib.c **** 
1827:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1828:Generated_Source\PSoC4/CyLib.c ****                 {
1829:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1830:Generated_Source\PSoC4/CyLib.c ****                     {
1831:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1832:Generated_Source\PSoC4/CyLib.c ****                     }
1833:Generated_Source\PSoC4/CyLib.c ****                 }
1834:Generated_Source\PSoC4/CyLib.c ****             }
1835:Generated_Source\PSoC4/CyLib.c **** 
1836:Generated_Source\PSoC4/CyLib.c ****         }
1837:Generated_Source\PSoC4/CyLib.c **** 
1838:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1839:Generated_Source\PSoC4/CyLib.c ****     }
1840:Generated_Source\PSoC4/CyLib.c **** 
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1843:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1844:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1845:Generated_Source\PSoC4/CyLib.c ****     *
1846:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1847:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1848:Generated_Source\PSoC4/CyLib.c ****     *
1849:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1850:Generated_Source\PSoC4/CyLib.c ****     *
1851:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1852:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1853:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     * \param source:
1856:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
1857:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 34


1858:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
1859:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
1860:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
1861:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
1862:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
1863:Generated_Source\PSoC4/CyLib.c ****     *
1864:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1865:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
1866:Generated_Source\PSoC4/CyLib.c ****     {
1867:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1868:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1869:Generated_Source\PSoC4/CyLib.c **** 
1870:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1871:Generated_Source\PSoC4/CyLib.c **** 
1872:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1873:Generated_Source\PSoC4/CyLib.c ****         {
1874:Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
1875:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
1876:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
1877:Generated_Source\PSoC4/CyLib.c ****         }
1878:Generated_Source\PSoC4/CyLib.c **** 
1879:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1880:Generated_Source\PSoC4/CyLib.c ****     }
1881:Generated_Source\PSoC4/CyLib.c **** 
1882:Generated_Source\PSoC4/CyLib.c **** 
1883:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1884:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
1885:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1886:Generated_Source\PSoC4/CyLib.c ****     *
1887:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
1888:Generated_Source\PSoC4/CyLib.c ****     *
1889:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
1890:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
1891:Generated_Source\PSoC4/CyLib.c ****     *
1892:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1893:Generated_Source\PSoC4/CyLib.c ****     *
1894:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1895:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1896:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1897:Generated_Source\PSoC4/CyLib.c ****     *
1898:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
1899:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
1900:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1901:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1902:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1903:Generated_Source\PSoC4/CyLib.c ****     *
1904:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
1905:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
1906:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
1907:Generated_Source\PSoC4/CyLib.c ****     *
1908:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1909:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
1910:Generated_Source\PSoC4/CyLib.c ****     {
1911:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
1912:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1913:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1914:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 35


1915:Generated_Source\PSoC4/CyLib.c **** 
1916:Generated_Source\PSoC4/CyLib.c **** 
1917:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1918:Generated_Source\PSoC4/CyLib.c **** 
1919:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1920:Generated_Source\PSoC4/CyLib.c **** 
1921:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
1922:Generated_Source\PSoC4/CyLib.c ****         {
1923:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
1924:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
1925:Generated_Source\PSoC4/CyLib.c **** 
1926:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
1927:Generated_Source\PSoC4/CyLib.c **** 
1928:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1929:Generated_Source\PSoC4/CyLib.c ****         }
1930:Generated_Source\PSoC4/CyLib.c **** 
1931:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1934:Generated_Source\PSoC4/CyLib.c ****     }
1935:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
1936:Generated_Source\PSoC4/CyLib.c **** 
1937:Generated_Source\PSoC4/CyLib.c **** 
1938:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
1939:Generated_Source\PSoC4/CyLib.c **** 
1940:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1941:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
1942:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1943:Generated_Source\PSoC4/CyLib.c ****     *
1944:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
1945:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
1946:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
1947:Generated_Source\PSoC4/CyLib.c ****     *
1948:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
1949:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
1950:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
1951:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
1952:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
1953:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
1954:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
1955:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
1956:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
1957:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
1958:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
1959:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
1960:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
1961:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
1962:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
1963:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
1964:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
1965:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
1966:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
1967:Generated_Source\PSoC4/CyLib.c ****     *
1968:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1969:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
1970:Generated_Source\PSoC4/CyLib.c ****     {
1971:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 36


1972:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
1973:Generated_Source\PSoC4/CyLib.c **** 
1974:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
1975:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
1976:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
1977:Generated_Source\PSoC4/CyLib.c **** 
1978:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
1979:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
1980:Generated_Source\PSoC4/CyLib.c **** 
1981:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
1982:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
1983:Generated_Source\PSoC4/CyLib.c **** 
1984:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
1985:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
1986:Generated_Source\PSoC4/CyLib.c **** 
1987:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
1988:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
1989:Generated_Source\PSoC4/CyLib.c ****     }
1990:Generated_Source\PSoC4/CyLib.c **** 
1991:Generated_Source\PSoC4/CyLib.c **** 
1992:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1993:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
1994:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1995:Generated_Source\PSoC4/CyLib.c ****     *
1996:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1999:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2000:Generated_Source\PSoC4/CyLib.c ****     {
2001:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
2002:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2003:Generated_Source\PSoC4/CyLib.c ****     }
2004:Generated_Source\PSoC4/CyLib.c **** 
2005:Generated_Source\PSoC4/CyLib.c **** 
2006:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2007:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2008:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2009:Generated_Source\PSoC4/CyLib.c ****     *
2010:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2011:Generated_Source\PSoC4/CyLib.c ****     *
2012:Generated_Source\PSoC4/CyLib.c ****     * \return
2013:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2014:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2015:Generated_Source\PSoC4/CyLib.c ****     *
2016:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2017:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2018:Generated_Source\PSoC4/CyLib.c ****     {
2019:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
2020:Generated_Source\PSoC4/CyLib.c ****     }
2021:Generated_Source\PSoC4/CyLib.c **** 
2022:Generated_Source\PSoC4/CyLib.c **** 
2023:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2024:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2025:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2026:Generated_Source\PSoC4/CyLib.c ****     *
2027:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2028:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 37


2029:Generated_Source\PSoC4/CyLib.c ****     * \return
2030:Generated_Source\PSoC4/CyLib.c ****     *  None
2031:Generated_Source\PSoC4/CyLib.c ****     *
2032:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2033:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2034:Generated_Source\PSoC4/CyLib.c ****     {
2035:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
2036:Generated_Source\PSoC4/CyLib.c ****     }
2037:Generated_Source\PSoC4/CyLib.c **** 
2038:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2039:Generated_Source\PSoC4/CyLib.c **** 
2040:Generated_Source\PSoC4/CyLib.c **** 
2041:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2042:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2043:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2044:Generated_Source\PSoC4/CyLib.c **** *
2045:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2046:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2047:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2048:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2049:Generated_Source\PSoC4/CyLib.c **** *
2050:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2051:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2052:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2053:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2054:Generated_Source\PSoC4/CyLib.c **** *
2055:Generated_Source\PSoC4/CyLib.c **** * \return
2056:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2057:Generated_Source\PSoC4/CyLib.c **** *
2058:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2059:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2060:Generated_Source\PSoC4/CyLib.c **** {
2061:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2062:Generated_Source\PSoC4/CyLib.c **** 
2063:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2064:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
2065:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2066:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
2067:Generated_Source\PSoC4/CyLib.c **** 
2068:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2069:Generated_Source\PSoC4/CyLib.c **** }
2070:Generated_Source\PSoC4/CyLib.c **** 
2071:Generated_Source\PSoC4/CyLib.c **** 
2072:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2073:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2074:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2075:Generated_Source\PSoC4/CyLib.c **** *
2076:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2077:Generated_Source\PSoC4/CyLib.c **** *
2078:Generated_Source\PSoC4/CyLib.c **** * \return
2079:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2080:Generated_Source\PSoC4/CyLib.c **** *
2081:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2082:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2083:Generated_Source\PSoC4/CyLib.c **** {
2084:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2085:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 38


2086:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2087:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2090:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
2091:Generated_Source\PSoC4/CyLib.c **** 
2092:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2093:Generated_Source\PSoC4/CyLib.c **** }
2094:Generated_Source\PSoC4/CyLib.c **** 
2095:Generated_Source\PSoC4/CyLib.c **** 
2096:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2097:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2098:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2099:Generated_Source\PSoC4/CyLib.c **** *
2100:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2101:Generated_Source\PSoC4/CyLib.c **** *
2102:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2103:Generated_Source\PSoC4/CyLib.c **** *
2104:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2105:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2106:Generated_Source\PSoC4/CyLib.c **** {
2107:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
2108:Generated_Source\PSoC4/CyLib.c **** }
2109:Generated_Source\PSoC4/CyLib.c **** 
2110:Generated_Source\PSoC4/CyLib.c **** 
2111:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2112:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2113:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2114:Generated_Source\PSoC4/CyLib.c **** *
2115:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2116:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2117:Generated_Source\PSoC4/CyLib.c **** *
2118:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2119:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2120:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2121:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2122:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2123:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2124:Generated_Source\PSoC4/CyLib.c **** *
2125:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2126:Generated_Source\PSoC4/CyLib.c **** *
2127:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2128:Generated_Source\PSoC4/CyLib.c **** *
2129:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2130:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2131:Generated_Source\PSoC4/CyLib.c **** {
2132:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2133:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2134:Generated_Source\PSoC4/CyLib.c **** 
2135:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2136:Generated_Source\PSoC4/CyLib.c **** 
2137:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2138:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2139:Generated_Source\PSoC4/CyLib.c **** 
2140:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2141:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2142:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 39


2143:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2144:Generated_Source\PSoC4/CyLib.c **** }
2145:Generated_Source\PSoC4/CyLib.c **** 
2146:Generated_Source\PSoC4/CyLib.c **** 
2147:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2148:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2149:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2150:Generated_Source\PSoC4/CyLib.c **** *
2151:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2152:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2153:Generated_Source\PSoC4/CyLib.c **** *
2154:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2155:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2156:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2157:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2158:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2159:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2160:Generated_Source\PSoC4/CyLib.c **** *
2161:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2162:Generated_Source\PSoC4/CyLib.c **** *
2163:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2164:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2165:Generated_Source\PSoC4/CyLib.c **** {
2166:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2167:Generated_Source\PSoC4/CyLib.c **** 
2168:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2169:Generated_Source\PSoC4/CyLib.c **** 
2170:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2171:Generated_Source\PSoC4/CyLib.c **** }
2172:Generated_Source\PSoC4/CyLib.c **** 
2173:Generated_Source\PSoC4/CyLib.c **** 
2174:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2175:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2176:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2177:Generated_Source\PSoC4/CyLib.c **** *
2178:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2179:Generated_Source\PSoC4/CyLib.c **** *
2180:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2181:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2182:Generated_Source\PSoC4/CyLib.c **** *
2183:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2184:Generated_Source\PSoC4/CyLib.c **** *
2185:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2186:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2187:Generated_Source\PSoC4/CyLib.c **** {
2188:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2189:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2190:Generated_Source\PSoC4/CyLib.c **** 
2191:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2192:Generated_Source\PSoC4/CyLib.c **** 
2193:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2194:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2195:Generated_Source\PSoC4/CyLib.c **** 
2196:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2197:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2198:Generated_Source\PSoC4/CyLib.c **** 
2199:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 40


2200:Generated_Source\PSoC4/CyLib.c **** }
2201:Generated_Source\PSoC4/CyLib.c **** 
2202:Generated_Source\PSoC4/CyLib.c **** 
2203:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2204:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2205:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2206:Generated_Source\PSoC4/CyLib.c **** *
2207:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2208:Generated_Source\PSoC4/CyLib.c **** *
2209:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2210:Generated_Source\PSoC4/CyLib.c **** *
2211:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2212:Generated_Source\PSoC4/CyLib.c **** *
2213:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2214:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2215:Generated_Source\PSoC4/CyLib.c **** {
2216:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2217:Generated_Source\PSoC4/CyLib.c **** 
2218:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2221:Generated_Source\PSoC4/CyLib.c **** }
2222:Generated_Source\PSoC4/CyLib.c **** 
2223:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2224:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2225:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2226:Generated_Source\PSoC4/CyLib.c **** *
2227:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2228:Generated_Source\PSoC4/CyLib.c **** *
2229:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2230:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2231:Generated_Source\PSoC4/CyLib.c **** *
2232:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2233:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2234:Generated_Source\PSoC4/CyLib.c **** {
2235:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2236:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2237:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2238:Generated_Source\PSoC4/CyLib.c **** 
2239:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2240:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2241:Generated_Source\PSoC4/CyLib.c **** 
2242:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2243:Generated_Source\PSoC4/CyLib.c **** 
2244:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2245:Generated_Source\PSoC4/CyLib.c **** 
2246:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2247:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2248:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2249:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2250:Generated_Source\PSoC4/CyLib.c **** 
2251:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2252:Generated_Source\PSoC4/CyLib.c **** }
2253:Generated_Source\PSoC4/CyLib.c **** 
2254:Generated_Source\PSoC4/CyLib.c **** 
2255:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2256:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 41


2257:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2258:Generated_Source\PSoC4/CyLib.c **** *
2259:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2260:Generated_Source\PSoC4/CyLib.c **** *
2261:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2262:Generated_Source\PSoC4/CyLib.c **** *
2263:Generated_Source\PSoC4/CyLib.c **** * \return
2264:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2265:Generated_Source\PSoC4/CyLib.c **** *
2266:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2267:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2268:Generated_Source\PSoC4/CyLib.c **** {
2269:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2270:Generated_Source\PSoC4/CyLib.c **** 
2271:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2272:Generated_Source\PSoC4/CyLib.c **** 
2273:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2274:Generated_Source\PSoC4/CyLib.c **** 
2275:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2276:Generated_Source\PSoC4/CyLib.c **** }
2277:Generated_Source\PSoC4/CyLib.c **** 
2278:Generated_Source\PSoC4/CyLib.c **** 
2279:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2280:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2281:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2282:Generated_Source\PSoC4/CyLib.c **** *
2283:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2284:Generated_Source\PSoC4/CyLib.c **** *
2285:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2286:Generated_Source\PSoC4/CyLib.c **** *
2287:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2288:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2289:Generated_Source\PSoC4/CyLib.c **** {
2290:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
2291:Generated_Source\PSoC4/CyLib.c **** }
2292:Generated_Source\PSoC4/CyLib.c **** 
2293:Generated_Source\PSoC4/CyLib.c **** 
2294:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2295:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2296:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2297:Generated_Source\PSoC4/CyLib.c **** *
2298:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2299:Generated_Source\PSoC4/CyLib.c **** *
2300:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2301:Generated_Source\PSoC4/CyLib.c **** *
2302:Generated_Source\PSoC4/CyLib.c **** * \return
2303:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2304:Generated_Source\PSoC4/CyLib.c **** *
2305:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2306:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2307:Generated_Source\PSoC4/CyLib.c **** {
2308:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2309:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
2310:Generated_Source\PSoC4/CyLib.c **** }
2311:Generated_Source\PSoC4/CyLib.c **** 
2312:Generated_Source\PSoC4/CyLib.c **** 
2313:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 42


2314:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2315:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2316:Generated_Source\PSoC4/CyLib.c **** *
2317:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2318:Generated_Source\PSoC4/CyLib.c **** *
2319:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2320:Generated_Source\PSoC4/CyLib.c **** *
2321:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2322:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2323:Generated_Source\PSoC4/CyLib.c **** {
2324:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
2325:Generated_Source\PSoC4/CyLib.c **** }
2326:Generated_Source\PSoC4/CyLib.c **** 
2327:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2328:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2329:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2330:Generated_Source\PSoC4/CyLib.c **** *
2331:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2332:Generated_Source\PSoC4/CyLib.c **** *
2333:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2334:Generated_Source\PSoC4/CyLib.c **** *
2335:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2336:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2337:Generated_Source\PSoC4/CyLib.c **** {
2338:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
2339:Generated_Source\PSoC4/CyLib.c **** }
2340:Generated_Source\PSoC4/CyLib.c **** 
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2343:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2344:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2345:Generated_Source\PSoC4/CyLib.c **** *
2346:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2347:Generated_Source\PSoC4/CyLib.c **** *
2348:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2349:Generated_Source\PSoC4/CyLib.c **** *
2350:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2351:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2352:Generated_Source\PSoC4/CyLib.c **** {
2353:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
2354:Generated_Source\PSoC4/CyLib.c **** }
2355:Generated_Source\PSoC4/CyLib.c **** 
2356:Generated_Source\PSoC4/CyLib.c **** 
2357:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2358:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2359:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2360:Generated_Source\PSoC4/CyLib.c **** *
2361:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2362:Generated_Source\PSoC4/CyLib.c **** *
2363:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2364:Generated_Source\PSoC4/CyLib.c **** *
2365:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2366:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2367:Generated_Source\PSoC4/CyLib.c **** {
2368:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2369:Generated_Source\PSoC4/CyLib.c ****     {
2370:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 43


2371:Generated_Source\PSoC4/CyLib.c ****     }
2372:Generated_Source\PSoC4/CyLib.c **** 
2373:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2374:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2375:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2376:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
2377:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2378:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2379:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2380:Generated_Source\PSoC4/CyLib.c **** }
2381:Generated_Source\PSoC4/CyLib.c **** 
2382:Generated_Source\PSoC4/CyLib.c **** 
2383:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2384:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2385:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2386:Generated_Source\PSoC4/CyLib.c **** *
2387:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2388:Generated_Source\PSoC4/CyLib.c **** *
2389:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2390:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2391:Generated_Source\PSoC4/CyLib.c **** {
2392:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2393:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2394:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2395:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2396:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
2397:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
2398:Generated_Source\PSoC4/CyLib.c **** }
2399:Generated_Source\PSoC4/CyLib.c **** 
2400:Generated_Source\PSoC4/CyLib.c **** 
2401:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2402:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2403:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2404:Generated_Source\PSoC4/CyLib.c **** *
2405:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2406:Generated_Source\PSoC4/CyLib.c **** *
2407:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2408:Generated_Source\PSoC4/CyLib.c **** *
2409:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2410:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2411:Generated_Source\PSoC4/CyLib.c **** {
2412:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
2413:Generated_Source\PSoC4/CyLib.c ****     {
2414:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2415:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2416:Generated_Source\PSoC4/CyLib.c ****          */
2417:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
2418:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
2419:Generated_Source\PSoC4/CyLib.c ****     }
2420:Generated_Source\PSoC4/CyLib.c **** 
2421:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
2422:Generated_Source\PSoC4/CyLib.c **** }
2423:Generated_Source\PSoC4/CyLib.c **** 
2424:Generated_Source\PSoC4/CyLib.c **** 
2425:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2426:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2427:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 44


2428:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2429:Generated_Source\PSoC4/CyLib.c **** *
2430:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2431:Generated_Source\PSoC4/CyLib.c **** *
2432:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2433:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2434:Generated_Source\PSoC4/CyLib.c **** {
2435:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
2436:Generated_Source\PSoC4/CyLib.c **** }
2437:Generated_Source\PSoC4/CyLib.c **** 
2438:Generated_Source\PSoC4/CyLib.c **** 
2439:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2440:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2441:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2442:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2443:Generated_Source\PSoC4/CyLib.c **** *
2444:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2445:Generated_Source\PSoC4/CyLib.c **** *
2446:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2447:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2448:Generated_Source\PSoC4/CyLib.c **** {
2449:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
2450:Generated_Source\PSoC4/CyLib.c ****     {
2451:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
2452:Generated_Source\PSoC4/CyLib.c ****     }
2453:Generated_Source\PSoC4/CyLib.c ****     else
2454:Generated_Source\PSoC4/CyLib.c ****     {
2455:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
2456:Generated_Source\PSoC4/CyLib.c ****     }
2457:Generated_Source\PSoC4/CyLib.c **** 
2458:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
2459:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
2460:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
2461:Generated_Source\PSoC4/CyLib.c **** }
2462:Generated_Source\PSoC4/CyLib.c **** 
2463:Generated_Source\PSoC4/CyLib.c **** 
2464:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2465:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2466:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2467:Generated_Source\PSoC4/CyLib.c **** *
2468:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2469:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2470:Generated_Source\PSoC4/CyLib.c **** *
2471:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2472:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2473:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2474:Generated_Source\PSoC4/CyLib.c **** *
2475:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2476:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2477:Generated_Source\PSoC4/CyLib.c **** *
2478:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2479:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2480:Generated_Source\PSoC4/CyLib.c **** {
2481:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2482:Generated_Source\PSoC4/CyLib.c ****     {
2483:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2484:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 45


2485:Generated_Source\PSoC4/CyLib.c ****     }
2486:Generated_Source\PSoC4/CyLib.c **** 
2487:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2488:Generated_Source\PSoC4/CyLib.c **** }
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2493:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:Generated_Source\PSoC4/CyLib.c **** *
2495:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2496:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2497:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2498:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2499:Generated_Source\PSoC4/CyLib.c **** *
2500:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2501:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2502:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2503:Generated_Source\PSoC4/CyLib.c **** *
2504:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2505:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2506:Generated_Source\PSoC4/CyLib.c **** *
2507:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2508:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2509:Generated_Source\PSoC4/CyLib.c **** {
2510:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2511:Generated_Source\PSoC4/CyLib.c **** 
2512:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2513:Generated_Source\PSoC4/CyLib.c ****     {
2514:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
2515:Generated_Source\PSoC4/CyLib.c ****     }
2516:Generated_Source\PSoC4/CyLib.c **** 
2517:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2518:Generated_Source\PSoC4/CyLib.c **** 
2519:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2520:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2521:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2522:Generated_Source\PSoC4/CyLib.c **** 
2523:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
2524:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2525:Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
2526:Generated_Source\PSoC4/CyLib.c **** }
2527:Generated_Source\PSoC4/CyLib.c **** 
2528:Generated_Source\PSoC4/CyLib.c **** 
2529:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2530:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2531:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2532:Generated_Source\PSoC4/CyLib.c **** *
2533:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2534:Generated_Source\PSoC4/CyLib.c **** *
2535:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2536:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2537:Generated_Source\PSoC4/CyLib.c **** *
2538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2540:Generated_Source\PSoC4/CyLib.c **** {
2541:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 46


2542:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
2543:Generated_Source\PSoC4/CyLib.c **** }
2544:Generated_Source\PSoC4/CyLib.c **** 
2545:Generated_Source\PSoC4/CyLib.c **** 
2546:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2547:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2548:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2549:Generated_Source\PSoC4/CyLib.c **** *
2550:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2551:Generated_Source\PSoC4/CyLib.c **** *
2552:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2553:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2554:Generated_Source\PSoC4/CyLib.c **** *
2555:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2556:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2557:Generated_Source\PSoC4/CyLib.c **** {
2558:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
2559:Generated_Source\PSoC4/CyLib.c **** }
2560:Generated_Source\PSoC4/CyLib.c **** 
2561:Generated_Source\PSoC4/CyLib.c **** 
2562:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2563:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2564:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2565:Generated_Source\PSoC4/CyLib.c **** *
2566:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2567:Generated_Source\PSoC4/CyLib.c **** *
2568:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2569:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2570:Generated_Source\PSoC4/CyLib.c **** *
2571:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2572:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2573:Generated_Source\PSoC4/CyLib.c **** {
2574:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
2575:Generated_Source\PSoC4/CyLib.c **** }
2576:Generated_Source\PSoC4/CyLib.c **** 
2577:Generated_Source\PSoC4/CyLib.c **** 
2578:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2579:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2580:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2581:Generated_Source\PSoC4/CyLib.c **** *
2582:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2583:Generated_Source\PSoC4/CyLib.c **** *
2584:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2585:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2586:Generated_Source\PSoC4/CyLib.c **** *
2587:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2588:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2589:Generated_Source\PSoC4/CyLib.c **** {
2590:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
2591:Generated_Source\PSoC4/CyLib.c **** }
2592:Generated_Source\PSoC4/CyLib.c **** 
2593:Generated_Source\PSoC4/CyLib.c **** 
2594:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2595:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2596:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2597:Generated_Source\PSoC4/CyLib.c **** *
2598:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 47


2599:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2600:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2601:Generated_Source\PSoC4/CyLib.c **** *
2602:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2603:Generated_Source\PSoC4/CyLib.c **** *
2604:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2605:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2606:Generated_Source\PSoC4/CyLib.c **** {
2607:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
2608:Generated_Source\PSoC4/CyLib.c **** }
2609:Generated_Source\PSoC4/CyLib.c **** 
2610:Generated_Source\PSoC4/CyLib.c **** 
2611:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2612:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2613:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2614:Generated_Source\PSoC4/CyLib.c **** *
2615:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2616:Generated_Source\PSoC4/CyLib.c **** *
2617:Generated_Source\PSoC4/CyLib.c **** * \return
2618:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2619:Generated_Source\PSoC4/CyLib.c **** *
2620:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2621:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2622:Generated_Source\PSoC4/CyLib.c **** {
2623:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
2624:Generated_Source\PSoC4/CyLib.c **** }
2625:Generated_Source\PSoC4/CyLib.c **** 
2626:Generated_Source\PSoC4/CyLib.c **** 
2627:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2628:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2629:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2630:Generated_Source\PSoC4/CyLib.c **** *
2631:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2632:Generated_Source\PSoC4/CyLib.c **** *
2633:Generated_Source\PSoC4/CyLib.c **** * \return
2634:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2635:Generated_Source\PSoC4/CyLib.c **** *
2636:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2637:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2638:Generated_Source\PSoC4/CyLib.c **** {
2639:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
2640:Generated_Source\PSoC4/CyLib.c **** }
2641:Generated_Source\PSoC4/CyLib.c **** 
2642:Generated_Source\PSoC4/CyLib.c **** 
2643:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2644:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2645:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2646:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2647:Generated_Source\PSoC4/CyLib.c ****     *
2648:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2649:Generated_Source\PSoC4/CyLib.c ****     *
2650:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2651:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2652:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2653:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2654:Generated_Source\PSoC4/CyLib.c ****     *
2655:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 48


2656:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2657:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2658:Generated_Source\PSoC4/CyLib.c ****     *
2659:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2660:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2661:Generated_Source\PSoC4/CyLib.c ****     *
2662:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2663:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2664:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2665:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2666:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2667:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2668:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2669:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2670:Generated_Source\PSoC4/CyLib.c ****     {
2671:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
2672:Generated_Source\PSoC4/CyLib.c ****         {
2673:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
2674:Generated_Source\PSoC4/CyLib.c ****         }
2675:Generated_Source\PSoC4/CyLib.c ****         else
2676:Generated_Source\PSoC4/CyLib.c ****         {
2677:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
2678:Generated_Source\PSoC4/CyLib.c ****         }
2679:Generated_Source\PSoC4/CyLib.c ****     }
2680:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2681:Generated_Source\PSoC4/CyLib.c **** 
2682:Generated_Source\PSoC4/CyLib.c **** 
2683:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2684:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2685:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2686:Generated_Source\PSoC4/CyLib.c **** *
2687:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2688:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2689:Generated_Source\PSoC4/CyLib.c **** *
2690:Generated_Source\PSoC4/CyLib.c **** * \return
2691:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2692:Generated_Source\PSoC4/CyLib.c **** *
2693:Generated_Source\PSoC4/CyLib.c **** *
2694:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2695:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2696:Generated_Source\PSoC4/CyLib.c **** *
2697:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2698:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2699:Generated_Source\PSoC4/CyLib.c **** {
2700:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG>>CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
2701:Generated_Source\PSoC4/CyLib.c **** }
2702:Generated_Source\PSoC4/CyLib.c **** 
2703:Generated_Source\PSoC4/CyLib.c **** 
2704:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2705:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2706:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2707:Generated_Source\PSoC4/CyLib.c **** *
2708:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2709:Generated_Source\PSoC4/CyLib.c **** *
2710:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2711:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2712:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 49


2713:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
2714:Generated_Source\PSoC4/CyLib.c **** }
2715:Generated_Source\PSoC4/CyLib.c **** 
2716:Generated_Source\PSoC4/CyLib.c **** 
2717:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2718:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2719:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2720:Generated_Source\PSoC4/CyLib.c **** *
2721:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2722:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2723:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2724:Generated_Source\PSoC4/CyLib.c **** *
2725:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2726:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2727:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2728:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2729:Generated_Source\PSoC4/CyLib.c **** *  functions.
2730:Generated_Source\PSoC4/CyLib.c **** *
2731:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
2732:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2733:Generated_Source\PSoC4/CyLib.c **** *
2734:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2735:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2736:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2737:Generated_Source\PSoC4/CyLib.c **** *
2738:Generated_Source\PSoC4/CyLib.c **** * \return
2739:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2740:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2741:Generated_Source\PSoC4/CyLib.c **** *
2742:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2743:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2744:Generated_Source\PSoC4/CyLib.c **** *
2745:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2746:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2747:Generated_Source\PSoC4/CyLib.c **** {
2748:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2749:Generated_Source\PSoC4/CyLib.c **** 
2750:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
2751:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
2752:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
2753:Generated_Source\PSoC4/CyLib.c **** }
2754:Generated_Source\PSoC4/CyLib.c **** 
2755:Generated_Source\PSoC4/CyLib.c **** 
2756:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2757:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2758:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2759:Generated_Source\PSoC4/CyLib.c **** *
2760:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2761:Generated_Source\PSoC4/CyLib.c **** *
2762:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2763:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2764:Generated_Source\PSoC4/CyLib.c **** *
2765:Generated_Source\PSoC4/CyLib.c **** * \return
2766:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2767:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2768:Generated_Source\PSoC4/CyLib.c **** *
2769:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 50


2770:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2771:Generated_Source\PSoC4/CyLib.c **** {
2772:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
2773:Generated_Source\PSoC4/CyLib.c **** }
2774:Generated_Source\PSoC4/CyLib.c **** 
2775:Generated_Source\PSoC4/CyLib.c **** 
2776:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2777:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2778:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2779:Generated_Source\PSoC4/CyLib.c **** *
2780:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2781:Generated_Source\PSoC4/CyLib.c **** *
2782:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2783:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2784:Generated_Source\PSoC4/CyLib.c **** {
  25              		.loc 1 2784 0
  26              		.cfi_startproc
  27 0000 38B5     		push	{r3, r4, r5, lr}
  28              		.cfi_def_cfa_offset 16
  29              		.cfi_offset 3, -16
  30              		.cfi_offset 4, -12
  31              		.cfi_offset 5, -8
  32              		.cfi_offset 14, -4
  33              	.LBB60:
  34              	.LBB61:
2700:Generated_Source\PSoC4/CyLib.c **** }
  35              		.loc 1 2700 0
  36 0002 074B     		ldr	r3, .L12
  37 0004 1B68     		ldr	r3, [r3]
  38              	.LBE61:
  39              	.LBE60:
2785:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2786:Generated_Source\PSoC4/CyLib.c **** 
2787:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2788:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
  40              		.loc 1 2788 0
  41 0006 DB03     		lsl	r3, r3, #15
  42 0008 00D4     		bmi	.L11
  43              	.L1:
2789:Generated_Source\PSoC4/CyLib.c ****     {
2790:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2791:Generated_Source\PSoC4/CyLib.c ****         {
2792:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
2793:Generated_Source\PSoC4/CyLib.c ****             {
2794:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
2795:Generated_Source\PSoC4/CyLib.c ****             }
2796:Generated_Source\PSoC4/CyLib.c ****         }
2797:Generated_Source\PSoC4/CyLib.c ****     }
2798:Generated_Source\PSoC4/CyLib.c **** }
  44              		.loc 1 2798 0
  45              		@ sp needed
  46 000a 38BD     		pop	{r3, r4, r5, pc}
  47              	.L11:
  48 000c 0024     		mov	r4, #0
  49 000e 054D     		ldr	r5, .L12+4
  50              	.L2:
  51              	.LBB62:
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 51


2792:Generated_Source\PSoC4/CyLib.c ****             {
  52              		.loc 1 2792 0
  53 0010 2B59     		ldr	r3, [r5, r4]
  54 0012 002B     		cmp	r3, #0
  55 0014 00D0     		beq	.L3
2794:Generated_Source\PSoC4/CyLib.c ****             }
  56              		.loc 1 2794 0
  57 0016 9847     		blx	r3
  58              	.LVL0:
  59              	.L3:
  60 0018 0434     		add	r4, r4, #4
2790:Generated_Source\PSoC4/CyLib.c ****         {
  61              		.loc 1 2790 0
  62 001a 142C     		cmp	r4, #20
  63 001c F8D1     		bne	.L2
  64 001e F4E7     		b	.L1
  65              	.L13:
  66              		.align	2
  67              	.L12:
  68 0020 10E000E0 		.word	-536813552
  69 0024 00000000 		.word	.LANCHOR0
  70              	.LBE62:
  71              		.cfi_endproc
  72              	.LFE42:
  73              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
  74              		.section	.text.CySysClkImoStart,"ax",%progbits
  75              		.align	2
  76              		.global	CySysClkImoStart
  77              		.code	16
  78              		.thumb_func
  79              		.type	CySysClkImoStart, %function
  80              	CySysClkImoStart:
  81              	.LFB0:
 105:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  82              		.loc 1 105 0
  83              		.cfi_startproc
 106:Generated_Source\PSoC4/CyLib.c **** 
  84              		.loc 1 106 0
  85 0000 8021     		mov	r1, #128
  86 0002 034A     		ldr	r2, .L15
  87 0004 0906     		lsl	r1, r1, #24
  88 0006 1368     		ldr	r3, [r2]
 121:Generated_Source\PSoC4/CyLib.c **** 
  89              		.loc 1 121 0
  90              		@ sp needed
 106:Generated_Source\PSoC4/CyLib.c **** 
  91              		.loc 1 106 0
  92 0008 0B43     		orr	r3, r1
  93 000a 1360     		str	r3, [r2]
 121:Generated_Source\PSoC4/CyLib.c **** 
  94              		.loc 1 121 0
  95 000c 7047     		bx	lr
  96              	.L16:
  97 000e C046     		.align	2
  98              	.L15:
  99 0010 08010B40 		.word	1074462984
 100              		.cfi_endproc
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 52


 101              	.LFE0:
 102              		.size	CySysClkImoStart, .-CySysClkImoStart
 103              		.section	.text.CySysClkImoStop,"ax",%progbits
 104              		.align	2
 105              		.global	CySysClkImoStop
 106              		.code	16
 107              		.thumb_func
 108              		.type	CySysClkImoStop, %function
 109              	CySysClkImoStop:
 110              	.LFB1:
 137:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 111              		.loc 1 137 0
 112              		.cfi_startproc
 146:Generated_Source\PSoC4/CyLib.c **** }
 113              		.loc 1 146 0
 114 0000 024A     		ldr	r2, .L18
 147:Generated_Source\PSoC4/CyLib.c **** 
 115              		.loc 1 147 0
 116              		@ sp needed
 146:Generated_Source\PSoC4/CyLib.c **** }
 117              		.loc 1 146 0
 118 0002 1368     		ldr	r3, [r2]
 119 0004 5B00     		lsl	r3, r3, #1
 120 0006 5B08     		lsr	r3, r3, #1
 121 0008 1360     		str	r3, [r2]
 147:Generated_Source\PSoC4/CyLib.c **** 
 122              		.loc 1 147 0
 123 000a 7047     		bx	lr
 124              	.L19:
 125              		.align	2
 126              	.L18:
 127 000c 08010B40 		.word	1074462984
 128              		.cfi_endproc
 129              	.LFE1:
 130              		.size	CySysClkImoStop, .-CySysClkImoStop
 131              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 132              		.align	2
 133              		.global	CySysClkWriteHfclkDirect
 134              		.code	16
 135              		.thumb_func
 136              		.type	CySysClkWriteHfclkDirect, %function
 137              	CySysClkWriteHfclkDirect:
 138              	.LFB2:
 427:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 139              		.loc 1 427 0
 140              		.cfi_startproc
 141              	.LVL1:
 142 0000 10B5     		push	{r4, lr}
 143              		.cfi_def_cfa_offset 8
 144              		.cfi_offset 4, -8
 145              		.cfi_offset 14, -4
 427:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 146              		.loc 1 427 0
 147 0002 041C     		mov	r4, r0
 431:Generated_Source\PSoC4/CyLib.c **** 
 148              		.loc 1 431 0
 149 0004 FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 53


 150              	.LVL2:
 434:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 151              		.loc 1 434 0
 152 0008 0723     		mov	r3, #7
 153 000a 0449     		ldr	r1, .L21
 451:Generated_Source\PSoC4/CyLib.c **** 
 154              		.loc 1 451 0
 155              		@ sp needed
 434:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 156              		.loc 1 434 0
 157 000c 0A68     		ldr	r2, [r1]
 158 000e 9A43     		bic	r2, r3
 159              	.LVL3:
 445:Generated_Source\PSoC4/CyLib.c ****     }
 160              		.loc 1 445 0
 161 0010 2340     		and	r3, r4
 162 0012 1343     		orr	r3, r2
 163              	.LVL4:
 448:Generated_Source\PSoC4/CyLib.c **** 
 164              		.loc 1 448 0
 165 0014 0B60     		str	r3, [r1]
 450:Generated_Source\PSoC4/CyLib.c **** }
 166              		.loc 1 450 0
 167 0016 FFF7FEFF 		bl	CyExitCriticalSection
 168              	.LVL5:
 169              	.LVL6:
 451:Generated_Source\PSoC4/CyLib.c **** 
 170              		.loc 1 451 0
 171 001a 10BD     		pop	{r4, pc}
 172              	.L22:
 173              		.align	2
 174              	.L21:
 175 001c 00010B40 		.word	1074462976
 176              		.cfi_endproc
 177              	.LFE2:
 178              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 179              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 180              		.align	2
 181              		.global	CySysClkGetSysclkSource
 182              		.code	16
 183              		.thumb_func
 184              		.type	CySysClkGetSysclkSource, %function
 185              	CySysClkGetSysclkSource:
 186              	.LFB3:
 464:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 187              		.loc 1 464 0
 188              		.cfi_startproc
 189 0000 10B5     		push	{r4, lr}
 190              		.cfi_def_cfa_offset 8
 191              		.cfi_offset 4, -8
 192              		.cfi_offset 14, -4
 468:Generated_Source\PSoC4/CyLib.c **** 
 193              		.loc 1 468 0
 194 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 195              	.LVL7:
 478:Generated_Source\PSoC4/CyLib.c ****     }
 196              		.loc 1 478 0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 54


 197 0006 034B     		ldr	r3, .L24
 484:Generated_Source\PSoC4/CyLib.c **** 
 198              		.loc 1 484 0
 199              		@ sp needed
 478:Generated_Source\PSoC4/CyLib.c ****     }
 200              		.loc 1 478 0
 201 0008 1C68     		ldr	r4, [r3]
 202              	.LVL8:
 481:Generated_Source\PSoC4/CyLib.c **** 
 203              		.loc 1 481 0
 204 000a FFF7FEFF 		bl	CyExitCriticalSection
 205              	.LVL9:
 478:Generated_Source\PSoC4/CyLib.c ****     }
 206              		.loc 1 478 0
 207 000e 0720     		mov	r0, #7
 208 0010 2040     		and	r0, r4
 209              	.LVL10:
 484:Generated_Source\PSoC4/CyLib.c **** 
 210              		.loc 1 484 0
 211 0012 10BD     		pop	{r4, pc}
 212              	.L25:
 213              		.align	2
 214              	.L24:
 215 0014 00010B40 		.word	1074462976
 216              		.cfi_endproc
 217              	.LFE3:
 218              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 219              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 220              		.align	2
 221              		.global	CySysClkWriteSysclkDiv
 222              		.code	16
 223              		.thumb_func
 224              		.type	CySysClkWriteSysclkDiv, %function
 225              	CySysClkWriteSysclkDiv:
 226              	.LFB4:
 519:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 227              		.loc 1 519 0
 228              		.cfi_startproc
 229              	.LVL11:
 230 0000 10B5     		push	{r4, lr}
 231              		.cfi_def_cfa_offset 8
 232              		.cfi_offset 4, -8
 233              		.cfi_offset 14, -4
 519:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 234              		.loc 1 519 0
 235 0002 041C     		mov	r4, r0
 522:Generated_Source\PSoC4/CyLib.c **** 
 236              		.loc 1 522 0
 237 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 238              	.LVL12:
 524:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 239              		.loc 1 524 0
 240 0008 0722     		mov	r2, #7
 526:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 241              		.loc 1 526 0
 242 000a 0549     		ldr	r1, .L27
 524:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 55


 243              		.loc 1 524 0
 244 000c 1440     		and	r4, r2
 245              	.LVL13:
 526:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 246              		.loc 1 526 0
 247 000e 0B68     		ldr	r3, [r1]
 248 0010 044A     		ldr	r2, .L27+4
 524:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 249              		.loc 1 524 0
 250 0012 E404     		lsl	r4, r4, #19
 526:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 251              		.loc 1 526 0
 252 0014 1340     		and	r3, r2
 525:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 253              		.loc 1 525 0
 254 0016 2343     		orr	r3, r4
 524:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 255              		.loc 1 524 0
 256 0018 0B60     		str	r3, [r1]
 529:Generated_Source\PSoC4/CyLib.c **** }
 257              		.loc 1 529 0
 258 001a FFF7FEFF 		bl	CyExitCriticalSection
 259              	.LVL14:
 530:Generated_Source\PSoC4/CyLib.c **** 
 260              		.loc 1 530 0
 261              		@ sp needed
 262 001e 10BD     		pop	{r4, pc}
 263              	.L28:
 264              		.align	2
 265              	.L27:
 266 0020 00010B40 		.word	1074462976
 267 0024 FFFFC7FF 		.word	-3670017
 268              		.cfi_endproc
 269              	.LFE4:
 270              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 271              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 272              		.align	2
 273              		.global	CySysClkWriteImoFreq
 274              		.code	16
 275              		.thumb_func
 276              		.type	CySysClkWriteImoFreq, %function
 277              	CySysClkWriteImoFreq:
 278              	.LFB5:
 577:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 279              		.loc 1 577 0
 280              		.cfi_startproc
 281              	.LVL15:
 282 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 283              		.cfi_def_cfa_offset 24
 284              		.cfi_offset 3, -24
 285              		.cfi_offset 4, -20
 286              		.cfi_offset 5, -16
 287              		.cfi_offset 6, -12
 288              		.cfi_offset 7, -8
 289              		.cfi_offset 14, -4
 290 0002 5F46     		mov	r7, fp
 291 0004 4D46     		mov	r5, r9
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 56


 292 0006 4446     		mov	r4, r8
 293 0008 5646     		mov	r6, r10
 294 000a F0B4     		push	{r4, r5, r6, r7}
 295              		.cfi_def_cfa_offset 40
 296              		.cfi_offset 8, -40
 297              		.cfi_offset 9, -36
 298              		.cfi_offset 10, -32
 299              		.cfi_offset 11, -28
 577:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 300              		.loc 1 577 0
 301 000c 041C     		mov	r4, r0
 600:Generated_Source\PSoC4/CyLib.c **** 
 302              		.loc 1 600 0
 303 000e FFF7FEFF 		bl	CyEnterCriticalSection
 304              	.LVL16:
 650:Generated_Source\PSoC4/CyLib.c ****         {
 305              		.loc 1 650 0
 306 0012 E51E     		sub	r5, r4, #3
 600:Generated_Source\PSoC4/CyLib.c **** 
 307              		.loc 1 600 0
 308 0014 071C     		mov	r7, r0
 309              	.LVL17:
 650:Generated_Source\PSoC4/CyLib.c ****         {
 310              		.loc 1 650 0
 311 0016 2D2D     		cmp	r5, #45
 312 0018 3BD8     		bhi	.L30
 652:Generated_Source\PSoC4/CyLib.c ****             {
 313              		.loc 1 652 0
 314 001a 484B     		ldr	r3, .L42
 315 001c 1B78     		ldrb	r3, [r3]
 316 001e 9C42     		cmp	r4, r3
 317 0020 41D8     		bhi	.L31
 654:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 318              		.loc 1 654 0
 319 0022 474B     		ldr	r3, .L42+4
 320 0024 1B78     		ldrb	r3, [r3]
 321 0026 DBB2     		uxtb	r3, r3
 322 0028 9A46     		mov	r10, r3
 323              	.LVL18:
 655:Generated_Source\PSoC4/CyLib.c ****             }
 324              		.loc 1 655 0
 325 002a 464B     		ldr	r3, .L42+8
 326 002c 1B78     		ldrb	r3, [r3]
 327 002e DBB2     		uxtb	r3, r3
 328 0030 9946     		mov	r9, r3
 329              	.LVL19:
 330              	.L32:
 679:Generated_Source\PSoC4/CyLib.c **** 
 331              		.loc 1 679 0
 332 0032 454B     		ldr	r3, .L42+12
 333 0034 9B46     		mov	fp, r3
 334 0036 5B5D     		ldrb	r3, [r3, r5]
 335 0038 9846     		mov	r8, r3
 336              	.LVL20:
 691:Generated_Source\PSoC4/CyLib.c ****             {
 337              		.loc 1 691 0
 338 003a 2F2B     		cmp	r3, #47
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 57


 339 003c 01D9     		bls	.L36
 691:Generated_Source\PSoC4/CyLib.c ****             {
 340              		.loc 1 691 0 is_stmt 0 discriminator 1
 341 003e 2A2C     		cmp	r4, #42
 342 0040 4BD8     		bhi	.L40
 343              	.L36:
 703:Generated_Source\PSoC4/CyLib.c ****             }
 344              		.loc 1 703 0 is_stmt 1
 345 0042 3F26     		mov	r6, #63
 346 0044 414B     		ldr	r3, .L42+16
 347              	.LVL21:
 348 0046 1A68     		ldr	r2, [r3]
 349 0048 1640     		and	r6, r2
 350              	.LVL22:
 715:Generated_Source\PSoC4/CyLib.c ****             {
 351              		.loc 1 715 0
 352 004a B045     		cmp	r8, r6
 353 004c 04D2     		bcs	.L38
 718:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 354              		.loc 1 718 0
 355 004e 4246     		mov	r2, r8
 719:Generated_Source\PSoC4/CyLib.c ****             }
 356              		.loc 1 719 0
 357 0050 0520     		mov	r0, #5
 718:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 358              		.loc 1 718 0
 359 0052 1A60     		str	r2, [r3]
 719:Generated_Source\PSoC4/CyLib.c ****             }
 360              		.loc 1 719 0
 361 0054 FFF7FEFF 		bl	CyDelayCycles
 362              	.LVL23:
 363              	.L38:
 738:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 364              		.loc 1 738 0
 365 0058 3D4B     		ldr	r3, .L42+20
 742:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 366              		.loc 1 742 0
 367 005a 3E4A     		ldr	r2, .L42+24
 738:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 368              		.loc 1 738 0
 369 005c 9C46     		mov	ip, r3
 370 005e 6444     		add	r4, r4, ip
 371              	.LVL24:
 372 0060 2378     		ldrb	r3, [r4]
 373 0062 DBB2     		uxtb	r3, r3
 374              	.LVL25:
 742:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 375              		.loc 1 742 0
 376 0064 1360     		str	r3, [r2]
 743:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 377              		.loc 1 743 0
 378 0066 5246     		mov	r2, r10
 379 0068 3B4B     		ldr	r3, .L42+28
 380              	.LVL26:
 381 006a 1A60     		str	r2, [r3]
 382              	.LVL27:
 744:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 58


 383              		.loc 1 744 0
 384 006c 4A46     		mov	r2, r9
 385 006e 3B4B     		ldr	r3, .L42+32
 386 0070 1A60     		str	r2, [r3]
 387              	.LVL28:
 388              	.LBB63:
 389              	.LBB64:
2435:Generated_Source\PSoC4/CyLib.c **** }
 390              		.loc 1 2435 0
 391 0072 3B4B     		ldr	r3, .L42+36
 392 0074 1B78     		ldrb	r3, [r3]
 393 0076 9800     		lsl	r0, r3, #2
 394 0078 C018     		add	r0, r0, r3
 395 007a FFF7FEFF 		bl	CyDelayCycles
 396              	.LVL29:
 397              	.LBE64:
 398              	.LBE63:
 747:Generated_Source\PSoC4/CyLib.c ****             {
 399              		.loc 1 747 0
 400 007e B045     		cmp	r8, r6
 401 0080 08D9     		bls	.L39
 402              	.LVL30:
 403              	.L37:
 750:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 404              		.loc 1 750 0
 405 0082 5B46     		mov	r3, fp
 406 0084 5A5D     		ldrb	r2, [r3, r5]
 407 0086 314B     		ldr	r3, .L42+16
 751:Generated_Source\PSoC4/CyLib.c ****             }
 408              		.loc 1 751 0
 409 0088 0520     		mov	r0, #5
 750:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 410              		.loc 1 750 0
 411 008a 1A60     		str	r2, [r3]
 751:Generated_Source\PSoC4/CyLib.c ****             }
 412              		.loc 1 751 0
 413 008c FFF7FEFF 		bl	CyDelayCycles
 414              	.LVL31:
 415 0090 00E0     		b	.L39
 416              	.LVL32:
 417              	.L30:
 418              	.LBB66:
 419              	.LBB67:
2376:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
 420              		.loc 1 2376 0
 421              	@ 2376 "Generated_Source\PSoC4\CyLib.c" 1
 422 0092 01BE     		    bkpt    1
 423              	@ 0 "" 2
 424              	.LVL33:
 425              		.code	16
 426              	.L39:
 427              	.LBE67:
 428              	.LBE66:
 776:Generated_Source\PSoC4/CyLib.c ****     }
 429              		.loc 1 776 0
 430 0094 381C     		mov	r0, r7
 431 0096 FFF7FEFF 		bl	CyExitCriticalSection
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 59


 432              	.LVL34:
 777:Generated_Source\PSoC4/CyLib.c **** 
 433              		.loc 1 777 0
 434              		@ sp needed
 435              	.LVL35:
 436              	.LVL36:
 437 009a 3CBC     		pop	{r2, r3, r4, r5}
 438 009c 9046     		mov	r8, r2
 439 009e 9946     		mov	r9, r3
 440 00a0 A246     		mov	r10, r4
 441 00a2 AB46     		mov	fp, r5
 442 00a4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 443              	.LVL37:
 444              	.L31:
 657:Generated_Source\PSoC4/CyLib.c ****             {
 445              		.loc 1 657 0
 446 00a6 2F4B     		ldr	r3, .L42+40
 447 00a8 1B78     		ldrb	r3, [r3]
 448 00aa 9C42     		cmp	r4, r3
 449 00ac 0CD9     		bls	.L41
 662:Generated_Source\PSoC4/CyLib.c ****             {
 450              		.loc 1 662 0
 451 00ae 2E4B     		ldr	r3, .L42+44
 452 00b0 1B78     		ldrb	r3, [r3]
 453 00b2 9C42     		cmp	r4, r3
 454 00b4 2BD8     		bhi	.L34
 664:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 455              		.loc 1 664 0
 456 00b6 2D4B     		ldr	r3, .L42+48
 457 00b8 1B78     		ldrb	r3, [r3]
 458 00ba DBB2     		uxtb	r3, r3
 459 00bc 9A46     		mov	r10, r3
 460              	.LVL38:
 665:Generated_Source\PSoC4/CyLib.c ****             }
 461              		.loc 1 665 0
 462 00be 2C4B     		ldr	r3, .L42+52
 463 00c0 1B78     		ldrb	r3, [r3]
 464 00c2 DBB2     		uxtb	r3, r3
 465 00c4 9946     		mov	r9, r3
 466              	.LVL39:
 467 00c6 B4E7     		b	.L32
 468              	.LVL40:
 469              	.L41:
 659:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 470              		.loc 1 659 0
 471 00c8 2A4B     		ldr	r3, .L42+56
 472 00ca 1B78     		ldrb	r3, [r3]
 473 00cc DBB2     		uxtb	r3, r3
 474 00ce 9A46     		mov	r10, r3
 475              	.LVL41:
 660:Generated_Source\PSoC4/CyLib.c ****             }
 476              		.loc 1 660 0
 477 00d0 294B     		ldr	r3, .L42+60
 478 00d2 1B78     		ldrb	r3, [r3]
 479 00d4 DBB2     		uxtb	r3, r3
 480 00d6 9946     		mov	r9, r3
 481              	.LVL42:
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 60


 482 00d8 ABE7     		b	.L32
 483              	.LVL43:
 484              	.L40:
 694:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 485              		.loc 1 694 0
 486 00da 1922     		mov	r2, #25
 487 00dc 1B4B     		ldr	r3, .L42+16
 488              	.LVL44:
 697:Generated_Source\PSoC4/CyLib.c **** 
 489              		.loc 1 697 0
 490 00de 0520     		mov	r0, #5
 694:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 491              		.loc 1 694 0
 492 00e0 1A60     		str	r2, [r3]
 697:Generated_Source\PSoC4/CyLib.c **** 
 493              		.loc 1 697 0
 494 00e2 FFF7FEFF 		bl	CyDelayCycles
 495              	.LVL45:
 738:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 496              		.loc 1 738 0
 497 00e6 1A4B     		ldr	r3, .L42+20
 742:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 498              		.loc 1 742 0
 499 00e8 1A4A     		ldr	r2, .L42+24
 738:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 500              		.loc 1 738 0
 501 00ea 9C46     		mov	ip, r3
 502 00ec 6444     		add	r4, r4, ip
 503              	.LVL46:
 504 00ee 2378     		ldrb	r3, [r4]
 505 00f0 DBB2     		uxtb	r3, r3
 506              	.LVL47:
 742:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 507              		.loc 1 742 0
 508 00f2 1360     		str	r3, [r2]
 743:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 509              		.loc 1 743 0
 510 00f4 5246     		mov	r2, r10
 511 00f6 184B     		ldr	r3, .L42+28
 512              	.LVL48:
 513 00f8 1A60     		str	r2, [r3]
 514              	.LVL49:
 744:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 515              		.loc 1 744 0
 516 00fa 4A46     		mov	r2, r9
 517 00fc 174B     		ldr	r3, .L42+32
 518 00fe 1A60     		str	r2, [r3]
 519              	.LVL50:
 520              	.LBB68:
 521              	.LBB65:
2435:Generated_Source\PSoC4/CyLib.c **** }
 522              		.loc 1 2435 0
 523 0100 174B     		ldr	r3, .L42+36
 524 0102 1B78     		ldrb	r3, [r3]
 525 0104 9800     		lsl	r0, r3, #2
 526 0106 C018     		add	r0, r0, r3
 527 0108 FFF7FEFF 		bl	CyDelayCycles
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 61


 528              	.LVL51:
 529 010c B9E7     		b	.L37
 530              	.LVL52:
 531              	.L34:
 532              	.LBE65:
 533              	.LBE68:
 667:Generated_Source\PSoC4/CyLib.c ****             {
 534              		.loc 1 667 0
 535 010e 1B4B     		ldr	r3, .L42+64
 536 0110 1B78     		ldrb	r3, [r3]
 537 0112 9C42     		cmp	r4, r3
 538 0114 08D8     		bhi	.L35
 669:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 539              		.loc 1 669 0
 540 0116 1A4B     		ldr	r3, .L42+68
 541 0118 1B78     		ldrb	r3, [r3]
 542 011a DBB2     		uxtb	r3, r3
 543 011c 9A46     		mov	r10, r3
 544              	.LVL53:
 670:Generated_Source\PSoC4/CyLib.c ****             }
 545              		.loc 1 670 0
 546 011e 194B     		ldr	r3, .L42+72
 547 0120 1B78     		ldrb	r3, [r3]
 548 0122 DBB2     		uxtb	r3, r3
 549 0124 9946     		mov	r9, r3
 550              	.LVL54:
 551 0126 84E7     		b	.L32
 552              	.LVL55:
 553              	.L35:
 674:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 554              		.loc 1 674 0
 555 0128 174B     		ldr	r3, .L42+76
 556 012a 1B78     		ldrb	r3, [r3]
 557 012c DBB2     		uxtb	r3, r3
 558 012e 9A46     		mov	r10, r3
 559              	.LVL56:
 675:Generated_Source\PSoC4/CyLib.c ****             }
 560              		.loc 1 675 0
 561 0130 074B     		ldr	r3, .L42+20
 562 0132 1B78     		ldrb	r3, [r3]
 563 0134 DBB2     		uxtb	r3, r3
 564 0136 9946     		mov	r9, r3
 565              	.LVL57:
 566 0138 7BE7     		b	.L32
 567              	.L43:
 568 013a C046     		.align	2
 569              	.L42:
 570 013c C0F1FF0F 		.word	268431808
 571 0140 C1F1FF0F 		.word	268431809
 572 0144 C2F1FF0F 		.word	268431810
 573 0148 00000000 		.word	.LANCHOR1
 574 014c 2CFF0B40 		.word	1074528044
 575 0150 CDF1FF0F 		.word	268431821
 576 0154 28FF0B40 		.word	1074528040
 577 0158 1CFF0B40 		.word	1074528028
 578 015c 20FF0B40 		.word	1074528032
 579 0160 00000000 		.word	.LANCHOR2
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 62


 580 0164 C3F1FF0F 		.word	268431811
 581 0168 C6F1FF0F 		.word	268431814
 582 016c C7F1FF0F 		.word	268431815
 583 0170 C8F1FF0F 		.word	268431816
 584 0174 C4F1FF0F 		.word	268431812
 585 0178 C5F1FF0F 		.word	268431813
 586 017c C9F1FF0F 		.word	268431817
 587 0180 CAF1FF0F 		.word	268431818
 588 0184 CBF1FF0F 		.word	268431819
 589 0188 CCF1FF0F 		.word	268431820
 590              		.cfi_endproc
 591              	.LFE5:
 592              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 593              		.section	.text.CySysLvdEnable,"ax",%progbits
 594              		.align	2
 595              		.global	CySysLvdEnable
 596              		.code	16
 597              		.thumb_func
 598              		.type	CySysLvdEnable, %function
 599              	CySysLvdEnable:
 600              	.LFB6:
1970:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 601              		.loc 1 1970 0
 602              		.cfi_startproc
 603              	.LVL58:
 604 0000 38B5     		push	{r3, r4, r5, lr}
 605              		.cfi_def_cfa_offset 16
 606              		.cfi_offset 3, -16
 607              		.cfi_offset 4, -12
 608              		.cfi_offset 5, -8
 609              		.cfi_offset 14, -4
1972:Generated_Source\PSoC4/CyLib.c **** 
 610              		.loc 1 1972 0
 611 0002 0224     		mov	r4, #2
1976:Generated_Source\PSoC4/CyLib.c **** 
 612              		.loc 1 1976 0
 613 0004 1E21     		mov	r1, #30
1972:Generated_Source\PSoC4/CyLib.c **** 
 614              		.loc 1 1972 0
 615 0006 0E4D     		ldr	r5, .L45
1975:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 616              		.loc 1 1975 0
 617 0008 0E4A     		ldr	r2, .L45+4
1972:Generated_Source\PSoC4/CyLib.c **** 
 618              		.loc 1 1972 0
 619 000a 2B68     		ldr	r3, [r5]
1976:Generated_Source\PSoC4/CyLib.c **** 
 620              		.loc 1 1976 0
 621 000c 4000     		lsl	r0, r0, #1
 622              	.LVL59:
1972:Generated_Source\PSoC4/CyLib.c **** 
 623              		.loc 1 1972 0
 624 000e A343     		bic	r3, r4
 625 0010 2B60     		str	r3, [r5]
1975:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 626              		.loc 1 1975 0
 627 0012 1368     		ldr	r3, [r2]
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 63


1976:Generated_Source\PSoC4/CyLib.c **** 
 628              		.loc 1 1976 0
 629 0014 0840     		and	r0, r1
1975:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 630              		.loc 1 1975 0
 631 0016 8B43     		bic	r3, r1
 632 0018 1843     		orr	r0, r3
1979:Generated_Source\PSoC4/CyLib.c **** 
 633              		.loc 1 1979 0
 634 001a 0123     		mov	r3, #1
1975:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 635              		.loc 1 1975 0
 636 001c 1060     		str	r0, [r2]
1979:Generated_Source\PSoC4/CyLib.c **** 
 637              		.loc 1 1979 0
 638 001e 1168     		ldr	r1, [r2]
1989:Generated_Source\PSoC4/CyLib.c **** 
 639              		.loc 1 1989 0
 640              		@ sp needed
1979:Generated_Source\PSoC4/CyLib.c **** 
 641              		.loc 1 1979 0
 642 0020 0B43     		orr	r3, r1
 643 0022 1360     		str	r3, [r2]
 644              	.LVL60:
 645              	.LBB69:
 646              	.LBB70:
2435:Generated_Source\PSoC4/CyLib.c **** }
 647              		.loc 1 2435 0
 648 0024 084B     		ldr	r3, .L45+8
 649 0026 1878     		ldrb	r0, [r3]
 650 0028 FA23     		mov	r3, #250
 651 002a 9B00     		lsl	r3, r3, #2
 652 002c 5843     		mul	r0, r3
 653 002e FFF7FEFF 		bl	CyDelayCycles
 654              	.LVL61:
 655              	.LBE70:
 656              	.LBE69:
 657              	.LBB71:
 658              	.LBB72:
2035:Generated_Source\PSoC4/CyLib.c ****     }
 659              		.loc 1 2035 0
 660 0032 064B     		ldr	r3, .L45+12
 661 0034 1C60     		str	r4, [r3]
 662              	.LBE72:
 663              	.LBE71:
1988:Generated_Source\PSoC4/CyLib.c ****     }
 664              		.loc 1 1988 0
 665 0036 2B68     		ldr	r3, [r5]
 666 0038 1C43     		orr	r4, r3
 667 003a 2C60     		str	r4, [r5]
1989:Generated_Source\PSoC4/CyLib.c **** 
 668              		.loc 1 1989 0
 669 003c 38BD     		pop	{r3, r4, r5, pc}
 670              	.L46:
 671 003e C046     		.align	2
 672              	.L45:
 673 0040 08000B40 		.word	1074462728
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 64


 674 0044 18000B40 		.word	1074462744
 675 0048 00000000 		.word	.LANCHOR2
 676 004c 04000B40 		.word	1074462724
 677              		.cfi_endproc
 678              	.LFE6:
 679              		.size	CySysLvdEnable, .-CySysLvdEnable
 680              		.section	.text.CySysLvdDisable,"ax",%progbits
 681              		.align	2
 682              		.global	CySysLvdDisable
 683              		.code	16
 684              		.thumb_func
 685              		.type	CySysLvdDisable, %function
 686              	CySysLvdDisable:
 687              	.LFB7:
2000:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 688              		.loc 1 2000 0
 689              		.cfi_startproc
2001:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 690              		.loc 1 2001 0
 691 0000 0221     		mov	r1, #2
 692 0002 054A     		ldr	r2, .L48
2003:Generated_Source\PSoC4/CyLib.c **** 
 693              		.loc 1 2003 0
 694              		@ sp needed
2001:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 695              		.loc 1 2001 0
 696 0004 1368     		ldr	r3, [r2]
 697 0006 8B43     		bic	r3, r1
 698 0008 1360     		str	r3, [r2]
2002:Generated_Source\PSoC4/CyLib.c ****     }
 699              		.loc 1 2002 0
 700 000a 044A     		ldr	r2, .L48+4
 701 000c 0139     		sub	r1, r1, #1
 702 000e 1368     		ldr	r3, [r2]
 703 0010 8B43     		bic	r3, r1
 704 0012 1360     		str	r3, [r2]
2003:Generated_Source\PSoC4/CyLib.c **** 
 705              		.loc 1 2003 0
 706 0014 7047     		bx	lr
 707              	.L49:
 708 0016 C046     		.align	2
 709              	.L48:
 710 0018 08000B40 		.word	1074462728
 711 001c 18000B40 		.word	1074462744
 712              		.cfi_endproc
 713              	.LFE7:
 714              		.size	CySysLvdDisable, .-CySysLvdDisable
 715              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 716              		.align	2
 717              		.global	CySysLvdGetInterruptSource
 718              		.code	16
 719              		.thumb_func
 720              		.type	CySysLvdGetInterruptSource, %function
 721              	CySysLvdGetInterruptSource:
 722              	.LFB8:
2018:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 723              		.loc 1 2018 0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 65


 724              		.cfi_startproc
2019:Generated_Source\PSoC4/CyLib.c ****     }
 725              		.loc 1 2019 0
 726 0000 0220     		mov	r0, #2
 727 0002 024B     		ldr	r3, .L51
2020:Generated_Source\PSoC4/CyLib.c **** 
 728              		.loc 1 2020 0
 729              		@ sp needed
2019:Generated_Source\PSoC4/CyLib.c ****     }
 730              		.loc 1 2019 0
 731 0004 1B68     		ldr	r3, [r3]
 732 0006 1840     		and	r0, r3
2020:Generated_Source\PSoC4/CyLib.c **** 
 733              		.loc 1 2020 0
 734 0008 7047     		bx	lr
 735              	.L52:
 736 000a C046     		.align	2
 737              	.L51:
 738 000c 04000B40 		.word	1074462724
 739              		.cfi_endproc
 740              	.LFE8:
 741              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 742              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 743              		.align	2
 744              		.global	CySysLvdClearInterrupt
 745              		.code	16
 746              		.thumb_func
 747              		.type	CySysLvdClearInterrupt, %function
 748              	CySysLvdClearInterrupt:
 749              	.LFB9:
2034:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 750              		.loc 1 2034 0
 751              		.cfi_startproc
2035:Generated_Source\PSoC4/CyLib.c ****     }
 752              		.loc 1 2035 0
 753 0000 0222     		mov	r2, #2
 754 0002 014B     		ldr	r3, .L54
2036:Generated_Source\PSoC4/CyLib.c **** 
 755              		.loc 1 2036 0
 756              		@ sp needed
2035:Generated_Source\PSoC4/CyLib.c ****     }
 757              		.loc 1 2035 0
 758 0004 1A60     		str	r2, [r3]
2036:Generated_Source\PSoC4/CyLib.c **** 
 759              		.loc 1 2036 0
 760 0006 7047     		bx	lr
 761              	.L55:
 762              		.align	2
 763              	.L54:
 764 0008 04000B40 		.word	1074462724
 765              		.cfi_endproc
 766              	.LFE9:
 767              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 768              		.section	.text.CySysGetResetReason,"ax",%progbits
 769              		.align	2
 770              		.global	CySysGetResetReason
 771              		.code	16
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 66


 772              		.thumb_func
 773              		.type	CySysGetResetReason, %function
 774              	CySysGetResetReason:
 775              	.LFB10:
2060:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
 776              		.loc 1 2060 0
 777              		.cfi_startproc
 778              	.LVL62:
2060:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
 779              		.loc 1 2060 0
 780 0000 021C     		mov	r2, r0
2063:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 781              		.loc 1 2063 0
 782 0002 1920     		mov	r0, #25
 783              	.LVL63:
2064:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 784              		.loc 1 2064 0
 785 0004 0249     		ldr	r1, .L57
2063:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 786              		.loc 1 2063 0
 787 0006 0240     		and	r2, r0
 788              	.LVL64:
2064:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 789              		.loc 1 2064 0
 790 0008 0B68     		ldr	r3, [r1]
 791              	.LVL65:
2069:Generated_Source\PSoC4/CyLib.c **** 
 792              		.loc 1 2069 0
 793              		@ sp needed
2064:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 794              		.loc 1 2064 0
 795 000a 1840     		and	r0, r3
 796              	.LVL66:
2066:Generated_Source\PSoC4/CyLib.c **** 
 797              		.loc 1 2066 0
 798 000c 0A60     		str	r2, [r1]
2069:Generated_Source\PSoC4/CyLib.c **** 
 799              		.loc 1 2069 0
 800 000e 7047     		bx	lr
 801              	.L58:
 802              		.align	2
 803              	.L57:
 804 0010 00030B40 		.word	1074463488
 805              		.cfi_endproc
 806              	.LFE10:
 807              		.size	CySysGetResetReason, .-CySysGetResetReason
 808              		.section	.text.CyDisableInts,"ax",%progbits
 809              		.align	2
 810              		.global	CyDisableInts
 811              		.code	16
 812              		.thumb_func
 813              		.type	CyDisableInts, %function
 814              	CyDisableInts:
 815              	.LFB11:
2083:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
 816              		.loc 1 2083 0
 817              		.cfi_startproc
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 67


2090:Generated_Source\PSoC4/CyLib.c **** 
 818              		.loc 1 2090 0
 819 0000 0122     		mov	r2, #1
2087:Generated_Source\PSoC4/CyLib.c **** 
 820              		.loc 1 2087 0
 821 0002 024B     		ldr	r3, .L60
2090:Generated_Source\PSoC4/CyLib.c **** 
 822              		.loc 1 2090 0
 823 0004 5242     		neg	r2, r2
2087:Generated_Source\PSoC4/CyLib.c **** 
 824              		.loc 1 2087 0
 825 0006 1868     		ldr	r0, [r3]
 826              	.LVL67:
2093:Generated_Source\PSoC4/CyLib.c **** 
 827              		.loc 1 2093 0
 828              		@ sp needed
2090:Generated_Source\PSoC4/CyLib.c **** 
 829              		.loc 1 2090 0
 830 0008 1A60     		str	r2, [r3]
2093:Generated_Source\PSoC4/CyLib.c **** 
 831              		.loc 1 2093 0
 832 000a 7047     		bx	lr
 833              	.L61:
 834              		.align	2
 835              	.L60:
 836 000c 80E100E0 		.word	-536813184
 837              		.cfi_endproc
 838              	.LFE11:
 839              		.size	CyDisableInts, .-CyDisableInts
 840              		.section	.text.CyEnableInts,"ax",%progbits
 841              		.align	2
 842              		.global	CyEnableInts
 843              		.code	16
 844              		.thumb_func
 845              		.type	CyEnableInts, %function
 846              	CyEnableInts:
 847              	.LFB12:
2106:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 848              		.loc 1 2106 0
 849              		.cfi_startproc
 850              	.LVL68:
2107:Generated_Source\PSoC4/CyLib.c **** }
 851              		.loc 1 2107 0
 852 0000 014B     		ldr	r3, .L63
2108:Generated_Source\PSoC4/CyLib.c **** 
 853              		.loc 1 2108 0
 854              		@ sp needed
2107:Generated_Source\PSoC4/CyLib.c **** }
 855              		.loc 1 2107 0
 856 0002 1860     		str	r0, [r3]
2108:Generated_Source\PSoC4/CyLib.c **** 
 857              		.loc 1 2108 0
 858 0004 7047     		bx	lr
 859              	.L64:
 860 0006 C046     		.align	2
 861              	.L63:
 862 0008 00E100E0 		.word	-536813312
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 68


 863              		.cfi_endproc
 864              	.LFE12:
 865              		.size	CyEnableInts, .-CyEnableInts
 866              		.section	.text.CyIntSetSysVector,"ax",%progbits
 867              		.align	2
 868              		.global	CyIntSetSysVector
 869              		.code	16
 870              		.thumb_func
 871              		.type	CyIntSetSysVector, %function
 872              	CyIntSetSysVector:
 873              	.LFB13:
2131:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 874              		.loc 1 2131 0
 875              		.cfi_startproc
 876              	.LVL69:
2135:Generated_Source\PSoC4/CyLib.c **** 
 877              		.loc 1 2135 0
 878 0000 0F28     		cmp	r0, #15
 879 0002 00D9     		bls	.L66
 880              	.LVL70:
 881              	.LBB73:
 882              	.LBB74:
2376:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
 883              		.loc 1 2376 0
 884              	@ 2376 "Generated_Source\PSoC4\CyLib.c" 1
 885 0004 01BE     		    bkpt    1
 886              	@ 0 "" 2
 887              	.LVL71:
 888              		.code	16
 889              	.L66:
 890              	.LBE74:
 891              	.LBE73:
2138:Generated_Source\PSoC4/CyLib.c **** 
 892              		.loc 1 2138 0
 893 0006 8023     		mov	r3, #128
 894 0008 8000     		lsl	r0, r0, #2
 895              	.LVL72:
 896 000a 9B05     		lsl	r3, r3, #22
 897 000c C318     		add	r3, r0, r3
 898 000e 1868     		ldr	r0, [r3]
 899              	.LVL73:
2144:Generated_Source\PSoC4/CyLib.c **** 
 900              		.loc 1 2144 0
 901              		@ sp needed
2141:Generated_Source\PSoC4/CyLib.c **** 
 902              		.loc 1 2141 0
 903 0010 1960     		str	r1, [r3]
2144:Generated_Source\PSoC4/CyLib.c **** 
 904              		.loc 1 2144 0
 905 0012 7047     		bx	lr
 906              		.cfi_endproc
 907              	.LFE13:
 908              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 909              		.section	.text.CyIntGetSysVector,"ax",%progbits
 910              		.align	2
 911              		.global	CyIntGetSysVector
 912              		.code	16
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 69


 913              		.thumb_func
 914              		.type	CyIntGetSysVector, %function
 915              	CyIntGetSysVector:
 916              	.LFB14:
2165:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 917              		.loc 1 2165 0
 918              		.cfi_startproc
 919              	.LVL74:
2168:Generated_Source\PSoC4/CyLib.c **** 
 920              		.loc 1 2168 0
 921 0000 0F28     		cmp	r0, #15
 922 0002 00D9     		bls	.L68
 923              	.LVL75:
 924              	.LBB75:
 925              	.LBB76:
2376:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
 926              		.loc 1 2376 0
 927              	@ 2376 "Generated_Source\PSoC4\CyLib.c" 1
 928 0004 01BE     		    bkpt    1
 929              	@ 0 "" 2
 930              	.LVL76:
 931              		.code	16
 932              	.L68:
 933              	.LBE76:
 934              	.LBE75:
2170:Generated_Source\PSoC4/CyLib.c **** }
 935              		.loc 1 2170 0
 936 0006 8023     		mov	r3, #128
 937 0008 9B05     		lsl	r3, r3, #22
 938 000a 9C46     		mov	ip, r3
 939 000c 8000     		lsl	r0, r0, #2
 940              	.LVL77:
 941 000e 6044     		add	r0, r0, ip
 942 0010 0068     		ldr	r0, [r0]
2171:Generated_Source\PSoC4/CyLib.c **** 
 943              		.loc 1 2171 0
 944              		@ sp needed
 945 0012 7047     		bx	lr
 946              		.cfi_endproc
 947              	.LFE14:
 948              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 949              		.section	.text.CyIntSetVector,"ax",%progbits
 950              		.align	2
 951              		.global	CyIntSetVector
 952              		.code	16
 953              		.thumb_func
 954              		.type	CyIntSetVector, %function
 955              	CyIntSetVector:
 956              	.LFB15:
2187:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 957              		.loc 1 2187 0
 958              		.cfi_startproc
 959              	.LVL78:
2191:Generated_Source\PSoC4/CyLib.c **** 
 960              		.loc 1 2191 0
 961 0000 1F28     		cmp	r0, #31
 962 0002 00D9     		bls	.L70
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 70


 963              	.LVL79:
 964              	.LBB77:
 965              	.LBB78:
2376:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
 966              		.loc 1 2376 0
 967              	@ 2376 "Generated_Source\PSoC4\CyLib.c" 1
 968 0004 01BE     		    bkpt    1
 969              	@ 0 "" 2
 970              	.LVL80:
 971              		.code	16
 972              	.L70:
 973              	.LBE78:
 974              	.LBE77:
2194:Generated_Source\PSoC4/CyLib.c **** 
 975              		.loc 1 2194 0
 976 0006 034B     		ldr	r3, .L71
 977 0008 8000     		lsl	r0, r0, #2
 978              	.LVL81:
 979 000a C318     		add	r3, r0, r3
 980 000c 1868     		ldr	r0, [r3]
 981              	.LVL82:
2200:Generated_Source\PSoC4/CyLib.c **** 
 982              		.loc 1 2200 0
 983              		@ sp needed
2197:Generated_Source\PSoC4/CyLib.c **** 
 984              		.loc 1 2197 0
 985 000e 1960     		str	r1, [r3]
2200:Generated_Source\PSoC4/CyLib.c **** 
 986              		.loc 1 2200 0
 987 0010 7047     		bx	lr
 988              	.L72:
 989 0012 C046     		.align	2
 990              	.L71:
 991 0014 40000020 		.word	536870976
 992              		.cfi_endproc
 993              	.LFE15:
 994              		.size	CyIntSetVector, .-CyIntSetVector
 995              		.section	.text.CyIntGetVector,"ax",%progbits
 996              		.align	2
 997              		.global	CyIntGetVector
 998              		.code	16
 999              		.thumb_func
 1000              		.type	CyIntGetVector, %function
 1001              	CyIntGetVector:
 1002              	.LFB16:
2215:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1003              		.loc 1 2215 0
 1004              		.cfi_startproc
 1005              	.LVL83:
2218:Generated_Source\PSoC4/CyLib.c **** 
 1006              		.loc 1 2218 0
 1007 0000 1F28     		cmp	r0, #31
 1008 0002 00D9     		bls	.L74
 1009              	.LVL84:
 1010              	.LBB79:
 1011              	.LBB80:
2376:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 71


 1012              		.loc 1 2376 0
 1013              	@ 2376 "Generated_Source\PSoC4\CyLib.c" 1
 1014 0004 01BE     		    bkpt    1
 1015              	@ 0 "" 2
 1016              	.LVL85:
 1017              		.code	16
 1018              	.L74:
 1019              	.LBE80:
 1020              	.LBE79:
2220:Generated_Source\PSoC4/CyLib.c **** }
 1021              		.loc 1 2220 0
 1022 0006 034B     		ldr	r3, .L75
 1023 0008 8000     		lsl	r0, r0, #2
 1024              	.LVL86:
 1025 000a 9C46     		mov	ip, r3
 1026 000c 6044     		add	r0, r0, ip
 1027 000e 0068     		ldr	r0, [r0]
2221:Generated_Source\PSoC4/CyLib.c **** 
 1028              		.loc 1 2221 0
 1029              		@ sp needed
 1030 0010 7047     		bx	lr
 1031              	.L76:
 1032 0012 C046     		.align	2
 1033              	.L75:
 1034 0014 40000020 		.word	536870976
 1035              		.cfi_endproc
 1036              	.LFE16:
 1037              		.size	CyIntGetVector, .-CyIntGetVector
 1038              		.section	.text.CyIntSetPriority,"ax",%progbits
 1039              		.align	2
 1040              		.global	CyIntSetPriority
 1041              		.code	16
 1042              		.thumb_func
 1043              		.type	CyIntSetPriority, %function
 1044              	CyIntSetPriority:
 1045              	.LFB17:
2234:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 1046              		.loc 1 2234 0
 1047              		.cfi_startproc
 1048              	.LVL87:
 1049 0000 38B5     		push	{r3, r4, r5, lr}
 1050              		.cfi_def_cfa_offset 16
 1051              		.cfi_offset 3, -16
 1052              		.cfi_offset 4, -12
 1053              		.cfi_offset 5, -8
 1054              		.cfi_offset 14, -4
2234:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 1055              		.loc 1 2234 0
 1056 0002 041C     		mov	r4, r0
 1057 0004 0D1E     		sub	r5, r1, #0
2239:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1058              		.loc 1 2239 0
 1059 0006 032D     		cmp	r5, #3
 1060 0008 00D9     		bls	.L78
 1061              	.LVL88:
 1062              	.LBB81:
 1063              	.LBB82:
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 72


2376:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
 1064              		.loc 1 2376 0
 1065              	@ 2376 "Generated_Source\PSoC4\CyLib.c" 1
 1066 000a 01BE     		    bkpt    1
 1067              	@ 0 "" 2
 1068              	.LVL89:
 1069              		.code	16
 1070              	.L78:
 1071              	.LBE82:
 1072              	.LBE81:
2240:Generated_Source\PSoC4/CyLib.c **** 
 1073              		.loc 1 2240 0
 1074 000c 1F2C     		cmp	r4, #31
 1075 000e 00D9     		bls	.L79
 1076              	.LVL90:
 1077              	.LBB83:
 1078              	.LBB84:
2376:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
 1079              		.loc 1 2376 0
 1080              	@ 2376 "Generated_Source\PSoC4\CyLib.c" 1
 1081 0010 01BE     		    bkpt    1
 1082              	@ 0 "" 2
 1083              	.LVL91:
 1084              		.code	16
 1085              	.L79:
 1086              	.LBE84:
 1087              	.LBE83:
2244:Generated_Source\PSoC4/CyLib.c **** 
 1088              		.loc 1 2244 0
 1089 0012 FFF7FEFF 		bl	CyEnterCriticalSection
 1090              	.LVL92:
2246:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 1091              		.loc 1 2246 0
 1092 0016 094A     		ldr	r2, .L80
 1093 0018 A308     		lsr	r3, r4, #2
 1094 001a 9446     		mov	ip, r2
2242:Generated_Source\PSoC4/CyLib.c **** 
 1095              		.loc 1 2242 0
 1096 001c 0322     		mov	r2, #3
 1097 001e 1440     		and	r4, r2
 1098              	.LVL93:
 1099 0020 E400     		lsl	r4, r4, #3
 1100 0022 0634     		add	r4, r4, #6
2247:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 1101              		.loc 1 2247 0
 1102 0024 A240     		lsl	r2, r2, r4
2246:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 1103              		.loc 1 2246 0
 1104 0026 9B00     		lsl	r3, r3, #2
 1105 0028 6344     		add	r3, r3, ip
 1106 002a 1968     		ldr	r1, [r3]
 1107              	.LVL94:
2248:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 1108              		.loc 1 2248 0
 1109 002c A540     		lsl	r5, r5, r4
2247:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 1110              		.loc 1 2247 0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 73


 1111 002e 9143     		bic	r1, r2
 1112              	.LVL95:
 1113 0030 0A1C     		mov	r2, r1
 1114              	.LVL96:
2248:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 1115              		.loc 1 2248 0
 1116 0032 2A43     		orr	r2, r5
 1117              	.LVL97:
2249:Generated_Source\PSoC4/CyLib.c **** 
 1118              		.loc 1 2249 0
 1119 0034 1A60     		str	r2, [r3]
2251:Generated_Source\PSoC4/CyLib.c **** }
 1120              		.loc 1 2251 0
 1121 0036 FFF7FEFF 		bl	CyExitCriticalSection
 1122              	.LVL98:
2252:Generated_Source\PSoC4/CyLib.c **** 
 1123              		.loc 1 2252 0
 1124              		@ sp needed
 1125 003a 38BD     		pop	{r3, r4, r5, pc}
 1126              	.L81:
 1127              		.align	2
 1128              	.L80:
 1129 003c 00E400E0 		.word	-536812544
 1130              		.cfi_endproc
 1131              	.LFE17:
 1132              		.size	CyIntSetPriority, .-CyIntSetPriority
 1133              		.section	.text.CyIntGetPriority,"ax",%progbits
 1134              		.align	2
 1135              		.global	CyIntGetPriority
 1136              		.code	16
 1137              		.thumb_func
 1138              		.type	CyIntGetPriority, %function
 1139              	CyIntGetPriority:
 1140              	.LFB18:
2268:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 1141              		.loc 1 2268 0
 1142              		.cfi_startproc
 1143              	.LVL99:
2271:Generated_Source\PSoC4/CyLib.c **** 
 1144              		.loc 1 2271 0
 1145 0000 1F28     		cmp	r0, #31
 1146 0002 00D9     		bls	.L83
 1147              	.LVL100:
 1148              	.LBB85:
 1149              	.LBB86:
2376:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
 1150              		.loc 1 2376 0
 1151              	@ 2376 "Generated_Source\PSoC4\CyLib.c" 1
 1152 0004 01BE     		    bkpt    1
 1153              	@ 0 "" 2
 1154              	.LVL101:
 1155              		.code	16
 1156              	.L83:
 1157              	.LBE86:
 1158              	.LBE85:
2273:Generated_Source\PSoC4/CyLib.c **** 
 1159              		.loc 1 2273 0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 74


 1160 0006 074A     		ldr	r2, .L84
 1161 0008 8308     		lsr	r3, r0, #2
 1162 000a 9446     		mov	ip, r2
 1163 000c 9B00     		lsl	r3, r3, #2
 1164 000e 6344     		add	r3, r3, ip
 1165 0010 1A68     		ldr	r2, [r3]
 1166              	.LVL102:
 1167 0012 0321     		mov	r1, #3
 1168 0014 031C     		mov	r3, r0
 1169 0016 0B40     		and	r3, r1
 1170 0018 DB00     		lsl	r3, r3, #3
 1171 001a 0633     		add	r3, r3, #6
 1172 001c DA40     		lsr	r2, r2, r3
 1173              	.LVL103:
2275:Generated_Source\PSoC4/CyLib.c **** }
 1174              		.loc 1 2275 0
 1175 001e 1140     		and	r1, r2
 1176 0020 081C     		mov	r0, r1
 1177              	.LVL104:
2276:Generated_Source\PSoC4/CyLib.c **** 
 1178              		.loc 1 2276 0
 1179              		@ sp needed
 1180 0022 7047     		bx	lr
 1181              	.L85:
 1182              		.align	2
 1183              	.L84:
 1184 0024 00E400E0 		.word	-536812544
 1185              		.cfi_endproc
 1186              	.LFE18:
 1187              		.size	CyIntGetPriority, .-CyIntGetPriority
 1188              		.section	.text.CyIntEnable,"ax",%progbits
 1189              		.align	2
 1190              		.global	CyIntEnable
 1191              		.code	16
 1192              		.thumb_func
 1193              		.type	CyIntEnable, %function
 1194              	CyIntEnable:
 1195              	.LFB19:
2289:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1196              		.loc 1 2289 0
 1197              		.cfi_startproc
 1198              	.LVL105:
2290:Generated_Source\PSoC4/CyLib.c **** }
 1199              		.loc 1 2290 0
 1200 0000 1F23     		mov	r3, #31
 1201 0002 1840     		and	r0, r3
 1202              	.LVL106:
 1203 0004 1E3B     		sub	r3, r3, #30
 1204 0006 8340     		lsl	r3, r3, r0
 1205 0008 181C     		mov	r0, r3
 1206 000a 014B     		ldr	r3, .L87
2291:Generated_Source\PSoC4/CyLib.c **** 
 1207              		.loc 1 2291 0
 1208              		@ sp needed
2290:Generated_Source\PSoC4/CyLib.c **** }
 1209              		.loc 1 2290 0
 1210 000c 1860     		str	r0, [r3]
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 75


2291:Generated_Source\PSoC4/CyLib.c **** 
 1211              		.loc 1 2291 0
 1212 000e 7047     		bx	lr
 1213              	.L88:
 1214              		.align	2
 1215              	.L87:
 1216 0010 00E100E0 		.word	-536813312
 1217              		.cfi_endproc
 1218              	.LFE19:
 1219              		.size	CyIntEnable, .-CyIntEnable
 1220              		.section	.text.CyIntGetState,"ax",%progbits
 1221              		.align	2
 1222              		.global	CyIntGetState
 1223              		.code	16
 1224              		.thumb_func
 1225              		.type	CyIntGetState, %function
 1226              	CyIntGetState:
 1227              	.LFB20:
2307:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
 1228              		.loc 1 2307 0
 1229              		.cfi_startproc
 1230              	.LVL107:
2309:Generated_Source\PSoC4/CyLib.c **** }
 1231              		.loc 1 2309 0
 1232 0000 1F22     		mov	r2, #31
 1233 0002 044B     		ldr	r3, .L90
 1234 0004 1040     		and	r0, r2
 1235              	.LVL108:
 1236 0006 1B68     		ldr	r3, [r3]
2310:Generated_Source\PSoC4/CyLib.c **** 
 1237              		.loc 1 2310 0
 1238              		@ sp needed
2309:Generated_Source\PSoC4/CyLib.c **** }
 1239              		.loc 1 2309 0
 1240 0008 C340     		lsr	r3, r3, r0
 1241 000a 181C     		mov	r0, r3
 1242 000c 0123     		mov	r3, #1
 1243 000e 1840     		and	r0, r3
2310:Generated_Source\PSoC4/CyLib.c **** 
 1244              		.loc 1 2310 0
 1245 0010 7047     		bx	lr
 1246              	.L91:
 1247 0012 C046     		.align	2
 1248              	.L90:
 1249 0014 00E100E0 		.word	-536813312
 1250              		.cfi_endproc
 1251              	.LFE20:
 1252              		.size	CyIntGetState, .-CyIntGetState
 1253              		.section	.text.CyIntDisable,"ax",%progbits
 1254              		.align	2
 1255              		.global	CyIntDisable
 1256              		.code	16
 1257              		.thumb_func
 1258              		.type	CyIntDisable, %function
 1259              	CyIntDisable:
 1260              	.LFB21:
2323:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 76


 1261              		.loc 1 2323 0
 1262              		.cfi_startproc
 1263              	.LVL109:
2324:Generated_Source\PSoC4/CyLib.c **** }
 1264              		.loc 1 2324 0
 1265 0000 1F23     		mov	r3, #31
 1266 0002 1840     		and	r0, r3
 1267              	.LVL110:
 1268 0004 1E3B     		sub	r3, r3, #30
 1269 0006 8340     		lsl	r3, r3, r0
 1270 0008 181C     		mov	r0, r3
 1271 000a 014B     		ldr	r3, .L93
2325:Generated_Source\PSoC4/CyLib.c **** 
 1272              		.loc 1 2325 0
 1273              		@ sp needed
2324:Generated_Source\PSoC4/CyLib.c **** }
 1274              		.loc 1 2324 0
 1275 000c 1860     		str	r0, [r3]
2325:Generated_Source\PSoC4/CyLib.c **** 
 1276              		.loc 1 2325 0
 1277 000e 7047     		bx	lr
 1278              	.L94:
 1279              		.align	2
 1280              	.L93:
 1281 0010 80E100E0 		.word	-536813184
 1282              		.cfi_endproc
 1283              	.LFE21:
 1284              		.size	CyIntDisable, .-CyIntDisable
 1285              		.section	.text.CyIntSetPending,"ax",%progbits
 1286              		.align	2
 1287              		.global	CyIntSetPending
 1288              		.code	16
 1289              		.thumb_func
 1290              		.type	CyIntSetPending, %function
 1291              	CyIntSetPending:
 1292              	.LFB22:
2337:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1293              		.loc 1 2337 0
 1294              		.cfi_startproc
 1295              	.LVL111:
2338:Generated_Source\PSoC4/CyLib.c **** }
 1296              		.loc 1 2338 0
 1297 0000 1F23     		mov	r3, #31
 1298 0002 1840     		and	r0, r3
 1299              	.LVL112:
 1300 0004 1E3B     		sub	r3, r3, #30
 1301 0006 8340     		lsl	r3, r3, r0
 1302 0008 181C     		mov	r0, r3
 1303 000a 014B     		ldr	r3, .L96
2339:Generated_Source\PSoC4/CyLib.c **** 
 1304              		.loc 1 2339 0
 1305              		@ sp needed
2338:Generated_Source\PSoC4/CyLib.c **** }
 1306              		.loc 1 2338 0
 1307 000c 1860     		str	r0, [r3]
2339:Generated_Source\PSoC4/CyLib.c **** 
 1308              		.loc 1 2339 0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 77


 1309 000e 7047     		bx	lr
 1310              	.L97:
 1311              		.align	2
 1312              	.L96:
 1313 0010 00E200E0 		.word	-536813056
 1314              		.cfi_endproc
 1315              	.LFE22:
 1316              		.size	CyIntSetPending, .-CyIntSetPending
 1317              		.section	.text.CyIntClearPending,"ax",%progbits
 1318              		.align	2
 1319              		.global	CyIntClearPending
 1320              		.code	16
 1321              		.thumb_func
 1322              		.type	CyIntClearPending, %function
 1323              	CyIntClearPending:
 1324              	.LFB23:
2352:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1325              		.loc 1 2352 0
 1326              		.cfi_startproc
 1327              	.LVL113:
2353:Generated_Source\PSoC4/CyLib.c **** }
 1328              		.loc 1 2353 0
 1329 0000 1F23     		mov	r3, #31
 1330 0002 1840     		and	r0, r3
 1331              	.LVL114:
 1332 0004 1E3B     		sub	r3, r3, #30
 1333 0006 8340     		lsl	r3, r3, r0
 1334 0008 181C     		mov	r0, r3
 1335 000a 014B     		ldr	r3, .L99
2354:Generated_Source\PSoC4/CyLib.c **** 
 1336              		.loc 1 2354 0
 1337              		@ sp needed
2353:Generated_Source\PSoC4/CyLib.c **** }
 1338              		.loc 1 2353 0
 1339 000c 1860     		str	r0, [r3]
2354:Generated_Source\PSoC4/CyLib.c **** 
 1340              		.loc 1 2354 0
 1341 000e 7047     		bx	lr
 1342              	.L100:
 1343              		.align	2
 1344              	.L99:
 1345 0010 80E200E0 		.word	-536812928
 1346              		.cfi_endproc
 1347              	.LFE23:
 1348              		.size	CyIntClearPending, .-CyIntClearPending
 1349              		.section	.text.CyHalt,"ax",%progbits
 1350              		.align	2
 1351              		.global	CyHalt
 1352              		.code	16
 1353              		.thumb_func
 1354              		.type	CyHalt, %function
 1355              	CyHalt:
 1356              	.LFB24:
2367:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
 1357              		.loc 1 2367 0
 1358              		.cfi_startproc
 1359              	.LVL115:
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 78


2376:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
 1360              		.loc 1 2376 0
 1361              	@ 2376 "Generated_Source\PSoC4\CyLib.c" 1
 1362 0000 01BE     		    bkpt    1
 1363              	@ 0 "" 2
2380:Generated_Source\PSoC4/CyLib.c **** 
 1364              		.loc 1 2380 0
 1365              		.code	16
 1366              		@ sp needed
 1367 0002 7047     		bx	lr
 1368              		.cfi_endproc
 1369              	.LFE24:
 1370              		.size	CyHalt, .-CyHalt
 1371              		.section	.text.CySoftwareReset,"ax",%progbits
 1372              		.align	2
 1373              		.global	CySoftwareReset
 1374              		.code	16
 1375              		.thumb_func
 1376              		.type	CySoftwareReset, %function
 1377              	CySoftwareReset:
 1378              	.LFB25:
2391:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
 1379              		.loc 1 2391 0
 1380              		.cfi_startproc
2396:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1381              		.loc 1 2396 0
 1382 0000 034A     		ldr	r2, .L103
2397:Generated_Source\PSoC4/CyLib.c **** }
 1383              		.loc 1 2397 0
 1384 0002 0449     		ldr	r1, .L103+4
2396:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1385              		.loc 1 2396 0
 1386 0004 1368     		ldr	r3, [r2]
2398:Generated_Source\PSoC4/CyLib.c **** 
 1387              		.loc 1 2398 0
 1388              		@ sp needed
2396:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1389              		.loc 1 2396 0
 1390 0006 1B04     		lsl	r3, r3, #16
 1391 0008 1B0C     		lsr	r3, r3, #16
2397:Generated_Source\PSoC4/CyLib.c **** }
 1392              		.loc 1 2397 0
 1393 000a 0B43     		orr	r3, r1
2396:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1394              		.loc 1 2396 0
 1395 000c 1360     		str	r3, [r2]
2398:Generated_Source\PSoC4/CyLib.c **** 
 1396              		.loc 1 2398 0
 1397 000e 7047     		bx	lr
 1398              	.L104:
 1399              		.align	2
 1400              	.L103:
 1401 0010 0CED00E0 		.word	-536810228
 1402 0014 0400FA05 		.word	100270084
 1403              		.cfi_endproc
 1404              	.LFE25:
 1405              		.size	CySoftwareReset, .-CySoftwareReset
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 79


 1406              		.section	.text.CyDelay,"ax",%progbits
 1407              		.align	2
 1408              		.global	CyDelay
 1409              		.code	16
 1410              		.thumb_func
 1411              		.type	CyDelay, %function
 1412              	CyDelay:
 1413              	.LFB26:
2411:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1414              		.loc 1 2411 0
 1415              		.cfi_startproc
 1416              	.LVL116:
 1417 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1418              		.cfi_def_cfa_offset 24
 1419              		.cfi_offset 3, -24
 1420              		.cfi_offset 4, -20
 1421              		.cfi_offset 5, -16
 1422              		.cfi_offset 6, -12
 1423              		.cfi_offset 7, -8
 1424              		.cfi_offset 14, -4
2412:Generated_Source\PSoC4/CyLib.c ****     {
 1425              		.loc 1 2412 0
 1426 0002 8025     		mov	r5, #128
2411:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1427              		.loc 1 2411 0
 1428 0004 071C     		mov	r7, r0
2412:Generated_Source\PSoC4/CyLib.c ****     {
 1429              		.loc 1 2412 0
 1430 0006 2D02     		lsl	r5, r5, #8
 1431 0008 A842     		cmp	r0, r5
 1432 000a 14D9     		bls	.L111
 1433 000c 041C     		mov	r4, r0
 1434 000e 0B4E     		ldr	r6, .L112
 1435              	.LVL117:
 1436              	.L107:
2417:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1437              		.loc 1 2417 0
 1438 0010 7068     		ldr	r0, [r6, #4]
 1439 0012 FFF7FEFF 		bl	CyDelayCycles
 1440              	.LVL118:
2418:Generated_Source\PSoC4/CyLib.c ****     }
 1441              		.loc 1 2418 0
 1442 0016 0A4B     		ldr	r3, .L112+4
 1443 0018 9C46     		mov	ip, r3
 1444 001a 6444     		add	r4, r4, ip
 1445              	.LVL119:
2412:Generated_Source\PSoC4/CyLib.c ****     {
 1446              		.loc 1 2412 0
 1447 001c AC42     		cmp	r4, r5
 1448 001e F7D8     		bhi	.L107
 1449 0020 084B     		ldr	r3, .L112+8
 1450 0022 FB18     		add	r3, r7, r3
 1451 0024 DB0B     		lsr	r3, r3, #15
 1452 0026 DB03     		lsl	r3, r3, #15
 1453 0028 6744     		add	r7, r7, ip
 1454 002a FF1A     		sub	r7, r7, r3
 1455              	.LVL120:
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 80


 1456              	.L106:
2421:Generated_Source\PSoC4/CyLib.c **** }
 1457              		.loc 1 2421 0
 1458 002c B068     		ldr	r0, [r6, #8]
2422:Generated_Source\PSoC4/CyLib.c **** 
 1459              		.loc 1 2422 0
 1460              		@ sp needed
2421:Generated_Source\PSoC4/CyLib.c **** }
 1461              		.loc 1 2421 0
 1462 002e 7843     		mul	r0, r7
 1463 0030 FFF7FEFF 		bl	CyDelayCycles
 1464              	.LVL121:
2422:Generated_Source\PSoC4/CyLib.c **** 
 1465              		.loc 1 2422 0
 1466 0034 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1467              	.LVL122:
 1468              	.L111:
 1469 0036 014E     		ldr	r6, .L112
 1470 0038 F8E7     		b	.L106
 1471              	.L113:
 1472 003a C046     		.align	2
 1473              	.L112:
 1474 003c 00000000 		.word	.LANCHOR2
 1475 0040 0080FFFF 		.word	-32768
 1476 0044 FF7FFFFF 		.word	-32769
 1477              		.cfi_endproc
 1478              	.LFE26:
 1479              		.size	CyDelay, .-CyDelay
 1480              		.section	.text.CyDelayUs,"ax",%progbits
 1481              		.align	2
 1482              		.global	CyDelayUs
 1483              		.code	16
 1484              		.thumb_func
 1485              		.type	CyDelayUs, %function
 1486              	CyDelayUs:
 1487              	.LFB27:
2434:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1488              		.loc 1 2434 0
 1489              		.cfi_startproc
 1490              	.LVL123:
 1491 0000 08B5     		push	{r3, lr}
 1492              		.cfi_def_cfa_offset 8
 1493              		.cfi_offset 3, -8
 1494              		.cfi_offset 14, -4
2435:Generated_Source\PSoC4/CyLib.c **** }
 1495              		.loc 1 2435 0
 1496 0002 034B     		ldr	r3, .L115
2436:Generated_Source\PSoC4/CyLib.c **** 
 1497              		.loc 1 2436 0
 1498              		@ sp needed
2435:Generated_Source\PSoC4/CyLib.c **** }
 1499              		.loc 1 2435 0
 1500 0004 1B78     		ldrb	r3, [r3]
 1501 0006 5843     		mul	r0, r3
 1502              	.LVL124:
 1503 0008 FFF7FEFF 		bl	CyDelayCycles
 1504              	.LVL125:
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 81


2436:Generated_Source\PSoC4/CyLib.c **** 
 1505              		.loc 1 2436 0
 1506 000c 08BD     		pop	{r3, pc}
 1507              	.L116:
 1508 000e C046     		.align	2
 1509              	.L115:
 1510 0010 00000000 		.word	.LANCHOR2
 1511              		.cfi_endproc
 1512              	.LFE27:
 1513              		.size	CyDelayUs, .-CyDelayUs
 1514              		.global	__aeabi_uidiv
 1515              		.section	.text.CyDelayFreq,"ax",%progbits
 1516              		.align	2
 1517              		.global	CyDelayFreq
 1518              		.code	16
 1519              		.thumb_func
 1520              		.type	CyDelayFreq, %function
 1521              	CyDelayFreq:
 1522              	.LFB28:
2448:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1523              		.loc 1 2448 0
 1524              		.cfi_startproc
 1525              	.LVL126:
 1526 0000 70B5     		push	{r4, r5, r6, lr}
 1527              		.cfi_def_cfa_offset 16
 1528              		.cfi_offset 4, -16
 1529              		.cfi_offset 5, -12
 1530              		.cfi_offset 6, -8
 1531              		.cfi_offset 14, -4
2449:Generated_Source\PSoC4/CyLib.c ****     {
 1532              		.loc 1 2449 0
 1533 0002 0028     		cmp	r0, #0
 1534 0004 09D1     		bne	.L120
2455:Generated_Source\PSoC4/CyLib.c ****     }
 1535              		.loc 1 2455 0
 1536 0006 3026     		mov	r6, #48
 1537 0008 0C4B     		ldr	r3, .L121
 1538 000a 0D4C     		ldr	r4, .L121+4
 1539 000c 0D48     		ldr	r0, .L121+8
 1540              	.LVL127:
 1541 000e E360     		str	r3, [r4, #12]
 1542 0010 0D4B     		ldr	r3, .L121+12
 1543              	.L119:
2458:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1544              		.loc 1 2458 0
 1545 0012 2670     		strb	r6, [r4]
2459:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1546              		.loc 1 2459 0
 1547 0014 A060     		str	r0, [r4, #8]
2460:Generated_Source\PSoC4/CyLib.c **** }
 1548              		.loc 1 2460 0
 1549 0016 6360     		str	r3, [r4, #4]
2461:Generated_Source\PSoC4/CyLib.c **** 
 1550              		.loc 1 2461 0
 1551              		@ sp needed
 1552 0018 70BD     		pop	{r4, r5, r6, pc}
 1553              	.LVL128:
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 82


 1554              	.L120:
 1555 001a 0C4B     		ldr	r3, .L121+16
2451:Generated_Source\PSoC4/CyLib.c ****     }
 1556              		.loc 1 2451 0
 1557 001c 084C     		ldr	r4, .L121+4
 1558 001e 051C     		mov	r5, r0
 1559 0020 E060     		str	r0, [r4, #12]
 1560 0022 0B49     		ldr	r1, .L121+20
 1561 0024 C018     		add	r0, r0, r3
 1562              	.LVL129:
 1563 0026 FFF7FEFF 		bl	__aeabi_uidiv
 1564              	.LVL130:
 1565 002a FA21     		mov	r1, #250
 1566 002c 094B     		ldr	r3, .L121+24
 1567 002e C6B2     		uxtb	r6, r0
 1568 0030 8900     		lsl	r1, r1, #2
 1569 0032 E818     		add	r0, r5, r3
 1570 0034 FFF7FEFF 		bl	__aeabi_uidiv
 1571              	.LVL131:
 1572 0038 C303     		lsl	r3, r0, #15
 1573 003a EAE7     		b	.L119
 1574              	.L122:
 1575              		.align	2
 1576              	.L121:
 1577 003c 006CDC02 		.word	48000000
 1578 0040 00000000 		.word	.LANCHOR2
 1579 0044 80BB0000 		.word	48000
 1580 0048 0000C05D 		.word	1572864000
 1581 004c 3F420F00 		.word	999999
 1582 0050 40420F00 		.word	1000000
 1583 0054 E7030000 		.word	999
 1584              		.cfi_endproc
 1585              	.LFE28:
 1586              		.size	CyDelayFreq, .-CyDelayFreq
 1587              		.section	.text.CySysTickStart,"ax",%progbits
 1588              		.align	2
 1589              		.global	CySysTickStart
 1590              		.code	16
 1591              		.thumb_func
 1592              		.type	CySysTickStart, %function
 1593              	CySysTickStart:
 1594              	.LFB29:
2480:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1595              		.loc 1 2480 0
 1596              		.cfi_startproc
 1597 0000 38B5     		push	{r3, r4, r5, lr}
 1598              		.cfi_def_cfa_offset 16
 1599              		.cfi_offset 3, -16
 1600              		.cfi_offset 4, -12
 1601              		.cfi_offset 5, -8
 1602              		.cfi_offset 14, -4
2481:Generated_Source\PSoC4/CyLib.c ****     {
 1603              		.loc 1 2481 0
 1604 0002 134C     		ldr	r4, .L125
 1605 0004 6569     		ldr	r5, [r4, #20]
 1606 0006 002D     		cmp	r5, #0
 1607 0008 17D1     		bne	.L124
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 83


 1608              	.LVL132:
 1609              	.LBB87:
 1610              	.LBB88:
2523:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1611              		.loc 1 2523 0
 1612 000a FA21     		mov	r1, #250
 1613              	.LBB89:
 1614              	.LBB90:
2141:Generated_Source\PSoC4/CyLib.c **** 
 1615              		.loc 1 2141 0
 1616 000c 114A     		ldr	r2, .L125+4
 1617 000e 124B     		ldr	r3, .L125+8
 1618              	.LBE90:
 1619              	.LBE89:
2514:Generated_Source\PSoC4/CyLib.c ****     }
 1620              		.loc 1 2514 0
 1621 0010 2560     		str	r5, [r4]
 1622              	.LVL133:
 1623 0012 6560     		str	r5, [r4, #4]
 1624              	.LVL134:
 1625 0014 A560     		str	r5, [r4, #8]
 1626              	.LVL135:
 1627 0016 E560     		str	r5, [r4, #12]
 1628              	.LVL136:
 1629 0018 2561     		str	r5, [r4, #16]
 1630              	.LVL137:
 1631              	.LBB92:
 1632              	.LBB91:
2141:Generated_Source\PSoC4/CyLib.c **** 
 1633              		.loc 1 2141 0
 1634 001a 1A60     		str	r2, [r3]
 1635              	.LVL138:
 1636              	.LBE91:
 1637              	.LBE92:
2523:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1638              		.loc 1 2523 0
 1639 001c 0F4B     		ldr	r3, .L125+12
 1640 001e 8900     		lsl	r1, r1, #2
 1641 0020 D868     		ldr	r0, [r3, #12]
 1642 0022 FFF7FEFF 		bl	__aeabi_uidiv
 1643              	.LVL139:
 1644              	.LBB93:
 1645              	.LBB94:
2290:Generated_Source\PSoC4/CyLib.c **** }
 1646              		.loc 1 2290 0
 1647 0026 8022     		mov	r2, #128
 1648              	.LBE94:
 1649              	.LBE93:
 1650              	.LBB97:
 1651              	.LBB98:
2607:Generated_Source\PSoC4/CyLib.c **** }
 1652              		.loc 1 2607 0
 1653 0028 0D4B     		ldr	r3, .L125+16
 1654              	.LBE98:
 1655              	.LBE97:
 1656              	.LBB100:
 1657              	.LBB95:
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 84


2290:Generated_Source\PSoC4/CyLib.c **** }
 1658              		.loc 1 2290 0
 1659 002a 1202     		lsl	r2, r2, #8
 1660              	.LBE95:
 1661              	.LBE100:
 1662              	.LBB101:
 1663              	.LBB99:
2607:Generated_Source\PSoC4/CyLib.c **** }
 1664              		.loc 1 2607 0
 1665 002c 1860     		str	r0, [r3]
 1666              	.LBE99:
 1667              	.LBE101:
 1668              	.LBB102:
 1669              	.LBB103:
2713:Generated_Source\PSoC4/CyLib.c **** }
 1670              		.loc 1 2713 0
 1671 002e 0D4B     		ldr	r3, .L125+20
 1672 0030 1D60     		str	r5, [r3]
 1673              	.LVL140:
 1674              	.LBE103:
 1675              	.LBE102:
 1676              	.LBB104:
 1677              	.LBB96:
2290:Generated_Source\PSoC4/CyLib.c **** }
 1678              		.loc 1 2290 0
 1679 0032 0D4B     		ldr	r3, .L125+24
 1680 0034 1A60     		str	r2, [r3]
 1681              	.LBE96:
 1682              	.LBE104:
 1683              	.LBE88:
 1684              	.LBE87:
2484:Generated_Source\PSoC4/CyLib.c ****     }
 1685              		.loc 1 2484 0
 1686 0036 0123     		mov	r3, #1
 1687 0038 6361     		str	r3, [r4, #20]
 1688              	.LVL141:
 1689              	.L124:
 1690              	.LBB105:
 1691              	.LBB106:
 1692              	.LBB107:
 1693              	.LBB108:
2574:Generated_Source\PSoC4/CyLib.c **** }
 1694              		.loc 1 2574 0
 1695 003a 0222     		mov	r2, #2
 1696 003c 0B4B     		ldr	r3, .L125+28
 1697              	.LBE108:
 1698              	.LBE107:
 1699              	.LBE106:
 1700              	.LBE105:
2488:Generated_Source\PSoC4/CyLib.c **** 
 1701              		.loc 1 2488 0
 1702              		@ sp needed
 1703              	.LBB112:
 1704              	.LBB111:
 1705              	.LBB110:
 1706              	.LBB109:
2574:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 85


 1707              		.loc 1 2574 0
 1708 003e 1968     		ldr	r1, [r3]
 1709 0040 0A43     		orr	r2, r1
 1710 0042 1A60     		str	r2, [r3]
 1711              	.LBE109:
 1712              	.LBE110:
2542:Generated_Source\PSoC4/CyLib.c **** }
 1713              		.loc 1 2542 0
 1714 0044 0122     		mov	r2, #1
 1715 0046 1968     		ldr	r1, [r3]
 1716 0048 0A43     		orr	r2, r1
 1717 004a 1A60     		str	r2, [r3]
 1718              	.LBE111:
 1719              	.LBE112:
2488:Generated_Source\PSoC4/CyLib.c **** 
 1720              		.loc 1 2488 0
 1721 004c 38BD     		pop	{r3, r4, r5, pc}
 1722              	.L126:
 1723 004e C046     		.align	2
 1724              	.L125:
 1725 0050 00000000 		.word	.LANCHOR0
 1726 0054 00000000 		.word	CySysTickServiceCallbacks
 1727 0058 3C000020 		.word	536870972
 1728 005c 00000000 		.word	.LANCHOR2
 1729 0060 14E000E0 		.word	-536813548
 1730 0064 18E000E0 		.word	-536813544
 1731 0068 00E100E0 		.word	-536813312
 1732 006c 10E000E0 		.word	-536813552
 1733              		.cfi_endproc
 1734              	.LFE29:
 1735              		.size	CySysTickStart, .-CySysTickStart
 1736              		.section	.text.CySysTickInit,"ax",%progbits
 1737              		.align	2
 1738              		.global	CySysTickInit
 1739              		.code	16
 1740              		.thumb_func
 1741              		.type	CySysTickInit, %function
 1742              	CySysTickInit:
 1743              	.LFB30:
2509:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
 1744              		.loc 1 2509 0
 1745              		.cfi_startproc
 1746              	.LVL142:
 1747 0000 10B5     		push	{r4, lr}
 1748              		.cfi_def_cfa_offset 8
 1749              		.cfi_offset 4, -8
 1750              		.cfi_offset 14, -4
2514:Generated_Source\PSoC4/CyLib.c ****     }
 1751              		.loc 1 2514 0
 1752 0002 0024     		mov	r4, #0
2523:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1753              		.loc 1 2523 0
 1754 0004 FA21     		mov	r1, #250
2514:Generated_Source\PSoC4/CyLib.c ****     }
 1755              		.loc 1 2514 0
 1756 0006 0B4B     		ldr	r3, .L128
 1757              	.LBB113:
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 86


 1758              	.LBB114:
2141:Generated_Source\PSoC4/CyLib.c **** 
 1759              		.loc 1 2141 0
 1760 0008 0B4A     		ldr	r2, .L128+4
 1761              	.LBE114:
 1762              	.LBE113:
2514:Generated_Source\PSoC4/CyLib.c ****     }
 1763              		.loc 1 2514 0
 1764 000a 1C60     		str	r4, [r3]
 1765              	.LVL143:
 1766 000c DC60     		str	r4, [r3, #12]
 1767 000e 5C60     		str	r4, [r3, #4]
 1768              	.LVL144:
 1769 0010 9C60     		str	r4, [r3, #8]
 1770              	.LVL145:
 1771 0012 1C61     		str	r4, [r3, #16]
 1772              	.LVL146:
 1773              	.LBB117:
 1774              	.LBB115:
2141:Generated_Source\PSoC4/CyLib.c **** 
 1775              		.loc 1 2141 0
 1776 0014 094B     		ldr	r3, .L128+8
 1777              	.LVL147:
 1778              	.LBE115:
 1779              	.LBE117:
2523:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1780              		.loc 1 2523 0
 1781 0016 8900     		lsl	r1, r1, #2
 1782              	.LBB118:
 1783              	.LBB116:
2141:Generated_Source\PSoC4/CyLib.c **** 
 1784              		.loc 1 2141 0
 1785 0018 1A60     		str	r2, [r3]
 1786              	.LVL148:
 1787              	.LBE116:
 1788              	.LBE118:
2523:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1789              		.loc 1 2523 0
 1790 001a 094B     		ldr	r3, .L128+12
2526:Generated_Source\PSoC4/CyLib.c **** 
 1791              		.loc 1 2526 0
 1792              		@ sp needed
2523:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1793              		.loc 1 2523 0
 1794 001c D868     		ldr	r0, [r3, #12]
 1795 001e FFF7FEFF 		bl	__aeabi_uidiv
 1796              	.LVL149:
 1797              	.LBB119:
 1798              	.LBB120:
2290:Generated_Source\PSoC4/CyLib.c **** }
 1799              		.loc 1 2290 0
 1800 0022 8022     		mov	r2, #128
 1801              	.LBE120:
 1802              	.LBE119:
 1803              	.LBB123:
 1804              	.LBB124:
2607:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 87


 1805              		.loc 1 2607 0
 1806 0024 074B     		ldr	r3, .L128+16
 1807              	.LBE124:
 1808              	.LBE123:
 1809              	.LBB126:
 1810              	.LBB121:
2290:Generated_Source\PSoC4/CyLib.c **** }
 1811              		.loc 1 2290 0
 1812 0026 1202     		lsl	r2, r2, #8
 1813              	.LBE121:
 1814              	.LBE126:
 1815              	.LBB127:
 1816              	.LBB125:
2607:Generated_Source\PSoC4/CyLib.c **** }
 1817              		.loc 1 2607 0
 1818 0028 1860     		str	r0, [r3]
 1819              	.LBE125:
 1820              	.LBE127:
 1821              	.LBB128:
 1822              	.LBB129:
2713:Generated_Source\PSoC4/CyLib.c **** }
 1823              		.loc 1 2713 0
 1824 002a 074B     		ldr	r3, .L128+20
 1825 002c 1C60     		str	r4, [r3]
 1826              	.LVL150:
 1827              	.LBE129:
 1828              	.LBE128:
 1829              	.LBB130:
 1830              	.LBB122:
2290:Generated_Source\PSoC4/CyLib.c **** }
 1831              		.loc 1 2290 0
 1832 002e 074B     		ldr	r3, .L128+24
 1833 0030 1A60     		str	r2, [r3]
 1834              	.LBE122:
 1835              	.LBE130:
2526:Generated_Source\PSoC4/CyLib.c **** 
 1836              		.loc 1 2526 0
 1837 0032 10BD     		pop	{r4, pc}
 1838              	.L129:
 1839              		.align	2
 1840              	.L128:
 1841 0034 00000000 		.word	.LANCHOR0
 1842 0038 00000000 		.word	CySysTickServiceCallbacks
 1843 003c 3C000020 		.word	536870972
 1844 0040 00000000 		.word	.LANCHOR2
 1845 0044 14E000E0 		.word	-536813548
 1846 0048 18E000E0 		.word	-536813544
 1847 004c 00E100E0 		.word	-536813312
 1848              		.cfi_endproc
 1849              	.LFE30:
 1850              		.size	CySysTickInit, .-CySysTickInit
 1851              		.section	.text.CySysTickEnable,"ax",%progbits
 1852              		.align	2
 1853              		.global	CySysTickEnable
 1854              		.code	16
 1855              		.thumb_func
 1856              		.type	CySysTickEnable, %function
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 88


 1857              	CySysTickEnable:
 1858              	.LFB31:
2540:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1859              		.loc 1 2540 0
 1860              		.cfi_startproc
 1861              	.LBB131:
 1862              	.LBB132:
2574:Generated_Source\PSoC4/CyLib.c **** }
 1863              		.loc 1 2574 0
 1864 0000 0222     		mov	r2, #2
 1865 0002 044B     		ldr	r3, .L131
 1866              	.LBE132:
 1867              	.LBE131:
2543:Generated_Source\PSoC4/CyLib.c **** 
 1868              		.loc 1 2543 0
 1869              		@ sp needed
 1870              	.LBB134:
 1871              	.LBB133:
2574:Generated_Source\PSoC4/CyLib.c **** }
 1872              		.loc 1 2574 0
 1873 0004 1968     		ldr	r1, [r3]
 1874 0006 0A43     		orr	r2, r1
 1875 0008 1A60     		str	r2, [r3]
 1876              	.LBE133:
 1877              	.LBE134:
2542:Generated_Source\PSoC4/CyLib.c **** }
 1878              		.loc 1 2542 0
 1879 000a 0122     		mov	r2, #1
 1880 000c 1968     		ldr	r1, [r3]
 1881 000e 0A43     		orr	r2, r1
 1882 0010 1A60     		str	r2, [r3]
2543:Generated_Source\PSoC4/CyLib.c **** 
 1883              		.loc 1 2543 0
 1884 0012 7047     		bx	lr
 1885              	.L132:
 1886              		.align	2
 1887              	.L131:
 1888 0014 10E000E0 		.word	-536813552
 1889              		.cfi_endproc
 1890              	.LFE31:
 1891              		.size	CySysTickEnable, .-CySysTickEnable
 1892              		.section	.text.CySysTickStop,"ax",%progbits
 1893              		.align	2
 1894              		.global	CySysTickStop
 1895              		.code	16
 1896              		.thumb_func
 1897              		.type	CySysTickStop, %function
 1898              	CySysTickStop:
 1899              	.LFB32:
2557:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1900              		.loc 1 2557 0
 1901              		.cfi_startproc
2558:Generated_Source\PSoC4/CyLib.c **** }
 1902              		.loc 1 2558 0
 1903 0000 0121     		mov	r1, #1
 1904 0002 024A     		ldr	r2, .L134
2559:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 89


 1905              		.loc 1 2559 0
 1906              		@ sp needed
2558:Generated_Source\PSoC4/CyLib.c **** }
 1907              		.loc 1 2558 0
 1908 0004 1368     		ldr	r3, [r2]
 1909 0006 8B43     		bic	r3, r1
 1910 0008 1360     		str	r3, [r2]
2559:Generated_Source\PSoC4/CyLib.c **** 
 1911              		.loc 1 2559 0
 1912 000a 7047     		bx	lr
 1913              	.L135:
 1914              		.align	2
 1915              	.L134:
 1916 000c 10E000E0 		.word	-536813552
 1917              		.cfi_endproc
 1918              	.LFE32:
 1919              		.size	CySysTickStop, .-CySysTickStop
 1920              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1921              		.align	2
 1922              		.global	CySysTickEnableInterrupt
 1923              		.code	16
 1924              		.thumb_func
 1925              		.type	CySysTickEnableInterrupt, %function
 1926              	CySysTickEnableInterrupt:
 1927              	.LFB33:
2573:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1928              		.loc 1 2573 0
 1929              		.cfi_startproc
2574:Generated_Source\PSoC4/CyLib.c **** }
 1930              		.loc 1 2574 0
 1931 0000 0223     		mov	r3, #2
 1932 0002 024A     		ldr	r2, .L137
2575:Generated_Source\PSoC4/CyLib.c **** 
 1933              		.loc 1 2575 0
 1934              		@ sp needed
2574:Generated_Source\PSoC4/CyLib.c **** }
 1935              		.loc 1 2574 0
 1936 0004 1168     		ldr	r1, [r2]
 1937 0006 0B43     		orr	r3, r1
 1938 0008 1360     		str	r3, [r2]
2575:Generated_Source\PSoC4/CyLib.c **** 
 1939              		.loc 1 2575 0
 1940 000a 7047     		bx	lr
 1941              	.L138:
 1942              		.align	2
 1943              	.L137:
 1944 000c 10E000E0 		.word	-536813552
 1945              		.cfi_endproc
 1946              	.LFE33:
 1947              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1948              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1949              		.align	2
 1950              		.global	CySysTickDisableInterrupt
 1951              		.code	16
 1952              		.thumb_func
 1953              		.type	CySysTickDisableInterrupt, %function
 1954              	CySysTickDisableInterrupt:
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 90


 1955              	.LFB34:
2589:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1956              		.loc 1 2589 0
 1957              		.cfi_startproc
2590:Generated_Source\PSoC4/CyLib.c **** }
 1958              		.loc 1 2590 0
 1959 0000 0221     		mov	r1, #2
 1960 0002 024A     		ldr	r2, .L140
2591:Generated_Source\PSoC4/CyLib.c **** 
 1961              		.loc 1 2591 0
 1962              		@ sp needed
2590:Generated_Source\PSoC4/CyLib.c **** }
 1963              		.loc 1 2590 0
 1964 0004 1368     		ldr	r3, [r2]
 1965 0006 8B43     		bic	r3, r1
 1966 0008 1360     		str	r3, [r2]
2591:Generated_Source\PSoC4/CyLib.c **** 
 1967              		.loc 1 2591 0
 1968 000a 7047     		bx	lr
 1969              	.L141:
 1970              		.align	2
 1971              	.L140:
 1972 000c 10E000E0 		.word	-536813552
 1973              		.cfi_endproc
 1974              	.LFE34:
 1975              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1976              		.section	.text.CySysTickSetReload,"ax",%progbits
 1977              		.align	2
 1978              		.global	CySysTickSetReload
 1979              		.code	16
 1980              		.thumb_func
 1981              		.type	CySysTickSetReload, %function
 1982              	CySysTickSetReload:
 1983              	.LFB35:
2606:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1984              		.loc 1 2606 0
 1985              		.cfi_startproc
 1986              	.LVL151:
2607:Generated_Source\PSoC4/CyLib.c **** }
 1987              		.loc 1 2607 0
 1988 0000 024B     		ldr	r3, .L143
 1989 0002 0002     		lsl	r0, r0, #8
 1990              	.LVL152:
 1991 0004 000A     		lsr	r0, r0, #8
 1992 0006 1860     		str	r0, [r3]
2608:Generated_Source\PSoC4/CyLib.c **** 
 1993              		.loc 1 2608 0
 1994              		@ sp needed
 1995 0008 7047     		bx	lr
 1996              	.L144:
 1997 000a C046     		.align	2
 1998              	.L143:
 1999 000c 14E000E0 		.word	-536813548
 2000              		.cfi_endproc
 2001              	.LFE35:
 2002              		.size	CySysTickSetReload, .-CySysTickSetReload
 2003              		.section	.text.CySysTickGetReload,"ax",%progbits
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 91


 2004              		.align	2
 2005              		.global	CySysTickGetReload
 2006              		.code	16
 2007              		.thumb_func
 2008              		.type	CySysTickGetReload, %function
 2009              	CySysTickGetReload:
 2010              	.LFB36:
2622:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 2011              		.loc 1 2622 0
 2012              		.cfi_startproc
2623:Generated_Source\PSoC4/CyLib.c **** }
 2013              		.loc 1 2623 0
 2014 0000 024B     		ldr	r3, .L146
2624:Generated_Source\PSoC4/CyLib.c **** 
 2015              		.loc 1 2624 0
 2016              		@ sp needed
2623:Generated_Source\PSoC4/CyLib.c **** }
 2017              		.loc 1 2623 0
 2018 0002 1868     		ldr	r0, [r3]
 2019 0004 0002     		lsl	r0, r0, #8
 2020 0006 000A     		lsr	r0, r0, #8
2624:Generated_Source\PSoC4/CyLib.c **** 
 2021              		.loc 1 2624 0
 2022 0008 7047     		bx	lr
 2023              	.L147:
 2024 000a C046     		.align	2
 2025              	.L146:
 2026 000c 14E000E0 		.word	-536813548
 2027              		.cfi_endproc
 2028              	.LFE36:
 2029              		.size	CySysTickGetReload, .-CySysTickGetReload
 2030              		.section	.text.CySysTickGetValue,"ax",%progbits
 2031              		.align	2
 2032              		.global	CySysTickGetValue
 2033              		.code	16
 2034              		.thumb_func
 2035              		.type	CySysTickGetValue, %function
 2036              	CySysTickGetValue:
 2037              	.LFB37:
2638:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 2038              		.loc 1 2638 0
 2039              		.cfi_startproc
2639:Generated_Source\PSoC4/CyLib.c **** }
 2040              		.loc 1 2639 0
 2041 0000 024B     		ldr	r3, .L149
2640:Generated_Source\PSoC4/CyLib.c **** 
 2042              		.loc 1 2640 0
 2043              		@ sp needed
2639:Generated_Source\PSoC4/CyLib.c **** }
 2044              		.loc 1 2639 0
 2045 0002 1868     		ldr	r0, [r3]
 2046 0004 0002     		lsl	r0, r0, #8
 2047 0006 000A     		lsr	r0, r0, #8
2640:Generated_Source\PSoC4/CyLib.c **** 
 2048              		.loc 1 2640 0
 2049 0008 7047     		bx	lr
 2050              	.L150:
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 92


 2051 000a C046     		.align	2
 2052              	.L149:
 2053 000c 18E000E0 		.word	-536813544
 2054              		.cfi_endproc
 2055              	.LFE37:
 2056              		.size	CySysTickGetValue, .-CySysTickGetValue
 2057              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 2058              		.align	2
 2059              		.global	CySysTickGetCountFlag
 2060              		.code	16
 2061              		.thumb_func
 2062              		.type	CySysTickGetCountFlag, %function
 2063              	CySysTickGetCountFlag:
 2064              	.LFB38:
2699:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG>>CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 2065              		.loc 1 2699 0
 2066              		.cfi_startproc
2700:Generated_Source\PSoC4/CyLib.c **** }
 2067              		.loc 1 2700 0
 2068 0000 024B     		ldr	r3, .L152
2701:Generated_Source\PSoC4/CyLib.c **** 
 2069              		.loc 1 2701 0
 2070              		@ sp needed
2700:Generated_Source\PSoC4/CyLib.c **** }
 2071              		.loc 1 2700 0
 2072 0002 1868     		ldr	r0, [r3]
 2073 0004 C003     		lsl	r0, r0, #15
 2074 0006 C00F     		lsr	r0, r0, #31
2701:Generated_Source\PSoC4/CyLib.c **** 
 2075              		.loc 1 2701 0
 2076 0008 7047     		bx	lr
 2077              	.L153:
 2078 000a C046     		.align	2
 2079              	.L152:
 2080 000c 10E000E0 		.word	-536813552
 2081              		.cfi_endproc
 2082              	.LFE38:
 2083              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 2084              		.section	.text.CySysTickClear,"ax",%progbits
 2085              		.align	2
 2086              		.global	CySysTickClear
 2087              		.code	16
 2088              		.thumb_func
 2089              		.type	CySysTickClear, %function
 2090              	CySysTickClear:
 2091              	.LFB39:
2712:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2092              		.loc 1 2712 0
 2093              		.cfi_startproc
2713:Generated_Source\PSoC4/CyLib.c **** }
 2094              		.loc 1 2713 0
 2095 0000 0022     		mov	r2, #0
 2096 0002 014B     		ldr	r3, .L155
2714:Generated_Source\PSoC4/CyLib.c **** 
 2097              		.loc 1 2714 0
 2098              		@ sp needed
2713:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 93


 2099              		.loc 1 2713 0
 2100 0004 1A60     		str	r2, [r3]
2714:Generated_Source\PSoC4/CyLib.c **** 
 2101              		.loc 1 2714 0
 2102 0006 7047     		bx	lr
 2103              	.L156:
 2104              		.align	2
 2105              	.L155:
 2106 0008 18E000E0 		.word	-536813544
 2107              		.cfi_endproc
 2108              	.LFE39:
 2109              		.size	CySysTickClear, .-CySysTickClear
 2110              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2111              		.align	2
 2112              		.global	CySysTickSetCallback
 2113              		.code	16
 2114              		.thumb_func
 2115              		.type	CySysTickSetCallback, %function
 2116              	CySysTickSetCallback:
 2117              	.LFB40:
2747:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 2118              		.loc 1 2747 0
 2119              		.cfi_startproc
 2120              	.LVL153:
2750:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2121              		.loc 1 2750 0
 2122 0000 024A     		ldr	r2, .L158
 2123 0002 8300     		lsl	r3, r0, #2
 2124 0004 9858     		ldr	r0, [r3, r2]
 2125              	.LVL154:
2753:Generated_Source\PSoC4/CyLib.c **** 
 2126              		.loc 1 2753 0
 2127              		@ sp needed
2751:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2128              		.loc 1 2751 0
 2129 0006 9950     		str	r1, [r3, r2]
2753:Generated_Source\PSoC4/CyLib.c **** 
 2130              		.loc 1 2753 0
 2131 0008 7047     		bx	lr
 2132              	.L159:
 2133 000a C046     		.align	2
 2134              	.L158:
 2135 000c 00000000 		.word	.LANCHOR0
 2136              		.cfi_endproc
 2137              	.LFE40:
 2138              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2139              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2140              		.align	2
 2141              		.global	CySysTickGetCallback
 2142              		.code	16
 2143              		.thumb_func
 2144              		.type	CySysTickGetCallback, %function
 2145              	CySysTickGetCallback:
 2146              	.LFB41:
2771:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2147              		.loc 1 2771 0
 2148              		.cfi_startproc
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 94


 2149              	.LVL155:
2772:Generated_Source\PSoC4/CyLib.c **** }
 2150              		.loc 1 2772 0
 2151 0000 014B     		ldr	r3, .L161
 2152 0002 8000     		lsl	r0, r0, #2
 2153              	.LVL156:
 2154 0004 C058     		ldr	r0, [r0, r3]
2773:Generated_Source\PSoC4/CyLib.c **** 
 2155              		.loc 1 2773 0
 2156              		@ sp needed
 2157 0006 7047     		bx	lr
 2158              	.L162:
 2159              		.align	2
 2160              	.L161:
 2161 0008 00000000 		.word	.LANCHOR0
 2162              		.cfi_endproc
 2163              	.LFE41:
 2164              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2165              		.section	.text.CyGetUniqueId,"ax",%progbits
 2166              		.align	2
 2167              		.global	CyGetUniqueId
 2168              		.code	16
 2169              		.thumb_func
 2170              		.type	CyGetUniqueId, %function
 2171              	CyGetUniqueId:
 2172              	.LFB43:
2799:Generated_Source\PSoC4/CyLib.c **** 
2800:Generated_Source\PSoC4/CyLib.c **** 
2801:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2802:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2803:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2804:Generated_Source\PSoC4/CyLib.c **** *
2805:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2806:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
2807:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2808:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2809:Generated_Source\PSoC4/CyLib.c **** *
2810:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2811:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2812:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
2813:Generated_Source\PSoC4/CyLib.c **** *
2814:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2815:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2816:Generated_Source\PSoC4/CyLib.c **** {
 2173              		.loc 1 2816 0
 2174              		.cfi_startproc
 2175              	.LVL157:
2817:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2818:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2176              		.loc 1 2818 0
 2177 0000 134B     		ldr	r3, .L164
2819:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
2820:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
2821:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
2822:Generated_Source\PSoC4/CyLib.c **** 
2823:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
2824:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 95


2825:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
2826:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
2827:Generated_Source\PSoC4/CyLib.c **** #else
2828:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2829:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2830:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2831:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
2832:Generated_Source\PSoC4/CyLib.c **** 
2833:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
2834:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
2835:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
2836:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
2837:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
2838:Generated_Source\PSoC4/CyLib.c **** }
 2178              		.loc 1 2838 0
 2179              		@ sp needed
2818:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2180              		.loc 1 2818 0
 2181 0002 1B78     		ldrb	r3, [r3]
 2182 0004 DAB2     		uxtb	r2, r3
2819:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2183              		.loc 1 2819 0
 2184 0006 134B     		ldr	r3, .L164+4
2818:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2185              		.loc 1 2818 0
 2186 0008 0260     		str	r2, [r0]
2819:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2187              		.loc 1 2819 0
 2188 000a 1B78     		ldrb	r3, [r3]
 2189 000c 1B02     		lsl	r3, r3, #8
 2190 000e 1343     		orr	r3, r2
2820:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2191              		.loc 1 2820 0
 2192 0010 114A     		ldr	r2, .L164+8
2819:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2193              		.loc 1 2819 0
 2194 0012 0360     		str	r3, [r0]
2820:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2195              		.loc 1 2820 0
 2196 0014 1278     		ldrb	r2, [r2]
 2197 0016 1204     		lsl	r2, r2, #16
 2198 0018 1343     		orr	r3, r2
2821:Generated_Source\PSoC4/CyLib.c **** 
 2199              		.loc 1 2821 0
 2200 001a 104A     		ldr	r2, .L164+12
2820:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2201              		.loc 1 2820 0
 2202 001c 0360     		str	r3, [r0]
2821:Generated_Source\PSoC4/CyLib.c **** 
 2203              		.loc 1 2821 0
 2204 001e 1278     		ldrb	r2, [r2]
 2205 0020 1206     		lsl	r2, r2, #24
 2206 0022 1343     		orr	r3, r2
 2207 0024 0360     		str	r3, [r0]
2823:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2208              		.loc 1 2823 0
 2209 0026 0E4B     		ldr	r3, .L164+16
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 96


 2210 0028 1B78     		ldrb	r3, [r3]
 2211 002a DAB2     		uxtb	r2, r3
2824:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2212              		.loc 1 2824 0
 2213 002c 0D4B     		ldr	r3, .L164+20
2823:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2214              		.loc 1 2823 0
 2215 002e 4260     		str	r2, [r0, #4]
2824:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2216              		.loc 1 2824 0
 2217 0030 1B78     		ldrb	r3, [r3]
 2218 0032 1B02     		lsl	r3, r3, #8
 2219 0034 1343     		orr	r3, r2
2825:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2220              		.loc 1 2825 0
 2221 0036 0C4A     		ldr	r2, .L164+24
2824:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2222              		.loc 1 2824 0
 2223 0038 4360     		str	r3, [r0, #4]
2825:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2224              		.loc 1 2825 0
 2225 003a 1278     		ldrb	r2, [r2]
 2226 003c 1204     		lsl	r2, r2, #16
 2227 003e 1343     		orr	r3, r2
2826:Generated_Source\PSoC4/CyLib.c **** #else
 2228              		.loc 1 2826 0
 2229 0040 0A4A     		ldr	r2, .L164+28
2825:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2230              		.loc 1 2825 0
 2231 0042 4360     		str	r3, [r0, #4]
2826:Generated_Source\PSoC4/CyLib.c **** #else
 2232              		.loc 1 2826 0
 2233 0044 1278     		ldrb	r2, [r2]
 2234 0046 1206     		lsl	r2, r2, #24
 2235 0048 1343     		orr	r3, r2
 2236 004a 4360     		str	r3, [r0, #4]
 2237              		.loc 1 2838 0
 2238 004c 7047     		bx	lr
 2239              	.L165:
 2240 004e C046     		.align	2
 2241              	.L164:
 2242 0050 78F1FF0F 		.word	268431736
 2243 0054 79F1FF0F 		.word	268431737
 2244 0058 7AF1FF0F 		.word	268431738
 2245 005c 7BF1FF0F 		.word	268431739
 2246 0060 7CF1FF0F 		.word	268431740
 2247 0064 7DF1FF0F 		.word	268431741
 2248 0068 7EF1FF0F 		.word	268431742
 2249 006c 7FF1FF0F 		.word	268431743
 2250              		.cfi_endproc
 2251              	.LFE43:
 2252              		.size	CyGetUniqueId, .-CyGetUniqueId
 2253              		.global	cyImoFreqMhz2Reg
 2254              		.global	CySysTickInitVar
 2255              		.global	cydelay32kMs
 2256              		.global	cydelayFreqMhz
 2257              		.global	cydelayFreqKhz
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 97


 2258              		.global	cydelayFreqHz
 2259              		.section	.rodata
 2260              		.align	2
 2261              		.set	.LANCHOR1,. + 0
 2262              		.type	cyImoFreqMhz2Reg, %object
 2263              		.size	cyImoFreqMhz2Reg, 46
 2264              	cyImoFreqMhz2Reg:
 2265 0000 03       		.byte	3
 2266 0001 04       		.byte	4
 2267 0002 05       		.byte	5
 2268 0003 06       		.byte	6
 2269 0004 07       		.byte	7
 2270 0005 08       		.byte	8
 2271 0006 09       		.byte	9
 2272 0007 0A       		.byte	10
 2273 0008 0B       		.byte	11
 2274 0009 0C       		.byte	12
 2275 000a 0E       		.byte	14
 2276 000b 0F       		.byte	15
 2277 000c 10       		.byte	16
 2278 000d 11       		.byte	17
 2279 000e 12       		.byte	18
 2280 000f 13       		.byte	19
 2281 0010 14       		.byte	20
 2282 0011 15       		.byte	21
 2283 0012 16       		.byte	22
 2284 0013 17       		.byte	23
 2285 0014 18       		.byte	24
 2286 0015 19       		.byte	25
 2287 0016 1B       		.byte	27
 2288 0017 1C       		.byte	28
 2289 0018 1D       		.byte	29
 2290 0019 1E       		.byte	30
 2291 001a 1F       		.byte	31
 2292 001b 20       		.byte	32
 2293 001c 21       		.byte	33
 2294 001d 22       		.byte	34
 2295 001e 23       		.byte	35
 2296 001f 25       		.byte	37
 2297 0020 26       		.byte	38
 2298 0021 27       		.byte	39
 2299 0022 28       		.byte	40
 2300 0023 29       		.byte	41
 2301 0024 2A       		.byte	42
 2302 0025 2B       		.byte	43
 2303 0026 2E       		.byte	46
 2304 0027 2F       		.byte	47
 2305 0028 30       		.byte	48
 2306 0029 31       		.byte	49
 2307 002a 32       		.byte	50
 2308 002b 33       		.byte	51
 2309 002c 34       		.byte	52
 2310 002d 35       		.byte	53
 2311 002e 0000     		.data
 2312              		.align	2
 2313              		.set	.LANCHOR2,. + 0
 2314              		.type	cydelayFreqMhz, %object
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 98


 2315              		.size	cydelayFreqMhz, 1
 2316              	cydelayFreqMhz:
 2317 0000 30       		.byte	48
 2318 0001 000000   		.space	3
 2319              		.type	cydelay32kMs, %object
 2320              		.size	cydelay32kMs, 4
 2321              	cydelay32kMs:
 2322 0004 0000C05D 		.word	1572864000
 2323              		.type	cydelayFreqKhz, %object
 2324              		.size	cydelayFreqKhz, 4
 2325              	cydelayFreqKhz:
 2326 0008 80BB0000 		.word	48000
 2327              		.type	cydelayFreqHz, %object
 2328              		.size	cydelayFreqHz, 4
 2329              	cydelayFreqHz:
 2330 000c 006CDC02 		.word	48000000
 2331              		.bss
 2332              		.align	2
 2333              		.set	.LANCHOR0,. + 0
 2334              		.type	CySysTickCallbacks, %object
 2335              		.size	CySysTickCallbacks, 20
 2336              	CySysTickCallbacks:
 2337 0000 00000000 		.space	20
 2337      00000000 
 2337      00000000 
 2337      00000000 
 2337      00000000 
 2338              		.type	CySysTickInitVar, %object
 2339              		.size	CySysTickInitVar, 4
 2340              	CySysTickInitVar:
 2341 0014 00000000 		.space	4
 2342              		.text
 2343              	.Letext0:
 2344              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2345              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2346              		.section	.debug_info,"",%progbits
 2347              	.Ldebug_info0:
 2348 0000 160D0000 		.4byte	0xd16
 2349 0004 0400     		.2byte	0x4
 2350 0006 00000000 		.4byte	.Ldebug_abbrev0
 2351 000a 04       		.byte	0x4
 2352 000b 01       		.uleb128 0x1
 2353 000c 8A050000 		.4byte	.LASF99
 2354 0010 01       		.byte	0x1
 2355 0011 32060000 		.4byte	.LASF100
 2356 0015 21030000 		.4byte	.LASF101
 2357 0019 08010000 		.4byte	.Ldebug_ranges0+0x108
 2358 001d 00000000 		.4byte	0
 2359 0021 00000000 		.4byte	.Ldebug_line0
 2360 0025 02       		.uleb128 0x2
 2361 0026 01       		.byte	0x1
 2362 0027 06       		.byte	0x6
 2363 0028 EB000000 		.4byte	.LASF0
 2364 002c 02       		.uleb128 0x2
 2365 002d 01       		.byte	0x1
 2366 002e 08       		.byte	0x8
 2367 002f 63040000 		.4byte	.LASF1
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 99


 2368 0033 02       		.uleb128 0x2
 2369 0034 02       		.byte	0x2
 2370 0035 05       		.byte	0x5
 2371 0036 71040000 		.4byte	.LASF2
 2372 003a 02       		.uleb128 0x2
 2373 003b 02       		.byte	0x2
 2374 003c 07       		.byte	0x7
 2375 003d A6020000 		.4byte	.LASF3
 2376 0041 02       		.uleb128 0x2
 2377 0042 04       		.byte	0x4
 2378 0043 05       		.byte	0x5
 2379 0044 2A010000 		.4byte	.LASF4
 2380 0048 02       		.uleb128 0x2
 2381 0049 04       		.byte	0x4
 2382 004a 07       		.byte	0x7
 2383 004b 2E020000 		.4byte	.LASF5
 2384 004f 02       		.uleb128 0x2
 2385 0050 08       		.byte	0x8
 2386 0051 05       		.byte	0x5
 2387 0052 DD000000 		.4byte	.LASF6
 2388 0056 02       		.uleb128 0x2
 2389 0057 08       		.byte	0x8
 2390 0058 07       		.byte	0x7
 2391 0059 71000000 		.4byte	.LASF7
 2392 005d 03       		.uleb128 0x3
 2393 005e 04       		.byte	0x4
 2394 005f 05       		.byte	0x5
 2395 0060 696E7400 		.ascii	"int\000"
 2396 0064 02       		.uleb128 0x2
 2397 0065 04       		.byte	0x4
 2398 0066 07       		.byte	0x7
 2399 0067 12020000 		.4byte	.LASF8
 2400 006b 04       		.uleb128 0x4
 2401 006c 55010000 		.4byte	.LASF9
 2402 0070 02       		.byte	0x2
 2403 0071 9801     		.2byte	0x198
 2404 0073 2C000000 		.4byte	0x2c
 2405 0077 04       		.uleb128 0x4
 2406 0078 17000000 		.4byte	.LASF10
 2407 007c 02       		.byte	0x2
 2408 007d 9901     		.2byte	0x199
 2409 007f 3A000000 		.4byte	0x3a
 2410 0083 04       		.uleb128 0x4
 2411 0084 98010000 		.4byte	.LASF11
 2412 0088 02       		.byte	0x2
 2413 0089 9A01     		.2byte	0x19a
 2414 008b 48000000 		.4byte	0x48
 2415 008f 02       		.uleb128 0x2
 2416 0090 04       		.byte	0x4
 2417 0091 04       		.byte	0x4
 2418 0092 E6030000 		.4byte	.LASF12
 2419 0096 02       		.uleb128 0x2
 2420 0097 08       		.byte	0x8
 2421 0098 04       		.byte	0x4
 2422 0099 74010000 		.4byte	.LASF13
 2423 009d 02       		.uleb128 0x2
 2424 009e 01       		.byte	0x1
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 100


 2425 009f 08       		.byte	0x8
 2426 00a0 AA040000 		.4byte	.LASF14
 2427 00a4 04       		.uleb128 0x4
 2428 00a5 4D040000 		.4byte	.LASF15
 2429 00a9 02       		.byte	0x2
 2430 00aa 4202     		.2byte	0x242
 2431 00ac B0000000 		.4byte	0xb0
 2432 00b0 05       		.uleb128 0x5
 2433 00b1 6B000000 		.4byte	0x6b
 2434 00b5 04       		.uleb128 0x4
 2435 00b6 FF020000 		.4byte	.LASF16
 2436 00ba 02       		.byte	0x2
 2437 00bb 4402     		.2byte	0x244
 2438 00bd C1000000 		.4byte	0xc1
 2439 00c1 05       		.uleb128 0x5
 2440 00c2 83000000 		.4byte	0x83
 2441 00c6 04       		.uleb128 0x4
 2442 00c7 AF040000 		.4byte	.LASF17
 2443 00cb 02       		.byte	0x2
 2444 00cc 5402     		.2byte	0x254
 2445 00ce D2000000 		.4byte	0xd2
 2446 00d2 06       		.uleb128 0x6
 2447 00d3 04       		.byte	0x4
 2448 00d4 D8000000 		.4byte	0xd8
 2449 00d8 07       		.uleb128 0x7
 2450 00d9 02       		.uleb128 0x2
 2451 00da 04       		.byte	0x4
 2452 00db 07       		.byte	0x7
 2453 00dc 63030000 		.4byte	.LASF18
 2454 00e0 08       		.uleb128 0x8
 2455 00e1 11040000 		.4byte	.LASF19
 2456 00e5 03       		.byte	0x3
 2457 00e6 F3       		.byte	0xf3
 2458 00e7 D2000000 		.4byte	0xd2
 2459 00eb 09       		.uleb128 0x9
 2460 00ec 5C040000 		.4byte	.LASF20
 2461 00f0 01       		.byte	0x1
 2462 00f1 3E09     		.2byte	0x93e
 2463 00f3 01       		.byte	0x1
 2464 00f4 05010000 		.4byte	0x105
 2465 00f8 0A       		.uleb128 0xa
 2466 00f9 A3040000 		.4byte	.LASF22
 2467 00fd 01       		.byte	0x1
 2468 00fe 3E09     		.2byte	0x93e
 2469 0100 6B000000 		.4byte	0x6b
 2470 0104 00       		.byte	0
 2471 0105 09       		.uleb128 0x9
 2472 0106 6A010000 		.4byte	.LASF21
 2473 010a 01       		.byte	0x1
 2474 010b 8109     		.2byte	0x981
 2475 010d 01       		.byte	0x1
 2476 010e 1F010000 		.4byte	0x11f
 2477 0112 0A       		.uleb128 0xa
 2478 0113 51060000 		.4byte	.LASF23
 2479 0117 01       		.byte	0x1
 2480 0118 8109     		.2byte	0x981
 2481 011a 77000000 		.4byte	0x77
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 101


 2482 011e 00       		.byte	0
 2483 011f 0B       		.uleb128 0xb
 2484 0120 81010000 		.4byte	.LASF24
 2485 0124 01       		.byte	0x1
 2486 0125 F107     		.2byte	0x7f1
 2487 0127 01       		.byte	0x1
 2488 0128 0B       		.uleb128 0xb
 2489 0129 B6000000 		.4byte	.LASF25
 2490 012d 01       		.byte	0x1
 2491 012e 0C0A     		.2byte	0xa0c
 2492 0130 01       		.byte	0x1
 2493 0131 0C       		.uleb128 0xc
 2494 0132 FC010000 		.4byte	.LASF96
 2495 0136 01       		.byte	0x1
 2496 0137 8A0A     		.2byte	0xa8a
 2497 0139 83000000 		.4byte	0x83
 2498 013d 01       		.byte	0x1
 2499 013e 0D       		.uleb128 0xd
 2500 013f 78060000 		.4byte	.LASF102
 2501 0143 01       		.byte	0x1
 2502 0144 DF0A     		.2byte	0xadf
 2503 0146 01       		.byte	0x1
 2504 0147 56010000 		.4byte	0x156
 2505 014b 0E       		.uleb128 0xe
 2506 014c 6900     		.ascii	"i\000"
 2507 014e 01       		.byte	0x1
 2508 014f E10A     		.2byte	0xae1
 2509 0151 83000000 		.4byte	0x83
 2510 0155 00       		.byte	0
 2511 0156 0F       		.uleb128 0xf
 2512 0157 ED020000 		.4byte	.LASF103
 2513 015b 01       		.byte	0x1
 2514 015c 5208     		.2byte	0x852
 2515 015e C6000000 		.4byte	0xc6
 2516 0162 01       		.byte	0x1
 2517 0163 98010000 		.4byte	0x198
 2518 0167 0A       		.uleb128 0xa
 2519 0168 C8020000 		.4byte	.LASF26
 2520 016c 01       		.byte	0x1
 2521 016d 5208     		.2byte	0x852
 2522 016f 6B000000 		.4byte	0x6b
 2523 0173 0A       		.uleb128 0xa
 2524 0174 7E030000 		.4byte	.LASF27
 2525 0178 01       		.byte	0x1
 2526 0179 5208     		.2byte	0x852
 2527 017b C6000000 		.4byte	0xc6
 2528 017f 10       		.uleb128 0x10
 2529 0180 40000000 		.4byte	.LASF28
 2530 0184 01       		.byte	0x1
 2531 0185 5408     		.2byte	0x854
 2532 0187 C6000000 		.4byte	0xc6
 2533 018b 10       		.uleb128 0x10
 2534 018c 00000000 		.4byte	.LASF29
 2535 0190 01       		.byte	0x1
 2536 0191 5508     		.2byte	0x855
 2537 0193 98010000 		.4byte	0x198
 2538 0197 00       		.byte	0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 102


 2539 0198 06       		.uleb128 0x6
 2540 0199 04       		.byte	0x4
 2541 019a C6000000 		.4byte	0xc6
 2542 019e 09       		.uleb128 0x9
 2543 019f 65060000 		.4byte	.LASF30
 2544 01a3 01       		.byte	0x1
 2545 01a4 2D0A     		.2byte	0xa2d
 2546 01a6 01       		.byte	0x1
 2547 01a7 B8010000 		.4byte	0x1b8
 2548 01ab 0A       		.uleb128 0xa
 2549 01ac E8010000 		.4byte	.LASF31
 2550 01b0 01       		.byte	0x1
 2551 01b1 2D0A     		.2byte	0xa2d
 2552 01b3 83000000 		.4byte	0x83
 2553 01b7 00       		.byte	0
 2554 01b8 0B       		.uleb128 0xb
 2555 01b9 1F020000 		.4byte	.LASF32
 2556 01bd 01       		.byte	0x1
 2557 01be 970A     		.2byte	0xa97
 2558 01c0 01       		.byte	0x1
 2559 01c1 09       		.uleb128 0x9
 2560 01c2 7B040000 		.4byte	.LASF33
 2561 01c6 01       		.byte	0x1
 2562 01c7 F008     		.2byte	0x8f0
 2563 01c9 01       		.byte	0x1
 2564 01ca DB010000 		.4byte	0x1db
 2565 01ce 0A       		.uleb128 0xa
 2566 01cf C8020000 		.4byte	.LASF26
 2567 01d3 01       		.byte	0x1
 2568 01d4 F008     		.2byte	0x8f0
 2569 01d6 6B000000 		.4byte	0x6b
 2570 01da 00       		.byte	0
 2571 01db 09       		.uleb128 0x9
 2572 01dc DA010000 		.4byte	.LASF34
 2573 01e0 01       		.byte	0x1
 2574 01e1 CC09     		.2byte	0x9cc
 2575 01e3 01       		.byte	0x1
 2576 01e4 F3010000 		.4byte	0x1f3
 2577 01e8 0E       		.uleb128 0xe
 2578 01e9 6900     		.ascii	"i\000"
 2579 01eb 01       		.byte	0x1
 2580 01ec CE09     		.2byte	0x9ce
 2581 01ee 83000000 		.4byte	0x83
 2582 01f2 00       		.byte	0
 2583 01f3 0B       		.uleb128 0xb
 2584 01f4 BC040000 		.4byte	.LASF35
 2585 01f8 01       		.byte	0x1
 2586 01f9 EB09     		.2byte	0x9eb
 2587 01fb 01       		.byte	0x1
 2588 01fc 11       		.uleb128 0x11
 2589 01fd 3E010000 		.4byte	0x13e
 2590 0201 00000000 		.4byte	.LFB42
 2591 0205 28000000 		.4byte	.LFE42-.LFB42
 2592 0209 01       		.uleb128 0x1
 2593 020a 9C       		.byte	0x9c
 2594 020b 34020000 		.4byte	0x234
 2595 020f 12       		.uleb128 0x12
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 103


 2596 0210 4B010000 		.4byte	0x14b
 2597 0214 13       		.uleb128 0x13
 2598 0215 31010000 		.4byte	0x131
 2599 0219 02000000 		.4byte	.LBB60
 2600 021d 04000000 		.4byte	.LBE60-.LBB60
 2601 0221 01       		.byte	0x1
 2602 0222 E40A     		.2byte	0xae4
 2603 0224 14       		.uleb128 0x14
 2604 0225 10000000 		.4byte	.LBB62
 2605 0229 18000000 		.4byte	.LBE62-.LBB62
 2606 022d 12       		.uleb128 0x12
 2607 022e 4B010000 		.4byte	0x14b
 2608 0232 00       		.byte	0
 2609 0233 00       		.byte	0
 2610 0234 15       		.uleb128 0x15
 2611 0235 79050000 		.4byte	.LASF36
 2612 0239 01       		.byte	0x1
 2613 023a 68       		.byte	0x68
 2614 023b 00000000 		.4byte	.LFB0
 2615 023f 14000000 		.4byte	.LFE0-.LFB0
 2616 0243 01       		.uleb128 0x1
 2617 0244 9C       		.byte	0x9c
 2618 0245 15       		.uleb128 0x15
 2619 0246 5B020000 		.4byte	.LASF37
 2620 024a 01       		.byte	0x1
 2621 024b 88       		.byte	0x88
 2622 024c 00000000 		.4byte	.LFB1
 2623 0250 10000000 		.4byte	.LFE1-.LFB1
 2624 0254 01       		.uleb128 0x1
 2625 0255 9C       		.byte	0x9c
 2626 0256 16       		.uleb128 0x16
 2627 0257 27000000 		.4byte	.LASF41
 2628 025b 01       		.byte	0x1
 2629 025c AA01     		.2byte	0x1aa
 2630 025e 00000000 		.4byte	.LFB2
 2631 0262 20000000 		.4byte	.LFE2-.LFB2
 2632 0266 01       		.uleb128 0x1
 2633 0267 9C       		.byte	0x9c
 2634 0268 AF020000 		.4byte	0x2af
 2635 026c 17       		.uleb128 0x17
 2636 026d 99040000 		.4byte	.LASF43
 2637 0271 01       		.byte	0x1
 2638 0272 AA01     		.2byte	0x1aa
 2639 0274 83000000 		.4byte	0x83
 2640 0278 00000000 		.4byte	.LLST0
 2641 027c 18       		.uleb128 0x18
 2642 027d 08010000 		.4byte	.LASF38
 2643 0281 01       		.byte	0x1
 2644 0282 AC01     		.2byte	0x1ac
 2645 0284 6B000000 		.4byte	0x6b
 2646 0288 2C000000 		.4byte	.LLST1
 2647 028c 18       		.uleb128 0x18
 2648 028d 5E060000 		.4byte	.LASF39
 2649 0291 01       		.byte	0x1
 2650 0292 AD01     		.2byte	0x1ad
 2651 0294 83000000 		.4byte	0x83
 2652 0298 3F000000 		.4byte	.LLST2
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 104


 2653 029c 19       		.uleb128 0x19
 2654 029d 08000000 		.4byte	.LVL2
 2655 02a1 F00C0000 		.4byte	0xcf0
 2656 02a5 19       		.uleb128 0x19
 2657 02a6 1A000000 		.4byte	.LVL5
 2658 02aa FB0C0000 		.4byte	0xcfb
 2659 02ae 00       		.byte	0
 2660 02af 1A       		.uleb128 0x1a
 2661 02b0 A4010000 		.4byte	.LASF55
 2662 02b4 01       		.byte	0x1
 2663 02b5 CF01     		.2byte	0x1cf
 2664 02b7 83000000 		.4byte	0x83
 2665 02bb 00000000 		.4byte	.LFB3
 2666 02bf 18000000 		.4byte	.LFE3-.LFB3
 2667 02c3 01       		.uleb128 0x1
 2668 02c4 9C       		.byte	0x9c
 2669 02c5 FC020000 		.4byte	0x2fc
 2670 02c9 18       		.uleb128 0x18
 2671 02ca 08010000 		.4byte	.LASF38
 2672 02ce 01       		.byte	0x1
 2673 02cf D101     		.2byte	0x1d1
 2674 02d1 6B000000 		.4byte	0x6b
 2675 02d5 5D000000 		.4byte	.LLST3
 2676 02d9 18       		.uleb128 0x18
 2677 02da 8E030000 		.4byte	.LASF40
 2678 02de 01       		.byte	0x1
 2679 02df D201     		.2byte	0x1d2
 2680 02e1 83000000 		.4byte	0x83
 2681 02e5 70000000 		.4byte	.LLST4
 2682 02e9 19       		.uleb128 0x19
 2683 02ea 06000000 		.4byte	.LVL7
 2684 02ee F00C0000 		.4byte	0xcf0
 2685 02f2 19       		.uleb128 0x19
 2686 02f3 0E000000 		.4byte	.LVL9
 2687 02f7 FB0C0000 		.4byte	0xcfb
 2688 02fb 00       		.byte	0
 2689 02fc 16       		.uleb128 0x16
 2690 02fd CC040000 		.4byte	.LASF42
 2691 0301 01       		.byte	0x1
 2692 0302 0602     		.2byte	0x206
 2693 0304 00000000 		.4byte	.LFB4
 2694 0308 28000000 		.4byte	.LFE4-.LFB4
 2695 030c 01       		.uleb128 0x1
 2696 030d 9C       		.byte	0x9c
 2697 030e 45030000 		.4byte	0x345
 2698 0312 17       		.uleb128 0x17
 2699 0313 71050000 		.4byte	.LASF44
 2700 0317 01       		.byte	0x1
 2701 0318 0602     		.2byte	0x206
 2702 031a 83000000 		.4byte	0x83
 2703 031e 92000000 		.4byte	.LLST5
 2704 0322 18       		.uleb128 0x18
 2705 0323 08010000 		.4byte	.LASF38
 2706 0327 01       		.byte	0x1
 2707 0328 0802     		.2byte	0x208
 2708 032a 6B000000 		.4byte	0x6b
 2709 032e BE000000 		.4byte	.LLST6
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 105


 2710 0332 19       		.uleb128 0x19
 2711 0333 08000000 		.4byte	.LVL12
 2712 0337 F00C0000 		.4byte	0xcf0
 2713 033b 19       		.uleb128 0x19
 2714 033c 1E000000 		.4byte	.LVL14
 2715 0340 FB0C0000 		.4byte	0xcfb
 2716 0344 00       		.byte	0
 2717 0345 16       		.uleb128 0x16
 2718 0346 D8020000 		.4byte	.LASF45
 2719 034a 01       		.byte	0x1
 2720 034b 4002     		.2byte	0x240
 2721 034d 00000000 		.4byte	.LFB5
 2722 0351 8C010000 		.4byte	.LFE5-.LFB5
 2723 0355 01       		.uleb128 0x1
 2724 0356 9C       		.byte	0x9c
 2725 0357 6C040000 		.4byte	0x46c
 2726 035b 17       		.uleb128 0x17
 2727 035c F7000000 		.4byte	.LASF46
 2728 0360 01       		.byte	0x1
 2729 0361 4002     		.2byte	0x240
 2730 0363 83000000 		.4byte	0x83
 2731 0367 D1000000 		.4byte	.LLST7
 2732 036b 18       		.uleb128 0x18
 2733 036c 0F000000 		.4byte	.LASF47
 2734 0370 01       		.byte	0x1
 2735 0371 4602     		.2byte	0x246
 2736 0373 6B000000 		.4byte	0x6b
 2737 0377 5A010000 		.4byte	.LLST8
 2738 037b 18       		.uleb128 0x18
 2739 037c 86030000 		.4byte	.LASF48
 2740 0380 01       		.byte	0x1
 2741 0381 4702     		.2byte	0x247
 2742 0383 6B000000 		.4byte	0x6b
 2743 0387 99010000 		.4byte	.LLST9
 2744 038b 18       		.uleb128 0x18
 2745 038c 21060000 		.4byte	.LASF49
 2746 0390 01       		.byte	0x1
 2747 0391 4802     		.2byte	0x248
 2748 0393 6B000000 		.4byte	0x6b
 2749 0397 D8010000 		.4byte	.LLST10
 2750 039b 18       		.uleb128 0x18
 2751 039c 5C000000 		.4byte	.LASF50
 2752 03a0 01       		.byte	0x1
 2753 03a1 4902     		.2byte	0x249
 2754 03a3 6B000000 		.4byte	0x6b
 2755 03a7 0C020000 		.4byte	.LLST11
 2756 03ab 18       		.uleb128 0x18
 2757 03ac 0B050000 		.4byte	.LASF51
 2758 03b0 01       		.byte	0x1
 2759 03b1 4A02     		.2byte	0x24a
 2760 03b3 6B000000 		.4byte	0x6b
 2761 03b7 2B020000 		.4byte	.LLST12
 2762 03bb 18       		.uleb128 0x18
 2763 03bc 08010000 		.4byte	.LASF38
 2764 03c0 01       		.byte	0x1
 2765 03c1 5502     		.2byte	0x255
 2766 03c3 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 106


 2767 03c7 6B020000 		.4byte	.LLST13
 2768 03cb 1B       		.uleb128 0x1b
 2769 03cc 05010000 		.4byte	0x105
 2770 03d0 72000000 		.4byte	.LBB63
 2771 03d4 00000000 		.4byte	.Ldebug_ranges0+0
 2772 03d8 01       		.byte	0x1
 2773 03d9 E902     		.2byte	0x2e9
 2774 03db FB030000 		.4byte	0x3fb
 2775 03df 1C       		.uleb128 0x1c
 2776 03e0 12010000 		.4byte	0x112
 2777 03e4 89020000 		.4byte	.LLST14
 2778 03e8 19       		.uleb128 0x19
 2779 03e9 7E000000 		.4byte	.LVL29
 2780 03ed 0C0D0000 		.4byte	0xd0c
 2781 03f1 19       		.uleb128 0x19
 2782 03f2 0C010000 		.4byte	.LVL51
 2783 03f6 0C0D0000 		.4byte	0xd0c
 2784 03fa 00       		.byte	0
 2785 03fb 1D       		.uleb128 0x1d
 2786 03fc EB000000 		.4byte	0xeb
 2787 0400 92000000 		.4byte	.LBB66
 2788 0404 02000000 		.4byte	.LBE66-.LBB66
 2789 0408 01       		.byte	0x1
 2790 0409 F502     		.2byte	0x2f5
 2791 040b 19040000 		.4byte	0x419
 2792 040f 1C       		.uleb128 0x1c
 2793 0410 F8000000 		.4byte	0xf8
 2794 0414 A9020000 		.4byte	.LLST15
 2795 0418 00       		.byte	0
 2796 0419 19       		.uleb128 0x19
 2797 041a 12000000 		.4byte	.LVL16
 2798 041e F00C0000 		.4byte	0xcf0
 2799 0422 1E       		.uleb128 0x1e
 2800 0423 58000000 		.4byte	.LVL23
 2801 0427 0C0D0000 		.4byte	0xd0c
 2802 042b 35040000 		.4byte	0x435
 2803 042f 1F       		.uleb128 0x1f
 2804 0430 01       		.uleb128 0x1
 2805 0431 50       		.byte	0x50
 2806 0432 01       		.uleb128 0x1
 2807 0433 35       		.byte	0x35
 2808 0434 00       		.byte	0
 2809 0435 1E       		.uleb128 0x1e
 2810 0436 90000000 		.4byte	.LVL31
 2811 043a 0C0D0000 		.4byte	0xd0c
 2812 043e 48040000 		.4byte	0x448
 2813 0442 1F       		.uleb128 0x1f
 2814 0443 01       		.uleb128 0x1
 2815 0444 50       		.byte	0x50
 2816 0445 01       		.uleb128 0x1
 2817 0446 35       		.byte	0x35
 2818 0447 00       		.byte	0
 2819 0448 1E       		.uleb128 0x1e
 2820 0449 9A000000 		.4byte	.LVL34
 2821 044d FB0C0000 		.4byte	0xcfb
 2822 0451 5C040000 		.4byte	0x45c
 2823 0455 1F       		.uleb128 0x1f
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 107


 2824 0456 01       		.uleb128 0x1
 2825 0457 50       		.byte	0x50
 2826 0458 02       		.uleb128 0x2
 2827 0459 77       		.byte	0x77
 2828 045a 00       		.sleb128 0
 2829 045b 00       		.byte	0
 2830 045c 20       		.uleb128 0x20
 2831 045d E6000000 		.4byte	.LVL45
 2832 0461 0C0D0000 		.4byte	0xd0c
 2833 0465 1F       		.uleb128 0x1f
 2834 0466 01       		.uleb128 0x1
 2835 0467 50       		.byte	0x50
 2836 0468 01       		.uleb128 0x1
 2837 0469 35       		.byte	0x35
 2838 046a 00       		.byte	0
 2839 046b 00       		.byte	0
 2840 046c 16       		.uleb128 0x16
 2841 046d 02040000 		.4byte	.LASF52
 2842 0471 01       		.byte	0x1
 2843 0472 B107     		.2byte	0x7b1
 2844 0474 00000000 		.4byte	.LFB6
 2845 0478 50000000 		.4byte	.LFE6-.LFB6
 2846 047c 01       		.uleb128 0x1
 2847 047d 9C       		.byte	0x9c
 2848 047e C8040000 		.4byte	0x4c8
 2849 0482 17       		.uleb128 0x17
 2850 0483 52040000 		.4byte	.LASF53
 2851 0487 01       		.byte	0x1
 2852 0488 B107     		.2byte	0x7b1
 2853 048a 83000000 		.4byte	0x83
 2854 048e BD020000 		.4byte	.LLST16
 2855 0492 1D       		.uleb128 0x1d
 2856 0493 05010000 		.4byte	0x105
 2857 0497 24000000 		.4byte	.LBB69
 2858 049b 0E000000 		.4byte	.LBE69-.LBB69
 2859 049f 01       		.byte	0x1
 2860 04a0 BE07     		.2byte	0x7be
 2861 04a2 B7040000 		.4byte	0x4b7
 2862 04a6 21       		.uleb128 0x21
 2863 04a7 12010000 		.4byte	0x112
 2864 04ab E803     		.2byte	0x3e8
 2865 04ad 19       		.uleb128 0x19
 2866 04ae 32000000 		.4byte	.LVL61
 2867 04b2 0C0D0000 		.4byte	0xd0c
 2868 04b6 00       		.byte	0
 2869 04b7 13       		.uleb128 0x13
 2870 04b8 1F010000 		.4byte	0x11f
 2871 04bc 32000000 		.4byte	.LBB71
 2872 04c0 04000000 		.4byte	.LBE71-.LBB71
 2873 04c4 01       		.byte	0x1
 2874 04c5 C107     		.2byte	0x7c1
 2875 04c7 00       		.byte	0
 2876 04c8 22       		.uleb128 0x22
 2877 04c9 44050000 		.4byte	.LASF54
 2878 04cd 01       		.byte	0x1
 2879 04ce CF07     		.2byte	0x7cf
 2880 04d0 00000000 		.4byte	.LFB7
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 108


 2881 04d4 20000000 		.4byte	.LFE7-.LFB7
 2882 04d8 01       		.uleb128 0x1
 2883 04d9 9C       		.byte	0x9c
 2884 04da 23       		.uleb128 0x23
 2885 04db 40020000 		.4byte	.LASF80
 2886 04df 01       		.byte	0x1
 2887 04e0 E107     		.2byte	0x7e1
 2888 04e2 83000000 		.4byte	0x83
 2889 04e6 00000000 		.4byte	.LFB8
 2890 04ea 10000000 		.4byte	.LFE8-.LFB8
 2891 04ee 01       		.uleb128 0x1
 2892 04ef 9C       		.byte	0x9c
 2893 04f0 24       		.uleb128 0x24
 2894 04f1 1F010000 		.4byte	0x11f
 2895 04f5 00000000 		.4byte	.LFB9
 2896 04f9 0C000000 		.4byte	.LFE9-.LFB9
 2897 04fd 01       		.uleb128 0x1
 2898 04fe 9C       		.byte	0x9c
 2899 04ff 1A       		.uleb128 0x1a
 2900 0500 92020000 		.4byte	.LASF56
 2901 0504 01       		.byte	0x1
 2902 0505 0B08     		.2byte	0x80b
 2903 0507 83000000 		.4byte	0x83
 2904 050b 00000000 		.4byte	.LFB10
 2905 050f 14000000 		.4byte	.LFE10-.LFB10
 2906 0513 01       		.uleb128 0x1
 2907 0514 9C       		.byte	0x9c
 2908 0515 3A050000 		.4byte	0x53a
 2909 0519 17       		.uleb128 0x17
 2910 051a A3040000 		.4byte	.LASF22
 2911 051e 01       		.byte	0x1
 2912 051f 0B08     		.2byte	0x80b
 2913 0521 83000000 		.4byte	0x83
 2914 0525 DE020000 		.4byte	.LLST17
 2915 0529 18       		.uleb128 0x18
 2916 052a 14030000 		.4byte	.LASF57
 2917 052e 01       		.byte	0x1
 2918 052f 0D08     		.2byte	0x80d
 2919 0531 83000000 		.4byte	0x83
 2920 0535 FC020000 		.4byte	.LLST18
 2921 0539 00       		.byte	0
 2922 053a 1A       		.uleb128 0x1a
 2923 053b 4E000000 		.4byte	.LASF58
 2924 053f 01       		.byte	0x1
 2925 0540 2208     		.2byte	0x822
 2926 0542 83000000 		.4byte	0x83
 2927 0546 00000000 		.4byte	.LFB11
 2928 054a 10000000 		.4byte	.LFE11-.LFB11
 2929 054e 01       		.uleb128 0x1
 2930 054f 9C       		.byte	0x9c
 2931 0550 63050000 		.4byte	0x563
 2932 0554 25       		.uleb128 0x25
 2933 0555 1E000000 		.4byte	.LASF59
 2934 0559 01       		.byte	0x1
 2935 055a 2408     		.2byte	0x824
 2936 055c 83000000 		.4byte	0x83
 2937 0560 01       		.uleb128 0x1
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 109


 2938 0561 50       		.byte	0x50
 2939 0562 00       		.byte	0
 2940 0563 16       		.uleb128 0x16
 2941 0564 99000000 		.4byte	.LASF60
 2942 0568 01       		.byte	0x1
 2943 0569 3908     		.2byte	0x839
 2944 056b 00000000 		.4byte	.LFB12
 2945 056f 0C000000 		.4byte	.LFE12-.LFB12
 2946 0573 01       		.uleb128 0x1
 2947 0574 9C       		.byte	0x9c
 2948 0575 88050000 		.4byte	0x588
 2949 0579 26       		.uleb128 0x26
 2950 057a 9F010000 		.4byte	.LASF61
 2951 057e 01       		.byte	0x1
 2952 057f 3908     		.2byte	0x839
 2953 0581 83000000 		.4byte	0x83
 2954 0585 01       		.uleb128 0x1
 2955 0586 50       		.byte	0x50
 2956 0587 00       		.byte	0
 2957 0588 27       		.uleb128 0x27
 2958 0589 56010000 		.4byte	0x156
 2959 058d 00000000 		.4byte	.LFB13
 2960 0591 14000000 		.4byte	.LFE13-.LFB13
 2961 0595 01       		.uleb128 0x1
 2962 0596 9C       		.byte	0x9c
 2963 0597 D6050000 		.4byte	0x5d6
 2964 059b 1C       		.uleb128 0x1c
 2965 059c 67010000 		.4byte	0x167
 2966 05a0 1E030000 		.4byte	.LLST19
 2967 05a4 28       		.uleb128 0x28
 2968 05a5 73010000 		.4byte	0x173
 2969 05a9 01       		.uleb128 0x1
 2970 05aa 51       		.byte	0x51
 2971 05ab 29       		.uleb128 0x29
 2972 05ac 7F010000 		.4byte	0x17f
 2973 05b0 01       		.uleb128 0x1
 2974 05b1 50       		.byte	0x50
 2975 05b2 2A       		.uleb128 0x2a
 2976 05b3 8B010000 		.4byte	0x18b
 2977 05b7 00000020 		.4byte	0x20000000
 2978 05bb 2B       		.uleb128 0x2b
 2979 05bc EB000000 		.4byte	0xeb
 2980 05c0 04000000 		.4byte	.LBB73
 2981 05c4 02000000 		.4byte	.LBE73-.LBB73
 2982 05c8 01       		.byte	0x1
 2983 05c9 5708     		.2byte	0x857
 2984 05cb 1C       		.uleb128 0x1c
 2985 05cc F8000000 		.4byte	0xf8
 2986 05d0 3F030000 		.4byte	.LLST20
 2987 05d4 00       		.byte	0
 2988 05d5 00       		.byte	0
 2989 05d6 1A       		.uleb128 0x1a
 2990 05d7 87040000 		.4byte	.LASF62
 2991 05db 01       		.byte	0x1
 2992 05dc 7408     		.2byte	0x874
 2993 05de C6000000 		.4byte	0xc6
 2994 05e2 00000000 		.4byte	.LFB14
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 110


 2995 05e6 14000000 		.4byte	.LFE14-.LFB14
 2996 05ea 01       		.uleb128 0x1
 2997 05eb 9C       		.byte	0x9c
 2998 05ec 2B060000 		.4byte	0x62b
 2999 05f0 17       		.uleb128 0x17
 3000 05f1 C8020000 		.4byte	.LASF26
 3001 05f5 01       		.byte	0x1
 3002 05f6 7408     		.2byte	0x874
 3003 05f8 6B000000 		.4byte	0x6b
 3004 05fc 53030000 		.4byte	.LLST21
 3005 0600 2C       		.uleb128 0x2c
 3006 0601 00000000 		.4byte	.LASF29
 3007 0605 01       		.byte	0x1
 3008 0606 7608     		.2byte	0x876
 3009 0608 98010000 		.4byte	0x198
 3010 060c 00000020 		.4byte	0x20000000
 3011 0610 2B       		.uleb128 0x2b
 3012 0611 EB000000 		.4byte	0xeb
 3013 0615 04000000 		.4byte	.LBB75
 3014 0619 02000000 		.4byte	.LBE75-.LBB75
 3015 061d 01       		.byte	0x1
 3016 061e 7808     		.2byte	0x878
 3017 0620 1C       		.uleb128 0x1c
 3018 0621 F8000000 		.4byte	0xf8
 3019 0625 74030000 		.4byte	.LLST22
 3020 0629 00       		.byte	0
 3021 062a 00       		.byte	0
 3022 062b 1A       		.uleb128 0x1a
 3023 062c B9020000 		.4byte	.LASF63
 3024 0630 01       		.byte	0x1
 3025 0631 8A08     		.2byte	0x88a
 3026 0633 C6000000 		.4byte	0xc6
 3027 0637 00000000 		.4byte	.LFB15
 3028 063b 18000000 		.4byte	.LFE15-.LFB15
 3029 063f 01       		.uleb128 0x1
 3030 0640 9C       		.byte	0x9c
 3031 0641 9C060000 		.4byte	0x69c
 3032 0645 17       		.uleb128 0x17
 3033 0646 C8020000 		.4byte	.LASF26
 3034 064a 01       		.byte	0x1
 3035 064b 8A08     		.2byte	0x88a
 3036 064d 6B000000 		.4byte	0x6b
 3037 0651 88030000 		.4byte	.LLST23
 3038 0655 26       		.uleb128 0x26
 3039 0656 7E030000 		.4byte	.LASF27
 3040 065a 01       		.byte	0x1
 3041 065b 8A08     		.2byte	0x88a
 3042 065d C6000000 		.4byte	0xc6
 3043 0661 01       		.uleb128 0x1
 3044 0662 51       		.byte	0x51
 3045 0663 25       		.uleb128 0x25
 3046 0664 40000000 		.4byte	.LASF28
 3047 0668 01       		.byte	0x1
 3048 0669 8C08     		.2byte	0x88c
 3049 066b C6000000 		.4byte	0xc6
 3050 066f 01       		.uleb128 0x1
 3051 0670 50       		.byte	0x50
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 111


 3052 0671 2C       		.uleb128 0x2c
 3053 0672 00000000 		.4byte	.LASF29
 3054 0676 01       		.byte	0x1
 3055 0677 8D08     		.2byte	0x88d
 3056 0679 98010000 		.4byte	0x198
 3057 067d 00000020 		.4byte	0x20000000
 3058 0681 2B       		.uleb128 0x2b
 3059 0682 EB000000 		.4byte	0xeb
 3060 0686 04000000 		.4byte	.LBB77
 3061 068a 02000000 		.4byte	.LBE77-.LBB77
 3062 068e 01       		.byte	0x1
 3063 068f 8F08     		.2byte	0x88f
 3064 0691 1C       		.uleb128 0x1c
 3065 0692 F8000000 		.4byte	0xf8
 3066 0696 A9030000 		.4byte	.LLST24
 3067 069a 00       		.byte	0
 3068 069b 00       		.byte	0
 3069 069c 1A       		.uleb128 0x1a
 3070 069d 23040000 		.4byte	.LASF64
 3071 06a1 01       		.byte	0x1
 3072 06a2 A608     		.2byte	0x8a6
 3073 06a4 C6000000 		.4byte	0xc6
 3074 06a8 00000000 		.4byte	.LFB16
 3075 06ac 18000000 		.4byte	.LFE16-.LFB16
 3076 06b0 01       		.uleb128 0x1
 3077 06b1 9C       		.byte	0x9c
 3078 06b2 F1060000 		.4byte	0x6f1
 3079 06b6 17       		.uleb128 0x17
 3080 06b7 C8020000 		.4byte	.LASF26
 3081 06bb 01       		.byte	0x1
 3082 06bc A608     		.2byte	0x8a6
 3083 06be 6B000000 		.4byte	0x6b
 3084 06c2 BD030000 		.4byte	.LLST25
 3085 06c6 2C       		.uleb128 0x2c
 3086 06c7 00000000 		.4byte	.LASF29
 3087 06cb 01       		.byte	0x1
 3088 06cc A808     		.2byte	0x8a8
 3089 06ce 98010000 		.4byte	0x198
 3090 06d2 00000020 		.4byte	0x20000000
 3091 06d6 2B       		.uleb128 0x2b
 3092 06d7 EB000000 		.4byte	0xeb
 3093 06db 04000000 		.4byte	.LBB79
 3094 06df 02000000 		.4byte	.LBE79-.LBB79
 3095 06e3 01       		.byte	0x1
 3096 06e4 AA08     		.2byte	0x8aa
 3097 06e6 1C       		.uleb128 0x1c
 3098 06e7 F8000000 		.4byte	0xf8
 3099 06eb DE030000 		.4byte	.LLST26
 3100 06ef 00       		.byte	0
 3101 06f0 00       		.byte	0
 3102 06f1 16       		.uleb128 0x16
 3103 06f2 D5030000 		.4byte	.LASF65
 3104 06f6 01       		.byte	0x1
 3105 06f7 B908     		.2byte	0x8b9
 3106 06f9 00000000 		.4byte	.LFB17
 3107 06fd 40000000 		.4byte	.LFE17-.LFB17
 3108 0701 01       		.uleb128 0x1
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 112


 3109 0702 9C       		.byte	0x9c
 3110 0703 A6070000 		.4byte	0x7a6
 3111 0707 17       		.uleb128 0x17
 3112 0708 C8020000 		.4byte	.LASF26
 3113 070c 01       		.byte	0x1
 3114 070d B908     		.2byte	0x8b9
 3115 070f 6B000000 		.4byte	0x6b
 3116 0713 F2030000 		.4byte	.LLST27
 3117 0717 17       		.uleb128 0x17
 3118 0718 CF020000 		.4byte	.LASF66
 3119 071c 01       		.byte	0x1
 3120 071d B908     		.2byte	0x8b9
 3121 071f 6B000000 		.4byte	0x6b
 3122 0723 13040000 		.4byte	.LLST28
 3123 0727 18       		.uleb128 0x18
 3124 0728 08010000 		.4byte	.LASF38
 3125 072c 01       		.byte	0x1
 3126 072d BB08     		.2byte	0x8bb
 3127 072f 6B000000 		.4byte	0x6b
 3128 0733 34040000 		.4byte	.LLST29
 3129 0737 18       		.uleb128 0x18
 3130 0738 7B010000 		.4byte	.LASF67
 3131 073c 01       		.byte	0x1
 3132 073d BC08     		.2byte	0x8bc
 3133 073f 83000000 		.4byte	0x83
 3134 0743 47040000 		.4byte	.LLST30
 3135 0747 18       		.uleb128 0x18
 3136 0748 E8010000 		.4byte	.LASF31
 3137 074c 01       		.byte	0x1
 3138 074d BD08     		.2byte	0x8bd
 3139 074f 83000000 		.4byte	0x83
 3140 0753 65040000 		.4byte	.LLST31
 3141 0757 1D       		.uleb128 0x1d
 3142 0758 EB000000 		.4byte	0xeb
 3143 075c 0A000000 		.4byte	.LBB81
 3144 0760 02000000 		.4byte	.LBE81-.LBB81
 3145 0764 01       		.byte	0x1
 3146 0765 BF08     		.2byte	0x8bf
 3147 0767 75070000 		.4byte	0x775
 3148 076b 1C       		.uleb128 0x1c
 3149 076c F8000000 		.4byte	0xf8
 3150 0770 8E040000 		.4byte	.LLST32
 3151 0774 00       		.byte	0
 3152 0775 1D       		.uleb128 0x1d
 3153 0776 EB000000 		.4byte	0xeb
 3154 077a 10000000 		.4byte	.LBB83
 3155 077e 02000000 		.4byte	.LBE83-.LBB83
 3156 0782 01       		.byte	0x1
 3157 0783 C008     		.2byte	0x8c0
 3158 0785 93070000 		.4byte	0x793
 3159 0789 1C       		.uleb128 0x1c
 3160 078a F8000000 		.4byte	0xf8
 3161 078e A2040000 		.4byte	.LLST33
 3162 0792 00       		.byte	0
 3163 0793 19       		.uleb128 0x19
 3164 0794 16000000 		.4byte	.LVL92
 3165 0798 F00C0000 		.4byte	0xcf0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 113


 3166 079c 19       		.uleb128 0x19
 3167 079d 3A000000 		.4byte	.LVL98
 3168 07a1 FB0C0000 		.4byte	0xcfb
 3169 07a5 00       		.byte	0
 3170 07a6 1A       		.uleb128 0x1a
 3171 07a7 BC010000 		.4byte	.LASF68
 3172 07ab 01       		.byte	0x1
 3173 07ac DB08     		.2byte	0x8db
 3174 07ae 6B000000 		.4byte	0x6b
 3175 07b2 00000000 		.4byte	.LFB18
 3176 07b6 28000000 		.4byte	.LFE18-.LFB18
 3177 07ba 01       		.uleb128 0x1
 3178 07bb 9C       		.byte	0x9c
 3179 07bc FB070000 		.4byte	0x7fb
 3180 07c0 17       		.uleb128 0x17
 3181 07c1 C8020000 		.4byte	.LASF26
 3182 07c5 01       		.byte	0x1
 3183 07c6 DB08     		.2byte	0x8db
 3184 07c8 6B000000 		.4byte	0x6b
 3185 07cc B6040000 		.4byte	.LLST34
 3186 07d0 18       		.uleb128 0x18
 3187 07d1 CF020000 		.4byte	.LASF66
 3188 07d5 01       		.byte	0x1
 3189 07d6 DD08     		.2byte	0x8dd
 3190 07d8 6B000000 		.4byte	0x6b
 3191 07dc D7040000 		.4byte	.LLST35
 3192 07e0 2B       		.uleb128 0x2b
 3193 07e1 EB000000 		.4byte	0xeb
 3194 07e5 04000000 		.4byte	.LBB85
 3195 07e9 02000000 		.4byte	.LBE85-.LBB85
 3196 07ed 01       		.byte	0x1
 3197 07ee DF08     		.2byte	0x8df
 3198 07f0 1C       		.uleb128 0x1c
 3199 07f1 F8000000 		.4byte	0xf8
 3200 07f5 F8040000 		.4byte	.LLST36
 3201 07f9 00       		.byte	0
 3202 07fa 00       		.byte	0
 3203 07fb 27       		.uleb128 0x27
 3204 07fc C1010000 		.4byte	0x1c1
 3205 0800 00000000 		.4byte	.LFB19
 3206 0804 14000000 		.4byte	.LFE19-.LFB19
 3207 0808 01       		.uleb128 0x1
 3208 0809 9C       		.byte	0x9c
 3209 080a 18080000 		.4byte	0x818
 3210 080e 1C       		.uleb128 0x1c
 3211 080f CE010000 		.4byte	0x1ce
 3212 0813 0C050000 		.4byte	.LLST37
 3213 0817 00       		.byte	0
 3214 0818 1A       		.uleb128 0x1a
 3215 0819 CF000000 		.4byte	.LASF69
 3216 081d 01       		.byte	0x1
 3217 081e 0209     		.2byte	0x902
 3218 0820 6B000000 		.4byte	0x6b
 3219 0824 00000000 		.4byte	.LFB20
 3220 0828 18000000 		.4byte	.LFE20-.LFB20
 3221 082c 01       		.uleb128 0x1
 3222 082d 9C       		.byte	0x9c
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 114


 3223 082e 43080000 		.4byte	0x843
 3224 0832 17       		.uleb128 0x17
 3225 0833 C8020000 		.4byte	.LASF26
 3226 0837 01       		.byte	0x1
 3227 0838 0209     		.2byte	0x902
 3228 083a 6B000000 		.4byte	0x6b
 3229 083e 2D050000 		.4byte	.LLST38
 3230 0842 00       		.byte	0
 3231 0843 16       		.uleb128 0x16
 3232 0844 33010000 		.4byte	.LASF70
 3233 0848 01       		.byte	0x1
 3234 0849 1209     		.2byte	0x912
 3235 084b 00000000 		.4byte	.LFB21
 3236 084f 14000000 		.4byte	.LFE21-.LFB21
 3237 0853 01       		.uleb128 0x1
 3238 0854 9C       		.byte	0x9c
 3239 0855 6A080000 		.4byte	0x86a
 3240 0859 17       		.uleb128 0x17
 3241 085a C8020000 		.4byte	.LASF26
 3242 085e 01       		.byte	0x1
 3243 085f 1209     		.2byte	0x912
 3244 0861 6B000000 		.4byte	0x6b
 3245 0865 4E050000 		.4byte	.LLST39
 3246 0869 00       		.byte	0
 3247 086a 16       		.uleb128 0x16
 3248 086b 82020000 		.4byte	.LASF71
 3249 086f 01       		.byte	0x1
 3250 0870 2009     		.2byte	0x920
 3251 0872 00000000 		.4byte	.LFB22
 3252 0876 14000000 		.4byte	.LFE22-.LFB22
 3253 087a 01       		.uleb128 0x1
 3254 087b 9C       		.byte	0x9c
 3255 087c 91080000 		.4byte	0x891
 3256 0880 17       		.uleb128 0x17
 3257 0881 C8020000 		.4byte	.LASF26
 3258 0885 01       		.byte	0x1
 3259 0886 2009     		.2byte	0x920
 3260 0888 6B000000 		.4byte	0x6b
 3261 088c 6F050000 		.4byte	.LLST40
 3262 0890 00       		.byte	0
 3263 0891 16       		.uleb128 0x16
 3264 0892 6C030000 		.4byte	.LASF72
 3265 0896 01       		.byte	0x1
 3266 0897 2F09     		.2byte	0x92f
 3267 0899 00000000 		.4byte	.LFB23
 3268 089d 14000000 		.4byte	.LFE23-.LFB23
 3269 08a1 01       		.uleb128 0x1
 3270 08a2 9C       		.byte	0x9c
 3271 08a3 B8080000 		.4byte	0x8b8
 3272 08a7 17       		.uleb128 0x17
 3273 08a8 C8020000 		.4byte	.LASF26
 3274 08ac 01       		.byte	0x1
 3275 08ad 2F09     		.2byte	0x92f
 3276 08af 6B000000 		.4byte	0x6b
 3277 08b3 90050000 		.4byte	.LLST41
 3278 08b7 00       		.byte	0
 3279 08b8 27       		.uleb128 0x27
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 115


 3280 08b9 EB000000 		.4byte	0xeb
 3281 08bd 00000000 		.4byte	.LFB24
 3282 08c1 04000000 		.4byte	.LFE24-.LFB24
 3283 08c5 01       		.uleb128 0x1
 3284 08c6 9C       		.byte	0x9c
 3285 08c7 D3080000 		.4byte	0x8d3
 3286 08cb 28       		.uleb128 0x28
 3287 08cc F8000000 		.4byte	0xf8
 3288 08d0 01       		.uleb128 0x1
 3289 08d1 50       		.byte	0x50
 3290 08d2 00       		.byte	0
 3291 08d3 22       		.uleb128 0x22
 3292 08d4 A6000000 		.4byte	.LASF73
 3293 08d8 01       		.byte	0x1
 3294 08d9 5609     		.2byte	0x956
 3295 08db 00000000 		.4byte	.LFB25
 3296 08df 18000000 		.4byte	.LFE25-.LFB25
 3297 08e3 01       		.uleb128 0x1
 3298 08e4 9C       		.byte	0x9c
 3299 08e5 16       		.uleb128 0x16
 3300 08e6 22050000 		.4byte	.LASF74
 3301 08ea 01       		.byte	0x1
 3302 08eb 6A09     		.2byte	0x96a
 3303 08ed 00000000 		.4byte	.LFB26
 3304 08f1 48000000 		.4byte	.LFE26-.LFB26
 3305 08f5 01       		.uleb128 0x1
 3306 08f6 9C       		.byte	0x9c
 3307 08f7 1E090000 		.4byte	0x91e
 3308 08fb 17       		.uleb128 0x17
 3309 08fc 32040000 		.4byte	.LASF75
 3310 0900 01       		.byte	0x1
 3311 0901 6A09     		.2byte	0x96a
 3312 0903 83000000 		.4byte	0x83
 3313 0907 B1050000 		.4byte	.LLST42
 3314 090b 19       		.uleb128 0x19
 3315 090c 16000000 		.4byte	.LVL118
 3316 0910 0C0D0000 		.4byte	0xd0c
 3317 0914 19       		.uleb128 0x19
 3318 0915 34000000 		.4byte	.LVL121
 3319 0919 0C0D0000 		.4byte	0xd0c
 3320 091d 00       		.byte	0
 3321 091e 27       		.uleb128 0x27
 3322 091f 05010000 		.4byte	0x105
 3323 0923 00000000 		.4byte	.LFB27
 3324 0927 14000000 		.4byte	.LFE27-.LFB27
 3325 092b 01       		.uleb128 0x1
 3326 092c 9C       		.byte	0x9c
 3327 092d 44090000 		.4byte	0x944
 3328 0931 1C       		.uleb128 0x1c
 3329 0932 12010000 		.4byte	0x112
 3330 0936 DA050000 		.4byte	.LLST43
 3331 093a 19       		.uleb128 0x19
 3332 093b 0C000000 		.4byte	.LVL125
 3333 093f 0C0D0000 		.4byte	0xd0c
 3334 0943 00       		.byte	0
 3335 0944 2D       		.uleb128 0x2d
 3336 0945 FC000000 		.4byte	.LASF76
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 116


 3337 0949 01       		.byte	0x1
 3338 094a 8F09     		.2byte	0x98f
 3339 094c 00000000 		.4byte	.LFB28
 3340 0950 58000000 		.4byte	.LFE28-.LFB28
 3341 0954 01       		.uleb128 0x1
 3342 0955 9C       		.byte	0x9c
 3343 0956 6B090000 		.4byte	0x96b
 3344 095a 17       		.uleb128 0x17
 3345 095b F7000000 		.4byte	.LASF46
 3346 095f 01       		.byte	0x1
 3347 0960 8F09     		.2byte	0x98f
 3348 0962 83000000 		.4byte	0x83
 3349 0966 FB050000 		.4byte	.LLST44
 3350 096a 00       		.byte	0
 3351 096b 2D       		.uleb128 0x2d
 3352 096c 05030000 		.4byte	.LASF77
 3353 0970 01       		.byte	0x1
 3354 0971 AF09     		.2byte	0x9af
 3355 0973 00000000 		.4byte	.LFB29
 3356 0977 70000000 		.4byte	.LFE29-.LFB29
 3357 097b 01       		.uleb128 0x1
 3358 097c 9C       		.byte	0x9c
 3359 097d 560A0000 		.4byte	0xa56
 3360 0981 1D       		.uleb128 0x1d
 3361 0982 DB010000 		.4byte	0x1db
 3362 0986 0A000000 		.4byte	.LBB87
 3363 098a 2C000000 		.4byte	.LBE87-.LBB87
 3364 098e 01       		.byte	0x1
 3365 098f B309     		.2byte	0x9b3
 3366 0991 340A0000 		.4byte	0xa34
 3367 0995 14       		.uleb128 0x14
 3368 0996 0A000000 		.4byte	.LBB88
 3369 099a 2C000000 		.4byte	.LBE88-.LBB88
 3370 099e 2E       		.uleb128 0x2e
 3371 099f E8010000 		.4byte	0x1e8
 3372 09a3 32060000 		.4byte	.LLST45
 3373 09a7 1B       		.uleb128 0x1b
 3374 09a8 56010000 		.4byte	0x156
 3375 09ac 0C000000 		.4byte	.LBB89
 3376 09b0 18000000 		.4byte	.Ldebug_ranges0+0x18
 3377 09b4 01       		.byte	0x1
 3378 09b5 D509     		.2byte	0x9d5
 3379 09b7 E6090000 		.4byte	0x9e6
 3380 09bb 1C       		.uleb128 0x1c
 3381 09bc 73010000 		.4byte	0x173
 3382 09c0 82060000 		.4byte	.LLST46
 3383 09c4 1C       		.uleb128 0x1c
 3384 09c5 67010000 		.4byte	0x167
 3385 09c9 9A060000 		.4byte	.LLST47
 3386 09cd 2F       		.uleb128 0x2f
 3387 09ce 18000000 		.4byte	.Ldebug_ranges0+0x18
 3388 09d2 2E       		.uleb128 0x2e
 3389 09d3 7F010000 		.4byte	0x17f
 3390 09d7 AE060000 		.4byte	.LLST48
 3391 09db 2E       		.uleb128 0x2e
 3392 09dc 8B010000 		.4byte	0x18b
 3393 09e0 C2060000 		.4byte	.LLST49
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 117


 3394 09e4 00       		.byte	0
 3395 09e5 00       		.byte	0
 3396 09e6 1B       		.uleb128 0x1b
 3397 09e7 C1010000 		.4byte	0x1c1
 3398 09eb 26000000 		.4byte	.LBB93
 3399 09ef 30000000 		.4byte	.Ldebug_ranges0+0x30
 3400 09f3 01       		.byte	0x1
 3401 09f4 DD09     		.2byte	0x9dd
 3402 09f6 040A0000 		.4byte	0xa04
 3403 09fa 1C       		.uleb128 0x1c
 3404 09fb CE010000 		.4byte	0x1ce
 3405 09ff D8060000 		.4byte	.LLST50
 3406 0a03 00       		.byte	0
 3407 0a04 1B       		.uleb128 0x1b
 3408 0a05 9E010000 		.4byte	0x19e
 3409 0a09 28000000 		.4byte	.LBB97
 3410 0a0d 50000000 		.4byte	.Ldebug_ranges0+0x50
 3411 0a11 01       		.byte	0x1
 3412 0a12 DB09     		.2byte	0x9db
 3413 0a14 220A0000 		.4byte	0xa22
 3414 0a18 1C       		.uleb128 0x1c
 3415 0a19 AB010000 		.4byte	0x1ab
 3416 0a1d EC060000 		.4byte	.LLST51
 3417 0a21 00       		.byte	0
 3418 0a22 13       		.uleb128 0x13
 3419 0a23 B8010000 		.4byte	0x1b8
 3420 0a27 2E000000 		.4byte	.LBB102
 3421 0a2b 04000000 		.4byte	.LBE102-.LBB102
 3422 0a2f 01       		.byte	0x1
 3423 0a30 DC09     		.2byte	0x9dc
 3424 0a32 00       		.byte	0
 3425 0a33 00       		.byte	0
 3426 0a34 30       		.uleb128 0x30
 3427 0a35 F3010000 		.4byte	0x1f3
 3428 0a39 3A000000 		.4byte	.LBB105
 3429 0a3d 68000000 		.4byte	.Ldebug_ranges0+0x68
 3430 0a41 01       		.byte	0x1
 3431 0a42 B709     		.2byte	0x9b7
 3432 0a44 31       		.uleb128 0x31
 3433 0a45 28010000 		.4byte	0x128
 3434 0a49 3A000000 		.4byte	.LBB107
 3435 0a4d 80000000 		.4byte	.Ldebug_ranges0+0x80
 3436 0a51 01       		.byte	0x1
 3437 0a52 ED09     		.2byte	0x9ed
 3438 0a54 00       		.byte	0
 3439 0a55 00       		.byte	0
 3440 0a56 11       		.uleb128 0x11
 3441 0a57 DB010000 		.4byte	0x1db
 3442 0a5b 00000000 		.4byte	.LFB30
 3443 0a5f 50000000 		.4byte	.LFE30-.LFB30
 3444 0a63 01       		.uleb128 0x1
 3445 0a64 9C       		.byte	0x9c
 3446 0a65 F90A0000 		.4byte	0xaf9
 3447 0a69 2E       		.uleb128 0x2e
 3448 0a6a E8010000 		.4byte	0x1e8
 3449 0a6e FF060000 		.4byte	.LLST52
 3450 0a72 1B       		.uleb128 0x1b
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 118


 3451 0a73 56010000 		.4byte	0x156
 3452 0a77 08000000 		.4byte	.LBB113
 3453 0a7b 98000000 		.4byte	.Ldebug_ranges0+0x98
 3454 0a7f 01       		.byte	0x1
 3455 0a80 D509     		.2byte	0x9d5
 3456 0a82 B10A0000 		.4byte	0xab1
 3457 0a86 28       		.uleb128 0x28
 3458 0a87 73010000 		.4byte	0x173
 3459 0a8b 06       		.uleb128 0x6
 3460 0a8c 03       		.byte	0x3
 3461 0a8d 00000000 		.4byte	CySysTickServiceCallbacks
 3462 0a91 9F       		.byte	0x9f
 3463 0a92 32       		.uleb128 0x32
 3464 0a93 67010000 		.4byte	0x167
 3465 0a97 0F       		.byte	0xf
 3466 0a98 2F       		.uleb128 0x2f
 3467 0a99 98000000 		.4byte	.Ldebug_ranges0+0x98
 3468 0a9d 2E       		.uleb128 0x2e
 3469 0a9e 7F010000 		.4byte	0x17f
 3470 0aa2 43070000 		.4byte	.LLST53
 3471 0aa6 2A       		.uleb128 0x2a
 3472 0aa7 8B010000 		.4byte	0x18b
 3473 0aab 00000020 		.4byte	0x20000000
 3474 0aaf 00       		.byte	0
 3475 0ab0 00       		.byte	0
 3476 0ab1 1B       		.uleb128 0x1b
 3477 0ab2 C1010000 		.4byte	0x1c1
 3478 0ab6 22000000 		.4byte	.LBB119
 3479 0aba B8000000 		.4byte	.Ldebug_ranges0+0xb8
 3480 0abe 01       		.byte	0x1
 3481 0abf DD09     		.2byte	0x9dd
 3482 0ac1 CC0A0000 		.4byte	0xacc
 3483 0ac5 32       		.uleb128 0x32
 3484 0ac6 CE010000 		.4byte	0x1ce
 3485 0aca 0F       		.byte	0xf
 3486 0acb 00       		.byte	0
 3487 0acc 1B       		.uleb128 0x1b
 3488 0acd 9E010000 		.4byte	0x19e
 3489 0ad1 24000000 		.4byte	.LBB123
 3490 0ad5 D8000000 		.4byte	.Ldebug_ranges0+0xd8
 3491 0ad9 01       		.byte	0x1
 3492 0ada DB09     		.2byte	0x9db
 3493 0adc E80A0000 		.4byte	0xae8
 3494 0ae0 28       		.uleb128 0x28
 3495 0ae1 AB010000 		.4byte	0x1ab
 3496 0ae5 01       		.uleb128 0x1
 3497 0ae6 50       		.byte	0x50
 3498 0ae7 00       		.byte	0
 3499 0ae8 13       		.uleb128 0x13
 3500 0ae9 B8010000 		.4byte	0x1b8
 3501 0aed 2A000000 		.4byte	.LBB128
 3502 0af1 04000000 		.4byte	.LBE128-.LBB128
 3503 0af5 01       		.byte	0x1
 3504 0af6 DC09     		.2byte	0x9dc
 3505 0af8 00       		.byte	0
 3506 0af9 27       		.uleb128 0x27
 3507 0afa F3010000 		.4byte	0x1f3
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 119


 3508 0afe 00000000 		.4byte	.LFB31
 3509 0b02 18000000 		.4byte	.LFE31-.LFB31
 3510 0b06 01       		.uleb128 0x1
 3511 0b07 9C       		.byte	0x9c
 3512 0b08 1D0B0000 		.4byte	0xb1d
 3513 0b0c 31       		.uleb128 0x31
 3514 0b0d 28010000 		.4byte	0x128
 3515 0b11 00000000 		.4byte	.LBB131
 3516 0b15 F0000000 		.4byte	.Ldebug_ranges0+0xf0
 3517 0b19 01       		.byte	0x1
 3518 0b1a ED09     		.2byte	0x9ed
 3519 0b1c 00       		.byte	0
 3520 0b1d 22       		.uleb128 0x22
 3521 0b1e 63050000 		.4byte	.LASF78
 3522 0b22 01       		.byte	0x1
 3523 0b23 FC09     		.2byte	0x9fc
 3524 0b25 00000000 		.4byte	.LFB32
 3525 0b29 10000000 		.4byte	.LFE32-.LFB32
 3526 0b2d 01       		.uleb128 0x1
 3527 0b2e 9C       		.byte	0x9c
 3528 0b2f 24       		.uleb128 0x24
 3529 0b30 28010000 		.4byte	0x128
 3530 0b34 00000000 		.4byte	.LFB33
 3531 0b38 10000000 		.4byte	.LFE33-.LFB33
 3532 0b3c 01       		.uleb128 0x1
 3533 0b3d 9C       		.byte	0x9c
 3534 0b3e 22       		.uleb128 0x22
 3535 0b3f 2A050000 		.4byte	.LASF79
 3536 0b43 01       		.byte	0x1
 3537 0b44 1C0A     		.2byte	0xa1c
 3538 0b46 00000000 		.4byte	.LFB34
 3539 0b4a 10000000 		.4byte	.LFE34-.LFB34
 3540 0b4e 01       		.uleb128 0x1
 3541 0b4f 9C       		.byte	0x9c
 3542 0b50 27       		.uleb128 0x27
 3543 0b51 9E010000 		.4byte	0x19e
 3544 0b55 00000000 		.4byte	.LFB35
 3545 0b59 10000000 		.4byte	.LFE35-.LFB35
 3546 0b5d 01       		.uleb128 0x1
 3547 0b5e 9C       		.byte	0x9c
 3548 0b5f 6D0B0000 		.4byte	0xb6d
 3549 0b63 1C       		.uleb128 0x1c
 3550 0b64 AB010000 		.4byte	0x1ab
 3551 0b68 66070000 		.4byte	.LLST54
 3552 0b6c 00       		.byte	0
 3553 0b6d 23       		.uleb128 0x23
 3554 0b6e 17010000 		.4byte	.LASF81
 3555 0b72 01       		.byte	0x1
 3556 0b73 3D0A     		.2byte	0xa3d
 3557 0b75 83000000 		.4byte	0x83
 3558 0b79 00000000 		.4byte	.LFB36
 3559 0b7d 10000000 		.4byte	.LFE36-.LFB36
 3560 0b81 01       		.uleb128 0x1
 3561 0b82 9C       		.byte	0x9c
 3562 0b83 23       		.uleb128 0x23
 3563 0b84 B5030000 		.4byte	.LASF82
 3564 0b88 01       		.byte	0x1
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 120


 3565 0b89 4D0A     		.2byte	0xa4d
 3566 0b8b 83000000 		.4byte	0x83
 3567 0b8f 00000000 		.4byte	.LFB37
 3568 0b93 10000000 		.4byte	.LFE37-.LFB37
 3569 0b97 01       		.uleb128 0x1
 3570 0b98 9C       		.byte	0x9c
 3571 0b99 24       		.uleb128 0x24
 3572 0b9a 31010000 		.4byte	0x131
 3573 0b9e 00000000 		.4byte	.LFB38
 3574 0ba2 10000000 		.4byte	.LFE38-.LFB38
 3575 0ba6 01       		.uleb128 0x1
 3576 0ba7 9C       		.byte	0x9c
 3577 0ba8 24       		.uleb128 0x24
 3578 0ba9 B8010000 		.4byte	0x1b8
 3579 0bad 00000000 		.4byte	.LFB39
 3580 0bb1 0C000000 		.4byte	.LFE39-.LFB39
 3581 0bb5 01       		.uleb128 0x1
 3582 0bb6 9C       		.byte	0x9c
 3583 0bb7 1A       		.uleb128 0x1a
 3584 0bb8 E3040000 		.4byte	.LASF83
 3585 0bbc 01       		.byte	0x1
 3586 0bbd BA0A     		.2byte	0xaba
 3587 0bbf E0000000 		.4byte	0xe0
 3588 0bc3 00000000 		.4byte	.LFB40
 3589 0bc7 10000000 		.4byte	.LFE40-.LFB40
 3590 0bcb 01       		.uleb128 0x1
 3591 0bcc 9C       		.byte	0x9c
 3592 0bcd FE0B0000 		.4byte	0xbfe
 3593 0bd1 17       		.uleb128 0x17
 3594 0bd2 C8020000 		.4byte	.LASF26
 3595 0bd6 01       		.byte	0x1
 3596 0bd7 BA0A     		.2byte	0xaba
 3597 0bd9 83000000 		.4byte	0x83
 3598 0bdd 87070000 		.4byte	.LLST55
 3599 0be1 26       		.uleb128 0x26
 3600 0be2 9B030000 		.4byte	.LASF84
 3601 0be6 01       		.byte	0x1
 3602 0be7 BA0A     		.2byte	0xaba
 3603 0be9 E0000000 		.4byte	0xe0
 3604 0bed 01       		.uleb128 0x1
 3605 0bee 51       		.byte	0x51
 3606 0bef 25       		.uleb128 0x25
 3607 0bf0 47000000 		.4byte	.LASF85
 3608 0bf4 01       		.byte	0x1
 3609 0bf5 BC0A     		.2byte	0xabc
 3610 0bf7 E0000000 		.4byte	0xe0
 3611 0bfb 01       		.uleb128 0x1
 3612 0bfc 50       		.byte	0x50
 3613 0bfd 00       		.byte	0
 3614 0bfe 1A       		.uleb128 0x1a
 3615 0bff 40010000 		.4byte	.LASF86
 3616 0c03 01       		.byte	0x1
 3617 0c04 D20A     		.2byte	0xad2
 3618 0c06 E0000000 		.4byte	0xe0
 3619 0c0a 00000000 		.4byte	.LFB41
 3620 0c0e 0C000000 		.4byte	.LFE41-.LFB41
 3621 0c12 01       		.uleb128 0x1
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 121


 3622 0c13 9C       		.byte	0x9c
 3623 0c14 290C0000 		.4byte	0xc29
 3624 0c18 17       		.uleb128 0x17
 3625 0c19 C8020000 		.4byte	.LASF26
 3626 0c1d 01       		.byte	0x1
 3627 0c1e D20A     		.2byte	0xad2
 3628 0c20 83000000 		.4byte	0x83
 3629 0c24 A8070000 		.4byte	.LLST56
 3630 0c28 00       		.byte	0
 3631 0c29 16       		.uleb128 0x16
 3632 0c2a EE010000 		.4byte	.LASF87
 3633 0c2e 01       		.byte	0x1
 3634 0c2f FF0A     		.2byte	0xaff
 3635 0c31 00000000 		.4byte	.LFB43
 3636 0c35 70000000 		.4byte	.LFE43-.LFB43
 3637 0c39 01       		.uleb128 0x1
 3638 0c3a 9C       		.byte	0x9c
 3639 0c3b 4E0C0000 		.4byte	0xc4e
 3640 0c3f 26       		.uleb128 0x26
 3641 0c40 19050000 		.4byte	.LASF88
 3642 0c44 01       		.byte	0x1
 3643 0c45 FF0A     		.2byte	0xaff
 3644 0c47 4E0C0000 		.4byte	0xc4e
 3645 0c4b 01       		.uleb128 0x1
 3646 0c4c 50       		.byte	0x50
 3647 0c4d 00       		.byte	0
 3648 0c4e 06       		.uleb128 0x6
 3649 0c4f 04       		.byte	0x4
 3650 0c50 83000000 		.4byte	0x83
 3651 0c54 33       		.uleb128 0x33
 3652 0c55 E0000000 		.4byte	0xe0
 3653 0c59 640C0000 		.4byte	0xc64
 3654 0c5d 34       		.uleb128 0x34
 3655 0c5e D9000000 		.4byte	0xd9
 3656 0c62 04       		.byte	0x4
 3657 0c63 00       		.byte	0
 3658 0c64 35       		.uleb128 0x35
 3659 0c65 F8040000 		.4byte	.LASF89
 3660 0c69 01       		.byte	0x1
 3661 0c6a 22       		.byte	0x22
 3662 0c6b 540C0000 		.4byte	0xc54
 3663 0c6f 05       		.uleb128 0x5
 3664 0c70 03       		.byte	0x3
 3665 0c71 00000000 		.4byte	CySysTickCallbacks
 3666 0c75 36       		.uleb128 0x36
 3667 0c76 C7030000 		.4byte	.LASF90
 3668 0c7a 01       		.byte	0x1
 3669 0c7b 1B       		.byte	0x1b
 3670 0c7c 83000000 		.4byte	0x83
 3671 0c80 05       		.uleb128 0x5
 3672 0c81 03       		.byte	0x3
 3673 0c82 00000000 		.4byte	cydelayFreqHz
 3674 0c86 36       		.uleb128 0x36
 3675 0c87 5B010000 		.4byte	.LASF91
 3676 0c8b 01       		.byte	0x1
 3677 0c8c 1C       		.byte	0x1c
 3678 0c8d 83000000 		.4byte	0x83
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 122


 3679 0c91 05       		.uleb128 0x5
 3680 0c92 03       		.byte	0x3
 3681 0c93 00000000 		.4byte	cydelayFreqKhz
 3682 0c97 36       		.uleb128 0x36
 3683 0c98 54050000 		.4byte	.LASF92
 3684 0c9c 01       		.byte	0x1
 3685 0c9d 1D       		.byte	0x1d
 3686 0c9e 6B000000 		.4byte	0x6b
 3687 0ca2 05       		.uleb128 0x5
 3688 0ca3 03       		.byte	0x3
 3689 0ca4 00000000 		.4byte	cydelayFreqMhz
 3690 0ca8 36       		.uleb128 0x36
 3691 0ca9 CD010000 		.4byte	.LASF93
 3692 0cad 01       		.byte	0x1
 3693 0cae 1E       		.byte	0x1e
 3694 0caf 83000000 		.4byte	0x83
 3695 0cb3 05       		.uleb128 0x5
 3696 0cb4 03       		.byte	0x3
 3697 0cb5 00000000 		.4byte	cydelay32kMs
 3698 0cb9 36       		.uleb128 0x36
 3699 0cba 88000000 		.4byte	.LASF94
 3700 0cbe 01       		.byte	0x1
 3701 0cbf 35       		.byte	0x35
 3702 0cc0 83000000 		.4byte	0x83
 3703 0cc4 05       		.uleb128 0x5
 3704 0cc5 03       		.byte	0x3
 3705 0cc6 00000000 		.4byte	CySysTickInitVar
 3706 0cca 33       		.uleb128 0x33
 3707 0ccb 6B000000 		.4byte	0x6b
 3708 0ccf DA0C0000 		.4byte	0xcda
 3709 0cd3 34       		.uleb128 0x34
 3710 0cd4 D9000000 		.4byte	0xd9
 3711 0cd8 2D       		.byte	0x2d
 3712 0cd9 00       		.byte	0
 3713 0cda 36       		.uleb128 0x36
 3714 0cdb A4030000 		.4byte	.LASF95
 3715 0cdf 01       		.byte	0x1
 3716 0ce0 3A       		.byte	0x3a
 3717 0ce1 EB0C0000 		.4byte	0xceb
 3718 0ce5 05       		.uleb128 0x5
 3719 0ce6 03       		.byte	0x3
 3720 0ce7 00000000 		.4byte	cyImoFreqMhz2Reg
 3721 0ceb 37       		.uleb128 0x37
 3722 0cec CA0C0000 		.4byte	0xcca
 3723 0cf0 38       		.uleb128 0x38
 3724 0cf1 6B020000 		.4byte	.LASF97
 3725 0cf5 03       		.byte	0x3
 3726 0cf6 E3       		.byte	0xe3
 3727 0cf7 6B000000 		.4byte	0x6b
 3728 0cfb 39       		.uleb128 0x39
 3729 0cfc EC030000 		.4byte	.LASF98
 3730 0d00 03       		.byte	0x3
 3731 0d01 E4       		.byte	0xe4
 3732 0d02 0C0D0000 		.4byte	0xd0c
 3733 0d06 3A       		.uleb128 0x3a
 3734 0d07 6B000000 		.4byte	0x6b
 3735 0d0b 00       		.byte	0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 123


 3736 0d0c 3B       		.uleb128 0x3b
 3737 0d0d 3F040000 		.4byte	.LASF104
 3738 0d11 03       		.byte	0x3
 3739 0d12 DA       		.byte	0xda
 3740 0d13 3A       		.uleb128 0x3a
 3741 0d14 83000000 		.4byte	0x83
 3742 0d18 00       		.byte	0
 3743 0d19 00       		.byte	0
 3744              		.section	.debug_abbrev,"",%progbits
 3745              	.Ldebug_abbrev0:
 3746 0000 01       		.uleb128 0x1
 3747 0001 11       		.uleb128 0x11
 3748 0002 01       		.byte	0x1
 3749 0003 25       		.uleb128 0x25
 3750 0004 0E       		.uleb128 0xe
 3751 0005 13       		.uleb128 0x13
 3752 0006 0B       		.uleb128 0xb
 3753 0007 03       		.uleb128 0x3
 3754 0008 0E       		.uleb128 0xe
 3755 0009 1B       		.uleb128 0x1b
 3756 000a 0E       		.uleb128 0xe
 3757 000b 55       		.uleb128 0x55
 3758 000c 17       		.uleb128 0x17
 3759 000d 11       		.uleb128 0x11
 3760 000e 01       		.uleb128 0x1
 3761 000f 10       		.uleb128 0x10
 3762 0010 17       		.uleb128 0x17
 3763 0011 00       		.byte	0
 3764 0012 00       		.byte	0
 3765 0013 02       		.uleb128 0x2
 3766 0014 24       		.uleb128 0x24
 3767 0015 00       		.byte	0
 3768 0016 0B       		.uleb128 0xb
 3769 0017 0B       		.uleb128 0xb
 3770 0018 3E       		.uleb128 0x3e
 3771 0019 0B       		.uleb128 0xb
 3772 001a 03       		.uleb128 0x3
 3773 001b 0E       		.uleb128 0xe
 3774 001c 00       		.byte	0
 3775 001d 00       		.byte	0
 3776 001e 03       		.uleb128 0x3
 3777 001f 24       		.uleb128 0x24
 3778 0020 00       		.byte	0
 3779 0021 0B       		.uleb128 0xb
 3780 0022 0B       		.uleb128 0xb
 3781 0023 3E       		.uleb128 0x3e
 3782 0024 0B       		.uleb128 0xb
 3783 0025 03       		.uleb128 0x3
 3784 0026 08       		.uleb128 0x8
 3785 0027 00       		.byte	0
 3786 0028 00       		.byte	0
 3787 0029 04       		.uleb128 0x4
 3788 002a 16       		.uleb128 0x16
 3789 002b 00       		.byte	0
 3790 002c 03       		.uleb128 0x3
 3791 002d 0E       		.uleb128 0xe
 3792 002e 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 124


 3793 002f 0B       		.uleb128 0xb
 3794 0030 3B       		.uleb128 0x3b
 3795 0031 05       		.uleb128 0x5
 3796 0032 49       		.uleb128 0x49
 3797 0033 13       		.uleb128 0x13
 3798 0034 00       		.byte	0
 3799 0035 00       		.byte	0
 3800 0036 05       		.uleb128 0x5
 3801 0037 35       		.uleb128 0x35
 3802 0038 00       		.byte	0
 3803 0039 49       		.uleb128 0x49
 3804 003a 13       		.uleb128 0x13
 3805 003b 00       		.byte	0
 3806 003c 00       		.byte	0
 3807 003d 06       		.uleb128 0x6
 3808 003e 0F       		.uleb128 0xf
 3809 003f 00       		.byte	0
 3810 0040 0B       		.uleb128 0xb
 3811 0041 0B       		.uleb128 0xb
 3812 0042 49       		.uleb128 0x49
 3813 0043 13       		.uleb128 0x13
 3814 0044 00       		.byte	0
 3815 0045 00       		.byte	0
 3816 0046 07       		.uleb128 0x7
 3817 0047 15       		.uleb128 0x15
 3818 0048 00       		.byte	0
 3819 0049 27       		.uleb128 0x27
 3820 004a 19       		.uleb128 0x19
 3821 004b 00       		.byte	0
 3822 004c 00       		.byte	0
 3823 004d 08       		.uleb128 0x8
 3824 004e 16       		.uleb128 0x16
 3825 004f 00       		.byte	0
 3826 0050 03       		.uleb128 0x3
 3827 0051 0E       		.uleb128 0xe
 3828 0052 3A       		.uleb128 0x3a
 3829 0053 0B       		.uleb128 0xb
 3830 0054 3B       		.uleb128 0x3b
 3831 0055 0B       		.uleb128 0xb
 3832 0056 49       		.uleb128 0x49
 3833 0057 13       		.uleb128 0x13
 3834 0058 00       		.byte	0
 3835 0059 00       		.byte	0
 3836 005a 09       		.uleb128 0x9
 3837 005b 2E       		.uleb128 0x2e
 3838 005c 01       		.byte	0x1
 3839 005d 3F       		.uleb128 0x3f
 3840 005e 19       		.uleb128 0x19
 3841 005f 03       		.uleb128 0x3
 3842 0060 0E       		.uleb128 0xe
 3843 0061 3A       		.uleb128 0x3a
 3844 0062 0B       		.uleb128 0xb
 3845 0063 3B       		.uleb128 0x3b
 3846 0064 05       		.uleb128 0x5
 3847 0065 27       		.uleb128 0x27
 3848 0066 19       		.uleb128 0x19
 3849 0067 20       		.uleb128 0x20
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 125


 3850 0068 0B       		.uleb128 0xb
 3851 0069 01       		.uleb128 0x1
 3852 006a 13       		.uleb128 0x13
 3853 006b 00       		.byte	0
 3854 006c 00       		.byte	0
 3855 006d 0A       		.uleb128 0xa
 3856 006e 05       		.uleb128 0x5
 3857 006f 00       		.byte	0
 3858 0070 03       		.uleb128 0x3
 3859 0071 0E       		.uleb128 0xe
 3860 0072 3A       		.uleb128 0x3a
 3861 0073 0B       		.uleb128 0xb
 3862 0074 3B       		.uleb128 0x3b
 3863 0075 05       		.uleb128 0x5
 3864 0076 49       		.uleb128 0x49
 3865 0077 13       		.uleb128 0x13
 3866 0078 00       		.byte	0
 3867 0079 00       		.byte	0
 3868 007a 0B       		.uleb128 0xb
 3869 007b 2E       		.uleb128 0x2e
 3870 007c 00       		.byte	0
 3871 007d 3F       		.uleb128 0x3f
 3872 007e 19       		.uleb128 0x19
 3873 007f 03       		.uleb128 0x3
 3874 0080 0E       		.uleb128 0xe
 3875 0081 3A       		.uleb128 0x3a
 3876 0082 0B       		.uleb128 0xb
 3877 0083 3B       		.uleb128 0x3b
 3878 0084 05       		.uleb128 0x5
 3879 0085 27       		.uleb128 0x27
 3880 0086 19       		.uleb128 0x19
 3881 0087 20       		.uleb128 0x20
 3882 0088 0B       		.uleb128 0xb
 3883 0089 00       		.byte	0
 3884 008a 00       		.byte	0
 3885 008b 0C       		.uleb128 0xc
 3886 008c 2E       		.uleb128 0x2e
 3887 008d 00       		.byte	0
 3888 008e 3F       		.uleb128 0x3f
 3889 008f 19       		.uleb128 0x19
 3890 0090 03       		.uleb128 0x3
 3891 0091 0E       		.uleb128 0xe
 3892 0092 3A       		.uleb128 0x3a
 3893 0093 0B       		.uleb128 0xb
 3894 0094 3B       		.uleb128 0x3b
 3895 0095 05       		.uleb128 0x5
 3896 0096 27       		.uleb128 0x27
 3897 0097 19       		.uleb128 0x19
 3898 0098 49       		.uleb128 0x49
 3899 0099 13       		.uleb128 0x13
 3900 009a 20       		.uleb128 0x20
 3901 009b 0B       		.uleb128 0xb
 3902 009c 00       		.byte	0
 3903 009d 00       		.byte	0
 3904 009e 0D       		.uleb128 0xd
 3905 009f 2E       		.uleb128 0x2e
 3906 00a0 01       		.byte	0x1
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 126


 3907 00a1 03       		.uleb128 0x3
 3908 00a2 0E       		.uleb128 0xe
 3909 00a3 3A       		.uleb128 0x3a
 3910 00a4 0B       		.uleb128 0xb
 3911 00a5 3B       		.uleb128 0x3b
 3912 00a6 05       		.uleb128 0x5
 3913 00a7 27       		.uleb128 0x27
 3914 00a8 19       		.uleb128 0x19
 3915 00a9 20       		.uleb128 0x20
 3916 00aa 0B       		.uleb128 0xb
 3917 00ab 01       		.uleb128 0x1
 3918 00ac 13       		.uleb128 0x13
 3919 00ad 00       		.byte	0
 3920 00ae 00       		.byte	0
 3921 00af 0E       		.uleb128 0xe
 3922 00b0 34       		.uleb128 0x34
 3923 00b1 00       		.byte	0
 3924 00b2 03       		.uleb128 0x3
 3925 00b3 08       		.uleb128 0x8
 3926 00b4 3A       		.uleb128 0x3a
 3927 00b5 0B       		.uleb128 0xb
 3928 00b6 3B       		.uleb128 0x3b
 3929 00b7 05       		.uleb128 0x5
 3930 00b8 49       		.uleb128 0x49
 3931 00b9 13       		.uleb128 0x13
 3932 00ba 00       		.byte	0
 3933 00bb 00       		.byte	0
 3934 00bc 0F       		.uleb128 0xf
 3935 00bd 2E       		.uleb128 0x2e
 3936 00be 01       		.byte	0x1
 3937 00bf 3F       		.uleb128 0x3f
 3938 00c0 19       		.uleb128 0x19
 3939 00c1 03       		.uleb128 0x3
 3940 00c2 0E       		.uleb128 0xe
 3941 00c3 3A       		.uleb128 0x3a
 3942 00c4 0B       		.uleb128 0xb
 3943 00c5 3B       		.uleb128 0x3b
 3944 00c6 05       		.uleb128 0x5
 3945 00c7 27       		.uleb128 0x27
 3946 00c8 19       		.uleb128 0x19
 3947 00c9 49       		.uleb128 0x49
 3948 00ca 13       		.uleb128 0x13
 3949 00cb 20       		.uleb128 0x20
 3950 00cc 0B       		.uleb128 0xb
 3951 00cd 01       		.uleb128 0x1
 3952 00ce 13       		.uleb128 0x13
 3953 00cf 00       		.byte	0
 3954 00d0 00       		.byte	0
 3955 00d1 10       		.uleb128 0x10
 3956 00d2 34       		.uleb128 0x34
 3957 00d3 00       		.byte	0
 3958 00d4 03       		.uleb128 0x3
 3959 00d5 0E       		.uleb128 0xe
 3960 00d6 3A       		.uleb128 0x3a
 3961 00d7 0B       		.uleb128 0xb
 3962 00d8 3B       		.uleb128 0x3b
 3963 00d9 05       		.uleb128 0x5
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 127


 3964 00da 49       		.uleb128 0x49
 3965 00db 13       		.uleb128 0x13
 3966 00dc 00       		.byte	0
 3967 00dd 00       		.byte	0
 3968 00de 11       		.uleb128 0x11
 3969 00df 2E       		.uleb128 0x2e
 3970 00e0 01       		.byte	0x1
 3971 00e1 31       		.uleb128 0x31
 3972 00e2 13       		.uleb128 0x13
 3973 00e3 11       		.uleb128 0x11
 3974 00e4 01       		.uleb128 0x1
 3975 00e5 12       		.uleb128 0x12
 3976 00e6 06       		.uleb128 0x6
 3977 00e7 40       		.uleb128 0x40
 3978 00e8 18       		.uleb128 0x18
 3979 00e9 9642     		.uleb128 0x2116
 3980 00eb 19       		.uleb128 0x19
 3981 00ec 01       		.uleb128 0x1
 3982 00ed 13       		.uleb128 0x13
 3983 00ee 00       		.byte	0
 3984 00ef 00       		.byte	0
 3985 00f0 12       		.uleb128 0x12
 3986 00f1 34       		.uleb128 0x34
 3987 00f2 00       		.byte	0
 3988 00f3 31       		.uleb128 0x31
 3989 00f4 13       		.uleb128 0x13
 3990 00f5 00       		.byte	0
 3991 00f6 00       		.byte	0
 3992 00f7 13       		.uleb128 0x13
 3993 00f8 1D       		.uleb128 0x1d
 3994 00f9 00       		.byte	0
 3995 00fa 31       		.uleb128 0x31
 3996 00fb 13       		.uleb128 0x13
 3997 00fc 11       		.uleb128 0x11
 3998 00fd 01       		.uleb128 0x1
 3999 00fe 12       		.uleb128 0x12
 4000 00ff 06       		.uleb128 0x6
 4001 0100 58       		.uleb128 0x58
 4002 0101 0B       		.uleb128 0xb
 4003 0102 59       		.uleb128 0x59
 4004 0103 05       		.uleb128 0x5
 4005 0104 00       		.byte	0
 4006 0105 00       		.byte	0
 4007 0106 14       		.uleb128 0x14
 4008 0107 0B       		.uleb128 0xb
 4009 0108 01       		.byte	0x1
 4010 0109 11       		.uleb128 0x11
 4011 010a 01       		.uleb128 0x1
 4012 010b 12       		.uleb128 0x12
 4013 010c 06       		.uleb128 0x6
 4014 010d 00       		.byte	0
 4015 010e 00       		.byte	0
 4016 010f 15       		.uleb128 0x15
 4017 0110 2E       		.uleb128 0x2e
 4018 0111 00       		.byte	0
 4019 0112 3F       		.uleb128 0x3f
 4020 0113 19       		.uleb128 0x19
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 128


 4021 0114 03       		.uleb128 0x3
 4022 0115 0E       		.uleb128 0xe
 4023 0116 3A       		.uleb128 0x3a
 4024 0117 0B       		.uleb128 0xb
 4025 0118 3B       		.uleb128 0x3b
 4026 0119 0B       		.uleb128 0xb
 4027 011a 27       		.uleb128 0x27
 4028 011b 19       		.uleb128 0x19
 4029 011c 11       		.uleb128 0x11
 4030 011d 01       		.uleb128 0x1
 4031 011e 12       		.uleb128 0x12
 4032 011f 06       		.uleb128 0x6
 4033 0120 40       		.uleb128 0x40
 4034 0121 18       		.uleb128 0x18
 4035 0122 9742     		.uleb128 0x2117
 4036 0124 19       		.uleb128 0x19
 4037 0125 00       		.byte	0
 4038 0126 00       		.byte	0
 4039 0127 16       		.uleb128 0x16
 4040 0128 2E       		.uleb128 0x2e
 4041 0129 01       		.byte	0x1
 4042 012a 3F       		.uleb128 0x3f
 4043 012b 19       		.uleb128 0x19
 4044 012c 03       		.uleb128 0x3
 4045 012d 0E       		.uleb128 0xe
 4046 012e 3A       		.uleb128 0x3a
 4047 012f 0B       		.uleb128 0xb
 4048 0130 3B       		.uleb128 0x3b
 4049 0131 05       		.uleb128 0x5
 4050 0132 27       		.uleb128 0x27
 4051 0133 19       		.uleb128 0x19
 4052 0134 11       		.uleb128 0x11
 4053 0135 01       		.uleb128 0x1
 4054 0136 12       		.uleb128 0x12
 4055 0137 06       		.uleb128 0x6
 4056 0138 40       		.uleb128 0x40
 4057 0139 18       		.uleb128 0x18
 4058 013a 9742     		.uleb128 0x2117
 4059 013c 19       		.uleb128 0x19
 4060 013d 01       		.uleb128 0x1
 4061 013e 13       		.uleb128 0x13
 4062 013f 00       		.byte	0
 4063 0140 00       		.byte	0
 4064 0141 17       		.uleb128 0x17
 4065 0142 05       		.uleb128 0x5
 4066 0143 00       		.byte	0
 4067 0144 03       		.uleb128 0x3
 4068 0145 0E       		.uleb128 0xe
 4069 0146 3A       		.uleb128 0x3a
 4070 0147 0B       		.uleb128 0xb
 4071 0148 3B       		.uleb128 0x3b
 4072 0149 05       		.uleb128 0x5
 4073 014a 49       		.uleb128 0x49
 4074 014b 13       		.uleb128 0x13
 4075 014c 02       		.uleb128 0x2
 4076 014d 17       		.uleb128 0x17
 4077 014e 00       		.byte	0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 129


 4078 014f 00       		.byte	0
 4079 0150 18       		.uleb128 0x18
 4080 0151 34       		.uleb128 0x34
 4081 0152 00       		.byte	0
 4082 0153 03       		.uleb128 0x3
 4083 0154 0E       		.uleb128 0xe
 4084 0155 3A       		.uleb128 0x3a
 4085 0156 0B       		.uleb128 0xb
 4086 0157 3B       		.uleb128 0x3b
 4087 0158 05       		.uleb128 0x5
 4088 0159 49       		.uleb128 0x49
 4089 015a 13       		.uleb128 0x13
 4090 015b 02       		.uleb128 0x2
 4091 015c 17       		.uleb128 0x17
 4092 015d 00       		.byte	0
 4093 015e 00       		.byte	0
 4094 015f 19       		.uleb128 0x19
 4095 0160 898201   		.uleb128 0x4109
 4096 0163 00       		.byte	0
 4097 0164 11       		.uleb128 0x11
 4098 0165 01       		.uleb128 0x1
 4099 0166 31       		.uleb128 0x31
 4100 0167 13       		.uleb128 0x13
 4101 0168 00       		.byte	0
 4102 0169 00       		.byte	0
 4103 016a 1A       		.uleb128 0x1a
 4104 016b 2E       		.uleb128 0x2e
 4105 016c 01       		.byte	0x1
 4106 016d 3F       		.uleb128 0x3f
 4107 016e 19       		.uleb128 0x19
 4108 016f 03       		.uleb128 0x3
 4109 0170 0E       		.uleb128 0xe
 4110 0171 3A       		.uleb128 0x3a
 4111 0172 0B       		.uleb128 0xb
 4112 0173 3B       		.uleb128 0x3b
 4113 0174 05       		.uleb128 0x5
 4114 0175 27       		.uleb128 0x27
 4115 0176 19       		.uleb128 0x19
 4116 0177 49       		.uleb128 0x49
 4117 0178 13       		.uleb128 0x13
 4118 0179 11       		.uleb128 0x11
 4119 017a 01       		.uleb128 0x1
 4120 017b 12       		.uleb128 0x12
 4121 017c 06       		.uleb128 0x6
 4122 017d 40       		.uleb128 0x40
 4123 017e 18       		.uleb128 0x18
 4124 017f 9742     		.uleb128 0x2117
 4125 0181 19       		.uleb128 0x19
 4126 0182 01       		.uleb128 0x1
 4127 0183 13       		.uleb128 0x13
 4128 0184 00       		.byte	0
 4129 0185 00       		.byte	0
 4130 0186 1B       		.uleb128 0x1b
 4131 0187 1D       		.uleb128 0x1d
 4132 0188 01       		.byte	0x1
 4133 0189 31       		.uleb128 0x31
 4134 018a 13       		.uleb128 0x13
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 130


 4135 018b 52       		.uleb128 0x52
 4136 018c 01       		.uleb128 0x1
 4137 018d 55       		.uleb128 0x55
 4138 018e 17       		.uleb128 0x17
 4139 018f 58       		.uleb128 0x58
 4140 0190 0B       		.uleb128 0xb
 4141 0191 59       		.uleb128 0x59
 4142 0192 05       		.uleb128 0x5
 4143 0193 01       		.uleb128 0x1
 4144 0194 13       		.uleb128 0x13
 4145 0195 00       		.byte	0
 4146 0196 00       		.byte	0
 4147 0197 1C       		.uleb128 0x1c
 4148 0198 05       		.uleb128 0x5
 4149 0199 00       		.byte	0
 4150 019a 31       		.uleb128 0x31
 4151 019b 13       		.uleb128 0x13
 4152 019c 02       		.uleb128 0x2
 4153 019d 17       		.uleb128 0x17
 4154 019e 00       		.byte	0
 4155 019f 00       		.byte	0
 4156 01a0 1D       		.uleb128 0x1d
 4157 01a1 1D       		.uleb128 0x1d
 4158 01a2 01       		.byte	0x1
 4159 01a3 31       		.uleb128 0x31
 4160 01a4 13       		.uleb128 0x13
 4161 01a5 11       		.uleb128 0x11
 4162 01a6 01       		.uleb128 0x1
 4163 01a7 12       		.uleb128 0x12
 4164 01a8 06       		.uleb128 0x6
 4165 01a9 58       		.uleb128 0x58
 4166 01aa 0B       		.uleb128 0xb
 4167 01ab 59       		.uleb128 0x59
 4168 01ac 05       		.uleb128 0x5
 4169 01ad 01       		.uleb128 0x1
 4170 01ae 13       		.uleb128 0x13
 4171 01af 00       		.byte	0
 4172 01b0 00       		.byte	0
 4173 01b1 1E       		.uleb128 0x1e
 4174 01b2 898201   		.uleb128 0x4109
 4175 01b5 01       		.byte	0x1
 4176 01b6 11       		.uleb128 0x11
 4177 01b7 01       		.uleb128 0x1
 4178 01b8 31       		.uleb128 0x31
 4179 01b9 13       		.uleb128 0x13
 4180 01ba 01       		.uleb128 0x1
 4181 01bb 13       		.uleb128 0x13
 4182 01bc 00       		.byte	0
 4183 01bd 00       		.byte	0
 4184 01be 1F       		.uleb128 0x1f
 4185 01bf 8A8201   		.uleb128 0x410a
 4186 01c2 00       		.byte	0
 4187 01c3 02       		.uleb128 0x2
 4188 01c4 18       		.uleb128 0x18
 4189 01c5 9142     		.uleb128 0x2111
 4190 01c7 18       		.uleb128 0x18
 4191 01c8 00       		.byte	0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 131


 4192 01c9 00       		.byte	0
 4193 01ca 20       		.uleb128 0x20
 4194 01cb 898201   		.uleb128 0x4109
 4195 01ce 01       		.byte	0x1
 4196 01cf 11       		.uleb128 0x11
 4197 01d0 01       		.uleb128 0x1
 4198 01d1 31       		.uleb128 0x31
 4199 01d2 13       		.uleb128 0x13
 4200 01d3 00       		.byte	0
 4201 01d4 00       		.byte	0
 4202 01d5 21       		.uleb128 0x21
 4203 01d6 05       		.uleb128 0x5
 4204 01d7 00       		.byte	0
 4205 01d8 31       		.uleb128 0x31
 4206 01d9 13       		.uleb128 0x13
 4207 01da 1C       		.uleb128 0x1c
 4208 01db 05       		.uleb128 0x5
 4209 01dc 00       		.byte	0
 4210 01dd 00       		.byte	0
 4211 01de 22       		.uleb128 0x22
 4212 01df 2E       		.uleb128 0x2e
 4213 01e0 00       		.byte	0
 4214 01e1 3F       		.uleb128 0x3f
 4215 01e2 19       		.uleb128 0x19
 4216 01e3 03       		.uleb128 0x3
 4217 01e4 0E       		.uleb128 0xe
 4218 01e5 3A       		.uleb128 0x3a
 4219 01e6 0B       		.uleb128 0xb
 4220 01e7 3B       		.uleb128 0x3b
 4221 01e8 05       		.uleb128 0x5
 4222 01e9 27       		.uleb128 0x27
 4223 01ea 19       		.uleb128 0x19
 4224 01eb 11       		.uleb128 0x11
 4225 01ec 01       		.uleb128 0x1
 4226 01ed 12       		.uleb128 0x12
 4227 01ee 06       		.uleb128 0x6
 4228 01ef 40       		.uleb128 0x40
 4229 01f0 18       		.uleb128 0x18
 4230 01f1 9742     		.uleb128 0x2117
 4231 01f3 19       		.uleb128 0x19
 4232 01f4 00       		.byte	0
 4233 01f5 00       		.byte	0
 4234 01f6 23       		.uleb128 0x23
 4235 01f7 2E       		.uleb128 0x2e
 4236 01f8 00       		.byte	0
 4237 01f9 3F       		.uleb128 0x3f
 4238 01fa 19       		.uleb128 0x19
 4239 01fb 03       		.uleb128 0x3
 4240 01fc 0E       		.uleb128 0xe
 4241 01fd 3A       		.uleb128 0x3a
 4242 01fe 0B       		.uleb128 0xb
 4243 01ff 3B       		.uleb128 0x3b
 4244 0200 05       		.uleb128 0x5
 4245 0201 27       		.uleb128 0x27
 4246 0202 19       		.uleb128 0x19
 4247 0203 49       		.uleb128 0x49
 4248 0204 13       		.uleb128 0x13
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 132


 4249 0205 11       		.uleb128 0x11
 4250 0206 01       		.uleb128 0x1
 4251 0207 12       		.uleb128 0x12
 4252 0208 06       		.uleb128 0x6
 4253 0209 40       		.uleb128 0x40
 4254 020a 18       		.uleb128 0x18
 4255 020b 9742     		.uleb128 0x2117
 4256 020d 19       		.uleb128 0x19
 4257 020e 00       		.byte	0
 4258 020f 00       		.byte	0
 4259 0210 24       		.uleb128 0x24
 4260 0211 2E       		.uleb128 0x2e
 4261 0212 00       		.byte	0
 4262 0213 31       		.uleb128 0x31
 4263 0214 13       		.uleb128 0x13
 4264 0215 11       		.uleb128 0x11
 4265 0216 01       		.uleb128 0x1
 4266 0217 12       		.uleb128 0x12
 4267 0218 06       		.uleb128 0x6
 4268 0219 40       		.uleb128 0x40
 4269 021a 18       		.uleb128 0x18
 4270 021b 9742     		.uleb128 0x2117
 4271 021d 19       		.uleb128 0x19
 4272 021e 00       		.byte	0
 4273 021f 00       		.byte	0
 4274 0220 25       		.uleb128 0x25
 4275 0221 34       		.uleb128 0x34
 4276 0222 00       		.byte	0
 4277 0223 03       		.uleb128 0x3
 4278 0224 0E       		.uleb128 0xe
 4279 0225 3A       		.uleb128 0x3a
 4280 0226 0B       		.uleb128 0xb
 4281 0227 3B       		.uleb128 0x3b
 4282 0228 05       		.uleb128 0x5
 4283 0229 49       		.uleb128 0x49
 4284 022a 13       		.uleb128 0x13
 4285 022b 02       		.uleb128 0x2
 4286 022c 18       		.uleb128 0x18
 4287 022d 00       		.byte	0
 4288 022e 00       		.byte	0
 4289 022f 26       		.uleb128 0x26
 4290 0230 05       		.uleb128 0x5
 4291 0231 00       		.byte	0
 4292 0232 03       		.uleb128 0x3
 4293 0233 0E       		.uleb128 0xe
 4294 0234 3A       		.uleb128 0x3a
 4295 0235 0B       		.uleb128 0xb
 4296 0236 3B       		.uleb128 0x3b
 4297 0237 05       		.uleb128 0x5
 4298 0238 49       		.uleb128 0x49
 4299 0239 13       		.uleb128 0x13
 4300 023a 02       		.uleb128 0x2
 4301 023b 18       		.uleb128 0x18
 4302 023c 00       		.byte	0
 4303 023d 00       		.byte	0
 4304 023e 27       		.uleb128 0x27
 4305 023f 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 133


 4306 0240 01       		.byte	0x1
 4307 0241 31       		.uleb128 0x31
 4308 0242 13       		.uleb128 0x13
 4309 0243 11       		.uleb128 0x11
 4310 0244 01       		.uleb128 0x1
 4311 0245 12       		.uleb128 0x12
 4312 0246 06       		.uleb128 0x6
 4313 0247 40       		.uleb128 0x40
 4314 0248 18       		.uleb128 0x18
 4315 0249 9742     		.uleb128 0x2117
 4316 024b 19       		.uleb128 0x19
 4317 024c 01       		.uleb128 0x1
 4318 024d 13       		.uleb128 0x13
 4319 024e 00       		.byte	0
 4320 024f 00       		.byte	0
 4321 0250 28       		.uleb128 0x28
 4322 0251 05       		.uleb128 0x5
 4323 0252 00       		.byte	0
 4324 0253 31       		.uleb128 0x31
 4325 0254 13       		.uleb128 0x13
 4326 0255 02       		.uleb128 0x2
 4327 0256 18       		.uleb128 0x18
 4328 0257 00       		.byte	0
 4329 0258 00       		.byte	0
 4330 0259 29       		.uleb128 0x29
 4331 025a 34       		.uleb128 0x34
 4332 025b 00       		.byte	0
 4333 025c 31       		.uleb128 0x31
 4334 025d 13       		.uleb128 0x13
 4335 025e 02       		.uleb128 0x2
 4336 025f 18       		.uleb128 0x18
 4337 0260 00       		.byte	0
 4338 0261 00       		.byte	0
 4339 0262 2A       		.uleb128 0x2a
 4340 0263 34       		.uleb128 0x34
 4341 0264 00       		.byte	0
 4342 0265 31       		.uleb128 0x31
 4343 0266 13       		.uleb128 0x13
 4344 0267 1C       		.uleb128 0x1c
 4345 0268 06       		.uleb128 0x6
 4346 0269 00       		.byte	0
 4347 026a 00       		.byte	0
 4348 026b 2B       		.uleb128 0x2b
 4349 026c 1D       		.uleb128 0x1d
 4350 026d 01       		.byte	0x1
 4351 026e 31       		.uleb128 0x31
 4352 026f 13       		.uleb128 0x13
 4353 0270 11       		.uleb128 0x11
 4354 0271 01       		.uleb128 0x1
 4355 0272 12       		.uleb128 0x12
 4356 0273 06       		.uleb128 0x6
 4357 0274 58       		.uleb128 0x58
 4358 0275 0B       		.uleb128 0xb
 4359 0276 59       		.uleb128 0x59
 4360 0277 05       		.uleb128 0x5
 4361 0278 00       		.byte	0
 4362 0279 00       		.byte	0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 134


 4363 027a 2C       		.uleb128 0x2c
 4364 027b 34       		.uleb128 0x34
 4365 027c 00       		.byte	0
 4366 027d 03       		.uleb128 0x3
 4367 027e 0E       		.uleb128 0xe
 4368 027f 3A       		.uleb128 0x3a
 4369 0280 0B       		.uleb128 0xb
 4370 0281 3B       		.uleb128 0x3b
 4371 0282 05       		.uleb128 0x5
 4372 0283 49       		.uleb128 0x49
 4373 0284 13       		.uleb128 0x13
 4374 0285 1C       		.uleb128 0x1c
 4375 0286 06       		.uleb128 0x6
 4376 0287 00       		.byte	0
 4377 0288 00       		.byte	0
 4378 0289 2D       		.uleb128 0x2d
 4379 028a 2E       		.uleb128 0x2e
 4380 028b 01       		.byte	0x1
 4381 028c 3F       		.uleb128 0x3f
 4382 028d 19       		.uleb128 0x19
 4383 028e 03       		.uleb128 0x3
 4384 028f 0E       		.uleb128 0xe
 4385 0290 3A       		.uleb128 0x3a
 4386 0291 0B       		.uleb128 0xb
 4387 0292 3B       		.uleb128 0x3b
 4388 0293 05       		.uleb128 0x5
 4389 0294 27       		.uleb128 0x27
 4390 0295 19       		.uleb128 0x19
 4391 0296 11       		.uleb128 0x11
 4392 0297 01       		.uleb128 0x1
 4393 0298 12       		.uleb128 0x12
 4394 0299 06       		.uleb128 0x6
 4395 029a 40       		.uleb128 0x40
 4396 029b 18       		.uleb128 0x18
 4397 029c 9642     		.uleb128 0x2116
 4398 029e 19       		.uleb128 0x19
 4399 029f 01       		.uleb128 0x1
 4400 02a0 13       		.uleb128 0x13
 4401 02a1 00       		.byte	0
 4402 02a2 00       		.byte	0
 4403 02a3 2E       		.uleb128 0x2e
 4404 02a4 34       		.uleb128 0x34
 4405 02a5 00       		.byte	0
 4406 02a6 31       		.uleb128 0x31
 4407 02a7 13       		.uleb128 0x13
 4408 02a8 02       		.uleb128 0x2
 4409 02a9 17       		.uleb128 0x17
 4410 02aa 00       		.byte	0
 4411 02ab 00       		.byte	0
 4412 02ac 2F       		.uleb128 0x2f
 4413 02ad 0B       		.uleb128 0xb
 4414 02ae 01       		.byte	0x1
 4415 02af 55       		.uleb128 0x55
 4416 02b0 17       		.uleb128 0x17
 4417 02b1 00       		.byte	0
 4418 02b2 00       		.byte	0
 4419 02b3 30       		.uleb128 0x30
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 135


 4420 02b4 1D       		.uleb128 0x1d
 4421 02b5 01       		.byte	0x1
 4422 02b6 31       		.uleb128 0x31
 4423 02b7 13       		.uleb128 0x13
 4424 02b8 52       		.uleb128 0x52
 4425 02b9 01       		.uleb128 0x1
 4426 02ba 55       		.uleb128 0x55
 4427 02bb 17       		.uleb128 0x17
 4428 02bc 58       		.uleb128 0x58
 4429 02bd 0B       		.uleb128 0xb
 4430 02be 59       		.uleb128 0x59
 4431 02bf 05       		.uleb128 0x5
 4432 02c0 00       		.byte	0
 4433 02c1 00       		.byte	0
 4434 02c2 31       		.uleb128 0x31
 4435 02c3 1D       		.uleb128 0x1d
 4436 02c4 00       		.byte	0
 4437 02c5 31       		.uleb128 0x31
 4438 02c6 13       		.uleb128 0x13
 4439 02c7 52       		.uleb128 0x52
 4440 02c8 01       		.uleb128 0x1
 4441 02c9 55       		.uleb128 0x55
 4442 02ca 17       		.uleb128 0x17
 4443 02cb 58       		.uleb128 0x58
 4444 02cc 0B       		.uleb128 0xb
 4445 02cd 59       		.uleb128 0x59
 4446 02ce 05       		.uleb128 0x5
 4447 02cf 00       		.byte	0
 4448 02d0 00       		.byte	0
 4449 02d1 32       		.uleb128 0x32
 4450 02d2 05       		.uleb128 0x5
 4451 02d3 00       		.byte	0
 4452 02d4 31       		.uleb128 0x31
 4453 02d5 13       		.uleb128 0x13
 4454 02d6 1C       		.uleb128 0x1c
 4455 02d7 0B       		.uleb128 0xb
 4456 02d8 00       		.byte	0
 4457 02d9 00       		.byte	0
 4458 02da 33       		.uleb128 0x33
 4459 02db 01       		.uleb128 0x1
 4460 02dc 01       		.byte	0x1
 4461 02dd 49       		.uleb128 0x49
 4462 02de 13       		.uleb128 0x13
 4463 02df 01       		.uleb128 0x1
 4464 02e0 13       		.uleb128 0x13
 4465 02e1 00       		.byte	0
 4466 02e2 00       		.byte	0
 4467 02e3 34       		.uleb128 0x34
 4468 02e4 21       		.uleb128 0x21
 4469 02e5 00       		.byte	0
 4470 02e6 49       		.uleb128 0x49
 4471 02e7 13       		.uleb128 0x13
 4472 02e8 2F       		.uleb128 0x2f
 4473 02e9 0B       		.uleb128 0xb
 4474 02ea 00       		.byte	0
 4475 02eb 00       		.byte	0
 4476 02ec 35       		.uleb128 0x35
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 136


 4477 02ed 34       		.uleb128 0x34
 4478 02ee 00       		.byte	0
 4479 02ef 03       		.uleb128 0x3
 4480 02f0 0E       		.uleb128 0xe
 4481 02f1 3A       		.uleb128 0x3a
 4482 02f2 0B       		.uleb128 0xb
 4483 02f3 3B       		.uleb128 0x3b
 4484 02f4 0B       		.uleb128 0xb
 4485 02f5 49       		.uleb128 0x49
 4486 02f6 13       		.uleb128 0x13
 4487 02f7 02       		.uleb128 0x2
 4488 02f8 18       		.uleb128 0x18
 4489 02f9 00       		.byte	0
 4490 02fa 00       		.byte	0
 4491 02fb 36       		.uleb128 0x36
 4492 02fc 34       		.uleb128 0x34
 4493 02fd 00       		.byte	0
 4494 02fe 03       		.uleb128 0x3
 4495 02ff 0E       		.uleb128 0xe
 4496 0300 3A       		.uleb128 0x3a
 4497 0301 0B       		.uleb128 0xb
 4498 0302 3B       		.uleb128 0x3b
 4499 0303 0B       		.uleb128 0xb
 4500 0304 49       		.uleb128 0x49
 4501 0305 13       		.uleb128 0x13
 4502 0306 3F       		.uleb128 0x3f
 4503 0307 19       		.uleb128 0x19
 4504 0308 02       		.uleb128 0x2
 4505 0309 18       		.uleb128 0x18
 4506 030a 00       		.byte	0
 4507 030b 00       		.byte	0
 4508 030c 37       		.uleb128 0x37
 4509 030d 26       		.uleb128 0x26
 4510 030e 00       		.byte	0
 4511 030f 49       		.uleb128 0x49
 4512 0310 13       		.uleb128 0x13
 4513 0311 00       		.byte	0
 4514 0312 00       		.byte	0
 4515 0313 38       		.uleb128 0x38
 4516 0314 2E       		.uleb128 0x2e
 4517 0315 00       		.byte	0
 4518 0316 3F       		.uleb128 0x3f
 4519 0317 19       		.uleb128 0x19
 4520 0318 03       		.uleb128 0x3
 4521 0319 0E       		.uleb128 0xe
 4522 031a 3A       		.uleb128 0x3a
 4523 031b 0B       		.uleb128 0xb
 4524 031c 3B       		.uleb128 0x3b
 4525 031d 0B       		.uleb128 0xb
 4526 031e 27       		.uleb128 0x27
 4527 031f 19       		.uleb128 0x19
 4528 0320 49       		.uleb128 0x49
 4529 0321 13       		.uleb128 0x13
 4530 0322 3C       		.uleb128 0x3c
 4531 0323 19       		.uleb128 0x19
 4532 0324 00       		.byte	0
 4533 0325 00       		.byte	0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 137


 4534 0326 39       		.uleb128 0x39
 4535 0327 2E       		.uleb128 0x2e
 4536 0328 01       		.byte	0x1
 4537 0329 3F       		.uleb128 0x3f
 4538 032a 19       		.uleb128 0x19
 4539 032b 03       		.uleb128 0x3
 4540 032c 0E       		.uleb128 0xe
 4541 032d 3A       		.uleb128 0x3a
 4542 032e 0B       		.uleb128 0xb
 4543 032f 3B       		.uleb128 0x3b
 4544 0330 0B       		.uleb128 0xb
 4545 0331 27       		.uleb128 0x27
 4546 0332 19       		.uleb128 0x19
 4547 0333 3C       		.uleb128 0x3c
 4548 0334 19       		.uleb128 0x19
 4549 0335 01       		.uleb128 0x1
 4550 0336 13       		.uleb128 0x13
 4551 0337 00       		.byte	0
 4552 0338 00       		.byte	0
 4553 0339 3A       		.uleb128 0x3a
 4554 033a 05       		.uleb128 0x5
 4555 033b 00       		.byte	0
 4556 033c 49       		.uleb128 0x49
 4557 033d 13       		.uleb128 0x13
 4558 033e 00       		.byte	0
 4559 033f 00       		.byte	0
 4560 0340 3B       		.uleb128 0x3b
 4561 0341 2E       		.uleb128 0x2e
 4562 0342 01       		.byte	0x1
 4563 0343 3F       		.uleb128 0x3f
 4564 0344 19       		.uleb128 0x19
 4565 0345 03       		.uleb128 0x3
 4566 0346 0E       		.uleb128 0xe
 4567 0347 3A       		.uleb128 0x3a
 4568 0348 0B       		.uleb128 0xb
 4569 0349 3B       		.uleb128 0x3b
 4570 034a 0B       		.uleb128 0xb
 4571 034b 27       		.uleb128 0x27
 4572 034c 19       		.uleb128 0x19
 4573 034d 3C       		.uleb128 0x3c
 4574 034e 19       		.uleb128 0x19
 4575 034f 00       		.byte	0
 4576 0350 00       		.byte	0
 4577 0351 00       		.byte	0
 4578              		.section	.debug_loc,"",%progbits
 4579              	.Ldebug_loc0:
 4580              	.LLST0:
 4581 0000 00000000 		.4byte	.LVL1
 4582 0004 07000000 		.4byte	.LVL2-1
 4583 0008 0100     		.2byte	0x1
 4584 000a 50       		.byte	0x50
 4585 000b 07000000 		.4byte	.LVL2-1
 4586 000f 1A000000 		.4byte	.LVL6
 4587 0013 0100     		.2byte	0x1
 4588 0015 54       		.byte	0x54
 4589 0016 1A000000 		.4byte	.LVL6
 4590 001a 20000000 		.4byte	.LFE2
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 138


 4591 001e 0400     		.2byte	0x4
 4592 0020 F3       		.byte	0xf3
 4593 0021 01       		.uleb128 0x1
 4594 0022 50       		.byte	0x50
 4595 0023 9F       		.byte	0x9f
 4596 0024 00000000 		.4byte	0
 4597 0028 00000000 		.4byte	0
 4598              	.LLST1:
 4599 002c 08000000 		.4byte	.LVL2
 4600 0030 19000000 		.4byte	.LVL5-1
 4601 0034 0100     		.2byte	0x1
 4602 0036 50       		.byte	0x50
 4603 0037 00000000 		.4byte	0
 4604 003b 00000000 		.4byte	0
 4605              	.LLST2:
 4606 003f 10000000 		.4byte	.LVL3
 4607 0043 14000000 		.4byte	.LVL4
 4608 0047 0100     		.2byte	0x1
 4609 0049 52       		.byte	0x52
 4610 004a 14000000 		.4byte	.LVL4
 4611 004e 19000000 		.4byte	.LVL5-1
 4612 0052 0100     		.2byte	0x1
 4613 0054 53       		.byte	0x53
 4614 0055 00000000 		.4byte	0
 4615 0059 00000000 		.4byte	0
 4616              	.LLST3:
 4617 005d 06000000 		.4byte	.LVL7
 4618 0061 0D000000 		.4byte	.LVL9-1
 4619 0065 0100     		.2byte	0x1
 4620 0067 50       		.byte	0x50
 4621 0068 00000000 		.4byte	0
 4622 006c 00000000 		.4byte	0
 4623              	.LLST4:
 4624 0070 0A000000 		.4byte	.LVL8
 4625 0074 12000000 		.4byte	.LVL10
 4626 0078 0500     		.2byte	0x5
 4627 007a 74       		.byte	0x74
 4628 007b 00       		.sleb128 0
 4629 007c 37       		.byte	0x37
 4630 007d 1A       		.byte	0x1a
 4631 007e 9F       		.byte	0x9f
 4632 007f 12000000 		.4byte	.LVL10
 4633 0083 18000000 		.4byte	.LFE3
 4634 0087 0100     		.2byte	0x1
 4635 0089 50       		.byte	0x50
 4636 008a 00000000 		.4byte	0
 4637 008e 00000000 		.4byte	0
 4638              	.LLST5:
 4639 0092 00000000 		.4byte	.LVL11
 4640 0096 07000000 		.4byte	.LVL12-1
 4641 009a 0100     		.2byte	0x1
 4642 009c 50       		.byte	0x50
 4643 009d 07000000 		.4byte	.LVL12-1
 4644 00a1 0E000000 		.4byte	.LVL13
 4645 00a5 0100     		.2byte	0x1
 4646 00a7 54       		.byte	0x54
 4647 00a8 0E000000 		.4byte	.LVL13
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 139


 4648 00ac 28000000 		.4byte	.LFE4
 4649 00b0 0400     		.2byte	0x4
 4650 00b2 F3       		.byte	0xf3
 4651 00b3 01       		.uleb128 0x1
 4652 00b4 50       		.byte	0x50
 4653 00b5 9F       		.byte	0x9f
 4654 00b6 00000000 		.4byte	0
 4655 00ba 00000000 		.4byte	0
 4656              	.LLST6:
 4657 00be 08000000 		.4byte	.LVL12
 4658 00c2 1D000000 		.4byte	.LVL14-1
 4659 00c6 0100     		.2byte	0x1
 4660 00c8 50       		.byte	0x50
 4661 00c9 00000000 		.4byte	0
 4662 00cd 00000000 		.4byte	0
 4663              	.LLST7:
 4664 00d1 00000000 		.4byte	.LVL15
 4665 00d5 11000000 		.4byte	.LVL16-1
 4666 00d9 0100     		.2byte	0x1
 4667 00db 50       		.byte	0x50
 4668 00dc 11000000 		.4byte	.LVL16-1
 4669 00e0 60000000 		.4byte	.LVL24
 4670 00e4 0100     		.2byte	0x1
 4671 00e6 54       		.byte	0x54
 4672 00e7 60000000 		.4byte	.LVL24
 4673 00eb 82000000 		.4byte	.LVL30
 4674 00ef 0700     		.2byte	0x7
 4675 00f1 74       		.byte	0x74
 4676 00f2 B39C8080 		.sleb128 -268431821
 4676      7F
 4677 00f7 9F       		.byte	0x9f
 4678 00f8 82000000 		.4byte	.LVL30
 4679 00fc 92000000 		.4byte	.LVL32
 4680 0100 0300     		.2byte	0x3
 4681 0102 75       		.byte	0x75
 4682 0103 03       		.sleb128 3
 4683 0104 9F       		.byte	0x9f
 4684 0105 92000000 		.4byte	.LVL32
 4685 0109 94000000 		.4byte	.LVL33
 4686 010d 0100     		.2byte	0x1
 4687 010f 54       		.byte	0x54
 4688 0110 94000000 		.4byte	.LVL33
 4689 0114 9A000000 		.4byte	.LVL35
 4690 0118 0300     		.2byte	0x3
 4691 011a 75       		.byte	0x75
 4692 011b 03       		.sleb128 3
 4693 011c 9F       		.byte	0x9f
 4694 011d 9A000000 		.4byte	.LVL35
 4695 0121 A6000000 		.4byte	.LVL37
 4696 0125 0400     		.2byte	0x4
 4697 0127 F3       		.byte	0xf3
 4698 0128 01       		.uleb128 0x1
 4699 0129 50       		.byte	0x50
 4700 012a 9F       		.byte	0x9f
 4701 012b A6000000 		.4byte	.LVL37
 4702 012f EE000000 		.4byte	.LVL46
 4703 0133 0100     		.2byte	0x1
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 140


 4704 0135 54       		.byte	0x54
 4705 0136 EE000000 		.4byte	.LVL46
 4706 013a 0E010000 		.4byte	.LVL52
 4707 013e 0700     		.2byte	0x7
 4708 0140 74       		.byte	0x74
 4709 0141 B39C8080 		.sleb128 -268431821
 4709      7F
 4710 0146 9F       		.byte	0x9f
 4711 0147 0E010000 		.4byte	.LVL52
 4712 014b 8C010000 		.4byte	.LFE5
 4713 014f 0100     		.2byte	0x1
 4714 0151 54       		.byte	0x54
 4715 0152 00000000 		.4byte	0
 4716 0156 00000000 		.4byte	0
 4717              	.LLST8:
 4718 015a 2A000000 		.4byte	.LVL18
 4719 015e 92000000 		.4byte	.LVL32
 4720 0162 0100     		.2byte	0x1
 4721 0164 5A       		.byte	0x5a
 4722 0165 BE000000 		.4byte	.LVL38
 4723 0169 C8000000 		.4byte	.LVL40
 4724 016d 0100     		.2byte	0x1
 4725 016f 5A       		.byte	0x5a
 4726 0170 D0000000 		.4byte	.LVL41
 4727 0174 0E010000 		.4byte	.LVL52
 4728 0178 0100     		.2byte	0x1
 4729 017a 5A       		.byte	0x5a
 4730 017b 1E010000 		.4byte	.LVL53
 4731 017f 28010000 		.4byte	.LVL55
 4732 0183 0100     		.2byte	0x1
 4733 0185 5A       		.byte	0x5a
 4734 0186 30010000 		.4byte	.LVL56
 4735 018a 8C010000 		.4byte	.LFE5
 4736 018e 0100     		.2byte	0x1
 4737 0190 5A       		.byte	0x5a
 4738 0191 00000000 		.4byte	0
 4739 0195 00000000 		.4byte	0
 4740              	.LLST9:
 4741 0199 32000000 		.4byte	.LVL19
 4742 019d 92000000 		.4byte	.LVL32
 4743 01a1 0100     		.2byte	0x1
 4744 01a3 59       		.byte	0x59
 4745 01a4 C6000000 		.4byte	.LVL39
 4746 01a8 C8000000 		.4byte	.LVL40
 4747 01ac 0100     		.2byte	0x1
 4748 01ae 59       		.byte	0x59
 4749 01af D8000000 		.4byte	.LVL42
 4750 01b3 0E010000 		.4byte	.LVL52
 4751 01b7 0100     		.2byte	0x1
 4752 01b9 59       		.byte	0x59
 4753 01ba 26010000 		.4byte	.LVL54
 4754 01be 28010000 		.4byte	.LVL55
 4755 01c2 0100     		.2byte	0x1
 4756 01c4 59       		.byte	0x59
 4757 01c5 38010000 		.4byte	.LVL57
 4758 01c9 8C010000 		.4byte	.LFE5
 4759 01cd 0100     		.2byte	0x1
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 141


 4760 01cf 59       		.byte	0x59
 4761 01d0 00000000 		.4byte	0
 4762 01d4 00000000 		.4byte	0
 4763              	.LLST10:
 4764 01d8 3A000000 		.4byte	.LVL20
 4765 01dc 46000000 		.4byte	.LVL21
 4766 01e0 0100     		.2byte	0x1
 4767 01e2 53       		.byte	0x53
 4768 01e3 46000000 		.4byte	.LVL21
 4769 01e7 92000000 		.4byte	.LVL32
 4770 01eb 0100     		.2byte	0x1
 4771 01ed 58       		.byte	0x58
 4772 01ee DA000000 		.4byte	.LVL43
 4773 01f2 DE000000 		.4byte	.LVL44
 4774 01f6 0100     		.2byte	0x1
 4775 01f8 53       		.byte	0x53
 4776 01f9 DE000000 		.4byte	.LVL44
 4777 01fd 0E010000 		.4byte	.LVL52
 4778 0201 0100     		.2byte	0x1
 4779 0203 58       		.byte	0x58
 4780 0204 00000000 		.4byte	0
 4781 0208 00000000 		.4byte	0
 4782              	.LLST11:
 4783 020c 4A000000 		.4byte	.LVL22
 4784 0210 82000000 		.4byte	.LVL30
 4785 0214 0100     		.2byte	0x1
 4786 0216 56       		.byte	0x56
 4787 0217 E6000000 		.4byte	.LVL45
 4788 021b 0E010000 		.4byte	.LVL52
 4789 021f 0200     		.2byte	0x2
 4790 0221 49       		.byte	0x49
 4791 0222 9F       		.byte	0x9f
 4792 0223 00000000 		.4byte	0
 4793 0227 00000000 		.4byte	0
 4794              	.LLST12:
 4795 022b 64000000 		.4byte	.LVL25
 4796 022f 6A000000 		.4byte	.LVL26
 4797 0233 0100     		.2byte	0x1
 4798 0235 53       		.byte	0x53
 4799 0236 6A000000 		.4byte	.LVL26
 4800 023a 6C000000 		.4byte	.LVL27
 4801 023e 0700     		.2byte	0x7
 4802 0240 0C       		.byte	0xc
 4803 0241 28FF0B40 		.4byte	0x400bff28
 4804 0245 06       		.byte	0x6
 4805 0246 9F       		.byte	0x9f
 4806 0247 F2000000 		.4byte	.LVL47
 4807 024b F8000000 		.4byte	.LVL48
 4808 024f 0100     		.2byte	0x1
 4809 0251 53       		.byte	0x53
 4810 0252 F8000000 		.4byte	.LVL48
 4811 0256 FA000000 		.4byte	.LVL49
 4812 025a 0700     		.2byte	0x7
 4813 025c 0C       		.byte	0xc
 4814 025d 28FF0B40 		.4byte	0x400bff28
 4815 0261 06       		.byte	0x6
 4816 0262 9F       		.byte	0x9f
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 142


 4817 0263 00000000 		.4byte	0
 4818 0267 00000000 		.4byte	0
 4819              	.LLST13:
 4820 026b 16000000 		.4byte	.LVL17
 4821 026f 9A000000 		.4byte	.LVL36
 4822 0273 0100     		.2byte	0x1
 4823 0275 57       		.byte	0x57
 4824 0276 A6000000 		.4byte	.LVL37
 4825 027a 8C010000 		.4byte	.LFE5
 4826 027e 0100     		.2byte	0x1
 4827 0280 57       		.byte	0x57
 4828 0281 00000000 		.4byte	0
 4829 0285 00000000 		.4byte	0
 4830              	.LLST14:
 4831 0289 72000000 		.4byte	.LVL28
 4832 028d 92000000 		.4byte	.LVL32
 4833 0291 0200     		.2byte	0x2
 4834 0293 35       		.byte	0x35
 4835 0294 9F       		.byte	0x9f
 4836 0295 00010000 		.4byte	.LVL50
 4837 0299 0E010000 		.4byte	.LVL52
 4838 029d 0200     		.2byte	0x2
 4839 029f 35       		.byte	0x35
 4840 02a0 9F       		.byte	0x9f
 4841 02a1 00000000 		.4byte	0
 4842 02a5 00000000 		.4byte	0
 4843              	.LLST15:
 4844 02a9 92000000 		.4byte	.LVL32
 4845 02ad 94000000 		.4byte	.LVL33
 4846 02b1 0200     		.2byte	0x2
 4847 02b3 30       		.byte	0x30
 4848 02b4 9F       		.byte	0x9f
 4849 02b5 00000000 		.4byte	0
 4850 02b9 00000000 		.4byte	0
 4851              	.LLST16:
 4852 02bd 00000000 		.4byte	.LVL58
 4853 02c1 0E000000 		.4byte	.LVL59
 4854 02c5 0100     		.2byte	0x1
 4855 02c7 50       		.byte	0x50
 4856 02c8 0E000000 		.4byte	.LVL59
 4857 02cc 50000000 		.4byte	.LFE6
 4858 02d0 0400     		.2byte	0x4
 4859 02d2 F3       		.byte	0xf3
 4860 02d3 01       		.uleb128 0x1
 4861 02d4 50       		.byte	0x50
 4862 02d5 9F       		.byte	0x9f
 4863 02d6 00000000 		.4byte	0
 4864 02da 00000000 		.4byte	0
 4865              	.LLST17:
 4866 02de 00000000 		.4byte	.LVL62
 4867 02e2 04000000 		.4byte	.LVL63
 4868 02e6 0100     		.2byte	0x1
 4869 02e8 50       		.byte	0x50
 4870 02e9 04000000 		.4byte	.LVL63
 4871 02ed 14000000 		.4byte	.LFE10
 4872 02f1 0100     		.2byte	0x1
 4873 02f3 52       		.byte	0x52
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 143


 4874 02f4 00000000 		.4byte	0
 4875 02f8 00000000 		.4byte	0
 4876              	.LLST18:
 4877 02fc 0A000000 		.4byte	.LVL65
 4878 0300 0C000000 		.4byte	.LVL66
 4879 0304 0500     		.2byte	0x5
 4880 0306 73       		.byte	0x73
 4881 0307 00       		.sleb128 0
 4882 0308 49       		.byte	0x49
 4883 0309 1A       		.byte	0x1a
 4884 030a 9F       		.byte	0x9f
 4885 030b 0C000000 		.4byte	.LVL66
 4886 030f 14000000 		.4byte	.LFE10
 4887 0313 0100     		.2byte	0x1
 4888 0315 50       		.byte	0x50
 4889 0316 00000000 		.4byte	0
 4890 031a 00000000 		.4byte	0
 4891              	.LLST19:
 4892 031e 00000000 		.4byte	.LVL69
 4893 0322 0A000000 		.4byte	.LVL72
 4894 0326 0100     		.2byte	0x1
 4895 0328 50       		.byte	0x50
 4896 0329 0A000000 		.4byte	.LVL72
 4897 032d 14000000 		.4byte	.LFE13
 4898 0331 0400     		.2byte	0x4
 4899 0333 F3       		.byte	0xf3
 4900 0334 01       		.uleb128 0x1
 4901 0335 50       		.byte	0x50
 4902 0336 9F       		.byte	0x9f
 4903 0337 00000000 		.4byte	0
 4904 033b 00000000 		.4byte	0
 4905              	.LLST20:
 4906 033f 04000000 		.4byte	.LVL70
 4907 0343 06000000 		.4byte	.LVL71
 4908 0347 0200     		.2byte	0x2
 4909 0349 30       		.byte	0x30
 4910 034a 9F       		.byte	0x9f
 4911 034b 00000000 		.4byte	0
 4912 034f 00000000 		.4byte	0
 4913              	.LLST21:
 4914 0353 00000000 		.4byte	.LVL74
 4915 0357 0E000000 		.4byte	.LVL77
 4916 035b 0100     		.2byte	0x1
 4917 035d 50       		.byte	0x50
 4918 035e 0E000000 		.4byte	.LVL77
 4919 0362 14000000 		.4byte	.LFE14
 4920 0366 0400     		.2byte	0x4
 4921 0368 F3       		.byte	0xf3
 4922 0369 01       		.uleb128 0x1
 4923 036a 50       		.byte	0x50
 4924 036b 9F       		.byte	0x9f
 4925 036c 00000000 		.4byte	0
 4926 0370 00000000 		.4byte	0
 4927              	.LLST22:
 4928 0374 04000000 		.4byte	.LVL75
 4929 0378 06000000 		.4byte	.LVL76
 4930 037c 0200     		.2byte	0x2
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 144


 4931 037e 30       		.byte	0x30
 4932 037f 9F       		.byte	0x9f
 4933 0380 00000000 		.4byte	0
 4934 0384 00000000 		.4byte	0
 4935              	.LLST23:
 4936 0388 00000000 		.4byte	.LVL78
 4937 038c 0A000000 		.4byte	.LVL81
 4938 0390 0100     		.2byte	0x1
 4939 0392 50       		.byte	0x50
 4940 0393 0A000000 		.4byte	.LVL81
 4941 0397 18000000 		.4byte	.LFE15
 4942 039b 0400     		.2byte	0x4
 4943 039d F3       		.byte	0xf3
 4944 039e 01       		.uleb128 0x1
 4945 039f 50       		.byte	0x50
 4946 03a0 9F       		.byte	0x9f
 4947 03a1 00000000 		.4byte	0
 4948 03a5 00000000 		.4byte	0
 4949              	.LLST24:
 4950 03a9 04000000 		.4byte	.LVL79
 4951 03ad 06000000 		.4byte	.LVL80
 4952 03b1 0200     		.2byte	0x2
 4953 03b3 30       		.byte	0x30
 4954 03b4 9F       		.byte	0x9f
 4955 03b5 00000000 		.4byte	0
 4956 03b9 00000000 		.4byte	0
 4957              	.LLST25:
 4958 03bd 00000000 		.4byte	.LVL83
 4959 03c1 0A000000 		.4byte	.LVL86
 4960 03c5 0100     		.2byte	0x1
 4961 03c7 50       		.byte	0x50
 4962 03c8 0A000000 		.4byte	.LVL86
 4963 03cc 18000000 		.4byte	.LFE16
 4964 03d0 0400     		.2byte	0x4
 4965 03d2 F3       		.byte	0xf3
 4966 03d3 01       		.uleb128 0x1
 4967 03d4 50       		.byte	0x50
 4968 03d5 9F       		.byte	0x9f
 4969 03d6 00000000 		.4byte	0
 4970 03da 00000000 		.4byte	0
 4971              	.LLST26:
 4972 03de 04000000 		.4byte	.LVL84
 4973 03e2 06000000 		.4byte	.LVL85
 4974 03e6 0200     		.2byte	0x2
 4975 03e8 30       		.byte	0x30
 4976 03e9 9F       		.byte	0x9f
 4977 03ea 00000000 		.4byte	0
 4978 03ee 00000000 		.4byte	0
 4979              	.LLST27:
 4980 03f2 00000000 		.4byte	.LVL87
 4981 03f6 15000000 		.4byte	.LVL92-1
 4982 03fa 0100     		.2byte	0x1
 4983 03fc 50       		.byte	0x50
 4984 03fd 15000000 		.4byte	.LVL92-1
 4985 0401 40000000 		.4byte	.LFE17
 4986 0405 0400     		.2byte	0x4
 4987 0407 F3       		.byte	0xf3
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 145


 4988 0408 01       		.uleb128 0x1
 4989 0409 50       		.byte	0x50
 4990 040a 9F       		.byte	0x9f
 4991 040b 00000000 		.4byte	0
 4992 040f 00000000 		.4byte	0
 4993              	.LLST28:
 4994 0413 00000000 		.4byte	.LVL87
 4995 0417 15000000 		.4byte	.LVL92-1
 4996 041b 0100     		.2byte	0x1
 4997 041d 51       		.byte	0x51
 4998 041e 15000000 		.4byte	.LVL92-1
 4999 0422 40000000 		.4byte	.LFE17
 5000 0426 0400     		.2byte	0x4
 5001 0428 F3       		.byte	0xf3
 5002 0429 01       		.uleb128 0x1
 5003 042a 51       		.byte	0x51
 5004 042b 9F       		.byte	0x9f
 5005 042c 00000000 		.4byte	0
 5006 0430 00000000 		.4byte	0
 5007              	.LLST29:
 5008 0434 16000000 		.4byte	.LVL92
 5009 0438 39000000 		.4byte	.LVL98-1
 5010 043c 0100     		.2byte	0x1
 5011 043e 50       		.byte	0x50
 5012 043f 00000000 		.4byte	0
 5013 0443 00000000 		.4byte	0
 5014              	.LLST30:
 5015 0447 12000000 		.4byte	.LVL91
 5016 044b 20000000 		.4byte	.LVL93
 5017 044f 0C00     		.2byte	0xc
 5018 0451 74       		.byte	0x74
 5019 0452 00       		.sleb128 0
 5020 0453 33       		.byte	0x33
 5021 0454 1A       		.byte	0x1a
 5022 0455 08       		.byte	0x8
 5023 0456 FF       		.byte	0xff
 5024 0457 1A       		.byte	0x1a
 5025 0458 33       		.byte	0x33
 5026 0459 24       		.byte	0x24
 5027 045a 23       		.byte	0x23
 5028 045b 06       		.uleb128 0x6
 5029 045c 9F       		.byte	0x9f
 5030 045d 00000000 		.4byte	0
 5031 0461 00000000 		.4byte	0
 5032              	.LLST31:
 5033 0465 2C000000 		.4byte	.LVL94
 5034 0469 30000000 		.4byte	.LVL95
 5035 046d 0100     		.2byte	0x1
 5036 046f 51       		.byte	0x51
 5037 0470 32000000 		.4byte	.LVL96
 5038 0474 34000000 		.4byte	.LVL97
 5039 0478 0100     		.2byte	0x1
 5040 047a 51       		.byte	0x51
 5041 047b 34000000 		.4byte	.LVL97
 5042 047f 39000000 		.4byte	.LVL98-1
 5043 0483 0100     		.2byte	0x1
 5044 0485 52       		.byte	0x52
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 146


 5045 0486 00000000 		.4byte	0
 5046 048a 00000000 		.4byte	0
 5047              	.LLST32:
 5048 048e 0A000000 		.4byte	.LVL88
 5049 0492 0C000000 		.4byte	.LVL89
 5050 0496 0200     		.2byte	0x2
 5051 0498 30       		.byte	0x30
 5052 0499 9F       		.byte	0x9f
 5053 049a 00000000 		.4byte	0
 5054 049e 00000000 		.4byte	0
 5055              	.LLST33:
 5056 04a2 10000000 		.4byte	.LVL90
 5057 04a6 12000000 		.4byte	.LVL91
 5058 04aa 0200     		.2byte	0x2
 5059 04ac 30       		.byte	0x30
 5060 04ad 9F       		.byte	0x9f
 5061 04ae 00000000 		.4byte	0
 5062 04b2 00000000 		.4byte	0
 5063              	.LLST34:
 5064 04b6 00000000 		.4byte	.LVL99
 5065 04ba 22000000 		.4byte	.LVL104
 5066 04be 0100     		.2byte	0x1
 5067 04c0 50       		.byte	0x50
 5068 04c1 22000000 		.4byte	.LVL104
 5069 04c5 28000000 		.4byte	.LFE18
 5070 04c9 0400     		.2byte	0x4
 5071 04cb F3       		.byte	0xf3
 5072 04cc 01       		.uleb128 0x1
 5073 04cd 50       		.byte	0x50
 5074 04ce 9F       		.byte	0x9f
 5075 04cf 00000000 		.4byte	0
 5076 04d3 00000000 		.4byte	0
 5077              	.LLST35:
 5078 04d7 12000000 		.4byte	.LVL102
 5079 04db 1E000000 		.4byte	.LVL103
 5080 04df 0F00     		.2byte	0xf
 5081 04e1 72       		.byte	0x72
 5082 04e2 00       		.sleb128 0
 5083 04e3 70       		.byte	0x70
 5084 04e4 00       		.sleb128 0
 5085 04e5 33       		.byte	0x33
 5086 04e6 1A       		.byte	0x1a
 5087 04e7 08       		.byte	0x8
 5088 04e8 FF       		.byte	0xff
 5089 04e9 1A       		.byte	0x1a
 5090 04ea 33       		.byte	0x33
 5091 04eb 24       		.byte	0x24
 5092 04ec 23       		.byte	0x23
 5093 04ed 06       		.uleb128 0x6
 5094 04ee 25       		.byte	0x25
 5095 04ef 9F       		.byte	0x9f
 5096 04f0 00000000 		.4byte	0
 5097 04f4 00000000 		.4byte	0
 5098              	.LLST36:
 5099 04f8 04000000 		.4byte	.LVL100
 5100 04fc 06000000 		.4byte	.LVL101
 5101 0500 0200     		.2byte	0x2
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 147


 5102 0502 30       		.byte	0x30
 5103 0503 9F       		.byte	0x9f
 5104 0504 00000000 		.4byte	0
 5105 0508 00000000 		.4byte	0
 5106              	.LLST37:
 5107 050c 00000000 		.4byte	.LVL105
 5108 0510 04000000 		.4byte	.LVL106
 5109 0514 0100     		.2byte	0x1
 5110 0516 50       		.byte	0x50
 5111 0517 04000000 		.4byte	.LVL106
 5112 051b 14000000 		.4byte	.LFE19
 5113 051f 0400     		.2byte	0x4
 5114 0521 F3       		.byte	0xf3
 5115 0522 01       		.uleb128 0x1
 5116 0523 50       		.byte	0x50
 5117 0524 9F       		.byte	0x9f
 5118 0525 00000000 		.4byte	0
 5119 0529 00000000 		.4byte	0
 5120              	.LLST38:
 5121 052d 00000000 		.4byte	.LVL107
 5122 0531 06000000 		.4byte	.LVL108
 5123 0535 0100     		.2byte	0x1
 5124 0537 50       		.byte	0x50
 5125 0538 06000000 		.4byte	.LVL108
 5126 053c 18000000 		.4byte	.LFE20
 5127 0540 0400     		.2byte	0x4
 5128 0542 F3       		.byte	0xf3
 5129 0543 01       		.uleb128 0x1
 5130 0544 50       		.byte	0x50
 5131 0545 9F       		.byte	0x9f
 5132 0546 00000000 		.4byte	0
 5133 054a 00000000 		.4byte	0
 5134              	.LLST39:
 5135 054e 00000000 		.4byte	.LVL109
 5136 0552 04000000 		.4byte	.LVL110
 5137 0556 0100     		.2byte	0x1
 5138 0558 50       		.byte	0x50
 5139 0559 04000000 		.4byte	.LVL110
 5140 055d 14000000 		.4byte	.LFE21
 5141 0561 0400     		.2byte	0x4
 5142 0563 F3       		.byte	0xf3
 5143 0564 01       		.uleb128 0x1
 5144 0565 50       		.byte	0x50
 5145 0566 9F       		.byte	0x9f
 5146 0567 00000000 		.4byte	0
 5147 056b 00000000 		.4byte	0
 5148              	.LLST40:
 5149 056f 00000000 		.4byte	.LVL111
 5150 0573 04000000 		.4byte	.LVL112
 5151 0577 0100     		.2byte	0x1
 5152 0579 50       		.byte	0x50
 5153 057a 04000000 		.4byte	.LVL112
 5154 057e 14000000 		.4byte	.LFE22
 5155 0582 0400     		.2byte	0x4
 5156 0584 F3       		.byte	0xf3
 5157 0585 01       		.uleb128 0x1
 5158 0586 50       		.byte	0x50
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 148


 5159 0587 9F       		.byte	0x9f
 5160 0588 00000000 		.4byte	0
 5161 058c 00000000 		.4byte	0
 5162              	.LLST41:
 5163 0590 00000000 		.4byte	.LVL113
 5164 0594 04000000 		.4byte	.LVL114
 5165 0598 0100     		.2byte	0x1
 5166 059a 50       		.byte	0x50
 5167 059b 04000000 		.4byte	.LVL114
 5168 059f 14000000 		.4byte	.LFE23
 5169 05a3 0400     		.2byte	0x4
 5170 05a5 F3       		.byte	0xf3
 5171 05a6 01       		.uleb128 0x1
 5172 05a7 50       		.byte	0x50
 5173 05a8 9F       		.byte	0x9f
 5174 05a9 00000000 		.4byte	0
 5175 05ad 00000000 		.4byte	0
 5176              	.LLST42:
 5177 05b1 00000000 		.4byte	.LVL116
 5178 05b5 10000000 		.4byte	.LVL117
 5179 05b9 0100     		.2byte	0x1
 5180 05bb 50       		.byte	0x50
 5181 05bc 10000000 		.4byte	.LVL117
 5182 05c0 2C000000 		.4byte	.LVL120
 5183 05c4 0100     		.2byte	0x1
 5184 05c6 54       		.byte	0x54
 5185 05c7 36000000 		.4byte	.LVL122
 5186 05cb 48000000 		.4byte	.LFE26
 5187 05cf 0100     		.2byte	0x1
 5188 05d1 50       		.byte	0x50
 5189 05d2 00000000 		.4byte	0
 5190 05d6 00000000 		.4byte	0
 5191              	.LLST43:
 5192 05da 00000000 		.4byte	.LVL123
 5193 05de 08000000 		.4byte	.LVL124
 5194 05e2 0100     		.2byte	0x1
 5195 05e4 50       		.byte	0x50
 5196 05e5 08000000 		.4byte	.LVL124
 5197 05e9 14000000 		.4byte	.LFE27
 5198 05ed 0400     		.2byte	0x4
 5199 05ef F3       		.byte	0xf3
 5200 05f0 01       		.uleb128 0x1
 5201 05f1 50       		.byte	0x50
 5202 05f2 9F       		.byte	0x9f
 5203 05f3 00000000 		.4byte	0
 5204 05f7 00000000 		.4byte	0
 5205              	.LLST44:
 5206 05fb 00000000 		.4byte	.LVL126
 5207 05ff 0E000000 		.4byte	.LVL127
 5208 0603 0100     		.2byte	0x1
 5209 0605 50       		.byte	0x50
 5210 0606 0E000000 		.4byte	.LVL127
 5211 060a 1A000000 		.4byte	.LVL128
 5212 060e 0400     		.2byte	0x4
 5213 0610 F3       		.byte	0xf3
 5214 0611 01       		.uleb128 0x1
 5215 0612 50       		.byte	0x50
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 149


 5216 0613 9F       		.byte	0x9f
 5217 0614 1A000000 		.4byte	.LVL128
 5218 0618 26000000 		.4byte	.LVL129
 5219 061c 0100     		.2byte	0x1
 5220 061e 50       		.byte	0x50
 5221 061f 26000000 		.4byte	.LVL129
 5222 0623 58000000 		.4byte	.LFE28
 5223 0627 0100     		.2byte	0x1
 5224 0629 55       		.byte	0x55
 5225 062a 00000000 		.4byte	0
 5226 062e 00000000 		.4byte	0
 5227              	.LLST45:
 5228 0632 0A000000 		.4byte	.LVL132
 5229 0636 12000000 		.4byte	.LVL133
 5230 063a 0200     		.2byte	0x2
 5231 063c 30       		.byte	0x30
 5232 063d 9F       		.byte	0x9f
 5233 063e 12000000 		.4byte	.LVL133
 5234 0642 14000000 		.4byte	.LVL134
 5235 0646 0200     		.2byte	0x2
 5236 0648 31       		.byte	0x31
 5237 0649 9F       		.byte	0x9f
 5238 064a 14000000 		.4byte	.LVL134
 5239 064e 16000000 		.4byte	.LVL135
 5240 0652 0200     		.2byte	0x2
 5241 0654 32       		.byte	0x32
 5242 0655 9F       		.byte	0x9f
 5243 0656 16000000 		.4byte	.LVL135
 5244 065a 18000000 		.4byte	.LVL136
 5245 065e 0200     		.2byte	0x2
 5246 0660 33       		.byte	0x33
 5247 0661 9F       		.byte	0x9f
 5248 0662 18000000 		.4byte	.LVL136
 5249 0666 1A000000 		.4byte	.LVL137
 5250 066a 0200     		.2byte	0x2
 5251 066c 34       		.byte	0x34
 5252 066d 9F       		.byte	0x9f
 5253 066e 1A000000 		.4byte	.LVL137
 5254 0672 3A000000 		.4byte	.LVL141
 5255 0676 0200     		.2byte	0x2
 5256 0678 35       		.byte	0x35
 5257 0679 9F       		.byte	0x9f
 5258 067a 00000000 		.4byte	0
 5259 067e 00000000 		.4byte	0
 5260              	.LLST46:
 5261 0682 1A000000 		.4byte	.LVL137
 5262 0686 3A000000 		.4byte	.LVL141
 5263 068a 0600     		.2byte	0x6
 5264 068c 03       		.byte	0x3
 5265 068d 00000000 		.4byte	CySysTickServiceCallbacks
 5266 0691 9F       		.byte	0x9f
 5267 0692 00000000 		.4byte	0
 5268 0696 00000000 		.4byte	0
 5269              	.LLST47:
 5270 069a 1A000000 		.4byte	.LVL137
 5271 069e 3A000000 		.4byte	.LVL141
 5272 06a2 0200     		.2byte	0x2
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 150


 5273 06a4 3F       		.byte	0x3f
 5274 06a5 9F       		.byte	0x9f
 5275 06a6 00000000 		.4byte	0
 5276 06aa 00000000 		.4byte	0
 5277              	.LLST48:
 5278 06ae 1A000000 		.4byte	.LVL137
 5279 06b2 1C000000 		.4byte	.LVL138
 5280 06b6 0200     		.2byte	0x2
 5281 06b8 73       		.byte	0x73
 5282 06b9 00       		.sleb128 0
 5283 06ba 00000000 		.4byte	0
 5284 06be 00000000 		.4byte	0
 5285              	.LLST49:
 5286 06c2 1A000000 		.4byte	.LVL137
 5287 06c6 3A000000 		.4byte	.LVL141
 5288 06ca 0400     		.2byte	0x4
 5289 06cc 40       		.byte	0x40
 5290 06cd 49       		.byte	0x49
 5291 06ce 24       		.byte	0x24
 5292 06cf 9F       		.byte	0x9f
 5293 06d0 00000000 		.4byte	0
 5294 06d4 00000000 		.4byte	0
 5295              	.LLST50:
 5296 06d8 32000000 		.4byte	.LVL140
 5297 06dc 3A000000 		.4byte	.LVL141
 5298 06e0 0200     		.2byte	0x2
 5299 06e2 3F       		.byte	0x3f
 5300 06e3 9F       		.byte	0x9f
 5301 06e4 00000000 		.4byte	0
 5302 06e8 00000000 		.4byte	0
 5303              	.LLST51:
 5304 06ec 26000000 		.4byte	.LVL139
 5305 06f0 3A000000 		.4byte	.LVL141
 5306 06f4 0100     		.2byte	0x1
 5307 06f6 50       		.byte	0x50
 5308 06f7 00000000 		.4byte	0
 5309 06fb 00000000 		.4byte	0
 5310              	.LLST52:
 5311 06ff 00000000 		.4byte	.LVL142
 5312 0703 0C000000 		.4byte	.LVL143
 5313 0707 0200     		.2byte	0x2
 5314 0709 30       		.byte	0x30
 5315 070a 9F       		.byte	0x9f
 5316 070b 0C000000 		.4byte	.LVL143
 5317 070f 10000000 		.4byte	.LVL144
 5318 0713 0200     		.2byte	0x2
 5319 0715 31       		.byte	0x31
 5320 0716 9F       		.byte	0x9f
 5321 0717 10000000 		.4byte	.LVL144
 5322 071b 12000000 		.4byte	.LVL145
 5323 071f 0200     		.2byte	0x2
 5324 0721 32       		.byte	0x32
 5325 0722 9F       		.byte	0x9f
 5326 0723 12000000 		.4byte	.LVL145
 5327 0727 14000000 		.4byte	.LVL146
 5328 072b 0200     		.2byte	0x2
 5329 072d 34       		.byte	0x34
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 151


 5330 072e 9F       		.byte	0x9f
 5331 072f 14000000 		.4byte	.LVL146
 5332 0733 50000000 		.4byte	.LFE30
 5333 0737 0200     		.2byte	0x2
 5334 0739 35       		.byte	0x35
 5335 073a 9F       		.byte	0x9f
 5336 073b 00000000 		.4byte	0
 5337 073f 00000000 		.4byte	0
 5338              	.LLST53:
 5339 0743 14000000 		.4byte	.LVL146
 5340 0747 16000000 		.4byte	.LVL147
 5341 074b 0500     		.2byte	0x5
 5342 074d 0C       		.byte	0xc
 5343 074e 3C000020 		.4byte	0x2000003c
 5344 0752 16000000 		.4byte	.LVL147
 5345 0756 1A000000 		.4byte	.LVL148
 5346 075a 0200     		.2byte	0x2
 5347 075c 73       		.byte	0x73
 5348 075d 00       		.sleb128 0
 5349 075e 00000000 		.4byte	0
 5350 0762 00000000 		.4byte	0
 5351              	.LLST54:
 5352 0766 00000000 		.4byte	.LVL151
 5353 076a 04000000 		.4byte	.LVL152
 5354 076e 0100     		.2byte	0x1
 5355 0770 50       		.byte	0x50
 5356 0771 04000000 		.4byte	.LVL152
 5357 0775 10000000 		.4byte	.LFE35
 5358 0779 0400     		.2byte	0x4
 5359 077b F3       		.byte	0xf3
 5360 077c 01       		.uleb128 0x1
 5361 077d 50       		.byte	0x50
 5362 077e 9F       		.byte	0x9f
 5363 077f 00000000 		.4byte	0
 5364 0783 00000000 		.4byte	0
 5365              	.LLST55:
 5366 0787 00000000 		.4byte	.LVL153
 5367 078b 06000000 		.4byte	.LVL154
 5368 078f 0100     		.2byte	0x1
 5369 0791 50       		.byte	0x50
 5370 0792 06000000 		.4byte	.LVL154
 5371 0796 10000000 		.4byte	.LFE40
 5372 079a 0400     		.2byte	0x4
 5373 079c F3       		.byte	0xf3
 5374 079d 01       		.uleb128 0x1
 5375 079e 50       		.byte	0x50
 5376 079f 9F       		.byte	0x9f
 5377 07a0 00000000 		.4byte	0
 5378 07a4 00000000 		.4byte	0
 5379              	.LLST56:
 5380 07a8 00000000 		.4byte	.LVL155
 5381 07ac 04000000 		.4byte	.LVL156
 5382 07b0 0100     		.2byte	0x1
 5383 07b2 50       		.byte	0x50
 5384 07b3 04000000 		.4byte	.LVL156
 5385 07b7 0C000000 		.4byte	.LFE41
 5386 07bb 0400     		.2byte	0x4
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 152


 5387 07bd F3       		.byte	0xf3
 5388 07be 01       		.uleb128 0x1
 5389 07bf 50       		.byte	0x50
 5390 07c0 9F       		.byte	0x9f
 5391 07c1 00000000 		.4byte	0
 5392 07c5 00000000 		.4byte	0
 5393              		.section	.debug_aranges,"",%progbits
 5394 0000 74010000 		.4byte	0x174
 5395 0004 0200     		.2byte	0x2
 5396 0006 00000000 		.4byte	.Ldebug_info0
 5397 000a 04       		.byte	0x4
 5398 000b 00       		.byte	0
 5399 000c 0000     		.2byte	0
 5400 000e 0000     		.2byte	0
 5401 0010 00000000 		.4byte	.LFB42
 5402 0014 28000000 		.4byte	.LFE42-.LFB42
 5403 0018 00000000 		.4byte	.LFB0
 5404 001c 14000000 		.4byte	.LFE0-.LFB0
 5405 0020 00000000 		.4byte	.LFB1
 5406 0024 10000000 		.4byte	.LFE1-.LFB1
 5407 0028 00000000 		.4byte	.LFB2
 5408 002c 20000000 		.4byte	.LFE2-.LFB2
 5409 0030 00000000 		.4byte	.LFB3
 5410 0034 18000000 		.4byte	.LFE3-.LFB3
 5411 0038 00000000 		.4byte	.LFB4
 5412 003c 28000000 		.4byte	.LFE4-.LFB4
 5413 0040 00000000 		.4byte	.LFB5
 5414 0044 8C010000 		.4byte	.LFE5-.LFB5
 5415 0048 00000000 		.4byte	.LFB6
 5416 004c 50000000 		.4byte	.LFE6-.LFB6
 5417 0050 00000000 		.4byte	.LFB7
 5418 0054 20000000 		.4byte	.LFE7-.LFB7
 5419 0058 00000000 		.4byte	.LFB8
 5420 005c 10000000 		.4byte	.LFE8-.LFB8
 5421 0060 00000000 		.4byte	.LFB9
 5422 0064 0C000000 		.4byte	.LFE9-.LFB9
 5423 0068 00000000 		.4byte	.LFB10
 5424 006c 14000000 		.4byte	.LFE10-.LFB10
 5425 0070 00000000 		.4byte	.LFB11
 5426 0074 10000000 		.4byte	.LFE11-.LFB11
 5427 0078 00000000 		.4byte	.LFB12
 5428 007c 0C000000 		.4byte	.LFE12-.LFB12
 5429 0080 00000000 		.4byte	.LFB13
 5430 0084 14000000 		.4byte	.LFE13-.LFB13
 5431 0088 00000000 		.4byte	.LFB14
 5432 008c 14000000 		.4byte	.LFE14-.LFB14
 5433 0090 00000000 		.4byte	.LFB15
 5434 0094 18000000 		.4byte	.LFE15-.LFB15
 5435 0098 00000000 		.4byte	.LFB16
 5436 009c 18000000 		.4byte	.LFE16-.LFB16
 5437 00a0 00000000 		.4byte	.LFB17
 5438 00a4 40000000 		.4byte	.LFE17-.LFB17
 5439 00a8 00000000 		.4byte	.LFB18
 5440 00ac 28000000 		.4byte	.LFE18-.LFB18
 5441 00b0 00000000 		.4byte	.LFB19
 5442 00b4 14000000 		.4byte	.LFE19-.LFB19
 5443 00b8 00000000 		.4byte	.LFB20
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 153


 5444 00bc 18000000 		.4byte	.LFE20-.LFB20
 5445 00c0 00000000 		.4byte	.LFB21
 5446 00c4 14000000 		.4byte	.LFE21-.LFB21
 5447 00c8 00000000 		.4byte	.LFB22
 5448 00cc 14000000 		.4byte	.LFE22-.LFB22
 5449 00d0 00000000 		.4byte	.LFB23
 5450 00d4 14000000 		.4byte	.LFE23-.LFB23
 5451 00d8 00000000 		.4byte	.LFB24
 5452 00dc 04000000 		.4byte	.LFE24-.LFB24
 5453 00e0 00000000 		.4byte	.LFB25
 5454 00e4 18000000 		.4byte	.LFE25-.LFB25
 5455 00e8 00000000 		.4byte	.LFB26
 5456 00ec 48000000 		.4byte	.LFE26-.LFB26
 5457 00f0 00000000 		.4byte	.LFB27
 5458 00f4 14000000 		.4byte	.LFE27-.LFB27
 5459 00f8 00000000 		.4byte	.LFB28
 5460 00fc 58000000 		.4byte	.LFE28-.LFB28
 5461 0100 00000000 		.4byte	.LFB29
 5462 0104 70000000 		.4byte	.LFE29-.LFB29
 5463 0108 00000000 		.4byte	.LFB30
 5464 010c 50000000 		.4byte	.LFE30-.LFB30
 5465 0110 00000000 		.4byte	.LFB31
 5466 0114 18000000 		.4byte	.LFE31-.LFB31
 5467 0118 00000000 		.4byte	.LFB32
 5468 011c 10000000 		.4byte	.LFE32-.LFB32
 5469 0120 00000000 		.4byte	.LFB33
 5470 0124 10000000 		.4byte	.LFE33-.LFB33
 5471 0128 00000000 		.4byte	.LFB34
 5472 012c 10000000 		.4byte	.LFE34-.LFB34
 5473 0130 00000000 		.4byte	.LFB35
 5474 0134 10000000 		.4byte	.LFE35-.LFB35
 5475 0138 00000000 		.4byte	.LFB36
 5476 013c 10000000 		.4byte	.LFE36-.LFB36
 5477 0140 00000000 		.4byte	.LFB37
 5478 0144 10000000 		.4byte	.LFE37-.LFB37
 5479 0148 00000000 		.4byte	.LFB38
 5480 014c 10000000 		.4byte	.LFE38-.LFB38
 5481 0150 00000000 		.4byte	.LFB39
 5482 0154 0C000000 		.4byte	.LFE39-.LFB39
 5483 0158 00000000 		.4byte	.LFB40
 5484 015c 10000000 		.4byte	.LFE40-.LFB40
 5485 0160 00000000 		.4byte	.LFB41
 5486 0164 0C000000 		.4byte	.LFE41-.LFB41
 5487 0168 00000000 		.4byte	.LFB43
 5488 016c 70000000 		.4byte	.LFE43-.LFB43
 5489 0170 00000000 		.4byte	0
 5490 0174 00000000 		.4byte	0
 5491              		.section	.debug_ranges,"",%progbits
 5492              	.Ldebug_ranges0:
 5493 0000 72000000 		.4byte	.LBB63
 5494 0004 7E000000 		.4byte	.LBE63
 5495 0008 00010000 		.4byte	.LBB68
 5496 000c 0E010000 		.4byte	.LBE68
 5497 0010 00000000 		.4byte	0
 5498 0014 00000000 		.4byte	0
 5499 0018 0C000000 		.4byte	.LBB89
 5500 001c 10000000 		.4byte	.LBE89
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 154


 5501 0020 1A000000 		.4byte	.LBB92
 5502 0024 1C000000 		.4byte	.LBE92
 5503 0028 00000000 		.4byte	0
 5504 002c 00000000 		.4byte	0
 5505 0030 26000000 		.4byte	.LBB93
 5506 0034 28000000 		.4byte	.LBE93
 5507 0038 2A000000 		.4byte	.LBB100
 5508 003c 2C000000 		.4byte	.LBE100
 5509 0040 32000000 		.4byte	.LBB104
 5510 0044 36000000 		.4byte	.LBE104
 5511 0048 00000000 		.4byte	0
 5512 004c 00000000 		.4byte	0
 5513 0050 28000000 		.4byte	.LBB97
 5514 0054 2A000000 		.4byte	.LBE97
 5515 0058 2C000000 		.4byte	.LBB101
 5516 005c 2E000000 		.4byte	.LBE101
 5517 0060 00000000 		.4byte	0
 5518 0064 00000000 		.4byte	0
 5519 0068 3A000000 		.4byte	.LBB105
 5520 006c 3E000000 		.4byte	.LBE105
 5521 0070 3E000000 		.4byte	.LBB112
 5522 0074 4C000000 		.4byte	.LBE112
 5523 0078 00000000 		.4byte	0
 5524 007c 00000000 		.4byte	0
 5525 0080 3A000000 		.4byte	.LBB107
 5526 0084 3E000000 		.4byte	.LBE107
 5527 0088 3E000000 		.4byte	.LBB110
 5528 008c 44000000 		.4byte	.LBE110
 5529 0090 00000000 		.4byte	0
 5530 0094 00000000 		.4byte	0
 5531 0098 08000000 		.4byte	.LBB113
 5532 009c 0A000000 		.4byte	.LBE113
 5533 00a0 14000000 		.4byte	.LBB117
 5534 00a4 16000000 		.4byte	.LBE117
 5535 00a8 18000000 		.4byte	.LBB118
 5536 00ac 1A000000 		.4byte	.LBE118
 5537 00b0 00000000 		.4byte	0
 5538 00b4 00000000 		.4byte	0
 5539 00b8 22000000 		.4byte	.LBB119
 5540 00bc 24000000 		.4byte	.LBE119
 5541 00c0 26000000 		.4byte	.LBB126
 5542 00c4 28000000 		.4byte	.LBE126
 5543 00c8 2E000000 		.4byte	.LBB130
 5544 00cc 32000000 		.4byte	.LBE130
 5545 00d0 00000000 		.4byte	0
 5546 00d4 00000000 		.4byte	0
 5547 00d8 24000000 		.4byte	.LBB123
 5548 00dc 26000000 		.4byte	.LBE123
 5549 00e0 28000000 		.4byte	.LBB127
 5550 00e4 2A000000 		.4byte	.LBE127
 5551 00e8 00000000 		.4byte	0
 5552 00ec 00000000 		.4byte	0
 5553 00f0 00000000 		.4byte	.LBB131
 5554 00f4 04000000 		.4byte	.LBE131
 5555 00f8 04000000 		.4byte	.LBB134
 5556 00fc 0A000000 		.4byte	.LBE134
 5557 0100 00000000 		.4byte	0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 155


 5558 0104 00000000 		.4byte	0
 5559 0108 00000000 		.4byte	.LFB42
 5560 010c 28000000 		.4byte	.LFE42
 5561 0110 00000000 		.4byte	.LFB0
 5562 0114 14000000 		.4byte	.LFE0
 5563 0118 00000000 		.4byte	.LFB1
 5564 011c 10000000 		.4byte	.LFE1
 5565 0120 00000000 		.4byte	.LFB2
 5566 0124 20000000 		.4byte	.LFE2
 5567 0128 00000000 		.4byte	.LFB3
 5568 012c 18000000 		.4byte	.LFE3
 5569 0130 00000000 		.4byte	.LFB4
 5570 0134 28000000 		.4byte	.LFE4
 5571 0138 00000000 		.4byte	.LFB5
 5572 013c 8C010000 		.4byte	.LFE5
 5573 0140 00000000 		.4byte	.LFB6
 5574 0144 50000000 		.4byte	.LFE6
 5575 0148 00000000 		.4byte	.LFB7
 5576 014c 20000000 		.4byte	.LFE7
 5577 0150 00000000 		.4byte	.LFB8
 5578 0154 10000000 		.4byte	.LFE8
 5579 0158 00000000 		.4byte	.LFB9
 5580 015c 0C000000 		.4byte	.LFE9
 5581 0160 00000000 		.4byte	.LFB10
 5582 0164 14000000 		.4byte	.LFE10
 5583 0168 00000000 		.4byte	.LFB11
 5584 016c 10000000 		.4byte	.LFE11
 5585 0170 00000000 		.4byte	.LFB12
 5586 0174 0C000000 		.4byte	.LFE12
 5587 0178 00000000 		.4byte	.LFB13
 5588 017c 14000000 		.4byte	.LFE13
 5589 0180 00000000 		.4byte	.LFB14
 5590 0184 14000000 		.4byte	.LFE14
 5591 0188 00000000 		.4byte	.LFB15
 5592 018c 18000000 		.4byte	.LFE15
 5593 0190 00000000 		.4byte	.LFB16
 5594 0194 18000000 		.4byte	.LFE16
 5595 0198 00000000 		.4byte	.LFB17
 5596 019c 40000000 		.4byte	.LFE17
 5597 01a0 00000000 		.4byte	.LFB18
 5598 01a4 28000000 		.4byte	.LFE18
 5599 01a8 00000000 		.4byte	.LFB19
 5600 01ac 14000000 		.4byte	.LFE19
 5601 01b0 00000000 		.4byte	.LFB20
 5602 01b4 18000000 		.4byte	.LFE20
 5603 01b8 00000000 		.4byte	.LFB21
 5604 01bc 14000000 		.4byte	.LFE21
 5605 01c0 00000000 		.4byte	.LFB22
 5606 01c4 14000000 		.4byte	.LFE22
 5607 01c8 00000000 		.4byte	.LFB23
 5608 01cc 14000000 		.4byte	.LFE23
 5609 01d0 00000000 		.4byte	.LFB24
 5610 01d4 04000000 		.4byte	.LFE24
 5611 01d8 00000000 		.4byte	.LFB25
 5612 01dc 18000000 		.4byte	.LFE25
 5613 01e0 00000000 		.4byte	.LFB26
 5614 01e4 48000000 		.4byte	.LFE26
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 156


 5615 01e8 00000000 		.4byte	.LFB27
 5616 01ec 14000000 		.4byte	.LFE27
 5617 01f0 00000000 		.4byte	.LFB28
 5618 01f4 58000000 		.4byte	.LFE28
 5619 01f8 00000000 		.4byte	.LFB29
 5620 01fc 70000000 		.4byte	.LFE29
 5621 0200 00000000 		.4byte	.LFB30
 5622 0204 50000000 		.4byte	.LFE30
 5623 0208 00000000 		.4byte	.LFB31
 5624 020c 18000000 		.4byte	.LFE31
 5625 0210 00000000 		.4byte	.LFB32
 5626 0214 10000000 		.4byte	.LFE32
 5627 0218 00000000 		.4byte	.LFB33
 5628 021c 10000000 		.4byte	.LFE33
 5629 0220 00000000 		.4byte	.LFB34
 5630 0224 10000000 		.4byte	.LFE34
 5631 0228 00000000 		.4byte	.LFB35
 5632 022c 10000000 		.4byte	.LFE35
 5633 0230 00000000 		.4byte	.LFB36
 5634 0234 10000000 		.4byte	.LFE36
 5635 0238 00000000 		.4byte	.LFB37
 5636 023c 10000000 		.4byte	.LFE37
 5637 0240 00000000 		.4byte	.LFB38
 5638 0244 10000000 		.4byte	.LFE38
 5639 0248 00000000 		.4byte	.LFB39
 5640 024c 0C000000 		.4byte	.LFE39
 5641 0250 00000000 		.4byte	.LFB40
 5642 0254 10000000 		.4byte	.LFE40
 5643 0258 00000000 		.4byte	.LFB41
 5644 025c 0C000000 		.4byte	.LFE41
 5645 0260 00000000 		.4byte	.LFB43
 5646 0264 70000000 		.4byte	.LFE43
 5647 0268 00000000 		.4byte	0
 5648 026c 00000000 		.4byte	0
 5649              		.section	.debug_line,"",%progbits
 5650              	.Ldebug_line0:
 5651 0000 5D050000 		.section	.debug_str,"MS",%progbits,1
 5651      02004D00 
 5651      00000201 
 5651      FB0E0D00 
 5651      01010101 
 5652              	.LASF29:
 5653 0000 72616D56 		.ascii	"ramVectorTable\000"
 5653      6563746F 
 5653      72546162 
 5653      6C6500
 5654              	.LASF47:
 5655 000f 62675472 		.ascii	"bgTrim4\000"
 5655      696D3400 
 5656              	.LASF10:
 5657 0017 75696E74 		.ascii	"uint16\000"
 5657      313600
 5658              	.LASF59:
 5659 001e 696E7453 		.ascii	"intState\000"
 5659      74617465 
 5659      00
 5660              	.LASF41:
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 157


 5661 0027 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 5661      73436C6B 
 5661      57726974 
 5661      65486663 
 5661      6C6B4469 
 5662              	.LASF28:
 5663 0040 6F6C6449 		.ascii	"oldIsr\000"
 5663      737200
 5664              	.LASF85:
 5665 0047 72657456 		.ascii	"retVal\000"
 5665      616C00
 5666              	.LASF58:
 5667 004e 43794469 		.ascii	"CyDisableInts\000"
 5667      7361626C 
 5667      65496E74 
 5667      7300
 5668              	.LASF50:
 5669 005c 63757272 		.ascii	"currentImoTrim2Value\000"
 5669      656E7449 
 5669      6D6F5472 
 5669      696D3256 
 5669      616C7565 
 5670              	.LASF7:
 5671 0071 6C6F6E67 		.ascii	"long long unsigned int\000"
 5671      206C6F6E 
 5671      6720756E 
 5671      7369676E 
 5671      65642069 
 5672              	.LASF94:
 5673 0088 43795379 		.ascii	"CySysTickInitVar\000"
 5673      73546963 
 5673      6B496E69 
 5673      74566172 
 5673      00
 5674              	.LASF60:
 5675 0099 4379456E 		.ascii	"CyEnableInts\000"
 5675      61626C65 
 5675      496E7473 
 5675      00
 5676              	.LASF73:
 5677 00a6 4379536F 		.ascii	"CySoftwareReset\000"
 5677      66747761 
 5677      72655265 
 5677      73657400 
 5678              	.LASF25:
 5679 00b6 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 5679      73546963 
 5679      6B456E61 
 5679      626C6549 
 5679      6E746572 
 5680              	.LASF69:
 5681 00cf 4379496E 		.ascii	"CyIntGetState\000"
 5681      74476574 
 5681      53746174 
 5681      6500
 5682              	.LASF6:
 5683 00dd 6C6F6E67 		.ascii	"long long int\000"
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 158


 5683      206C6F6E 
 5683      6720696E 
 5683      7400
 5684              	.LASF0:
 5685 00eb 7369676E 		.ascii	"signed char\000"
 5685      65642063 
 5685      68617200 
 5686              	.LASF46:
 5687 00f7 66726571 		.ascii	"freq\000"
 5687      00
 5688              	.LASF76:
 5689 00fc 43794465 		.ascii	"CyDelayFreq\000"
 5689      6C617946 
 5689      72657100 
 5690              	.LASF38:
 5691 0108 696E7465 		.ascii	"interruptState\000"
 5691      72727570 
 5691      74537461 
 5691      746500
 5692              	.LASF81:
 5693 0117 43795379 		.ascii	"CySysTickGetReload\000"
 5693      73546963 
 5693      6B476574 
 5693      52656C6F 
 5693      616400
 5694              	.LASF4:
 5695 012a 6C6F6E67 		.ascii	"long int\000"
 5695      20696E74 
 5695      00
 5696              	.LASF70:
 5697 0133 4379496E 		.ascii	"CyIntDisable\000"
 5697      74446973 
 5697      61626C65 
 5697      00
 5698              	.LASF86:
 5699 0140 43795379 		.ascii	"CySysTickGetCallback\000"
 5699      73546963 
 5699      6B476574 
 5699      43616C6C 
 5699      6261636B 
 5700              	.LASF9:
 5701 0155 75696E74 		.ascii	"uint8\000"
 5701      3800
 5702              	.LASF91:
 5703 015b 63796465 		.ascii	"cydelayFreqKhz\000"
 5703      6C617946 
 5703      7265714B 
 5703      687A00
 5704              	.LASF21:
 5705 016a 43794465 		.ascii	"CyDelayUs\000"
 5705      6C617955 
 5705      7300
 5706              	.LASF13:
 5707 0174 646F7562 		.ascii	"double\000"
 5707      6C6500
 5708              	.LASF67:
 5709 017b 73686966 		.ascii	"shift\000"
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 159


 5709      7400
 5710              	.LASF24:
 5711 0181 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 5711      734C7664 
 5711      436C6561 
 5711      72496E74 
 5711      65727275 
 5712              	.LASF11:
 5713 0198 75696E74 		.ascii	"uint32\000"
 5713      333200
 5714              	.LASF61:
 5715 019f 6D61736B 		.ascii	"mask\000"
 5715      00
 5716              	.LASF55:
 5717 01a4 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 5717      73436C6B 
 5717      47657453 
 5717      7973636C 
 5717      6B536F75 
 5718              	.LASF68:
 5719 01bc 4379496E 		.ascii	"CyIntGetPriority\000"
 5719      74476574 
 5719      5072696F 
 5719      72697479 
 5719      00
 5720              	.LASF93:
 5721 01cd 63796465 		.ascii	"cydelay32kMs\000"
 5721      6C617933 
 5721      326B4D73 
 5721      00
 5722              	.LASF34:
 5723 01da 43795379 		.ascii	"CySysTickInit\000"
 5723      73546963 
 5723      6B496E69 
 5723      7400
 5724              	.LASF31:
 5725 01e8 76616C75 		.ascii	"value\000"
 5725      6500
 5726              	.LASF87:
 5727 01ee 43794765 		.ascii	"CyGetUniqueId\000"
 5727      74556E69 
 5727      71756549 
 5727      6400
 5728              	.LASF96:
 5729 01fc 43795379 		.ascii	"CySysTickGetCountFlag\000"
 5729      73546963 
 5729      6B476574 
 5729      436F756E 
 5729      74466C61 
 5730              	.LASF8:
 5731 0212 756E7369 		.ascii	"unsigned int\000"
 5731      676E6564 
 5731      20696E74 
 5731      00
 5732              	.LASF32:
 5733 021f 43795379 		.ascii	"CySysTickClear\000"
 5733      73546963 
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 160


 5733      6B436C65 
 5733      617200
 5734              	.LASF5:
 5735 022e 6C6F6E67 		.ascii	"long unsigned int\000"
 5735      20756E73 
 5735      69676E65 
 5735      6420696E 
 5735      7400
 5736              	.LASF80:
 5737 0240 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 5737      734C7664 
 5737      47657449 
 5737      6E746572 
 5737      72757074 
 5738              	.LASF37:
 5739 025b 43795379 		.ascii	"CySysClkImoStop\000"
 5739      73436C6B 
 5739      496D6F53 
 5739      746F7000 
 5740              	.LASF97:
 5741 026b 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5741      74657243 
 5741      72697469 
 5741      63616C53 
 5741      65637469 
 5742              	.LASF71:
 5743 0282 4379496E 		.ascii	"CyIntSetPending\000"
 5743      74536574 
 5743      50656E64 
 5743      696E6700 
 5744              	.LASF56:
 5745 0292 43795379 		.ascii	"CySysGetResetReason\000"
 5745      73476574 
 5745      52657365 
 5745      74526561 
 5745      736F6E00 
 5746              	.LASF3:
 5747 02a6 73686F72 		.ascii	"short unsigned int\000"
 5747      7420756E 
 5747      7369676E 
 5747      65642069 
 5747      6E7400
 5748              	.LASF63:
 5749 02b9 4379496E 		.ascii	"CyIntSetVector\000"
 5749      74536574 
 5749      56656374 
 5749      6F7200
 5750              	.LASF26:
 5751 02c8 6E756D62 		.ascii	"number\000"
 5751      657200
 5752              	.LASF66:
 5753 02cf 7072696F 		.ascii	"priority\000"
 5753      72697479 
 5753      00
 5754              	.LASF45:
 5755 02d8 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 5755      73436C6B 
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 161


 5755      57726974 
 5755      65496D6F 
 5755      46726571 
 5756              	.LASF103:
 5757 02ed 4379496E 		.ascii	"CyIntSetSysVector\000"
 5757      74536574 
 5757      53797356 
 5757      6563746F 
 5757      7200
 5758              	.LASF16:
 5759 02ff 72656733 		.ascii	"reg32\000"
 5759      3200
 5760              	.LASF77:
 5761 0305 43795379 		.ascii	"CySysTickStart\000"
 5761      73546963 
 5761      6B537461 
 5761      727400
 5762              	.LASF57:
 5763 0314 72657475 		.ascii	"returnStatus\000"
 5763      726E5374 
 5763      61747573 
 5763      00
 5764              	.LASF101:
 5765 0321 433A5C55 		.ascii	"C:\\Users\\Marcus\\Documents\\GitHub\\Tarocco Lite\\"
 5765      73657273 
 5765      5C4D6172 
 5765      6375735C 
 5765      446F6375 
 5766 034f 4669726D 		.ascii	"Firmware\\dcsd.cydsn\000"
 5766      77617265 
 5766      5C646373 
 5766      642E6379 
 5766      64736E00 
 5767              	.LASF18:
 5768 0363 73697A65 		.ascii	"sizetype\000"
 5768      74797065 
 5768      00
 5769              	.LASF72:
 5770 036c 4379496E 		.ascii	"CyIntClearPending\000"
 5770      74436C65 
 5770      61725065 
 5770      6E64696E 
 5770      6700
 5771              	.LASF27:
 5772 037e 61646472 		.ascii	"address\000"
 5772      65737300 
 5773              	.LASF48:
 5774 0386 62675472 		.ascii	"bgTrim5\000"
 5774      696D3500 
 5775              	.LASF40:
 5776 038e 73797363 		.ascii	"sysclkSource\000"
 5776      6C6B536F 
 5776      75726365 
 5776      00
 5777              	.LASF84:
 5778 039b 66756E63 		.ascii	"function\000"
 5778      74696F6E 
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 162


 5778      00
 5779              	.LASF95:
 5780 03a4 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 5780      6F467265 
 5780      714D687A 
 5780      32526567 
 5780      00
 5781              	.LASF82:
 5782 03b5 43795379 		.ascii	"CySysTickGetValue\000"
 5782      73546963 
 5782      6B476574 
 5782      56616C75 
 5782      6500
 5783              	.LASF90:
 5784 03c7 63796465 		.ascii	"cydelayFreqHz\000"
 5784      6C617946 
 5784      72657148 
 5784      7A00
 5785              	.LASF65:
 5786 03d5 4379496E 		.ascii	"CyIntSetPriority\000"
 5786      74536574 
 5786      5072696F 
 5786      72697479 
 5786      00
 5787              	.LASF12:
 5788 03e6 666C6F61 		.ascii	"float\000"
 5788      7400
 5789              	.LASF98:
 5790 03ec 43794578 		.ascii	"CyExitCriticalSection\000"
 5790      69744372 
 5790      69746963 
 5790      616C5365 
 5790      6374696F 
 5791              	.LASF52:
 5792 0402 43795379 		.ascii	"CySysLvdEnable\000"
 5792      734C7664 
 5792      456E6162 
 5792      6C6500
 5793              	.LASF19:
 5794 0411 63795379 		.ascii	"cySysTickCallback\000"
 5794      73546963 
 5794      6B43616C 
 5794      6C626163 
 5794      6B00
 5795              	.LASF64:
 5796 0423 4379496E 		.ascii	"CyIntGetVector\000"
 5796      74476574 
 5796      56656374 
 5796      6F7200
 5797              	.LASF75:
 5798 0432 6D696C6C 		.ascii	"milliseconds\000"
 5798      69736563 
 5798      6F6E6473 
 5798      00
 5799              	.LASF104:
 5800 043f 43794465 		.ascii	"CyDelayCycles\000"
 5800      6C617943 
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 163


 5800      79636C65 
 5800      7300
 5801              	.LASF15:
 5802 044d 72656738 		.ascii	"reg8\000"
 5802      00
 5803              	.LASF53:
 5804 0452 74687265 		.ascii	"threshold\000"
 5804      73686F6C 
 5804      6400
 5805              	.LASF20:
 5806 045c 43794861 		.ascii	"CyHalt\000"
 5806      6C7400
 5807              	.LASF1:
 5808 0463 756E7369 		.ascii	"unsigned char\000"
 5808      676E6564 
 5808      20636861 
 5808      7200
 5809              	.LASF2:
 5810 0471 73686F72 		.ascii	"short int\000"
 5810      7420696E 
 5810      7400
 5811              	.LASF33:
 5812 047b 4379496E 		.ascii	"CyIntEnable\000"
 5812      74456E61 
 5812      626C6500 
 5813              	.LASF62:
 5814 0487 4379496E 		.ascii	"CyIntGetSysVector\000"
 5814      74476574 
 5814      53797356 
 5814      6563746F 
 5814      7200
 5815              	.LASF43:
 5816 0499 636C6B53 		.ascii	"clkSelect\000"
 5816      656C6563 
 5816      7400
 5817              	.LASF22:
 5818 04a3 72656173 		.ascii	"reason\000"
 5818      6F6E00
 5819              	.LASF14:
 5820 04aa 63686172 		.ascii	"char\000"
 5820      00
 5821              	.LASF17:
 5822 04af 63796973 		.ascii	"cyisraddress\000"
 5822      72616464 
 5822      72657373 
 5822      00
 5823              	.LASF35:
 5824 04bc 43795379 		.ascii	"CySysTickEnable\000"
 5824      73546963 
 5824      6B456E61 
 5824      626C6500 
 5825              	.LASF42:
 5826 04cc 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 5826      73436C6B 
 5826      57726974 
 5826      65537973 
 5826      636C6B44 
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 164


 5827              	.LASF83:
 5828 04e3 43795379 		.ascii	"CySysTickSetCallback\000"
 5828      73546963 
 5828      6B536574 
 5828      43616C6C 
 5828      6261636B 
 5829              	.LASF89:
 5830 04f8 43795379 		.ascii	"CySysTickCallbacks\000"
 5830      73546963 
 5830      6B43616C 
 5830      6C626163 
 5830      6B7300
 5831              	.LASF51:
 5832 050b 696D6F54 		.ascii	"imoTrim1Value\000"
 5832      72696D31 
 5832      56616C75 
 5832      6500
 5833              	.LASF88:
 5834 0519 756E6971 		.ascii	"uniqueId\000"
 5834      75654964 
 5834      00
 5835              	.LASF74:
 5836 0522 43794465 		.ascii	"CyDelay\000"
 5836      6C617900 
 5837              	.LASF79:
 5838 052a 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 5838      73546963 
 5838      6B446973 
 5838      61626C65 
 5838      496E7465 
 5839              	.LASF54:
 5840 0544 43795379 		.ascii	"CySysLvdDisable\000"
 5840      734C7664 
 5840      44697361 
 5840      626C6500 
 5841              	.LASF92:
 5842 0554 63796465 		.ascii	"cydelayFreqMhz\000"
 5842      6C617946 
 5842      7265714D 
 5842      687A00
 5843              	.LASF78:
 5844 0563 43795379 		.ascii	"CySysTickStop\000"
 5844      73546963 
 5844      6B53746F 
 5844      7000
 5845              	.LASF44:
 5846 0571 64697669 		.ascii	"divider\000"
 5846      64657200 
 5847              	.LASF36:
 5848 0579 43795379 		.ascii	"CySysClkImoStart\000"
 5848      73436C6B 
 5848      496D6F53 
 5848      74617274 
 5848      00
 5849              	.LASF99:
 5850 058a 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 5850      4320342E 
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccGMKYPP.s 			page 165


 5850      392E3320 
 5850      32303135 
 5850      30333033 
 5851 05bd 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 5851      20726576 
 5851      6973696F 
 5851      6E203232 
 5851      31323230 
 5852 05f0 32202D73 		.ascii	"2 -std=c99 -ffunction-sections -ffat-lto-objects\000"
 5852      74643D63 
 5852      3939202D 
 5852      6666756E 
 5852      6374696F 
 5853              	.LASF49:
 5854 0621 6E657749 		.ascii	"newImoTrim2Value\000"
 5854      6D6F5472 
 5854      696D3256 
 5854      616C7565 
 5854      00
 5855              	.LASF100:
 5856 0632 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 5856      72617465 
 5856      645F536F 
 5856      75726365 
 5856      5C50536F 
 5857              	.LASF23:
 5858 0651 6D696372 		.ascii	"microseconds\000"
 5858      6F736563 
 5858      6F6E6473 
 5858      00
 5859              	.LASF39:
 5860 065e 746D7052 		.ascii	"tmpReg\000"
 5860      656700
 5861              	.LASF30:
 5862 0665 43795379 		.ascii	"CySysTickSetReload\000"
 5862      73546963 
 5862      6B536574 
 5862      52656C6F 
 5862      616400
 5863              	.LASF102:
 5864 0678 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 5864      73546963 
 5864      6B536572 
 5864      76696365 
 5864      43616C6C 
 5865              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
