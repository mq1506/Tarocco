ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccVwZF0Q.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC_intClock.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ADC_intClock_Start,"ax",%progbits
  18              		.align	2
  19              		.global	ADC_intClock_Start
  20              		.code	16
  21              		.thumb_func
  22              		.type	ADC_intClock_Start, %function
  23              	ADC_intClock_Start:
  24              	.LFB0:
  25              		.file 1 "Generated_Source\\PSoC4\\ADC_intClock.c"
   1:Generated_Source\PSoC4/ADC_intClock.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/ADC_intClock.c **** * File Name: ADC_intClock.c
   3:Generated_Source\PSoC4/ADC_intClock.c **** * Version 2.20
   4:Generated_Source\PSoC4/ADC_intClock.c **** *
   5:Generated_Source\PSoC4/ADC_intClock.c **** *  Description:
   6:Generated_Source\PSoC4/ADC_intClock.c **** *   Provides system API for the clocking, interrupts and watchdog timer.
   7:Generated_Source\PSoC4/ADC_intClock.c **** *
   8:Generated_Source\PSoC4/ADC_intClock.c **** *  Note:
   9:Generated_Source\PSoC4/ADC_intClock.c **** *   Documentation of the API's in this file is located in the
  10:Generated_Source\PSoC4/ADC_intClock.c **** *   System Reference Guide provided with PSoC Creator.
  11:Generated_Source\PSoC4/ADC_intClock.c **** *
  12:Generated_Source\PSoC4/ADC_intClock.c **** ********************************************************************************
  13:Generated_Source\PSoC4/ADC_intClock.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/ADC_intClock.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/ADC_intClock.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/ADC_intClock.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/ADC_intClock.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/ADC_intClock.c **** 
  19:Generated_Source\PSoC4/ADC_intClock.c **** #include <cydevice_trm.h>
  20:Generated_Source\PSoC4/ADC_intClock.c **** #include "ADC_intClock.h"
  21:Generated_Source\PSoC4/ADC_intClock.c **** 
  22:Generated_Source\PSoC4/ADC_intClock.c **** #if defined CYREG_PERI_DIV_CMD
  23:Generated_Source\PSoC4/ADC_intClock.c **** 
  24:Generated_Source\PSoC4/ADC_intClock.c **** /*******************************************************************************
  25:Generated_Source\PSoC4/ADC_intClock.c **** * Function Name: ADC_intClock_StartEx
  26:Generated_Source\PSoC4/ADC_intClock.c **** ********************************************************************************
  27:Generated_Source\PSoC4/ADC_intClock.c **** *
  28:Generated_Source\PSoC4/ADC_intClock.c **** * Summary:
  29:Generated_Source\PSoC4/ADC_intClock.c **** *  Starts the clock, aligned to the specified running clock.
  30:Generated_Source\PSoC4/ADC_intClock.c **** *
  31:Generated_Source\PSoC4/ADC_intClock.c **** * Parameters:
  32:Generated_Source\PSoC4/ADC_intClock.c **** *  alignClkDiv:  The divider to which phase alignment is performed when the
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccVwZF0Q.s 			page 2


  33:Generated_Source\PSoC4/ADC_intClock.c **** *    clock is started.
  34:Generated_Source\PSoC4/ADC_intClock.c **** *
  35:Generated_Source\PSoC4/ADC_intClock.c **** * Returns:
  36:Generated_Source\PSoC4/ADC_intClock.c **** *  None
  37:Generated_Source\PSoC4/ADC_intClock.c **** *
  38:Generated_Source\PSoC4/ADC_intClock.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/ADC_intClock.c **** void ADC_intClock_StartEx(uint32 alignClkDiv)
  40:Generated_Source\PSoC4/ADC_intClock.c **** {
  41:Generated_Source\PSoC4/ADC_intClock.c ****     /* Make sure any previous start command has finished. */
  42:Generated_Source\PSoC4/ADC_intClock.c ****     while((ADC_intClock_CMD_REG & ADC_intClock_CMD_ENABLE_MASK) != 0u)
  43:Generated_Source\PSoC4/ADC_intClock.c ****     {
  44:Generated_Source\PSoC4/ADC_intClock.c ****     }
  45:Generated_Source\PSoC4/ADC_intClock.c ****     
  46:Generated_Source\PSoC4/ADC_intClock.c ****     /* Specify the target divider and it's alignment divider, and enable. */
  47:Generated_Source\PSoC4/ADC_intClock.c ****     ADC_intClock_CMD_REG =
  48:Generated_Source\PSoC4/ADC_intClock.c ****         ((uint32)ADC_intClock__DIV_ID << ADC_intClock_CMD_DIV_SHIFT)|
  49:Generated_Source\PSoC4/ADC_intClock.c ****         (alignClkDiv << ADC_intClock_CMD_PA_DIV_SHIFT) |
  50:Generated_Source\PSoC4/ADC_intClock.c ****         (uint32)ADC_intClock_CMD_ENABLE_MASK;
  51:Generated_Source\PSoC4/ADC_intClock.c **** }
  52:Generated_Source\PSoC4/ADC_intClock.c **** 
  53:Generated_Source\PSoC4/ADC_intClock.c **** #else
  54:Generated_Source\PSoC4/ADC_intClock.c **** 
  55:Generated_Source\PSoC4/ADC_intClock.c **** /*******************************************************************************
  56:Generated_Source\PSoC4/ADC_intClock.c **** * Function Name: ADC_intClock_Start
  57:Generated_Source\PSoC4/ADC_intClock.c **** ********************************************************************************
  58:Generated_Source\PSoC4/ADC_intClock.c **** *
  59:Generated_Source\PSoC4/ADC_intClock.c **** * Summary:
  60:Generated_Source\PSoC4/ADC_intClock.c **** *  Starts the clock.
  61:Generated_Source\PSoC4/ADC_intClock.c **** *
  62:Generated_Source\PSoC4/ADC_intClock.c **** * Parameters:
  63:Generated_Source\PSoC4/ADC_intClock.c **** *  None
  64:Generated_Source\PSoC4/ADC_intClock.c **** *
  65:Generated_Source\PSoC4/ADC_intClock.c **** * Returns:
  66:Generated_Source\PSoC4/ADC_intClock.c **** *  None
  67:Generated_Source\PSoC4/ADC_intClock.c **** *
  68:Generated_Source\PSoC4/ADC_intClock.c **** *******************************************************************************/
  69:Generated_Source\PSoC4/ADC_intClock.c **** 
  70:Generated_Source\PSoC4/ADC_intClock.c **** void ADC_intClock_Start(void)
  71:Generated_Source\PSoC4/ADC_intClock.c **** {
  26              		.loc 1 71 0
  27              		.cfi_startproc
  72:Generated_Source\PSoC4/ADC_intClock.c ****     /* Set the bit to enable the clock. */
  73:Generated_Source\PSoC4/ADC_intClock.c ****     ADC_intClock_ENABLE_REG |= ADC_intClock__ENABLE_MASK;
  28              		.loc 1 73 0
  29 0000 8021     		mov	r1, #128
  30 0002 034A     		ldr	r2, .L2
  31 0004 0906     		lsl	r1, r1, #24
  32 0006 1368     		ldr	r3, [r2]
  74:Generated_Source\PSoC4/ADC_intClock.c **** }
  33              		.loc 1 74 0
  34              		@ sp needed
  73:Generated_Source\PSoC4/ADC_intClock.c **** }
  35              		.loc 1 73 0
  36 0008 0B43     		orr	r3, r1
  37 000a 1360     		str	r3, [r2]
  38              		.loc 1 74 0
  39 000c 7047     		bx	lr
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccVwZF0Q.s 			page 3


  40              	.L3:
  41 000e C046     		.align	2
  42              	.L2:
  43 0010 80000240 		.word	1073873024
  44              		.cfi_endproc
  45              	.LFE0:
  46              		.size	ADC_intClock_Start, .-ADC_intClock_Start
  47              		.section	.text.ADC_intClock_Stop,"ax",%progbits
  48              		.align	2
  49              		.global	ADC_intClock_Stop
  50              		.code	16
  51              		.thumb_func
  52              		.type	ADC_intClock_Stop, %function
  53              	ADC_intClock_Stop:
  54              	.LFB1:
  75:Generated_Source\PSoC4/ADC_intClock.c **** 
  76:Generated_Source\PSoC4/ADC_intClock.c **** #endif /* CYREG_PERI_DIV_CMD */
  77:Generated_Source\PSoC4/ADC_intClock.c **** 
  78:Generated_Source\PSoC4/ADC_intClock.c **** 
  79:Generated_Source\PSoC4/ADC_intClock.c **** /*******************************************************************************
  80:Generated_Source\PSoC4/ADC_intClock.c **** * Function Name: ADC_intClock_Stop
  81:Generated_Source\PSoC4/ADC_intClock.c **** ********************************************************************************
  82:Generated_Source\PSoC4/ADC_intClock.c **** *
  83:Generated_Source\PSoC4/ADC_intClock.c **** * Summary:
  84:Generated_Source\PSoC4/ADC_intClock.c **** *  Stops the clock and returns immediately. This API does not require the
  85:Generated_Source\PSoC4/ADC_intClock.c **** *  source clock to be running but may return before the hardware is actually
  86:Generated_Source\PSoC4/ADC_intClock.c **** *  disabled.
  87:Generated_Source\PSoC4/ADC_intClock.c **** *
  88:Generated_Source\PSoC4/ADC_intClock.c **** * Parameters:
  89:Generated_Source\PSoC4/ADC_intClock.c **** *  None
  90:Generated_Source\PSoC4/ADC_intClock.c **** *
  91:Generated_Source\PSoC4/ADC_intClock.c **** * Returns:
  92:Generated_Source\PSoC4/ADC_intClock.c **** *  None
  93:Generated_Source\PSoC4/ADC_intClock.c **** *
  94:Generated_Source\PSoC4/ADC_intClock.c **** *******************************************************************************/
  95:Generated_Source\PSoC4/ADC_intClock.c **** void ADC_intClock_Stop(void)
  96:Generated_Source\PSoC4/ADC_intClock.c **** {
  55              		.loc 1 96 0
  56              		.cfi_startproc
  97:Generated_Source\PSoC4/ADC_intClock.c **** #if defined CYREG_PERI_DIV_CMD
  98:Generated_Source\PSoC4/ADC_intClock.c **** 
  99:Generated_Source\PSoC4/ADC_intClock.c ****     /* Make sure any previous start command has finished. */
 100:Generated_Source\PSoC4/ADC_intClock.c ****     while((ADC_intClock_CMD_REG & ADC_intClock_CMD_ENABLE_MASK) != 0u)
 101:Generated_Source\PSoC4/ADC_intClock.c ****     {
 102:Generated_Source\PSoC4/ADC_intClock.c ****     }
 103:Generated_Source\PSoC4/ADC_intClock.c ****     
 104:Generated_Source\PSoC4/ADC_intClock.c ****     /* Specify the target divider and it's alignment divider, and disable. */
 105:Generated_Source\PSoC4/ADC_intClock.c ****     ADC_intClock_CMD_REG =
 106:Generated_Source\PSoC4/ADC_intClock.c ****         ((uint32)ADC_intClock__DIV_ID << ADC_intClock_CMD_DIV_SHIFT)|
 107:Generated_Source\PSoC4/ADC_intClock.c ****         ((uint32)ADC_intClock_CMD_DISABLE_MASK);
 108:Generated_Source\PSoC4/ADC_intClock.c **** 
 109:Generated_Source\PSoC4/ADC_intClock.c **** #else
 110:Generated_Source\PSoC4/ADC_intClock.c **** 
 111:Generated_Source\PSoC4/ADC_intClock.c ****     /* Clear the bit to disable the clock. */
 112:Generated_Source\PSoC4/ADC_intClock.c ****     ADC_intClock_ENABLE_REG &= (uint32)(~ADC_intClock__ENABLE_MASK);
  57              		.loc 1 112 0
  58 0000 024A     		ldr	r2, .L5
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccVwZF0Q.s 			page 4


 113:Generated_Source\PSoC4/ADC_intClock.c ****     
 114:Generated_Source\PSoC4/ADC_intClock.c **** #endif /* CYREG_PERI_DIV_CMD */
 115:Generated_Source\PSoC4/ADC_intClock.c **** }
  59              		.loc 1 115 0
  60              		@ sp needed
 112:Generated_Source\PSoC4/ADC_intClock.c ****     
  61              		.loc 1 112 0
  62 0002 1368     		ldr	r3, [r2]
  63 0004 5B00     		lsl	r3, r3, #1
  64 0006 5B08     		lsr	r3, r3, #1
  65 0008 1360     		str	r3, [r2]
  66              		.loc 1 115 0
  67 000a 7047     		bx	lr
  68              	.L6:
  69              		.align	2
  70              	.L5:
  71 000c 80000240 		.word	1073873024
  72              		.cfi_endproc
  73              	.LFE1:
  74              		.size	ADC_intClock_Stop, .-ADC_intClock_Stop
  75              		.section	.text.ADC_intClock_SetFractionalDividerRegister,"ax",%progbits
  76              		.align	2
  77              		.global	ADC_intClock_SetFractionalDividerRegister
  78              		.code	16
  79              		.thumb_func
  80              		.type	ADC_intClock_SetFractionalDividerRegister, %function
  81              	ADC_intClock_SetFractionalDividerRegister:
  82              	.LFB2:
 116:Generated_Source\PSoC4/ADC_intClock.c **** 
 117:Generated_Source\PSoC4/ADC_intClock.c **** 
 118:Generated_Source\PSoC4/ADC_intClock.c **** /*******************************************************************************
 119:Generated_Source\PSoC4/ADC_intClock.c **** * Function Name: ADC_intClock_SetFractionalDividerRegister
 120:Generated_Source\PSoC4/ADC_intClock.c **** ********************************************************************************
 121:Generated_Source\PSoC4/ADC_intClock.c **** *
 122:Generated_Source\PSoC4/ADC_intClock.c **** * Summary:
 123:Generated_Source\PSoC4/ADC_intClock.c **** *  Modifies the clock divider and the fractional divider.
 124:Generated_Source\PSoC4/ADC_intClock.c **** *
 125:Generated_Source\PSoC4/ADC_intClock.c **** * Parameters:
 126:Generated_Source\PSoC4/ADC_intClock.c **** *  clkDivider:  Divider register value (0-65535). This value is NOT the
 127:Generated_Source\PSoC4/ADC_intClock.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 128:Generated_Source\PSoC4/ADC_intClock.c **** *    to divide the clock by 2, this parameter should be set to 1.
 129:Generated_Source\PSoC4/ADC_intClock.c **** *  fracDivider:  Fractional Divider register value (0-31).
 130:Generated_Source\PSoC4/ADC_intClock.c **** * Returns:
 131:Generated_Source\PSoC4/ADC_intClock.c **** *  None
 132:Generated_Source\PSoC4/ADC_intClock.c **** *
 133:Generated_Source\PSoC4/ADC_intClock.c **** *******************************************************************************/
 134:Generated_Source\PSoC4/ADC_intClock.c **** void ADC_intClock_SetFractionalDividerRegister(uint16 clkDivider, uint8 clkFractional)
 135:Generated_Source\PSoC4/ADC_intClock.c **** {
  83              		.loc 1 135 0
  84              		.cfi_startproc
  85              	.LVL0:
 136:Generated_Source\PSoC4/ADC_intClock.c ****     uint32 maskVal;
 137:Generated_Source\PSoC4/ADC_intClock.c ****     uint32 regVal;
 138:Generated_Source\PSoC4/ADC_intClock.c ****     
 139:Generated_Source\PSoC4/ADC_intClock.c **** #if defined (ADC_intClock__FRAC_MASK) || defined (CYREG_PERI_DIV_CMD)
 140:Generated_Source\PSoC4/ADC_intClock.c ****     
 141:Generated_Source\PSoC4/ADC_intClock.c **** 	/* get all but divider bits */
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccVwZF0Q.s 			page 5


 142:Generated_Source\PSoC4/ADC_intClock.c ****     maskVal = ADC_intClock_DIV_REG & 
 143:Generated_Source\PSoC4/ADC_intClock.c ****                     (uint32)(~(uint32)(ADC_intClock_DIV_INT_MASK | ADC_intClock_DIV_FRAC_MASK)); 
 144:Generated_Source\PSoC4/ADC_intClock.c **** 	/* combine mask and new divider vals into 32-bit value */
 145:Generated_Source\PSoC4/ADC_intClock.c ****     regVal = maskVal |
 146:Generated_Source\PSoC4/ADC_intClock.c ****         ((uint32)((uint32)clkDivider <<  ADC_intClock_DIV_INT_SHIFT) & ADC_intClock_DIV_INT_MASK) |
 147:Generated_Source\PSoC4/ADC_intClock.c ****         ((uint32)((uint32)clkFractional << ADC_intClock_DIV_FRAC_SHIFT) & ADC_intClock_DIV_FRAC_MAS
 148:Generated_Source\PSoC4/ADC_intClock.c ****     
 149:Generated_Source\PSoC4/ADC_intClock.c **** #else
 150:Generated_Source\PSoC4/ADC_intClock.c ****     /* get all but integer divider bits */
 151:Generated_Source\PSoC4/ADC_intClock.c ****     maskVal = ADC_intClock_DIV_REG & (uint32)(~(uint32)ADC_intClock__DIVIDER_MASK);
  86              		.loc 1 151 0
  87 0000 034A     		ldr	r2, .L8
 152:Generated_Source\PSoC4/ADC_intClock.c ****     /* combine mask and new divider val into 32-bit value */
 153:Generated_Source\PSoC4/ADC_intClock.c ****     regVal = clkDivider | maskVal;
 154:Generated_Source\PSoC4/ADC_intClock.c ****     
 155:Generated_Source\PSoC4/ADC_intClock.c **** #endif /* ADC_intClock__FRAC_MASK || CYREG_PERI_DIV_CMD */
 156:Generated_Source\PSoC4/ADC_intClock.c **** 
 157:Generated_Source\PSoC4/ADC_intClock.c ****     ADC_intClock_DIV_REG = regVal;
 158:Generated_Source\PSoC4/ADC_intClock.c **** }
  88              		.loc 1 158 0
  89              		@ sp needed
 151:Generated_Source\PSoC4/ADC_intClock.c ****     /* combine mask and new divider val into 32-bit value */
  90              		.loc 1 151 0
  91 0002 1368     		ldr	r3, [r2]
  92              	.LVL1:
  93 0004 1B0C     		lsr	r3, r3, #16
  94              	.LVL2:
  95 0006 1B04     		lsl	r3, r3, #16
 153:Generated_Source\PSoC4/ADC_intClock.c ****     
  96              		.loc 1 153 0
  97 0008 1843     		orr	r0, r3
  98              	.LVL3:
 157:Generated_Source\PSoC4/ADC_intClock.c **** }
  99              		.loc 1 157 0
 100 000a 1060     		str	r0, [r2]
 101              		.loc 1 158 0
 102 000c 7047     		bx	lr
 103              	.L9:
 104 000e C046     		.align	2
 105              	.L8:
 106 0010 80000240 		.word	1073873024
 107              		.cfi_endproc
 108              	.LFE2:
 109              		.size	ADC_intClock_SetFractionalDividerRegister, .-ADC_intClock_SetFractionalDividerRegister
 110              		.section	.text.ADC_intClock_GetDividerRegister,"ax",%progbits
 111              		.align	2
 112              		.global	ADC_intClock_GetDividerRegister
 113              		.code	16
 114              		.thumb_func
 115              		.type	ADC_intClock_GetDividerRegister, %function
 116              	ADC_intClock_GetDividerRegister:
 117              	.LFB3:
 159:Generated_Source\PSoC4/ADC_intClock.c **** 
 160:Generated_Source\PSoC4/ADC_intClock.c **** 
 161:Generated_Source\PSoC4/ADC_intClock.c **** /*******************************************************************************
 162:Generated_Source\PSoC4/ADC_intClock.c **** * Function Name: ADC_intClock_GetDividerRegister
 163:Generated_Source\PSoC4/ADC_intClock.c **** ********************************************************************************
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccVwZF0Q.s 			page 6


 164:Generated_Source\PSoC4/ADC_intClock.c **** *
 165:Generated_Source\PSoC4/ADC_intClock.c **** * Summary:
 166:Generated_Source\PSoC4/ADC_intClock.c **** *  Gets the clock divider register value.
 167:Generated_Source\PSoC4/ADC_intClock.c **** *
 168:Generated_Source\PSoC4/ADC_intClock.c **** * Parameters:
 169:Generated_Source\PSoC4/ADC_intClock.c **** *  None
 170:Generated_Source\PSoC4/ADC_intClock.c **** *
 171:Generated_Source\PSoC4/ADC_intClock.c **** * Returns:
 172:Generated_Source\PSoC4/ADC_intClock.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 173:Generated_Source\PSoC4/ADC_intClock.c **** *  divide by 2, the return value will be 1.
 174:Generated_Source\PSoC4/ADC_intClock.c **** *
 175:Generated_Source\PSoC4/ADC_intClock.c **** *******************************************************************************/
 176:Generated_Source\PSoC4/ADC_intClock.c **** uint16 ADC_intClock_GetDividerRegister(void)
 177:Generated_Source\PSoC4/ADC_intClock.c **** {
 118              		.loc 1 177 0
 119              		.cfi_startproc
 178:Generated_Source\PSoC4/ADC_intClock.c ****     return (uint16)((ADC_intClock_DIV_REG & ADC_intClock_DIV_INT_MASK)
 120              		.loc 1 178 0
 121 0000 014B     		ldr	r3, .L11
 179:Generated_Source\PSoC4/ADC_intClock.c ****         >> ADC_intClock_DIV_INT_SHIFT);
 180:Generated_Source\PSoC4/ADC_intClock.c **** }
 122              		.loc 1 180 0
 123              		@ sp needed
 178:Generated_Source\PSoC4/ADC_intClock.c ****     return (uint16)((ADC_intClock_DIV_REG & ADC_intClock_DIV_INT_MASK)
 124              		.loc 1 178 0
 125 0002 1868     		ldr	r0, [r3]
 126 0004 80B2     		uxth	r0, r0
 127              		.loc 1 180 0
 128 0006 7047     		bx	lr
 129              	.L12:
 130              		.align	2
 131              	.L11:
 132 0008 80000240 		.word	1073873024
 133              		.cfi_endproc
 134              	.LFE3:
 135              		.size	ADC_intClock_GetDividerRegister, .-ADC_intClock_GetDividerRegister
 136              		.section	.text.ADC_intClock_GetFractionalDividerRegister,"ax",%progbits
 137              		.align	2
 138              		.global	ADC_intClock_GetFractionalDividerRegister
 139              		.code	16
 140              		.thumb_func
 141              		.type	ADC_intClock_GetFractionalDividerRegister, %function
 142              	ADC_intClock_GetFractionalDividerRegister:
 143              	.LFB4:
 181:Generated_Source\PSoC4/ADC_intClock.c **** 
 182:Generated_Source\PSoC4/ADC_intClock.c **** 
 183:Generated_Source\PSoC4/ADC_intClock.c **** /*******************************************************************************
 184:Generated_Source\PSoC4/ADC_intClock.c **** * Function Name: ADC_intClock_GetFractionalDividerRegister
 185:Generated_Source\PSoC4/ADC_intClock.c **** ********************************************************************************
 186:Generated_Source\PSoC4/ADC_intClock.c **** *
 187:Generated_Source\PSoC4/ADC_intClock.c **** * Summary:
 188:Generated_Source\PSoC4/ADC_intClock.c **** *  Gets the clock fractional divider register value.
 189:Generated_Source\PSoC4/ADC_intClock.c **** *
 190:Generated_Source\PSoC4/ADC_intClock.c **** * Parameters:
 191:Generated_Source\PSoC4/ADC_intClock.c **** *  None
 192:Generated_Source\PSoC4/ADC_intClock.c **** *
 193:Generated_Source\PSoC4/ADC_intClock.c **** * Returns:
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccVwZF0Q.s 			page 7


 194:Generated_Source\PSoC4/ADC_intClock.c **** *  Fractional Divide value of the clock
 195:Generated_Source\PSoC4/ADC_intClock.c **** *  0 if the fractional divider is not in use.
 196:Generated_Source\PSoC4/ADC_intClock.c **** *
 197:Generated_Source\PSoC4/ADC_intClock.c **** *******************************************************************************/
 198:Generated_Source\PSoC4/ADC_intClock.c **** uint8 ADC_intClock_GetFractionalDividerRegister(void)
 199:Generated_Source\PSoC4/ADC_intClock.c **** {
 144              		.loc 1 199 0
 145              		.cfi_startproc
 200:Generated_Source\PSoC4/ADC_intClock.c **** #if defined (ADC_intClock__FRAC_MASK)
 201:Generated_Source\PSoC4/ADC_intClock.c ****     /* return fractional divider bits */
 202:Generated_Source\PSoC4/ADC_intClock.c ****     return (uint8)((ADC_intClock_DIV_REG & ADC_intClock_DIV_FRAC_MASK)
 203:Generated_Source\PSoC4/ADC_intClock.c ****         >> ADC_intClock_DIV_FRAC_SHIFT);
 204:Generated_Source\PSoC4/ADC_intClock.c **** #else
 205:Generated_Source\PSoC4/ADC_intClock.c ****     return 0u;
 206:Generated_Source\PSoC4/ADC_intClock.c **** #endif /* ADC_intClock__FRAC_MASK */
 207:Generated_Source\PSoC4/ADC_intClock.c **** }
 146              		.loc 1 207 0
 147 0000 0020     		mov	r0, #0
 148              		@ sp needed
 149 0002 7047     		bx	lr
 150              		.cfi_endproc
 151              	.LFE4:
 152              		.size	ADC_intClock_GetFractionalDividerRegister, .-ADC_intClock_GetFractionalDividerRegister
 153              		.text
 154              	.Letext0:
 155              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 156              		.section	.debug_info,"",%progbits
 157              	.Ldebug_info0:
 158 0000 4C010000 		.4byte	0x14c
 159 0004 0400     		.2byte	0x4
 160 0006 00000000 		.4byte	.Ldebug_abbrev0
 161 000a 04       		.byte	0x4
 162 000b 01       		.uleb128 0x1
 163 000c 8B010000 		.4byte	.LASF24
 164 0010 01       		.byte	0x1
 165 0011 5D000000 		.4byte	.LASF25
 166 0015 2E020000 		.4byte	.LASF26
 167 0019 00000000 		.4byte	.Ldebug_ranges0+0
 168 001d 00000000 		.4byte	0
 169 0021 00000000 		.4byte	.Ldebug_line0
 170 0025 02       		.uleb128 0x2
 171 0026 01       		.byte	0x1
 172 0027 06       		.byte	0x6
 173 0028 22020000 		.4byte	.LASF0
 174 002c 02       		.uleb128 0x2
 175 002d 01       		.byte	0x1
 176 002e 08       		.byte	0x8
 177 002f A9000000 		.4byte	.LASF1
 178 0033 02       		.uleb128 0x2
 179 0034 02       		.byte	0x2
 180 0035 05       		.byte	0x5
 181 0036 72010000 		.4byte	.LASF2
 182 003a 02       		.uleb128 0x2
 183 003b 02       		.byte	0x2
 184 003c 07       		.byte	0x7
 185 003d C9000000 		.4byte	.LASF3
 186 0041 02       		.uleb128 0x2
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccVwZF0Q.s 			page 8


 187 0042 04       		.byte	0x4
 188 0043 05       		.byte	0x5
 189 0044 82010000 		.4byte	.LASF4
 190 0048 02       		.uleb128 0x2
 191 0049 04       		.byte	0x4
 192 004a 07       		.byte	0x7
 193 004b B7000000 		.4byte	.LASF5
 194 004f 02       		.uleb128 0x2
 195 0050 08       		.byte	0x8
 196 0051 05       		.byte	0x5
 197 0052 35010000 		.4byte	.LASF6
 198 0056 02       		.uleb128 0x2
 199 0057 08       		.byte	0x8
 200 0058 07       		.byte	0x7
 201 0059 1E010000 		.4byte	.LASF7
 202 005d 03       		.uleb128 0x3
 203 005e 04       		.byte	0x4
 204 005f 05       		.byte	0x5
 205 0060 696E7400 		.ascii	"int\000"
 206 0064 02       		.uleb128 0x2
 207 0065 04       		.byte	0x4
 208 0066 07       		.byte	0x7
 209 0067 11010000 		.4byte	.LASF8
 210 006b 04       		.uleb128 0x4
 211 006c 7C010000 		.4byte	.LASF9
 212 0070 02       		.byte	0x2
 213 0071 9801     		.2byte	0x198
 214 0073 2C000000 		.4byte	0x2c
 215 0077 04       		.uleb128 0x4
 216 0078 03010000 		.4byte	.LASF10
 217 007c 02       		.byte	0x2
 218 007d 9901     		.2byte	0x199
 219 007f 3A000000 		.4byte	0x3a
 220 0083 04       		.uleb128 0x4
 221 0084 0A010000 		.4byte	.LASF11
 222 0088 02       		.byte	0x2
 223 0089 9A01     		.2byte	0x19a
 224 008b 48000000 		.4byte	0x48
 225 008f 02       		.uleb128 0x2
 226 0090 04       		.byte	0x4
 227 0091 04       		.byte	0x4
 228 0092 A3000000 		.4byte	.LASF12
 229 0096 02       		.uleb128 0x2
 230 0097 08       		.byte	0x8
 231 0098 04       		.byte	0x4
 232 0099 E7000000 		.4byte	.LASF13
 233 009d 02       		.uleb128 0x2
 234 009e 01       		.byte	0x1
 235 009f 08       		.byte	0x8
 236 00a0 43010000 		.4byte	.LASF14
 237 00a4 04       		.uleb128 0x4
 238 00a5 00000000 		.4byte	.LASF15
 239 00a9 02       		.byte	0x2
 240 00aa 4402     		.2byte	0x244
 241 00ac B0000000 		.4byte	0xb0
 242 00b0 05       		.uleb128 0x5
 243 00b1 83000000 		.4byte	0x83
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccVwZF0Q.s 			page 9


 244 00b5 06       		.uleb128 0x6
 245 00b6 30000000 		.4byte	.LASF16
 246 00ba 01       		.byte	0x1
 247 00bb 46       		.byte	0x46
 248 00bc 00000000 		.4byte	.LFB0
 249 00c0 14000000 		.4byte	.LFE0-.LFB0
 250 00c4 01       		.uleb128 0x1
 251 00c5 9C       		.byte	0x9c
 252 00c6 06       		.uleb128 0x6
 253 00c7 4B000000 		.4byte	.LASF17
 254 00cb 01       		.byte	0x1
 255 00cc 5F       		.byte	0x5f
 256 00cd 00000000 		.4byte	.LFB1
 257 00d1 10000000 		.4byte	.LFE1-.LFB1
 258 00d5 01       		.uleb128 0x1
 259 00d6 9C       		.byte	0x9c
 260 00d7 07       		.uleb128 0x7
 261 00d8 06000000 		.4byte	.LASF27
 262 00dc 01       		.byte	0x1
 263 00dd 86       		.byte	0x86
 264 00de 00000000 		.4byte	.LFB2
 265 00e2 14000000 		.4byte	.LFE2-.LFB2
 266 00e6 01       		.uleb128 0x1
 267 00e7 9C       		.byte	0x9c
 268 00e8 25010000 		.4byte	0x125
 269 00ec 08       		.uleb128 0x8
 270 00ed DC000000 		.4byte	.LASF18
 271 00f1 01       		.byte	0x1
 272 00f2 86       		.byte	0x86
 273 00f3 77000000 		.4byte	0x77
 274 00f7 00000000 		.4byte	.LLST0
 275 00fb 09       		.uleb128 0x9
 276 00fc F5000000 		.4byte	.LASF19
 277 0100 01       		.byte	0x1
 278 0101 86       		.byte	0x86
 279 0102 6B000000 		.4byte	0x6b
 280 0106 01       		.uleb128 0x1
 281 0107 51       		.byte	0x51
 282 0108 0A       		.uleb128 0xa
 283 0109 43000000 		.4byte	.LASF20
 284 010d 01       		.byte	0x1
 285 010e 88       		.byte	0x88
 286 010f 83000000 		.4byte	0x83
 287 0113 21000000 		.4byte	.LLST1
 288 0117 0B       		.uleb128 0xb
 289 0118 EE000000 		.4byte	.LASF21
 290 011c 01       		.byte	0x1
 291 011d 89       		.byte	0x89
 292 011e 83000000 		.4byte	0x83
 293 0122 01       		.uleb128 0x1
 294 0123 50       		.byte	0x50
 295 0124 00       		.byte	0
 296 0125 0C       		.uleb128 0xc
 297 0126 83000000 		.4byte	.LASF22
 298 012a 01       		.byte	0x1
 299 012b B0       		.byte	0xb0
 300 012c 77000000 		.4byte	0x77
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccVwZF0Q.s 			page 10


 301 0130 00000000 		.4byte	.LFB3
 302 0134 0C000000 		.4byte	.LFE3-.LFB3
 303 0138 01       		.uleb128 0x1
 304 0139 9C       		.byte	0x9c
 305 013a 0C       		.uleb128 0xc
 306 013b 48010000 		.4byte	.LASF23
 307 013f 01       		.byte	0x1
 308 0140 C6       		.byte	0xc6
 309 0141 6B000000 		.4byte	0x6b
 310 0145 00000000 		.4byte	.LFB4
 311 0149 04000000 		.4byte	.LFE4-.LFB4
 312 014d 01       		.uleb128 0x1
 313 014e 9C       		.byte	0x9c
 314 014f 00       		.byte	0
 315              		.section	.debug_abbrev,"",%progbits
 316              	.Ldebug_abbrev0:
 317 0000 01       		.uleb128 0x1
 318 0001 11       		.uleb128 0x11
 319 0002 01       		.byte	0x1
 320 0003 25       		.uleb128 0x25
 321 0004 0E       		.uleb128 0xe
 322 0005 13       		.uleb128 0x13
 323 0006 0B       		.uleb128 0xb
 324 0007 03       		.uleb128 0x3
 325 0008 0E       		.uleb128 0xe
 326 0009 1B       		.uleb128 0x1b
 327 000a 0E       		.uleb128 0xe
 328 000b 55       		.uleb128 0x55
 329 000c 17       		.uleb128 0x17
 330 000d 11       		.uleb128 0x11
 331 000e 01       		.uleb128 0x1
 332 000f 10       		.uleb128 0x10
 333 0010 17       		.uleb128 0x17
 334 0011 00       		.byte	0
 335 0012 00       		.byte	0
 336 0013 02       		.uleb128 0x2
 337 0014 24       		.uleb128 0x24
 338 0015 00       		.byte	0
 339 0016 0B       		.uleb128 0xb
 340 0017 0B       		.uleb128 0xb
 341 0018 3E       		.uleb128 0x3e
 342 0019 0B       		.uleb128 0xb
 343 001a 03       		.uleb128 0x3
 344 001b 0E       		.uleb128 0xe
 345 001c 00       		.byte	0
 346 001d 00       		.byte	0
 347 001e 03       		.uleb128 0x3
 348 001f 24       		.uleb128 0x24
 349 0020 00       		.byte	0
 350 0021 0B       		.uleb128 0xb
 351 0022 0B       		.uleb128 0xb
 352 0023 3E       		.uleb128 0x3e
 353 0024 0B       		.uleb128 0xb
 354 0025 03       		.uleb128 0x3
 355 0026 08       		.uleb128 0x8
 356 0027 00       		.byte	0
 357 0028 00       		.byte	0
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccVwZF0Q.s 			page 11


 358 0029 04       		.uleb128 0x4
 359 002a 16       		.uleb128 0x16
 360 002b 00       		.byte	0
 361 002c 03       		.uleb128 0x3
 362 002d 0E       		.uleb128 0xe
 363 002e 3A       		.uleb128 0x3a
 364 002f 0B       		.uleb128 0xb
 365 0030 3B       		.uleb128 0x3b
 366 0031 05       		.uleb128 0x5
 367 0032 49       		.uleb128 0x49
 368 0033 13       		.uleb128 0x13
 369 0034 00       		.byte	0
 370 0035 00       		.byte	0
 371 0036 05       		.uleb128 0x5
 372 0037 35       		.uleb128 0x35
 373 0038 00       		.byte	0
 374 0039 49       		.uleb128 0x49
 375 003a 13       		.uleb128 0x13
 376 003b 00       		.byte	0
 377 003c 00       		.byte	0
 378 003d 06       		.uleb128 0x6
 379 003e 2E       		.uleb128 0x2e
 380 003f 00       		.byte	0
 381 0040 3F       		.uleb128 0x3f
 382 0041 19       		.uleb128 0x19
 383 0042 03       		.uleb128 0x3
 384 0043 0E       		.uleb128 0xe
 385 0044 3A       		.uleb128 0x3a
 386 0045 0B       		.uleb128 0xb
 387 0046 3B       		.uleb128 0x3b
 388 0047 0B       		.uleb128 0xb
 389 0048 27       		.uleb128 0x27
 390 0049 19       		.uleb128 0x19
 391 004a 11       		.uleb128 0x11
 392 004b 01       		.uleb128 0x1
 393 004c 12       		.uleb128 0x12
 394 004d 06       		.uleb128 0x6
 395 004e 40       		.uleb128 0x40
 396 004f 18       		.uleb128 0x18
 397 0050 9742     		.uleb128 0x2117
 398 0052 19       		.uleb128 0x19
 399 0053 00       		.byte	0
 400 0054 00       		.byte	0
 401 0055 07       		.uleb128 0x7
 402 0056 2E       		.uleb128 0x2e
 403 0057 01       		.byte	0x1
 404 0058 3F       		.uleb128 0x3f
 405 0059 19       		.uleb128 0x19
 406 005a 03       		.uleb128 0x3
 407 005b 0E       		.uleb128 0xe
 408 005c 3A       		.uleb128 0x3a
 409 005d 0B       		.uleb128 0xb
 410 005e 3B       		.uleb128 0x3b
 411 005f 0B       		.uleb128 0xb
 412 0060 27       		.uleb128 0x27
 413 0061 19       		.uleb128 0x19
 414 0062 11       		.uleb128 0x11
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccVwZF0Q.s 			page 12


 415 0063 01       		.uleb128 0x1
 416 0064 12       		.uleb128 0x12
 417 0065 06       		.uleb128 0x6
 418 0066 40       		.uleb128 0x40
 419 0067 18       		.uleb128 0x18
 420 0068 9742     		.uleb128 0x2117
 421 006a 19       		.uleb128 0x19
 422 006b 01       		.uleb128 0x1
 423 006c 13       		.uleb128 0x13
 424 006d 00       		.byte	0
 425 006e 00       		.byte	0
 426 006f 08       		.uleb128 0x8
 427 0070 05       		.uleb128 0x5
 428 0071 00       		.byte	0
 429 0072 03       		.uleb128 0x3
 430 0073 0E       		.uleb128 0xe
 431 0074 3A       		.uleb128 0x3a
 432 0075 0B       		.uleb128 0xb
 433 0076 3B       		.uleb128 0x3b
 434 0077 0B       		.uleb128 0xb
 435 0078 49       		.uleb128 0x49
 436 0079 13       		.uleb128 0x13
 437 007a 02       		.uleb128 0x2
 438 007b 17       		.uleb128 0x17
 439 007c 00       		.byte	0
 440 007d 00       		.byte	0
 441 007e 09       		.uleb128 0x9
 442 007f 05       		.uleb128 0x5
 443 0080 00       		.byte	0
 444 0081 03       		.uleb128 0x3
 445 0082 0E       		.uleb128 0xe
 446 0083 3A       		.uleb128 0x3a
 447 0084 0B       		.uleb128 0xb
 448 0085 3B       		.uleb128 0x3b
 449 0086 0B       		.uleb128 0xb
 450 0087 49       		.uleb128 0x49
 451 0088 13       		.uleb128 0x13
 452 0089 02       		.uleb128 0x2
 453 008a 18       		.uleb128 0x18
 454 008b 00       		.byte	0
 455 008c 00       		.byte	0
 456 008d 0A       		.uleb128 0xa
 457 008e 34       		.uleb128 0x34
 458 008f 00       		.byte	0
 459 0090 03       		.uleb128 0x3
 460 0091 0E       		.uleb128 0xe
 461 0092 3A       		.uleb128 0x3a
 462 0093 0B       		.uleb128 0xb
 463 0094 3B       		.uleb128 0x3b
 464 0095 0B       		.uleb128 0xb
 465 0096 49       		.uleb128 0x49
 466 0097 13       		.uleb128 0x13
 467 0098 02       		.uleb128 0x2
 468 0099 17       		.uleb128 0x17
 469 009a 00       		.byte	0
 470 009b 00       		.byte	0
 471 009c 0B       		.uleb128 0xb
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccVwZF0Q.s 			page 13


 472 009d 34       		.uleb128 0x34
 473 009e 00       		.byte	0
 474 009f 03       		.uleb128 0x3
 475 00a0 0E       		.uleb128 0xe
 476 00a1 3A       		.uleb128 0x3a
 477 00a2 0B       		.uleb128 0xb
 478 00a3 3B       		.uleb128 0x3b
 479 00a4 0B       		.uleb128 0xb
 480 00a5 49       		.uleb128 0x49
 481 00a6 13       		.uleb128 0x13
 482 00a7 02       		.uleb128 0x2
 483 00a8 18       		.uleb128 0x18
 484 00a9 00       		.byte	0
 485 00aa 00       		.byte	0
 486 00ab 0C       		.uleb128 0xc
 487 00ac 2E       		.uleb128 0x2e
 488 00ad 00       		.byte	0
 489 00ae 3F       		.uleb128 0x3f
 490 00af 19       		.uleb128 0x19
 491 00b0 03       		.uleb128 0x3
 492 00b1 0E       		.uleb128 0xe
 493 00b2 3A       		.uleb128 0x3a
 494 00b3 0B       		.uleb128 0xb
 495 00b4 3B       		.uleb128 0x3b
 496 00b5 0B       		.uleb128 0xb
 497 00b6 27       		.uleb128 0x27
 498 00b7 19       		.uleb128 0x19
 499 00b8 49       		.uleb128 0x49
 500 00b9 13       		.uleb128 0x13
 501 00ba 11       		.uleb128 0x11
 502 00bb 01       		.uleb128 0x1
 503 00bc 12       		.uleb128 0x12
 504 00bd 06       		.uleb128 0x6
 505 00be 40       		.uleb128 0x40
 506 00bf 18       		.uleb128 0x18
 507 00c0 9742     		.uleb128 0x2117
 508 00c2 19       		.uleb128 0x19
 509 00c3 00       		.byte	0
 510 00c4 00       		.byte	0
 511 00c5 00       		.byte	0
 512              		.section	.debug_loc,"",%progbits
 513              	.Ldebug_loc0:
 514              	.LLST0:
 515 0000 00000000 		.4byte	.LVL0
 516 0004 0A000000 		.4byte	.LVL3
 517 0008 0100     		.2byte	0x1
 518 000a 50       		.byte	0x50
 519 000b 0A000000 		.4byte	.LVL3
 520 000f 14000000 		.4byte	.LFE2
 521 0013 0400     		.2byte	0x4
 522 0015 F3       		.byte	0xf3
 523 0016 01       		.uleb128 0x1
 524 0017 50       		.byte	0x50
 525 0018 9F       		.byte	0x9f
 526 0019 00000000 		.4byte	0
 527 001d 00000000 		.4byte	0
 528              	.LLST1:
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccVwZF0Q.s 			page 14


 529 0021 04000000 		.4byte	.LVL1
 530 0025 06000000 		.4byte	.LVL2
 531 0029 0800     		.2byte	0x8
 532 002b 73       		.byte	0x73
 533 002c 00       		.sleb128 0
 534 002d 11       		.byte	0x11
 535 002e 80807C   		.sleb128 -65536
 536 0031 1A       		.byte	0x1a
 537 0032 9F       		.byte	0x9f
 538 0033 00000000 		.4byte	0
 539 0037 00000000 		.4byte	0
 540              		.section	.debug_aranges,"",%progbits
 541 0000 3C000000 		.4byte	0x3c
 542 0004 0200     		.2byte	0x2
 543 0006 00000000 		.4byte	.Ldebug_info0
 544 000a 04       		.byte	0x4
 545 000b 00       		.byte	0
 546 000c 0000     		.2byte	0
 547 000e 0000     		.2byte	0
 548 0010 00000000 		.4byte	.LFB0
 549 0014 14000000 		.4byte	.LFE0-.LFB0
 550 0018 00000000 		.4byte	.LFB1
 551 001c 10000000 		.4byte	.LFE1-.LFB1
 552 0020 00000000 		.4byte	.LFB2
 553 0024 14000000 		.4byte	.LFE2-.LFB2
 554 0028 00000000 		.4byte	.LFB3
 555 002c 0C000000 		.4byte	.LFE3-.LFB3
 556 0030 00000000 		.4byte	.LFB4
 557 0034 04000000 		.4byte	.LFE4-.LFB4
 558 0038 00000000 		.4byte	0
 559 003c 00000000 		.4byte	0
 560              		.section	.debug_ranges,"",%progbits
 561              	.Ldebug_ranges0:
 562 0000 00000000 		.4byte	.LFB0
 563 0004 14000000 		.4byte	.LFE0
 564 0008 00000000 		.4byte	.LFB1
 565 000c 10000000 		.4byte	.LFE1
 566 0010 00000000 		.4byte	.LFB2
 567 0014 14000000 		.4byte	.LFE2
 568 0018 00000000 		.4byte	.LFB3
 569 001c 0C000000 		.4byte	.LFE3
 570 0020 00000000 		.4byte	.LFB4
 571 0024 04000000 		.4byte	.LFE4
 572 0028 00000000 		.4byte	0
 573 002c 00000000 		.4byte	0
 574              		.section	.debug_line,"",%progbits
 575              	.Ldebug_line0:
 576 0000 B8000000 		.section	.debug_str,"MS",%progbits,1
 576      02004900 
 576      00000201 
 576      FB0E0D00 
 576      01010101 
 577              	.LASF15:
 578 0000 72656733 		.ascii	"reg32\000"
 578      3200
 579              	.LASF27:
 580 0006 4144435F 		.ascii	"ADC_intClock_SetFractionalDividerRegister\000"
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccVwZF0Q.s 			page 15


 580      696E7443 
 580      6C6F636B 
 580      5F536574 
 580      46726163 
 581              	.LASF16:
 582 0030 4144435F 		.ascii	"ADC_intClock_Start\000"
 582      696E7443 
 582      6C6F636B 
 582      5F537461 
 582      727400
 583              	.LASF20:
 584 0043 6D61736B 		.ascii	"maskVal\000"
 584      56616C00 
 585              	.LASF17:
 586 004b 4144435F 		.ascii	"ADC_intClock_Stop\000"
 586      696E7443 
 586      6C6F636B 
 586      5F53746F 
 586      7000
 587              	.LASF25:
 588 005d 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC_intClock.c\000"
 588      72617465 
 588      645F536F 
 588      75726365 
 588      5C50536F 
 589              	.LASF22:
 590 0083 4144435F 		.ascii	"ADC_intClock_GetDividerRegister\000"
 590      696E7443 
 590      6C6F636B 
 590      5F476574 
 590      44697669 
 591              	.LASF12:
 592 00a3 666C6F61 		.ascii	"float\000"
 592      7400
 593              	.LASF1:
 594 00a9 756E7369 		.ascii	"unsigned char\000"
 594      676E6564 
 594      20636861 
 594      7200
 595              	.LASF5:
 596 00b7 6C6F6E67 		.ascii	"long unsigned int\000"
 596      20756E73 
 596      69676E65 
 596      6420696E 
 596      7400
 597              	.LASF3:
 598 00c9 73686F72 		.ascii	"short unsigned int\000"
 598      7420756E 
 598      7369676E 
 598      65642069 
 598      6E7400
 599              	.LASF18:
 600 00dc 636C6B44 		.ascii	"clkDivider\000"
 600      69766964 
 600      657200
 601              	.LASF13:
 602 00e7 646F7562 		.ascii	"double\000"
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccVwZF0Q.s 			page 16


 602      6C6500
 603              	.LASF21:
 604 00ee 72656756 		.ascii	"regVal\000"
 604      616C00
 605              	.LASF19:
 606 00f5 636C6B46 		.ascii	"clkFractional\000"
 606      72616374 
 606      696F6E61 
 606      6C00
 607              	.LASF10:
 608 0103 75696E74 		.ascii	"uint16\000"
 608      313600
 609              	.LASF11:
 610 010a 75696E74 		.ascii	"uint32\000"
 610      333200
 611              	.LASF8:
 612 0111 756E7369 		.ascii	"unsigned int\000"
 612      676E6564 
 612      20696E74 
 612      00
 613              	.LASF7:
 614 011e 6C6F6E67 		.ascii	"long long unsigned int\000"
 614      206C6F6E 
 614      6720756E 
 614      7369676E 
 614      65642069 
 615              	.LASF6:
 616 0135 6C6F6E67 		.ascii	"long long int\000"
 616      206C6F6E 
 616      6720696E 
 616      7400
 617              	.LASF14:
 618 0143 63686172 		.ascii	"char\000"
 618      00
 619              	.LASF23:
 620 0148 4144435F 		.ascii	"ADC_intClock_GetFractionalDividerRegister\000"
 620      696E7443 
 620      6C6F636B 
 620      5F476574 
 620      46726163 
 621              	.LASF2:
 622 0172 73686F72 		.ascii	"short int\000"
 622      7420696E 
 622      7400
 623              	.LASF9:
 624 017c 75696E74 		.ascii	"uint8\000"
 624      3800
 625              	.LASF4:
 626 0182 6C6F6E67 		.ascii	"long int\000"
 626      20696E74 
 626      00
 627              	.LASF24:
 628 018b 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 628      4320342E 
 628      392E3320 
 628      32303135 
 628      30333033 
ARM GAS  C:\Users\Marcus\AppData\Local\Temp\ccVwZF0Q.s 			page 17


 629 01be 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 629      20726576 
 629      6973696F 
 629      6E203232 
 629      31323230 
 630 01f1 32202D73 		.ascii	"2 -std=c99 -ffunction-sections -ffat-lto-objects\000"
 630      74643D63 
 630      3939202D 
 630      6666756E 
 630      6374696F 
 631              	.LASF0:
 632 0222 7369676E 		.ascii	"signed char\000"
 632      65642063 
 632      68617200 
 633              	.LASF26:
 634 022e 433A5C55 		.ascii	"C:\\Users\\Marcus\\Documents\\GitHub\\Tarocco Lite\\"
 634      73657273 
 634      5C4D6172 
 634      6375735C 
 634      446F6375 
 635 025c 4669726D 		.ascii	"Firmware\\dcsd.cydsn\000"
 635      77617265 
 635      5C646373 
 635      642E6379 
 635      64736E00 
 636              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
